function a3(n,t){for(var e=0;e<t.length;e++){const s=t[e];if(typeof s!="string"&&!Array.isArray(s)){for(const i in s)if(i!=="default"&&!(i in n)){const o=Object.getOwnPropertyDescriptor(s,i);o&&Object.defineProperty(n,i,o.get?o:{enumerable:!0,get:()=>s[i]})}}}return Object.freeze(Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}))}(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const i of document.querySelectorAll('link[rel="modulepreload"]'))s(i);new MutationObserver(i=>{for(const o of i)if(o.type==="childList")for(const r of o.addedNodes)r.tagName==="LINK"&&r.rel==="modulepreload"&&s(r)}).observe(document,{childList:!0,subtree:!0});function e(i){const o={};return i.integrity&&(o.integrity=i.integrity),i.referrerPolicy&&(o.referrerPolicy=i.referrerPolicy),i.crossOrigin==="use-credentials"?o.credentials="include":i.crossOrigin==="anonymous"?o.credentials="omit":o.credentials="same-origin",o}function s(i){if(i.ep)return;i.ep=!0;const o=e(i);fetch(i.href,o)}})();/**
 * @license
 * Copyright 2010-2025 Three.js Authors
 * SPDX-License-Identifier: MIT
 */const J0="177",Ma={ROTATE:0,DOLLY:1,PAN:2},Sa={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3},c3=0,xy=1,u3=2,mv=1,l3=2,Ji=3,Po=0,Ss=1,eo=2,Mo=0,Aa=1,yy=2,by=3,wy=4,d3=5,dr=100,h3=101,f3=102,p3=103,m3=104,g3=200,x3=201,y3=202,b3=203,ym=204,bm=205,w3=206,v3=207,_3=208,C3=209,S3=210,T3=211,E3=212,I3=213,R3=214,wm=0,vm=1,_m=2,Ua=3,Cm=4,Sm=5,Tm=6,Em=7,Q0=0,M3=1,A3=2,Ao=0,N3=1,k3=2,D3=3,$3=4,F3=5,P3=6,L3=7,gv=300,Ba=301,za=302,Im=303,Rm=304,Ih=306,Mm=1e3,gr=1001,Am=1002,Ds=1003,O3=1004,Wl=1005,mi=1006,wp=1007,xr=1008,ao=1009,xv=1010,yv=1011,Jc=1012,t1=1013,Tr=1014,Di=1015,gu=1016,e1=1017,n1=1018,Qc=1020,bv=35902,wv=1021,vv=1022,gi=1023,tu=1026,eu=1027,s1=1028,i1=1029,_v=1030,o1=1031,r1=1033,Rd=33776,Md=33777,Ad=33778,Nd=33779,Nm=35840,km=35841,Dm=35842,$m=35843,Fm=36196,Pm=37492,Lm=37496,Om=37808,Um=37809,Bm=37810,zm=37811,Vm=37812,Wm=37813,Gm=37814,Hm=37815,Xm=37816,qm=37817,jm=37818,Km=37819,Ym=37820,Zm=37821,kd=36492,Jm=36494,Qm=36495,Cv=36283,t0=36284,e0=36285,n0=36286,U3=3200,B3=3201,Sv=0,z3=1,To="",Hs="srgb",Va="srgb-linear",jd="linear",He="srgb",na=7680,vy=519,V3=512,W3=513,G3=514,Tv=515,H3=516,X3=517,q3=518,j3=519,s0=35044,K3=35048,_y="300 es",so=2e3,Kd=2001;class Vr{addEventListener(t,e){this._listeners===void 0&&(this._listeners={});const s=this._listeners;s[t]===void 0&&(s[t]=[]),s[t].indexOf(e)===-1&&s[t].push(e)}hasEventListener(t,e){const s=this._listeners;return s===void 0?!1:s[t]!==void 0&&s[t].indexOf(e)!==-1}removeEventListener(t,e){const s=this._listeners;if(s===void 0)return;const i=s[t];if(i!==void 0){const o=i.indexOf(e);o!==-1&&i.splice(o,1)}}dispatchEvent(t){const e=this._listeners;if(e===void 0)return;const s=e[t.type];if(s!==void 0){t.target=this;const i=s.slice(0);for(let o=0,r=i.length;o<r;o++)i[o].call(this,t);t.target=null}}}const Qn=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"],Dd=Math.PI/180,i0=180/Math.PI;function xu(){const n=Math.random()*4294967295|0,t=Math.random()*4294967295|0,e=Math.random()*4294967295|0,s=Math.random()*4294967295|0;return(Qn[n&255]+Qn[n>>8&255]+Qn[n>>16&255]+Qn[n>>24&255]+"-"+Qn[t&255]+Qn[t>>8&255]+"-"+Qn[t>>16&15|64]+Qn[t>>24&255]+"-"+Qn[e&63|128]+Qn[e>>8&255]+"-"+Qn[e>>16&255]+Qn[e>>24&255]+Qn[s&255]+Qn[s>>8&255]+Qn[s>>16&255]+Qn[s>>24&255]).toLowerCase()}function Se(n,t,e){return Math.max(t,Math.min(e,n))}function Y3(n,t){return(n%t+t)%t}function vp(n,t,e){return(1-e)*n+e*t}function Tc(n,t){switch(t.constructor){case Float32Array:return n;case Uint32Array:return n/4294967295;case Uint16Array:return n/65535;case Uint8Array:return n/255;case Int32Array:return Math.max(n/2147483647,-1);case Int16Array:return Math.max(n/32767,-1);case Int8Array:return Math.max(n/127,-1);default:throw new Error("Invalid component type.")}}function bs(n,t){switch(t.constructor){case Float32Array:return n;case Uint32Array:return Math.round(n*4294967295);case Uint16Array:return Math.round(n*65535);case Uint8Array:return Math.round(n*255);case Int32Array:return Math.round(n*2147483647);case Int16Array:return Math.round(n*32767);case Int8Array:return Math.round(n*127);default:throw new Error("Invalid component type.")}}const Z3={DEG2RAD:Dd};class xe{constructor(t=0,e=0){xe.prototype.isVector2=!0,this.x=t,this.y=e}get width(){return this.x}set width(t){this.x=t}get height(){return this.y}set height(t){this.y=t}set(t,e){return this.x=t,this.y=e,this}setScalar(t){return this.x=t,this.y=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y)}copy(t){return this.x=t.x,this.y=t.y,this}add(t){return this.x+=t.x,this.y+=t.y,this}addScalar(t){return this.x+=t,this.y+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this}sub(t){return this.x-=t.x,this.y-=t.y,this}subScalar(t){return this.x-=t,this.y-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this}multiply(t){return this.x*=t.x,this.y*=t.y,this}multiplyScalar(t){return this.x*=t,this.y*=t,this}divide(t){return this.x/=t.x,this.y/=t.y,this}divideScalar(t){return this.multiplyScalar(1/t)}applyMatrix3(t){const e=this.x,s=this.y,i=t.elements;return this.x=i[0]*e+i[3]*s+i[6],this.y=i[1]*e+i[4]*s+i[7],this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this}clamp(t,e){return this.x=Se(this.x,t.x,e.x),this.y=Se(this.y,t.y,e.y),this}clampScalar(t,e){return this.x=Se(this.x,t,e),this.y=Se(this.y,t,e),this}clampLength(t,e){const s=this.length();return this.divideScalar(s||1).multiplyScalar(Se(s,t,e))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(t){return this.x*t.x+this.y*t.y}cross(t){return this.x*t.y-this.y*t.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}angleTo(t){const e=Math.sqrt(this.lengthSq()*t.lengthSq());if(e===0)return Math.PI/2;const s=this.dot(t)/e;return Math.acos(Se(s,-1,1))}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const e=this.x-t.x,s=this.y-t.y;return e*e+s*s}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this}lerpVectors(t,e,s){return this.x=t.x+(e.x-t.x)*s,this.y=t.y+(e.y-t.y)*s,this}equals(t){return t.x===this.x&&t.y===this.y}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t}fromBufferAttribute(t,e){return this.x=t.getX(e),this.y=t.getY(e),this}rotateAround(t,e){const s=Math.cos(e),i=Math.sin(e),o=this.x-t.x,r=this.y-t.y;return this.x=o*s-r*i+t.x,this.y=o*i+r*s+t.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}class Er{constructor(t=0,e=0,s=0,i=1){this.isQuaternion=!0,this._x=t,this._y=e,this._z=s,this._w=i}static slerpFlat(t,e,s,i,o,r,a){let c=s[i+0],u=s[i+1],l=s[i+2],d=s[i+3];const h=o[r+0],f=o[r+1],p=o[r+2],x=o[r+3];if(a===0){t[e+0]=c,t[e+1]=u,t[e+2]=l,t[e+3]=d;return}if(a===1){t[e+0]=h,t[e+1]=f,t[e+2]=p,t[e+3]=x;return}if(d!==x||c!==h||u!==f||l!==p){let g=1-a;const m=c*h+u*f+l*p+d*x,y=m>=0?1:-1,w=1-m*m;if(w>Number.EPSILON){const _=Math.sqrt(w),T=Math.atan2(_,m*y);g=Math.sin(g*T)/_,a=Math.sin(a*T)/_}const b=a*y;if(c=c*g+h*b,u=u*g+f*b,l=l*g+p*b,d=d*g+x*b,g===1-a){const _=1/Math.sqrt(c*c+u*u+l*l+d*d);c*=_,u*=_,l*=_,d*=_}}t[e]=c,t[e+1]=u,t[e+2]=l,t[e+3]=d}static multiplyQuaternionsFlat(t,e,s,i,o,r){const a=s[i],c=s[i+1],u=s[i+2],l=s[i+3],d=o[r],h=o[r+1],f=o[r+2],p=o[r+3];return t[e]=a*p+l*d+c*f-u*h,t[e+1]=c*p+l*h+u*d-a*f,t[e+2]=u*p+l*f+a*h-c*d,t[e+3]=l*p-a*d-c*h-u*f,t}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get w(){return this._w}set w(t){this._w=t,this._onChangeCallback()}set(t,e,s,i){return this._x=t,this._y=e,this._z=s,this._w=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(t){return this._x=t.x,this._y=t.y,this._z=t.z,this._w=t.w,this._onChangeCallback(),this}setFromEuler(t,e=!0){const s=t._x,i=t._y,o=t._z,r=t._order,a=Math.cos,c=Math.sin,u=a(s/2),l=a(i/2),d=a(o/2),h=c(s/2),f=c(i/2),p=c(o/2);switch(r){case"XYZ":this._x=h*l*d+u*f*p,this._y=u*f*d-h*l*p,this._z=u*l*p+h*f*d,this._w=u*l*d-h*f*p;break;case"YXZ":this._x=h*l*d+u*f*p,this._y=u*f*d-h*l*p,this._z=u*l*p-h*f*d,this._w=u*l*d+h*f*p;break;case"ZXY":this._x=h*l*d-u*f*p,this._y=u*f*d+h*l*p,this._z=u*l*p+h*f*d,this._w=u*l*d-h*f*p;break;case"ZYX":this._x=h*l*d-u*f*p,this._y=u*f*d+h*l*p,this._z=u*l*p-h*f*d,this._w=u*l*d+h*f*p;break;case"YZX":this._x=h*l*d+u*f*p,this._y=u*f*d+h*l*p,this._z=u*l*p-h*f*d,this._w=u*l*d-h*f*p;break;case"XZY":this._x=h*l*d-u*f*p,this._y=u*f*d-h*l*p,this._z=u*l*p+h*f*d,this._w=u*l*d+h*f*p;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+r)}return e===!0&&this._onChangeCallback(),this}setFromAxisAngle(t,e){const s=e/2,i=Math.sin(s);return this._x=t.x*i,this._y=t.y*i,this._z=t.z*i,this._w=Math.cos(s),this._onChangeCallback(),this}setFromRotationMatrix(t){const e=t.elements,s=e[0],i=e[4],o=e[8],r=e[1],a=e[5],c=e[9],u=e[2],l=e[6],d=e[10],h=s+a+d;if(h>0){const f=.5/Math.sqrt(h+1);this._w=.25/f,this._x=(l-c)*f,this._y=(o-u)*f,this._z=(r-i)*f}else if(s>a&&s>d){const f=2*Math.sqrt(1+s-a-d);this._w=(l-c)/f,this._x=.25*f,this._y=(i+r)/f,this._z=(o+u)/f}else if(a>d){const f=2*Math.sqrt(1+a-s-d);this._w=(o-u)/f,this._x=(i+r)/f,this._y=.25*f,this._z=(c+l)/f}else{const f=2*Math.sqrt(1+d-s-a);this._w=(r-i)/f,this._x=(o+u)/f,this._y=(c+l)/f,this._z=.25*f}return this._onChangeCallback(),this}setFromUnitVectors(t,e){let s=t.dot(e)+1;return s<Number.EPSILON?(s=0,Math.abs(t.x)>Math.abs(t.z)?(this._x=-t.y,this._y=t.x,this._z=0,this._w=s):(this._x=0,this._y=-t.z,this._z=t.y,this._w=s)):(this._x=t.y*e.z-t.z*e.y,this._y=t.z*e.x-t.x*e.z,this._z=t.x*e.y-t.y*e.x,this._w=s),this.normalize()}angleTo(t){return 2*Math.acos(Math.abs(Se(this.dot(t),-1,1)))}rotateTowards(t,e){const s=this.angleTo(t);if(s===0)return this;const i=Math.min(1,e/s);return this.slerp(t,i),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(t){return this._x*t._x+this._y*t._y+this._z*t._z+this._w*t._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let t=this.length();return t===0?(this._x=0,this._y=0,this._z=0,this._w=1):(t=1/t,this._x=this._x*t,this._y=this._y*t,this._z=this._z*t,this._w=this._w*t),this._onChangeCallback(),this}multiply(t){return this.multiplyQuaternions(this,t)}premultiply(t){return this.multiplyQuaternions(t,this)}multiplyQuaternions(t,e){const s=t._x,i=t._y,o=t._z,r=t._w,a=e._x,c=e._y,u=e._z,l=e._w;return this._x=s*l+r*a+i*u-o*c,this._y=i*l+r*c+o*a-s*u,this._z=o*l+r*u+s*c-i*a,this._w=r*l-s*a-i*c-o*u,this._onChangeCallback(),this}slerp(t,e){if(e===0)return this;if(e===1)return this.copy(t);const s=this._x,i=this._y,o=this._z,r=this._w;let a=r*t._w+s*t._x+i*t._y+o*t._z;if(a<0?(this._w=-t._w,this._x=-t._x,this._y=-t._y,this._z=-t._z,a=-a):this.copy(t),a>=1)return this._w=r,this._x=s,this._y=i,this._z=o,this;const c=1-a*a;if(c<=Number.EPSILON){const f=1-e;return this._w=f*r+e*this._w,this._x=f*s+e*this._x,this._y=f*i+e*this._y,this._z=f*o+e*this._z,this.normalize(),this}const u=Math.sqrt(c),l=Math.atan2(u,a),d=Math.sin((1-e)*l)/u,h=Math.sin(e*l)/u;return this._w=r*d+this._w*h,this._x=s*d+this._x*h,this._y=i*d+this._y*h,this._z=o*d+this._z*h,this._onChangeCallback(),this}slerpQuaternions(t,e,s){return this.copy(t).slerp(e,s)}random(){const t=2*Math.PI*Math.random(),e=2*Math.PI*Math.random(),s=Math.random(),i=Math.sqrt(1-s),o=Math.sqrt(s);return this.set(i*Math.sin(t),i*Math.cos(t),o*Math.sin(e),o*Math.cos(e))}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._w===this._w}fromArray(t,e=0){return this._x=t[e],this._y=t[e+1],this._z=t[e+2],this._w=t[e+3],this._onChangeCallback(),this}toArray(t=[],e=0){return t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._w,t}fromBufferAttribute(t,e){return this._x=t.getX(e),this._y=t.getY(e),this._z=t.getZ(e),this._w=t.getW(e),this._onChangeCallback(),this}toJSON(){return this.toArray()}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class st{constructor(t=0,e=0,s=0){st.prototype.isVector3=!0,this.x=t,this.y=e,this.z=s}set(t,e,s){return s===void 0&&(s=this.z),this.x=t,this.y=e,this.z=s,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this}add(t){return this.x+=t.x,this.y+=t.y,this.z+=t.z,this}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this}sub(t){return this.x-=t.x,this.y-=t.y,this.z-=t.z,this}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this}multiply(t){return this.x*=t.x,this.y*=t.y,this.z*=t.z,this}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this}multiplyVectors(t,e){return this.x=t.x*e.x,this.y=t.y*e.y,this.z=t.z*e.z,this}applyEuler(t){return this.applyQuaternion(Cy.setFromEuler(t))}applyAxisAngle(t,e){return this.applyQuaternion(Cy.setFromAxisAngle(t,e))}applyMatrix3(t){const e=this.x,s=this.y,i=this.z,o=t.elements;return this.x=o[0]*e+o[3]*s+o[6]*i,this.y=o[1]*e+o[4]*s+o[7]*i,this.z=o[2]*e+o[5]*s+o[8]*i,this}applyNormalMatrix(t){return this.applyMatrix3(t).normalize()}applyMatrix4(t){const e=this.x,s=this.y,i=this.z,o=t.elements,r=1/(o[3]*e+o[7]*s+o[11]*i+o[15]);return this.x=(o[0]*e+o[4]*s+o[8]*i+o[12])*r,this.y=(o[1]*e+o[5]*s+o[9]*i+o[13])*r,this.z=(o[2]*e+o[6]*s+o[10]*i+o[14])*r,this}applyQuaternion(t){const e=this.x,s=this.y,i=this.z,o=t.x,r=t.y,a=t.z,c=t.w,u=2*(r*i-a*s),l=2*(a*e-o*i),d=2*(o*s-r*e);return this.x=e+c*u+r*d-a*l,this.y=s+c*l+a*u-o*d,this.z=i+c*d+o*l-r*u,this}project(t){return this.applyMatrix4(t.matrixWorldInverse).applyMatrix4(t.projectionMatrix)}unproject(t){return this.applyMatrix4(t.projectionMatrixInverse).applyMatrix4(t.matrixWorld)}transformDirection(t){const e=this.x,s=this.y,i=this.z,o=t.elements;return this.x=o[0]*e+o[4]*s+o[8]*i,this.y=o[1]*e+o[5]*s+o[9]*i,this.z=o[2]*e+o[6]*s+o[10]*i,this.normalize()}divide(t){return this.x/=t.x,this.y/=t.y,this.z/=t.z,this}divideScalar(t){return this.multiplyScalar(1/t)}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this}clamp(t,e){return this.x=Se(this.x,t.x,e.x),this.y=Se(this.y,t.y,e.y),this.z=Se(this.z,t.z,e.z),this}clampScalar(t,e){return this.x=Se(this.x,t,e),this.y=Se(this.y,t,e),this.z=Se(this.z,t,e),this}clampLength(t,e){const s=this.length();return this.divideScalar(s||1).multiplyScalar(Se(s,t,e))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this}lerpVectors(t,e,s){return this.x=t.x+(e.x-t.x)*s,this.y=t.y+(e.y-t.y)*s,this.z=t.z+(e.z-t.z)*s,this}cross(t){return this.crossVectors(this,t)}crossVectors(t,e){const s=t.x,i=t.y,o=t.z,r=e.x,a=e.y,c=e.z;return this.x=i*c-o*a,this.y=o*r-s*c,this.z=s*a-i*r,this}projectOnVector(t){const e=t.lengthSq();if(e===0)return this.set(0,0,0);const s=t.dot(this)/e;return this.copy(t).multiplyScalar(s)}projectOnPlane(t){return _p.copy(this).projectOnVector(t),this.sub(_p)}reflect(t){return this.sub(_p.copy(t).multiplyScalar(2*this.dot(t)))}angleTo(t){const e=Math.sqrt(this.lengthSq()*t.lengthSq());if(e===0)return Math.PI/2;const s=this.dot(t)/e;return Math.acos(Se(s,-1,1))}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const e=this.x-t.x,s=this.y-t.y,i=this.z-t.z;return e*e+s*s+i*i}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)+Math.abs(this.z-t.z)}setFromSpherical(t){return this.setFromSphericalCoords(t.radius,t.phi,t.theta)}setFromSphericalCoords(t,e,s){const i=Math.sin(e)*t;return this.x=i*Math.sin(s),this.y=Math.cos(e)*t,this.z=i*Math.cos(s),this}setFromCylindrical(t){return this.setFromCylindricalCoords(t.radius,t.theta,t.y)}setFromCylindricalCoords(t,e,s){return this.x=t*Math.sin(e),this.y=s,this.z=t*Math.cos(e),this}setFromMatrixPosition(t){const e=t.elements;return this.x=e[12],this.y=e[13],this.z=e[14],this}setFromMatrixScale(t){const e=this.setFromMatrixColumn(t,0).length(),s=this.setFromMatrixColumn(t,1).length(),i=this.setFromMatrixColumn(t,2).length();return this.x=e,this.y=s,this.z=i,this}setFromMatrixColumn(t,e){return this.fromArray(t.elements,e*4)}setFromMatrix3Column(t,e){return this.fromArray(t.elements,e*3)}setFromEuler(t){return this.x=t._x,this.y=t._y,this.z=t._z,this}setFromColor(t){return this.x=t.r,this.y=t.g,this.z=t.b,this}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this.z=t[e+2],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t}fromBufferAttribute(t,e){return this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const t=Math.random()*Math.PI*2,e=Math.random()*2-1,s=Math.sqrt(1-e*e);return this.x=s*Math.cos(t),this.y=e,this.z=s*Math.sin(t),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}const _p=new st,Cy=new Er;class ge{constructor(t,e,s,i,o,r,a,c,u){ge.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1],t!==void 0&&this.set(t,e,s,i,o,r,a,c,u)}set(t,e,s,i,o,r,a,c,u){const l=this.elements;return l[0]=t,l[1]=i,l[2]=a,l[3]=e,l[4]=o,l[5]=c,l[6]=s,l[7]=r,l[8]=u,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(t){const e=this.elements,s=t.elements;return e[0]=s[0],e[1]=s[1],e[2]=s[2],e[3]=s[3],e[4]=s[4],e[5]=s[5],e[6]=s[6],e[7]=s[7],e[8]=s[8],this}extractBasis(t,e,s){return t.setFromMatrix3Column(this,0),e.setFromMatrix3Column(this,1),s.setFromMatrix3Column(this,2),this}setFromMatrix4(t){const e=t.elements;return this.set(e[0],e[4],e[8],e[1],e[5],e[9],e[2],e[6],e[10]),this}multiply(t){return this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,e){const s=t.elements,i=e.elements,o=this.elements,r=s[0],a=s[3],c=s[6],u=s[1],l=s[4],d=s[7],h=s[2],f=s[5],p=s[8],x=i[0],g=i[3],m=i[6],y=i[1],w=i[4],b=i[7],_=i[2],T=i[5],E=i[8];return o[0]=r*x+a*y+c*_,o[3]=r*g+a*w+c*T,o[6]=r*m+a*b+c*E,o[1]=u*x+l*y+d*_,o[4]=u*g+l*w+d*T,o[7]=u*m+l*b+d*E,o[2]=h*x+f*y+p*_,o[5]=h*g+f*w+p*T,o[8]=h*m+f*b+p*E,this}multiplyScalar(t){const e=this.elements;return e[0]*=t,e[3]*=t,e[6]*=t,e[1]*=t,e[4]*=t,e[7]*=t,e[2]*=t,e[5]*=t,e[8]*=t,this}determinant(){const t=this.elements,e=t[0],s=t[1],i=t[2],o=t[3],r=t[4],a=t[5],c=t[6],u=t[7],l=t[8];return e*r*l-e*a*u-s*o*l+s*a*c+i*o*u-i*r*c}invert(){const t=this.elements,e=t[0],s=t[1],i=t[2],o=t[3],r=t[4],a=t[5],c=t[6],u=t[7],l=t[8],d=l*r-a*u,h=a*c-l*o,f=u*o-r*c,p=e*d+s*h+i*f;if(p===0)return this.set(0,0,0,0,0,0,0,0,0);const x=1/p;return t[0]=d*x,t[1]=(i*u-l*s)*x,t[2]=(a*s-i*r)*x,t[3]=h*x,t[4]=(l*e-i*c)*x,t[5]=(i*o-a*e)*x,t[6]=f*x,t[7]=(s*c-u*e)*x,t[8]=(r*e-s*o)*x,this}transpose(){let t;const e=this.elements;return t=e[1],e[1]=e[3],e[3]=t,t=e[2],e[2]=e[6],e[6]=t,t=e[5],e[5]=e[7],e[7]=t,this}getNormalMatrix(t){return this.setFromMatrix4(t).invert().transpose()}transposeIntoArray(t){const e=this.elements;return t[0]=e[0],t[1]=e[3],t[2]=e[6],t[3]=e[1],t[4]=e[4],t[5]=e[7],t[6]=e[2],t[7]=e[5],t[8]=e[8],this}setUvTransform(t,e,s,i,o,r,a){const c=Math.cos(o),u=Math.sin(o);return this.set(s*c,s*u,-s*(c*r+u*a)+r+t,-i*u,i*c,-i*(-u*r+c*a)+a+e,0,0,1),this}scale(t,e){return this.premultiply(Cp.makeScale(t,e)),this}rotate(t){return this.premultiply(Cp.makeRotation(-t)),this}translate(t,e){return this.premultiply(Cp.makeTranslation(t,e)),this}makeTranslation(t,e){return t.isVector2?this.set(1,0,t.x,0,1,t.y,0,0,1):this.set(1,0,t,0,1,e,0,0,1),this}makeRotation(t){const e=Math.cos(t),s=Math.sin(t);return this.set(e,-s,0,s,e,0,0,0,1),this}makeScale(t,e){return this.set(t,0,0,0,e,0,0,0,1),this}equals(t){const e=this.elements,s=t.elements;for(let i=0;i<9;i++)if(e[i]!==s[i])return!1;return!0}fromArray(t,e=0){for(let s=0;s<9;s++)this.elements[s]=t[s+e];return this}toArray(t=[],e=0){const s=this.elements;return t[e]=s[0],t[e+1]=s[1],t[e+2]=s[2],t[e+3]=s[3],t[e+4]=s[4],t[e+5]=s[5],t[e+6]=s[6],t[e+7]=s[7],t[e+8]=s[8],t}clone(){return new this.constructor().fromArray(this.elements)}}const Cp=new ge;function Ev(n){for(let t=n.length-1;t>=0;--t)if(n[t]>=65535)return!0;return!1}function nu(n){return document.createElementNS("http://www.w3.org/1999/xhtml",n)}function J3(){const n=nu("canvas");return n.style.display="block",n}const Sy={};function Na(n){n in Sy||(Sy[n]=!0,console.warn(n))}function Q3(n,t,e){return new Promise(function(s,i){function o(){switch(n.clientWaitSync(t,n.SYNC_FLUSH_COMMANDS_BIT,0)){case n.WAIT_FAILED:i();break;case n.TIMEOUT_EXPIRED:setTimeout(o,e);break;default:s()}}setTimeout(o,e)})}function tR(n){const t=n.elements;t[2]=.5*t[2]+.5*t[3],t[6]=.5*t[6]+.5*t[7],t[10]=.5*t[10]+.5*t[11],t[14]=.5*t[14]+.5*t[15]}function eR(n){const t=n.elements;t[11]===-1?(t[10]=-t[10]-1,t[14]=-t[14]):(t[10]=-t[10],t[14]=-t[14]+1)}const Ty=new ge().set(.4123908,.3575843,.1804808,.212639,.7151687,.0721923,.0193308,.1191948,.9505322),Ey=new ge().set(3.2409699,-1.5373832,-.4986108,-.9692436,1.8759675,.0415551,.0556301,-.203977,1.0569715);function nR(){const n={enabled:!0,workingColorSpace:Va,spaces:{},convert:function(i,o,r){return this.enabled===!1||o===r||!o||!r||(this.spaces[o].transfer===He&&(i.r=oo(i.r),i.g=oo(i.g),i.b=oo(i.b)),this.spaces[o].primaries!==this.spaces[r].primaries&&(i.applyMatrix3(this.spaces[o].toXYZ),i.applyMatrix3(this.spaces[r].fromXYZ)),this.spaces[r].transfer===He&&(i.r=ka(i.r),i.g=ka(i.g),i.b=ka(i.b))),i},workingToColorSpace:function(i,o){return this.convert(i,this.workingColorSpace,o)},colorSpaceToWorking:function(i,o){return this.convert(i,o,this.workingColorSpace)},getPrimaries:function(i){return this.spaces[i].primaries},getTransfer:function(i){return i===To?jd:this.spaces[i].transfer},getLuminanceCoefficients:function(i,o=this.workingColorSpace){return i.fromArray(this.spaces[o].luminanceCoefficients)},define:function(i){Object.assign(this.spaces,i)},_getMatrix:function(i,o,r){return i.copy(this.spaces[o].toXYZ).multiply(this.spaces[r].fromXYZ)},_getDrawingBufferColorSpace:function(i){return this.spaces[i].outputColorSpaceConfig.drawingBufferColorSpace},_getUnpackColorSpace:function(i=this.workingColorSpace){return this.spaces[i].workingColorSpaceConfig.unpackColorSpace},fromWorkingColorSpace:function(i,o){return Na("THREE.ColorManagement: .fromWorkingColorSpace() has been renamed to .workingToColorSpace()."),n.workingToColorSpace(i,o)},toWorkingColorSpace:function(i,o){return Na("THREE.ColorManagement: .toWorkingColorSpace() has been renamed to .colorSpaceToWorking()."),n.colorSpaceToWorking(i,o)}},t=[.64,.33,.3,.6,.15,.06],e=[.2126,.7152,.0722],s=[.3127,.329];return n.define({[Va]:{primaries:t,whitePoint:s,transfer:jd,toXYZ:Ty,fromXYZ:Ey,luminanceCoefficients:e,workingColorSpaceConfig:{unpackColorSpace:Hs},outputColorSpaceConfig:{drawingBufferColorSpace:Hs}},[Hs]:{primaries:t,whitePoint:s,transfer:He,toXYZ:Ty,fromXYZ:Ey,luminanceCoefficients:e,outputColorSpaceConfig:{drawingBufferColorSpace:Hs}}}),n}const $e=nR();function oo(n){return n<.04045?n*.0773993808:Math.pow(n*.9478672986+.0521327014,2.4)}function ka(n){return n<.0031308?n*12.92:1.055*Math.pow(n,.41666)-.055}let sa;class sR{static getDataURL(t,e="image/png"){if(/^data:/i.test(t.src)||typeof HTMLCanvasElement>"u")return t.src;let s;if(t instanceof HTMLCanvasElement)s=t;else{sa===void 0&&(sa=nu("canvas")),sa.width=t.width,sa.height=t.height;const i=sa.getContext("2d");t instanceof ImageData?i.putImageData(t,0,0):i.drawImage(t,0,0,t.width,t.height),s=sa}return s.toDataURL(e)}static sRGBToLinear(t){if(typeof HTMLImageElement<"u"&&t instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&t instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&t instanceof ImageBitmap){const e=nu("canvas");e.width=t.width,e.height=t.height;const s=e.getContext("2d");s.drawImage(t,0,0,t.width,t.height);const i=s.getImageData(0,0,t.width,t.height),o=i.data;for(let r=0;r<o.length;r++)o[r]=oo(o[r]/255)*255;return s.putImageData(i,0,0),e}else if(t.data){const e=t.data.slice(0);for(let s=0;s<e.length;s++)e instanceof Uint8Array||e instanceof Uint8ClampedArray?e[s]=Math.floor(oo(e[s]/255)*255):e[s]=oo(e[s]);return{data:e,width:t.width,height:t.height}}else return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),t}}let iR=0;class a1{constructor(t=null){this.isSource=!0,Object.defineProperty(this,"id",{value:iR++}),this.uuid=xu(),this.data=t,this.dataReady=!0,this.version=0}getSize(t){const e=this.data;return e instanceof HTMLVideoElement?t.set(e.videoWidth,e.videoHeight):e!==null?t.set(e.width,e.height,e.depth||0):t.set(0,0,0),t}set needsUpdate(t){t===!0&&this.version++}toJSON(t){const e=t===void 0||typeof t=="string";if(!e&&t.images[this.uuid]!==void 0)return t.images[this.uuid];const s={uuid:this.uuid,url:""},i=this.data;if(i!==null){let o;if(Array.isArray(i)){o=[];for(let r=0,a=i.length;r<a;r++)i[r].isDataTexture?o.push(Sp(i[r].image)):o.push(Sp(i[r]))}else o=Sp(i);s.url=o}return e||(t.images[this.uuid]=s),s}}function Sp(n){return typeof HTMLImageElement<"u"&&n instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&n instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&n instanceof ImageBitmap?sR.getDataURL(n):n.data?{data:Array.from(n.data),width:n.width,height:n.height,type:n.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let oR=0;const Tp=new st;class Gn extends Vr{constructor(t=Gn.DEFAULT_IMAGE,e=Gn.DEFAULT_MAPPING,s=gr,i=gr,o=mi,r=xr,a=gi,c=ao,u=Gn.DEFAULT_ANISOTROPY,l=To){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:oR++}),this.uuid=xu(),this.name="",this.source=new a1(t),this.mipmaps=[],this.mapping=e,this.channel=0,this.wrapS=s,this.wrapT=i,this.magFilter=o,this.minFilter=r,this.anisotropy=u,this.format=a,this.internalFormat=null,this.type=c,this.offset=new xe(0,0),this.repeat=new xe(1,1),this.center=new xe(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new ge,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.colorSpace=l,this.userData={},this.updateRanges=[],this.version=0,this.onUpdate=null,this.renderTarget=null,this.isRenderTargetTexture=!1,this.isArrayTexture=!!(t&&t.depth&&t.depth>1),this.pmremVersion=0}get width(){return this.source.getSize(Tp).x}get height(){return this.source.getSize(Tp).y}get depth(){return this.source.getSize(Tp).z}get image(){return this.source.data}set image(t=null){this.source.data=t}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}addUpdateRange(t,e){this.updateRanges.push({start:t,count:e})}clearUpdateRanges(){this.updateRanges.length=0}clone(){return new this.constructor().copy(this)}copy(t){return this.name=t.name,this.source=t.source,this.mipmaps=t.mipmaps.slice(0),this.mapping=t.mapping,this.channel=t.channel,this.wrapS=t.wrapS,this.wrapT=t.wrapT,this.magFilter=t.magFilter,this.minFilter=t.minFilter,this.anisotropy=t.anisotropy,this.format=t.format,this.internalFormat=t.internalFormat,this.type=t.type,this.offset.copy(t.offset),this.repeat.copy(t.repeat),this.center.copy(t.center),this.rotation=t.rotation,this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrix.copy(t.matrix),this.generateMipmaps=t.generateMipmaps,this.premultiplyAlpha=t.premultiplyAlpha,this.flipY=t.flipY,this.unpackAlignment=t.unpackAlignment,this.colorSpace=t.colorSpace,this.renderTarget=t.renderTarget,this.isRenderTargetTexture=t.isRenderTargetTexture,this.isArrayTexture=t.isArrayTexture,this.userData=JSON.parse(JSON.stringify(t.userData)),this.needsUpdate=!0,this}setValues(t){for(const e in t){const s=t[e];if(s===void 0){console.warn(`THREE.Texture.setValues(): parameter '${e}' has value of undefined.`);continue}const i=this[e];if(i===void 0){console.warn(`THREE.Texture.setValues(): property '${e}' does not exist.`);continue}i&&s&&i.isVector2&&s.isVector2||i&&s&&i.isVector3&&s.isVector3||i&&s&&i.isMatrix3&&s.isMatrix3?i.copy(s):this[e]=s}}toJSON(t){const e=t===void 0||typeof t=="string";if(!e&&t.textures[this.uuid]!==void 0)return t.textures[this.uuid];const s={metadata:{version:4.7,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(t).uuid,mapping:this.mapping,channel:this.channel,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,internalFormat:this.internalFormat,type:this.type,colorSpace:this.colorSpace,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,generateMipmaps:this.generateMipmaps,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return Object.keys(this.userData).length>0&&(s.userData=this.userData),e||(t.textures[this.uuid]=s),s}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(t){if(this.mapping!==gv)return t;if(t.applyMatrix3(this.matrix),t.x<0||t.x>1)switch(this.wrapS){case Mm:t.x=t.x-Math.floor(t.x);break;case gr:t.x=t.x<0?0:1;break;case Am:Math.abs(Math.floor(t.x)%2)===1?t.x=Math.ceil(t.x)-t.x:t.x=t.x-Math.floor(t.x);break}if(t.y<0||t.y>1)switch(this.wrapT){case Mm:t.y=t.y-Math.floor(t.y);break;case gr:t.y=t.y<0?0:1;break;case Am:Math.abs(Math.floor(t.y)%2)===1?t.y=Math.ceil(t.y)-t.y:t.y=t.y-Math.floor(t.y);break}return this.flipY&&(t.y=1-t.y),t}set needsUpdate(t){t===!0&&(this.version++,this.source.needsUpdate=!0)}set needsPMREMUpdate(t){t===!0&&this.pmremVersion++}}Gn.DEFAULT_IMAGE=null;Gn.DEFAULT_MAPPING=gv;Gn.DEFAULT_ANISOTROPY=1;class yn{constructor(t=0,e=0,s=0,i=1){yn.prototype.isVector4=!0,this.x=t,this.y=e,this.z=s,this.w=i}get width(){return this.z}set width(t){this.z=t}get height(){return this.w}set height(t){this.w=t}set(t,e,s,i){return this.x=t,this.y=e,this.z=s,this.w=i,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this.w=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setW(t){return this.w=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;case 3:this.w=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this.w=t.w!==void 0?t.w:1,this}add(t){return this.x+=t.x,this.y+=t.y,this.z+=t.z,this.w+=t.w,this}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this.w+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this.w=t.w+e.w,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this.w+=t.w*e,this}sub(t){return this.x-=t.x,this.y-=t.y,this.z-=t.z,this.w-=t.w,this}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this.w-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this.w=t.w-e.w,this}multiply(t){return this.x*=t.x,this.y*=t.y,this.z*=t.z,this.w*=t.w,this}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this.w*=t,this}applyMatrix4(t){const e=this.x,s=this.y,i=this.z,o=this.w,r=t.elements;return this.x=r[0]*e+r[4]*s+r[8]*i+r[12]*o,this.y=r[1]*e+r[5]*s+r[9]*i+r[13]*o,this.z=r[2]*e+r[6]*s+r[10]*i+r[14]*o,this.w=r[3]*e+r[7]*s+r[11]*i+r[15]*o,this}divide(t){return this.x/=t.x,this.y/=t.y,this.z/=t.z,this.w/=t.w,this}divideScalar(t){return this.multiplyScalar(1/t)}setAxisAngleFromQuaternion(t){this.w=2*Math.acos(t.w);const e=Math.sqrt(1-t.w*t.w);return e<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=t.x/e,this.y=t.y/e,this.z=t.z/e),this}setAxisAngleFromRotationMatrix(t){let e,s,i,o;const c=t.elements,u=c[0],l=c[4],d=c[8],h=c[1],f=c[5],p=c[9],x=c[2],g=c[6],m=c[10];if(Math.abs(l-h)<.01&&Math.abs(d-x)<.01&&Math.abs(p-g)<.01){if(Math.abs(l+h)<.1&&Math.abs(d+x)<.1&&Math.abs(p+g)<.1&&Math.abs(u+f+m-3)<.1)return this.set(1,0,0,0),this;e=Math.PI;const w=(u+1)/2,b=(f+1)/2,_=(m+1)/2,T=(l+h)/4,E=(d+x)/4,I=(p+g)/4;return w>b&&w>_?w<.01?(s=0,i=.707106781,o=.707106781):(s=Math.sqrt(w),i=T/s,o=E/s):b>_?b<.01?(s=.707106781,i=0,o=.707106781):(i=Math.sqrt(b),s=T/i,o=I/i):_<.01?(s=.707106781,i=.707106781,o=0):(o=Math.sqrt(_),s=E/o,i=I/o),this.set(s,i,o,e),this}let y=Math.sqrt((g-p)*(g-p)+(d-x)*(d-x)+(h-l)*(h-l));return Math.abs(y)<.001&&(y=1),this.x=(g-p)/y,this.y=(d-x)/y,this.z=(h-l)/y,this.w=Math.acos((u+f+m-1)/2),this}setFromMatrixPosition(t){const e=t.elements;return this.x=e[12],this.y=e[13],this.z=e[14],this.w=e[15],this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this.w=Math.min(this.w,t.w),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this.w=Math.max(this.w,t.w),this}clamp(t,e){return this.x=Se(this.x,t.x,e.x),this.y=Se(this.y,t.y,e.y),this.z=Se(this.z,t.z,e.z),this.w=Se(this.w,t.w,e.w),this}clampScalar(t,e){return this.x=Se(this.x,t,e),this.y=Se(this.y,t,e),this.z=Se(this.z,t,e),this.w=Se(this.w,t,e),this}clampLength(t,e){const s=this.length();return this.divideScalar(s||1).multiplyScalar(Se(s,t,e))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this.w=Math.trunc(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z+this.w*t.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this.w+=(t.w-this.w)*e,this}lerpVectors(t,e,s){return this.x=t.x+(e.x-t.x)*s,this.y=t.y+(e.y-t.y)*s,this.z=t.z+(e.z-t.z)*s,this.w=t.w+(e.w-t.w)*s,this}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z&&t.w===this.w}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this.z=t[e+2],this.w=t[e+3],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t[e+3]=this.w,t}fromBufferAttribute(t,e){return this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this.w=t.getW(e),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}class rR extends Vr{constructor(t=1,e=1,s={}){super(),s=Object.assign({generateMipmaps:!1,internalFormat:null,minFilter:mi,depthBuffer:!0,stencilBuffer:!1,resolveDepthBuffer:!0,resolveStencilBuffer:!0,depthTexture:null,samples:0,count:1,depth:1,multiview:!1},s),this.isRenderTarget=!0,this.width=t,this.height=e,this.depth=s.depth,this.scissor=new yn(0,0,t,e),this.scissorTest=!1,this.viewport=new yn(0,0,t,e);const i={width:t,height:e,depth:s.depth},o=new Gn(i);this.textures=[];const r=s.count;for(let a=0;a<r;a++)this.textures[a]=o.clone(),this.textures[a].isRenderTargetTexture=!0,this.textures[a].renderTarget=this;this._setTextureOptions(s),this.depthBuffer=s.depthBuffer,this.stencilBuffer=s.stencilBuffer,this.resolveDepthBuffer=s.resolveDepthBuffer,this.resolveStencilBuffer=s.resolveStencilBuffer,this._depthTexture=null,this.depthTexture=s.depthTexture,this.samples=s.samples,this.multiview=s.multiview}_setTextureOptions(t={}){const e={minFilter:mi,generateMipmaps:!1,flipY:!1,internalFormat:null};t.mapping!==void 0&&(e.mapping=t.mapping),t.wrapS!==void 0&&(e.wrapS=t.wrapS),t.wrapT!==void 0&&(e.wrapT=t.wrapT),t.wrapR!==void 0&&(e.wrapR=t.wrapR),t.magFilter!==void 0&&(e.magFilter=t.magFilter),t.minFilter!==void 0&&(e.minFilter=t.minFilter),t.format!==void 0&&(e.format=t.format),t.type!==void 0&&(e.type=t.type),t.anisotropy!==void 0&&(e.anisotropy=t.anisotropy),t.colorSpace!==void 0&&(e.colorSpace=t.colorSpace),t.flipY!==void 0&&(e.flipY=t.flipY),t.generateMipmaps!==void 0&&(e.generateMipmaps=t.generateMipmaps),t.internalFormat!==void 0&&(e.internalFormat=t.internalFormat);for(let s=0;s<this.textures.length;s++)this.textures[s].setValues(e)}get texture(){return this.textures[0]}set texture(t){this.textures[0]=t}set depthTexture(t){this._depthTexture!==null&&(this._depthTexture.renderTarget=null),t!==null&&(t.renderTarget=this),this._depthTexture=t}get depthTexture(){return this._depthTexture}setSize(t,e,s=1){if(this.width!==t||this.height!==e||this.depth!==s){this.width=t,this.height=e,this.depth=s;for(let i=0,o=this.textures.length;i<o;i++)this.textures[i].image.width=t,this.textures[i].image.height=e,this.textures[i].image.depth=s,this.textures[i].isArrayTexture=this.textures[i].image.depth>1;this.dispose()}this.viewport.set(0,0,t,e),this.scissor.set(0,0,t,e)}clone(){return new this.constructor().copy(this)}copy(t){this.width=t.width,this.height=t.height,this.depth=t.depth,this.scissor.copy(t.scissor),this.scissorTest=t.scissorTest,this.viewport.copy(t.viewport),this.textures.length=0;for(let e=0,s=t.textures.length;e<s;e++){this.textures[e]=t.textures[e].clone(),this.textures[e].isRenderTargetTexture=!0,this.textures[e].renderTarget=this;const i=Object.assign({},t.textures[e].image);this.textures[e].source=new a1(i)}return this.depthBuffer=t.depthBuffer,this.stencilBuffer=t.stencilBuffer,this.resolveDepthBuffer=t.resolveDepthBuffer,this.resolveStencilBuffer=t.resolveStencilBuffer,t.depthTexture!==null&&(this.depthTexture=t.depthTexture.clone()),this.samples=t.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}class Ir extends rR{constructor(t=1,e=1,s={}){super(t,e,s),this.isWebGLRenderTarget=!0}}class Iv extends Gn{constructor(t=null,e=1,s=1,i=1){super(null),this.isDataArrayTexture=!0,this.image={data:t,width:e,height:s,depth:i},this.magFilter=Ds,this.minFilter=Ds,this.wrapR=gr,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.layerUpdates=new Set}addLayerUpdate(t){this.layerUpdates.add(t)}clearLayerUpdates(){this.layerUpdates.clear()}}class aR extends Gn{constructor(t=null,e=1,s=1,i=1){super(null),this.isData3DTexture=!0,this.image={data:t,width:e,height:s,depth:i},this.magFilter=Ds,this.minFilter=Ds,this.wrapR=gr,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class Wr{constructor(t=new st(1/0,1/0,1/0),e=new st(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=t,this.max=e}set(t,e){return this.min.copy(t),this.max.copy(e),this}setFromArray(t){this.makeEmpty();for(let e=0,s=t.length;e<s;e+=3)this.expandByPoint(ai.fromArray(t,e));return this}setFromBufferAttribute(t){this.makeEmpty();for(let e=0,s=t.count;e<s;e++)this.expandByPoint(ai.fromBufferAttribute(t,e));return this}setFromPoints(t){this.makeEmpty();for(let e=0,s=t.length;e<s;e++)this.expandByPoint(t[e]);return this}setFromCenterAndSize(t,e){const s=ai.copy(e).multiplyScalar(.5);return this.min.copy(t).sub(s),this.max.copy(t).add(s),this}setFromObject(t,e=!1){return this.makeEmpty(),this.expandByObject(t,e)}clone(){return new this.constructor().copy(this)}copy(t){return this.min.copy(t.min),this.max.copy(t.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(t){return this.isEmpty()?t.set(0,0,0):t.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(t){return this.isEmpty()?t.set(0,0,0):t.subVectors(this.max,this.min)}expandByPoint(t){return this.min.min(t),this.max.max(t),this}expandByVector(t){return this.min.sub(t),this.max.add(t),this}expandByScalar(t){return this.min.addScalar(-t),this.max.addScalar(t),this}expandByObject(t,e=!1){t.updateWorldMatrix(!1,!1);const s=t.geometry;if(s!==void 0){const o=s.getAttribute("position");if(e===!0&&o!==void 0&&t.isInstancedMesh!==!0)for(let r=0,a=o.count;r<a;r++)t.isMesh===!0?t.getVertexPosition(r,ai):ai.fromBufferAttribute(o,r),ai.applyMatrix4(t.matrixWorld),this.expandByPoint(ai);else t.boundingBox!==void 0?(t.boundingBox===null&&t.computeBoundingBox(),Gl.copy(t.boundingBox)):(s.boundingBox===null&&s.computeBoundingBox(),Gl.copy(s.boundingBox)),Gl.applyMatrix4(t.matrixWorld),this.union(Gl)}const i=t.children;for(let o=0,r=i.length;o<r;o++)this.expandByObject(i[o],e);return this}containsPoint(t){return t.x>=this.min.x&&t.x<=this.max.x&&t.y>=this.min.y&&t.y<=this.max.y&&t.z>=this.min.z&&t.z<=this.max.z}containsBox(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y&&this.min.z<=t.min.z&&t.max.z<=this.max.z}getParameter(t,e){return e.set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y),(t.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(t){return t.max.x>=this.min.x&&t.min.x<=this.max.x&&t.max.y>=this.min.y&&t.min.y<=this.max.y&&t.max.z>=this.min.z&&t.min.z<=this.max.z}intersectsSphere(t){return this.clampPoint(t.center,ai),ai.distanceToSquared(t.center)<=t.radius*t.radius}intersectsPlane(t){let e,s;return t.normal.x>0?(e=t.normal.x*this.min.x,s=t.normal.x*this.max.x):(e=t.normal.x*this.max.x,s=t.normal.x*this.min.x),t.normal.y>0?(e+=t.normal.y*this.min.y,s+=t.normal.y*this.max.y):(e+=t.normal.y*this.max.y,s+=t.normal.y*this.min.y),t.normal.z>0?(e+=t.normal.z*this.min.z,s+=t.normal.z*this.max.z):(e+=t.normal.z*this.max.z,s+=t.normal.z*this.min.z),e<=-t.constant&&s>=-t.constant}intersectsTriangle(t){if(this.isEmpty())return!1;this.getCenter(Ec),Hl.subVectors(this.max,Ec),ia.subVectors(t.a,Ec),oa.subVectors(t.b,Ec),ra.subVectors(t.c,Ec),xo.subVectors(oa,ia),yo.subVectors(ra,oa),er.subVectors(ia,ra);let e=[0,-xo.z,xo.y,0,-yo.z,yo.y,0,-er.z,er.y,xo.z,0,-xo.x,yo.z,0,-yo.x,er.z,0,-er.x,-xo.y,xo.x,0,-yo.y,yo.x,0,-er.y,er.x,0];return!Ep(e,ia,oa,ra,Hl)||(e=[1,0,0,0,1,0,0,0,1],!Ep(e,ia,oa,ra,Hl))?!1:(Xl.crossVectors(xo,yo),e=[Xl.x,Xl.y,Xl.z],Ep(e,ia,oa,ra,Hl))}clampPoint(t,e){return e.copy(t).clamp(this.min,this.max)}distanceToPoint(t){return this.clampPoint(t,ai).distanceTo(t)}getBoundingSphere(t){return this.isEmpty()?t.makeEmpty():(this.getCenter(t.center),t.radius=this.getSize(ai).length()*.5),t}intersect(t){return this.min.max(t.min),this.max.min(t.max),this.isEmpty()&&this.makeEmpty(),this}union(t){return this.min.min(t.min),this.max.max(t.max),this}applyMatrix4(t){return this.isEmpty()?this:(Xi[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(t),Xi[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(t),Xi[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(t),Xi[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(t),Xi[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(t),Xi[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(t),Xi[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(t),Xi[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(t),this.setFromPoints(Xi),this)}translate(t){return this.min.add(t),this.max.add(t),this}equals(t){return t.min.equals(this.min)&&t.max.equals(this.max)}toJSON(){return{min:this.min.toArray(),max:this.max.toArray()}}fromJSON(t){return this.min.fromArray(t.min),this.max.fromArray(t.max),this}}const Xi=[new st,new st,new st,new st,new st,new st,new st,new st],ai=new st,Gl=new Wr,ia=new st,oa=new st,ra=new st,xo=new st,yo=new st,er=new st,Ec=new st,Hl=new st,Xl=new st,nr=new st;function Ep(n,t,e,s,i){for(let o=0,r=n.length-3;o<=r;o+=3){nr.fromArray(n,o);const a=i.x*Math.abs(nr.x)+i.y*Math.abs(nr.y)+i.z*Math.abs(nr.z),c=t.dot(nr),u=e.dot(nr),l=s.dot(nr);if(Math.max(-Math.max(c,u,l),Math.min(c,u,l))>a)return!1}return!0}const cR=new Wr,Ic=new st,Ip=new st;class yu{constructor(t=new st,e=-1){this.isSphere=!0,this.center=t,this.radius=e}set(t,e){return this.center.copy(t),this.radius=e,this}setFromPoints(t,e){const s=this.center;e!==void 0?s.copy(e):cR.setFromPoints(t).getCenter(s);let i=0;for(let o=0,r=t.length;o<r;o++)i=Math.max(i,s.distanceToSquared(t[o]));return this.radius=Math.sqrt(i),this}copy(t){return this.center.copy(t.center),this.radius=t.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(t){return t.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(t){return t.distanceTo(this.center)-this.radius}intersectsSphere(t){const e=this.radius+t.radius;return t.center.distanceToSquared(this.center)<=e*e}intersectsBox(t){return t.intersectsSphere(this)}intersectsPlane(t){return Math.abs(t.distanceToPoint(this.center))<=this.radius}clampPoint(t,e){const s=this.center.distanceToSquared(t);return e.copy(t),s>this.radius*this.radius&&(e.sub(this.center).normalize(),e.multiplyScalar(this.radius).add(this.center)),e}getBoundingBox(t){return this.isEmpty()?(t.makeEmpty(),t):(t.set(this.center,this.center),t.expandByScalar(this.radius),t)}applyMatrix4(t){return this.center.applyMatrix4(t),this.radius=this.radius*t.getMaxScaleOnAxis(),this}translate(t){return this.center.add(t),this}expandByPoint(t){if(this.isEmpty())return this.center.copy(t),this.radius=0,this;Ic.subVectors(t,this.center);const e=Ic.lengthSq();if(e>this.radius*this.radius){const s=Math.sqrt(e),i=(s-this.radius)*.5;this.center.addScaledVector(Ic,i/s),this.radius+=i}return this}union(t){return t.isEmpty()?this:this.isEmpty()?(this.copy(t),this):(this.center.equals(t.center)===!0?this.radius=Math.max(this.radius,t.radius):(Ip.subVectors(t.center,this.center).setLength(t.radius),this.expandByPoint(Ic.copy(t.center).add(Ip)),this.expandByPoint(Ic.copy(t.center).sub(Ip))),this)}equals(t){return t.center.equals(this.center)&&t.radius===this.radius}clone(){return new this.constructor().copy(this)}toJSON(){return{radius:this.radius,center:this.center.toArray()}}fromJSON(t){return this.radius=t.radius,this.center.fromArray(t.center),this}}const qi=new st,Rp=new st,ql=new st,bo=new st,Mp=new st,jl=new st,Ap=new st;class c1{constructor(t=new st,e=new st(0,0,-1)){this.origin=t,this.direction=e}set(t,e){return this.origin.copy(t),this.direction.copy(e),this}copy(t){return this.origin.copy(t.origin),this.direction.copy(t.direction),this}at(t,e){return e.copy(this.origin).addScaledVector(this.direction,t)}lookAt(t){return this.direction.copy(t).sub(this.origin).normalize(),this}recast(t){return this.origin.copy(this.at(t,qi)),this}closestPointToPoint(t,e){e.subVectors(t,this.origin);const s=e.dot(this.direction);return s<0?e.copy(this.origin):e.copy(this.origin).addScaledVector(this.direction,s)}distanceToPoint(t){return Math.sqrt(this.distanceSqToPoint(t))}distanceSqToPoint(t){const e=qi.subVectors(t,this.origin).dot(this.direction);return e<0?this.origin.distanceToSquared(t):(qi.copy(this.origin).addScaledVector(this.direction,e),qi.distanceToSquared(t))}distanceSqToSegment(t,e,s,i){Rp.copy(t).add(e).multiplyScalar(.5),ql.copy(e).sub(t).normalize(),bo.copy(this.origin).sub(Rp);const o=t.distanceTo(e)*.5,r=-this.direction.dot(ql),a=bo.dot(this.direction),c=-bo.dot(ql),u=bo.lengthSq(),l=Math.abs(1-r*r);let d,h,f,p;if(l>0)if(d=r*c-a,h=r*a-c,p=o*l,d>=0)if(h>=-p)if(h<=p){const x=1/l;d*=x,h*=x,f=d*(d+r*h+2*a)+h*(r*d+h+2*c)+u}else h=o,d=Math.max(0,-(r*h+a)),f=-d*d+h*(h+2*c)+u;else h=-o,d=Math.max(0,-(r*h+a)),f=-d*d+h*(h+2*c)+u;else h<=-p?(d=Math.max(0,-(-r*o+a)),h=d>0?-o:Math.min(Math.max(-o,-c),o),f=-d*d+h*(h+2*c)+u):h<=p?(d=0,h=Math.min(Math.max(-o,-c),o),f=h*(h+2*c)+u):(d=Math.max(0,-(r*o+a)),h=d>0?o:Math.min(Math.max(-o,-c),o),f=-d*d+h*(h+2*c)+u);else h=r>0?-o:o,d=Math.max(0,-(r*h+a)),f=-d*d+h*(h+2*c)+u;return s&&s.copy(this.origin).addScaledVector(this.direction,d),i&&i.copy(Rp).addScaledVector(ql,h),f}intersectSphere(t,e){qi.subVectors(t.center,this.origin);const s=qi.dot(this.direction),i=qi.dot(qi)-s*s,o=t.radius*t.radius;if(i>o)return null;const r=Math.sqrt(o-i),a=s-r,c=s+r;return c<0?null:a<0?this.at(c,e):this.at(a,e)}intersectsSphere(t){return t.radius<0?!1:this.distanceSqToPoint(t.center)<=t.radius*t.radius}distanceToPlane(t){const e=t.normal.dot(this.direction);if(e===0)return t.distanceToPoint(this.origin)===0?0:null;const s=-(this.origin.dot(t.normal)+t.constant)/e;return s>=0?s:null}intersectPlane(t,e){const s=this.distanceToPlane(t);return s===null?null:this.at(s,e)}intersectsPlane(t){const e=t.distanceToPoint(this.origin);return e===0||t.normal.dot(this.direction)*e<0}intersectBox(t,e){let s,i,o,r,a,c;const u=1/this.direction.x,l=1/this.direction.y,d=1/this.direction.z,h=this.origin;return u>=0?(s=(t.min.x-h.x)*u,i=(t.max.x-h.x)*u):(s=(t.max.x-h.x)*u,i=(t.min.x-h.x)*u),l>=0?(o=(t.min.y-h.y)*l,r=(t.max.y-h.y)*l):(o=(t.max.y-h.y)*l,r=(t.min.y-h.y)*l),s>r||o>i||((o>s||isNaN(s))&&(s=o),(r<i||isNaN(i))&&(i=r),d>=0?(a=(t.min.z-h.z)*d,c=(t.max.z-h.z)*d):(a=(t.max.z-h.z)*d,c=(t.min.z-h.z)*d),s>c||a>i)||((a>s||s!==s)&&(s=a),(c<i||i!==i)&&(i=c),i<0)?null:this.at(s>=0?s:i,e)}intersectsBox(t){return this.intersectBox(t,qi)!==null}intersectTriangle(t,e,s,i,o){Mp.subVectors(e,t),jl.subVectors(s,t),Ap.crossVectors(Mp,jl);let r=this.direction.dot(Ap),a;if(r>0){if(i)return null;a=1}else if(r<0)a=-1,r=-r;else return null;bo.subVectors(this.origin,t);const c=a*this.direction.dot(jl.crossVectors(bo,jl));if(c<0)return null;const u=a*this.direction.dot(Mp.cross(bo));if(u<0||c+u>r)return null;const l=-a*bo.dot(Ap);return l<0?null:this.at(l/r,o)}applyMatrix4(t){return this.origin.applyMatrix4(t),this.direction.transformDirection(t),this}equals(t){return t.origin.equals(this.origin)&&t.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}}class cn{constructor(t,e,s,i,o,r,a,c,u,l,d,h,f,p,x,g){cn.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],t!==void 0&&this.set(t,e,s,i,o,r,a,c,u,l,d,h,f,p,x,g)}set(t,e,s,i,o,r,a,c,u,l,d,h,f,p,x,g){const m=this.elements;return m[0]=t,m[4]=e,m[8]=s,m[12]=i,m[1]=o,m[5]=r,m[9]=a,m[13]=c,m[2]=u,m[6]=l,m[10]=d,m[14]=h,m[3]=f,m[7]=p,m[11]=x,m[15]=g,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new cn().fromArray(this.elements)}copy(t){const e=this.elements,s=t.elements;return e[0]=s[0],e[1]=s[1],e[2]=s[2],e[3]=s[3],e[4]=s[4],e[5]=s[5],e[6]=s[6],e[7]=s[7],e[8]=s[8],e[9]=s[9],e[10]=s[10],e[11]=s[11],e[12]=s[12],e[13]=s[13],e[14]=s[14],e[15]=s[15],this}copyPosition(t){const e=this.elements,s=t.elements;return e[12]=s[12],e[13]=s[13],e[14]=s[14],this}setFromMatrix3(t){const e=t.elements;return this.set(e[0],e[3],e[6],0,e[1],e[4],e[7],0,e[2],e[5],e[8],0,0,0,0,1),this}extractBasis(t,e,s){return t.setFromMatrixColumn(this,0),e.setFromMatrixColumn(this,1),s.setFromMatrixColumn(this,2),this}makeBasis(t,e,s){return this.set(t.x,e.x,s.x,0,t.y,e.y,s.y,0,t.z,e.z,s.z,0,0,0,0,1),this}extractRotation(t){const e=this.elements,s=t.elements,i=1/aa.setFromMatrixColumn(t,0).length(),o=1/aa.setFromMatrixColumn(t,1).length(),r=1/aa.setFromMatrixColumn(t,2).length();return e[0]=s[0]*i,e[1]=s[1]*i,e[2]=s[2]*i,e[3]=0,e[4]=s[4]*o,e[5]=s[5]*o,e[6]=s[6]*o,e[7]=0,e[8]=s[8]*r,e[9]=s[9]*r,e[10]=s[10]*r,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this}makeRotationFromEuler(t){const e=this.elements,s=t.x,i=t.y,o=t.z,r=Math.cos(s),a=Math.sin(s),c=Math.cos(i),u=Math.sin(i),l=Math.cos(o),d=Math.sin(o);if(t.order==="XYZ"){const h=r*l,f=r*d,p=a*l,x=a*d;e[0]=c*l,e[4]=-c*d,e[8]=u,e[1]=f+p*u,e[5]=h-x*u,e[9]=-a*c,e[2]=x-h*u,e[6]=p+f*u,e[10]=r*c}else if(t.order==="YXZ"){const h=c*l,f=c*d,p=u*l,x=u*d;e[0]=h+x*a,e[4]=p*a-f,e[8]=r*u,e[1]=r*d,e[5]=r*l,e[9]=-a,e[2]=f*a-p,e[6]=x+h*a,e[10]=r*c}else if(t.order==="ZXY"){const h=c*l,f=c*d,p=u*l,x=u*d;e[0]=h-x*a,e[4]=-r*d,e[8]=p+f*a,e[1]=f+p*a,e[5]=r*l,e[9]=x-h*a,e[2]=-r*u,e[6]=a,e[10]=r*c}else if(t.order==="ZYX"){const h=r*l,f=r*d,p=a*l,x=a*d;e[0]=c*l,e[4]=p*u-f,e[8]=h*u+x,e[1]=c*d,e[5]=x*u+h,e[9]=f*u-p,e[2]=-u,e[6]=a*c,e[10]=r*c}else if(t.order==="YZX"){const h=r*c,f=r*u,p=a*c,x=a*u;e[0]=c*l,e[4]=x-h*d,e[8]=p*d+f,e[1]=d,e[5]=r*l,e[9]=-a*l,e[2]=-u*l,e[6]=f*d+p,e[10]=h-x*d}else if(t.order==="XZY"){const h=r*c,f=r*u,p=a*c,x=a*u;e[0]=c*l,e[4]=-d,e[8]=u*l,e[1]=h*d+x,e[5]=r*l,e[9]=f*d-p,e[2]=p*d-f,e[6]=a*l,e[10]=x*d+h}return e[3]=0,e[7]=0,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this}makeRotationFromQuaternion(t){return this.compose(uR,t,lR)}lookAt(t,e,s){const i=this.elements;return Ms.subVectors(t,e),Ms.lengthSq()===0&&(Ms.z=1),Ms.normalize(),wo.crossVectors(s,Ms),wo.lengthSq()===0&&(Math.abs(s.z)===1?Ms.x+=1e-4:Ms.z+=1e-4,Ms.normalize(),wo.crossVectors(s,Ms)),wo.normalize(),Kl.crossVectors(Ms,wo),i[0]=wo.x,i[4]=Kl.x,i[8]=Ms.x,i[1]=wo.y,i[5]=Kl.y,i[9]=Ms.y,i[2]=wo.z,i[6]=Kl.z,i[10]=Ms.z,this}multiply(t){return this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,e){const s=t.elements,i=e.elements,o=this.elements,r=s[0],a=s[4],c=s[8],u=s[12],l=s[1],d=s[5],h=s[9],f=s[13],p=s[2],x=s[6],g=s[10],m=s[14],y=s[3],w=s[7],b=s[11],_=s[15],T=i[0],E=i[4],I=i[8],S=i[12],v=i[1],C=i[5],M=i[9],N=i[13],D=i[2],$=i[6],F=i[10],B=i[14],P=i[3],V=i[7],q=i[11],J=i[15];return o[0]=r*T+a*v+c*D+u*P,o[4]=r*E+a*C+c*$+u*V,o[8]=r*I+a*M+c*F+u*q,o[12]=r*S+a*N+c*B+u*J,o[1]=l*T+d*v+h*D+f*P,o[5]=l*E+d*C+h*$+f*V,o[9]=l*I+d*M+h*F+f*q,o[13]=l*S+d*N+h*B+f*J,o[2]=p*T+x*v+g*D+m*P,o[6]=p*E+x*C+g*$+m*V,o[10]=p*I+x*M+g*F+m*q,o[14]=p*S+x*N+g*B+m*J,o[3]=y*T+w*v+b*D+_*P,o[7]=y*E+w*C+b*$+_*V,o[11]=y*I+w*M+b*F+_*q,o[15]=y*S+w*N+b*B+_*J,this}multiplyScalar(t){const e=this.elements;return e[0]*=t,e[4]*=t,e[8]*=t,e[12]*=t,e[1]*=t,e[5]*=t,e[9]*=t,e[13]*=t,e[2]*=t,e[6]*=t,e[10]*=t,e[14]*=t,e[3]*=t,e[7]*=t,e[11]*=t,e[15]*=t,this}determinant(){const t=this.elements,e=t[0],s=t[4],i=t[8],o=t[12],r=t[1],a=t[5],c=t[9],u=t[13],l=t[2],d=t[6],h=t[10],f=t[14],p=t[3],x=t[7],g=t[11],m=t[15];return p*(+o*c*d-i*u*d-o*a*h+s*u*h+i*a*f-s*c*f)+x*(+e*c*f-e*u*h+o*r*h-i*r*f+i*u*l-o*c*l)+g*(+e*u*d-e*a*f-o*r*d+s*r*f+o*a*l-s*u*l)+m*(-i*a*l-e*c*d+e*a*h+i*r*d-s*r*h+s*c*l)}transpose(){const t=this.elements;let e;return e=t[1],t[1]=t[4],t[4]=e,e=t[2],t[2]=t[8],t[8]=e,e=t[6],t[6]=t[9],t[9]=e,e=t[3],t[3]=t[12],t[12]=e,e=t[7],t[7]=t[13],t[13]=e,e=t[11],t[11]=t[14],t[14]=e,this}setPosition(t,e,s){const i=this.elements;return t.isVector3?(i[12]=t.x,i[13]=t.y,i[14]=t.z):(i[12]=t,i[13]=e,i[14]=s),this}invert(){const t=this.elements,e=t[0],s=t[1],i=t[2],o=t[3],r=t[4],a=t[5],c=t[6],u=t[7],l=t[8],d=t[9],h=t[10],f=t[11],p=t[12],x=t[13],g=t[14],m=t[15],y=d*g*u-x*h*u+x*c*f-a*g*f-d*c*m+a*h*m,w=p*h*u-l*g*u-p*c*f+r*g*f+l*c*m-r*h*m,b=l*x*u-p*d*u+p*a*f-r*x*f-l*a*m+r*d*m,_=p*d*c-l*x*c-p*a*h+r*x*h+l*a*g-r*d*g,T=e*y+s*w+i*b+o*_;if(T===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const E=1/T;return t[0]=y*E,t[1]=(x*h*o-d*g*o-x*i*f+s*g*f+d*i*m-s*h*m)*E,t[2]=(a*g*o-x*c*o+x*i*u-s*g*u-a*i*m+s*c*m)*E,t[3]=(d*c*o-a*h*o-d*i*u+s*h*u+a*i*f-s*c*f)*E,t[4]=w*E,t[5]=(l*g*o-p*h*o+p*i*f-e*g*f-l*i*m+e*h*m)*E,t[6]=(p*c*o-r*g*o-p*i*u+e*g*u+r*i*m-e*c*m)*E,t[7]=(r*h*o-l*c*o+l*i*u-e*h*u-r*i*f+e*c*f)*E,t[8]=b*E,t[9]=(p*d*o-l*x*o-p*s*f+e*x*f+l*s*m-e*d*m)*E,t[10]=(r*x*o-p*a*o+p*s*u-e*x*u-r*s*m+e*a*m)*E,t[11]=(l*a*o-r*d*o-l*s*u+e*d*u+r*s*f-e*a*f)*E,t[12]=_*E,t[13]=(l*x*i-p*d*i+p*s*h-e*x*h-l*s*g+e*d*g)*E,t[14]=(p*a*i-r*x*i-p*s*c+e*x*c+r*s*g-e*a*g)*E,t[15]=(r*d*i-l*a*i+l*s*c-e*d*c-r*s*h+e*a*h)*E,this}scale(t){const e=this.elements,s=t.x,i=t.y,o=t.z;return e[0]*=s,e[4]*=i,e[8]*=o,e[1]*=s,e[5]*=i,e[9]*=o,e[2]*=s,e[6]*=i,e[10]*=o,e[3]*=s,e[7]*=i,e[11]*=o,this}getMaxScaleOnAxis(){const t=this.elements,e=t[0]*t[0]+t[1]*t[1]+t[2]*t[2],s=t[4]*t[4]+t[5]*t[5]+t[6]*t[6],i=t[8]*t[8]+t[9]*t[9]+t[10]*t[10];return Math.sqrt(Math.max(e,s,i))}makeTranslation(t,e,s){return t.isVector3?this.set(1,0,0,t.x,0,1,0,t.y,0,0,1,t.z,0,0,0,1):this.set(1,0,0,t,0,1,0,e,0,0,1,s,0,0,0,1),this}makeRotationX(t){const e=Math.cos(t),s=Math.sin(t);return this.set(1,0,0,0,0,e,-s,0,0,s,e,0,0,0,0,1),this}makeRotationY(t){const e=Math.cos(t),s=Math.sin(t);return this.set(e,0,s,0,0,1,0,0,-s,0,e,0,0,0,0,1),this}makeRotationZ(t){const e=Math.cos(t),s=Math.sin(t);return this.set(e,-s,0,0,s,e,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(t,e){const s=Math.cos(e),i=Math.sin(e),o=1-s,r=t.x,a=t.y,c=t.z,u=o*r,l=o*a;return this.set(u*r+s,u*a-i*c,u*c+i*a,0,u*a+i*c,l*a+s,l*c-i*r,0,u*c-i*a,l*c+i*r,o*c*c+s,0,0,0,0,1),this}makeScale(t,e,s){return this.set(t,0,0,0,0,e,0,0,0,0,s,0,0,0,0,1),this}makeShear(t,e,s,i,o,r){return this.set(1,s,o,0,t,1,r,0,e,i,1,0,0,0,0,1),this}compose(t,e,s){const i=this.elements,o=e._x,r=e._y,a=e._z,c=e._w,u=o+o,l=r+r,d=a+a,h=o*u,f=o*l,p=o*d,x=r*l,g=r*d,m=a*d,y=c*u,w=c*l,b=c*d,_=s.x,T=s.y,E=s.z;return i[0]=(1-(x+m))*_,i[1]=(f+b)*_,i[2]=(p-w)*_,i[3]=0,i[4]=(f-b)*T,i[5]=(1-(h+m))*T,i[6]=(g+y)*T,i[7]=0,i[8]=(p+w)*E,i[9]=(g-y)*E,i[10]=(1-(h+x))*E,i[11]=0,i[12]=t.x,i[13]=t.y,i[14]=t.z,i[15]=1,this}decompose(t,e,s){const i=this.elements;let o=aa.set(i[0],i[1],i[2]).length();const r=aa.set(i[4],i[5],i[6]).length(),a=aa.set(i[8],i[9],i[10]).length();this.determinant()<0&&(o=-o),t.x=i[12],t.y=i[13],t.z=i[14],ci.copy(this);const u=1/o,l=1/r,d=1/a;return ci.elements[0]*=u,ci.elements[1]*=u,ci.elements[2]*=u,ci.elements[4]*=l,ci.elements[5]*=l,ci.elements[6]*=l,ci.elements[8]*=d,ci.elements[9]*=d,ci.elements[10]*=d,e.setFromRotationMatrix(ci),s.x=o,s.y=r,s.z=a,this}makePerspective(t,e,s,i,o,r,a=so){const c=this.elements,u=2*o/(e-t),l=2*o/(s-i),d=(e+t)/(e-t),h=(s+i)/(s-i);let f,p;if(a===so)f=-(r+o)/(r-o),p=-2*r*o/(r-o);else if(a===Kd)f=-r/(r-o),p=-r*o/(r-o);else throw new Error("THREE.Matrix4.makePerspective(): Invalid coordinate system: "+a);return c[0]=u,c[4]=0,c[8]=d,c[12]=0,c[1]=0,c[5]=l,c[9]=h,c[13]=0,c[2]=0,c[6]=0,c[10]=f,c[14]=p,c[3]=0,c[7]=0,c[11]=-1,c[15]=0,this}makeOrthographic(t,e,s,i,o,r,a=so){const c=this.elements,u=1/(e-t),l=1/(s-i),d=1/(r-o),h=(e+t)*u,f=(s+i)*l;let p,x;if(a===so)p=(r+o)*d,x=-2*d;else if(a===Kd)p=o*d,x=-1*d;else throw new Error("THREE.Matrix4.makeOrthographic(): Invalid coordinate system: "+a);return c[0]=2*u,c[4]=0,c[8]=0,c[12]=-h,c[1]=0,c[5]=2*l,c[9]=0,c[13]=-f,c[2]=0,c[6]=0,c[10]=x,c[14]=-p,c[3]=0,c[7]=0,c[11]=0,c[15]=1,this}equals(t){const e=this.elements,s=t.elements;for(let i=0;i<16;i++)if(e[i]!==s[i])return!1;return!0}fromArray(t,e=0){for(let s=0;s<16;s++)this.elements[s]=t[s+e];return this}toArray(t=[],e=0){const s=this.elements;return t[e]=s[0],t[e+1]=s[1],t[e+2]=s[2],t[e+3]=s[3],t[e+4]=s[4],t[e+5]=s[5],t[e+6]=s[6],t[e+7]=s[7],t[e+8]=s[8],t[e+9]=s[9],t[e+10]=s[10],t[e+11]=s[11],t[e+12]=s[12],t[e+13]=s[13],t[e+14]=s[14],t[e+15]=s[15],t}}const aa=new st,ci=new cn,uR=new st(0,0,0),lR=new st(1,1,1),wo=new st,Kl=new st,Ms=new st,Iy=new cn,Ry=new Er;class Ui{constructor(t=0,e=0,s=0,i=Ui.DEFAULT_ORDER){this.isEuler=!0,this._x=t,this._y=e,this._z=s,this._order=i}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get order(){return this._order}set order(t){this._order=t,this._onChangeCallback()}set(t,e,s,i=this._order){return this._x=t,this._y=e,this._z=s,this._order=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(t){return this._x=t._x,this._y=t._y,this._z=t._z,this._order=t._order,this._onChangeCallback(),this}setFromRotationMatrix(t,e=this._order,s=!0){const i=t.elements,o=i[0],r=i[4],a=i[8],c=i[1],u=i[5],l=i[9],d=i[2],h=i[6],f=i[10];switch(e){case"XYZ":this._y=Math.asin(Se(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(-l,f),this._z=Math.atan2(-r,o)):(this._x=Math.atan2(h,u),this._z=0);break;case"YXZ":this._x=Math.asin(-Se(l,-1,1)),Math.abs(l)<.9999999?(this._y=Math.atan2(a,f),this._z=Math.atan2(c,u)):(this._y=Math.atan2(-d,o),this._z=0);break;case"ZXY":this._x=Math.asin(Se(h,-1,1)),Math.abs(h)<.9999999?(this._y=Math.atan2(-d,f),this._z=Math.atan2(-r,u)):(this._y=0,this._z=Math.atan2(c,o));break;case"ZYX":this._y=Math.asin(-Se(d,-1,1)),Math.abs(d)<.9999999?(this._x=Math.atan2(h,f),this._z=Math.atan2(c,o)):(this._x=0,this._z=Math.atan2(-r,u));break;case"YZX":this._z=Math.asin(Se(c,-1,1)),Math.abs(c)<.9999999?(this._x=Math.atan2(-l,u),this._y=Math.atan2(-d,o)):(this._x=0,this._y=Math.atan2(a,f));break;case"XZY":this._z=Math.asin(-Se(r,-1,1)),Math.abs(r)<.9999999?(this._x=Math.atan2(h,u),this._y=Math.atan2(a,o)):(this._x=Math.atan2(-l,f),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+e)}return this._order=e,s===!0&&this._onChangeCallback(),this}setFromQuaternion(t,e,s){return Iy.makeRotationFromQuaternion(t),this.setFromRotationMatrix(Iy,e,s)}setFromVector3(t,e=this._order){return this.set(t.x,t.y,t.z,e)}reorder(t){return Ry.setFromEuler(this),this.setFromQuaternion(Ry,t)}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._order===this._order}fromArray(t){return this._x=t[0],this._y=t[1],this._z=t[2],t[3]!==void 0&&(this._order=t[3]),this._onChangeCallback(),this}toArray(t=[],e=0){return t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._order,t}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}}Ui.DEFAULT_ORDER="XYZ";class u1{constructor(){this.mask=1}set(t){this.mask=(1<<t|0)>>>0}enable(t){this.mask|=1<<t|0}enableAll(){this.mask=-1}toggle(t){this.mask^=1<<t|0}disable(t){this.mask&=~(1<<t|0)}disableAll(){this.mask=0}test(t){return(this.mask&t.mask)!==0}isEnabled(t){return(this.mask&(1<<t|0))!==0}}let dR=0;const My=new st,ca=new Er,ji=new cn,Yl=new st,Rc=new st,hR=new st,fR=new Er,Ay=new st(1,0,0),Ny=new st(0,1,0),ky=new st(0,0,1),Dy={type:"added"},pR={type:"removed"},ua={type:"childadded",child:null},Np={type:"childremoved",child:null};class Ln extends Vr{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:dR++}),this.uuid=xu(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=Ln.DEFAULT_UP.clone();const t=new st,e=new Ui,s=new Er,i=new st(1,1,1);function o(){s.setFromEuler(e,!1)}function r(){e.setFromQuaternion(s,void 0,!1)}e._onChange(o),s._onChange(r),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:t},rotation:{configurable:!0,enumerable:!0,value:e},quaternion:{configurable:!0,enumerable:!0,value:s},scale:{configurable:!0,enumerable:!0,value:i},modelViewMatrix:{value:new cn},normalMatrix:{value:new ge}}),this.matrix=new cn,this.matrixWorld=new cn,this.matrixAutoUpdate=Ln.DEFAULT_MATRIX_AUTO_UPDATE,this.matrixWorldAutoUpdate=Ln.DEFAULT_MATRIX_WORLD_AUTO_UPDATE,this.matrixWorldNeedsUpdate=!1,this.layers=new u1,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.customDepthMaterial=void 0,this.customDistanceMaterial=void 0,this.userData={}}onBeforeShadow(){}onAfterShadow(){}onBeforeRender(){}onAfterRender(){}applyMatrix4(t){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(t),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(t){return this.quaternion.premultiply(t),this}setRotationFromAxisAngle(t,e){this.quaternion.setFromAxisAngle(t,e)}setRotationFromEuler(t){this.quaternion.setFromEuler(t,!0)}setRotationFromMatrix(t){this.quaternion.setFromRotationMatrix(t)}setRotationFromQuaternion(t){this.quaternion.copy(t)}rotateOnAxis(t,e){return ca.setFromAxisAngle(t,e),this.quaternion.multiply(ca),this}rotateOnWorldAxis(t,e){return ca.setFromAxisAngle(t,e),this.quaternion.premultiply(ca),this}rotateX(t){return this.rotateOnAxis(Ay,t)}rotateY(t){return this.rotateOnAxis(Ny,t)}rotateZ(t){return this.rotateOnAxis(ky,t)}translateOnAxis(t,e){return My.copy(t).applyQuaternion(this.quaternion),this.position.add(My.multiplyScalar(e)),this}translateX(t){return this.translateOnAxis(Ay,t)}translateY(t){return this.translateOnAxis(Ny,t)}translateZ(t){return this.translateOnAxis(ky,t)}localToWorld(t){return this.updateWorldMatrix(!0,!1),t.applyMatrix4(this.matrixWorld)}worldToLocal(t){return this.updateWorldMatrix(!0,!1),t.applyMatrix4(ji.copy(this.matrixWorld).invert())}lookAt(t,e,s){t.isVector3?Yl.copy(t):Yl.set(t,e,s);const i=this.parent;this.updateWorldMatrix(!0,!1),Rc.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?ji.lookAt(Rc,Yl,this.up):ji.lookAt(Yl,Rc,this.up),this.quaternion.setFromRotationMatrix(ji),i&&(ji.extractRotation(i.matrixWorld),ca.setFromRotationMatrix(ji),this.quaternion.premultiply(ca.invert()))}add(t){if(arguments.length>1){for(let e=0;e<arguments.length;e++)this.add(arguments[e]);return this}return t===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",t),this):(t&&t.isObject3D?(t.removeFromParent(),t.parent=this,this.children.push(t),t.dispatchEvent(Dy),ua.child=t,this.dispatchEvent(ua),ua.child=null):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",t),this)}remove(t){if(arguments.length>1){for(let s=0;s<arguments.length;s++)this.remove(arguments[s]);return this}const e=this.children.indexOf(t);return e!==-1&&(t.parent=null,this.children.splice(e,1),t.dispatchEvent(pR),Np.child=t,this.dispatchEvent(Np),Np.child=null),this}removeFromParent(){const t=this.parent;return t!==null&&t.remove(this),this}clear(){return this.remove(...this.children)}attach(t){return this.updateWorldMatrix(!0,!1),ji.copy(this.matrixWorld).invert(),t.parent!==null&&(t.parent.updateWorldMatrix(!0,!1),ji.multiply(t.parent.matrixWorld)),t.applyMatrix4(ji),t.removeFromParent(),t.parent=this,this.children.push(t),t.updateWorldMatrix(!1,!0),t.dispatchEvent(Dy),ua.child=t,this.dispatchEvent(ua),ua.child=null,this}getObjectById(t){return this.getObjectByProperty("id",t)}getObjectByName(t){return this.getObjectByProperty("name",t)}getObjectByProperty(t,e){if(this[t]===e)return this;for(let s=0,i=this.children.length;s<i;s++){const r=this.children[s].getObjectByProperty(t,e);if(r!==void 0)return r}}getObjectsByProperty(t,e,s=[]){this[t]===e&&s.push(this);const i=this.children;for(let o=0,r=i.length;o<r;o++)i[o].getObjectsByProperty(t,e,s);return s}getWorldPosition(t){return this.updateWorldMatrix(!0,!1),t.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(t){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Rc,t,hR),t}getWorldScale(t){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Rc,fR,t),t}getWorldDirection(t){this.updateWorldMatrix(!0,!1);const e=this.matrixWorld.elements;return t.set(e[8],e[9],e[10]).normalize()}raycast(){}traverse(t){t(this);const e=this.children;for(let s=0,i=e.length;s<i;s++)e[s].traverse(t)}traverseVisible(t){if(this.visible===!1)return;t(this);const e=this.children;for(let s=0,i=e.length;s<i;s++)e[s].traverseVisible(t)}traverseAncestors(t){const e=this.parent;e!==null&&(t(e),e.traverseAncestors(t))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(t){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||t)&&(this.matrixWorldAutoUpdate===!0&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)),this.matrixWorldNeedsUpdate=!1,t=!0);const e=this.children;for(let s=0,i=e.length;s<i;s++)e[s].updateMatrixWorld(t)}updateWorldMatrix(t,e){const s=this.parent;if(t===!0&&s!==null&&s.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.matrixWorldAutoUpdate===!0&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)),e===!0){const i=this.children;for(let o=0,r=i.length;o<r;o++)i[o].updateWorldMatrix(!1,!0)}}toJSON(t){const e=t===void 0||typeof t=="string",s={};e&&(t={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},s.metadata={version:4.7,type:"Object",generator:"Object3D.toJSON"});const i={};i.uuid=this.uuid,i.type=this.type,this.name!==""&&(i.name=this.name),this.castShadow===!0&&(i.castShadow=!0),this.receiveShadow===!0&&(i.receiveShadow=!0),this.visible===!1&&(i.visible=!1),this.frustumCulled===!1&&(i.frustumCulled=!1),this.renderOrder!==0&&(i.renderOrder=this.renderOrder),Object.keys(this.userData).length>0&&(i.userData=this.userData),i.layers=this.layers.mask,i.matrix=this.matrix.toArray(),i.up=this.up.toArray(),this.matrixAutoUpdate===!1&&(i.matrixAutoUpdate=!1),this.isInstancedMesh&&(i.type="InstancedMesh",i.count=this.count,i.instanceMatrix=this.instanceMatrix.toJSON(),this.instanceColor!==null&&(i.instanceColor=this.instanceColor.toJSON())),this.isBatchedMesh&&(i.type="BatchedMesh",i.perObjectFrustumCulled=this.perObjectFrustumCulled,i.sortObjects=this.sortObjects,i.drawRanges=this._drawRanges,i.reservedRanges=this._reservedRanges,i.geometryInfo=this._geometryInfo.map(a=>({...a,boundingBox:a.boundingBox?a.boundingBox.toJSON():void 0,boundingSphere:a.boundingSphere?a.boundingSphere.toJSON():void 0})),i.instanceInfo=this._instanceInfo.map(a=>({...a})),i.availableInstanceIds=this._availableInstanceIds.slice(),i.availableGeometryIds=this._availableGeometryIds.slice(),i.nextIndexStart=this._nextIndexStart,i.nextVertexStart=this._nextVertexStart,i.geometryCount=this._geometryCount,i.maxInstanceCount=this._maxInstanceCount,i.maxVertexCount=this._maxVertexCount,i.maxIndexCount=this._maxIndexCount,i.geometryInitialized=this._geometryInitialized,i.matricesTexture=this._matricesTexture.toJSON(t),i.indirectTexture=this._indirectTexture.toJSON(t),this._colorsTexture!==null&&(i.colorsTexture=this._colorsTexture.toJSON(t)),this.boundingSphere!==null&&(i.boundingSphere=this.boundingSphere.toJSON()),this.boundingBox!==null&&(i.boundingBox=this.boundingBox.toJSON()));function o(a,c){return a[c.uuid]===void 0&&(a[c.uuid]=c.toJSON(t)),c.uuid}if(this.isScene)this.background&&(this.background.isColor?i.background=this.background.toJSON():this.background.isTexture&&(i.background=this.background.toJSON(t).uuid)),this.environment&&this.environment.isTexture&&this.environment.isRenderTargetTexture!==!0&&(i.environment=this.environment.toJSON(t).uuid);else if(this.isMesh||this.isLine||this.isPoints){i.geometry=o(t.geometries,this.geometry);const a=this.geometry.parameters;if(a!==void 0&&a.shapes!==void 0){const c=a.shapes;if(Array.isArray(c))for(let u=0,l=c.length;u<l;u++){const d=c[u];o(t.shapes,d)}else o(t.shapes,c)}}if(this.isSkinnedMesh&&(i.bindMode=this.bindMode,i.bindMatrix=this.bindMatrix.toArray(),this.skeleton!==void 0&&(o(t.skeletons,this.skeleton),i.skeleton=this.skeleton.uuid)),this.material!==void 0)if(Array.isArray(this.material)){const a=[];for(let c=0,u=this.material.length;c<u;c++)a.push(o(t.materials,this.material[c]));i.material=a}else i.material=o(t.materials,this.material);if(this.children.length>0){i.children=[];for(let a=0;a<this.children.length;a++)i.children.push(this.children[a].toJSON(t).object)}if(this.animations.length>0){i.animations=[];for(let a=0;a<this.animations.length;a++){const c=this.animations[a];i.animations.push(o(t.animations,c))}}if(e){const a=r(t.geometries),c=r(t.materials),u=r(t.textures),l=r(t.images),d=r(t.shapes),h=r(t.skeletons),f=r(t.animations),p=r(t.nodes);a.length>0&&(s.geometries=a),c.length>0&&(s.materials=c),u.length>0&&(s.textures=u),l.length>0&&(s.images=l),d.length>0&&(s.shapes=d),h.length>0&&(s.skeletons=h),f.length>0&&(s.animations=f),p.length>0&&(s.nodes=p)}return s.object=i,s;function r(a){const c=[];for(const u in a){const l=a[u];delete l.metadata,c.push(l)}return c}}clone(t){return new this.constructor().copy(this,t)}copy(t,e=!0){if(this.name=t.name,this.up.copy(t.up),this.position.copy(t.position),this.rotation.order=t.rotation.order,this.quaternion.copy(t.quaternion),this.scale.copy(t.scale),this.matrix.copy(t.matrix),this.matrixWorld.copy(t.matrixWorld),this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrixWorldAutoUpdate=t.matrixWorldAutoUpdate,this.matrixWorldNeedsUpdate=t.matrixWorldNeedsUpdate,this.layers.mask=t.layers.mask,this.visible=t.visible,this.castShadow=t.castShadow,this.receiveShadow=t.receiveShadow,this.frustumCulled=t.frustumCulled,this.renderOrder=t.renderOrder,this.animations=t.animations.slice(),this.userData=JSON.parse(JSON.stringify(t.userData)),e===!0)for(let s=0;s<t.children.length;s++){const i=t.children[s];this.add(i.clone())}return this}}Ln.DEFAULT_UP=new st(0,1,0);Ln.DEFAULT_MATRIX_AUTO_UPDATE=!0;Ln.DEFAULT_MATRIX_WORLD_AUTO_UPDATE=!0;const ui=new st,Ki=new st,kp=new st,Yi=new st,la=new st,da=new st,$y=new st,Dp=new st,$p=new st,Fp=new st,Pp=new yn,Lp=new yn,Op=new yn;class pi{constructor(t=new st,e=new st,s=new st){this.a=t,this.b=e,this.c=s}static getNormal(t,e,s,i){i.subVectors(s,e),ui.subVectors(t,e),i.cross(ui);const o=i.lengthSq();return o>0?i.multiplyScalar(1/Math.sqrt(o)):i.set(0,0,0)}static getBarycoord(t,e,s,i,o){ui.subVectors(i,e),Ki.subVectors(s,e),kp.subVectors(t,e);const r=ui.dot(ui),a=ui.dot(Ki),c=ui.dot(kp),u=Ki.dot(Ki),l=Ki.dot(kp),d=r*u-a*a;if(d===0)return o.set(0,0,0),null;const h=1/d,f=(u*c-a*l)*h,p=(r*l-a*c)*h;return o.set(1-f-p,p,f)}static containsPoint(t,e,s,i){return this.getBarycoord(t,e,s,i,Yi)===null?!1:Yi.x>=0&&Yi.y>=0&&Yi.x+Yi.y<=1}static getInterpolation(t,e,s,i,o,r,a,c){return this.getBarycoord(t,e,s,i,Yi)===null?(c.x=0,c.y=0,"z"in c&&(c.z=0),"w"in c&&(c.w=0),null):(c.setScalar(0),c.addScaledVector(o,Yi.x),c.addScaledVector(r,Yi.y),c.addScaledVector(a,Yi.z),c)}static getInterpolatedAttribute(t,e,s,i,o,r){return Pp.setScalar(0),Lp.setScalar(0),Op.setScalar(0),Pp.fromBufferAttribute(t,e),Lp.fromBufferAttribute(t,s),Op.fromBufferAttribute(t,i),r.setScalar(0),r.addScaledVector(Pp,o.x),r.addScaledVector(Lp,o.y),r.addScaledVector(Op,o.z),r}static isFrontFacing(t,e,s,i){return ui.subVectors(s,e),Ki.subVectors(t,e),ui.cross(Ki).dot(i)<0}set(t,e,s){return this.a.copy(t),this.b.copy(e),this.c.copy(s),this}setFromPointsAndIndices(t,e,s,i){return this.a.copy(t[e]),this.b.copy(t[s]),this.c.copy(t[i]),this}setFromAttributeAndIndices(t,e,s,i){return this.a.fromBufferAttribute(t,e),this.b.fromBufferAttribute(t,s),this.c.fromBufferAttribute(t,i),this}clone(){return new this.constructor().copy(this)}copy(t){return this.a.copy(t.a),this.b.copy(t.b),this.c.copy(t.c),this}getArea(){return ui.subVectors(this.c,this.b),Ki.subVectors(this.a,this.b),ui.cross(Ki).length()*.5}getMidpoint(t){return t.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(t){return pi.getNormal(this.a,this.b,this.c,t)}getPlane(t){return t.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(t,e){return pi.getBarycoord(t,this.a,this.b,this.c,e)}getInterpolation(t,e,s,i,o){return pi.getInterpolation(t,this.a,this.b,this.c,e,s,i,o)}containsPoint(t){return pi.containsPoint(t,this.a,this.b,this.c)}isFrontFacing(t){return pi.isFrontFacing(this.a,this.b,this.c,t)}intersectsBox(t){return t.intersectsTriangle(this)}closestPointToPoint(t,e){const s=this.a,i=this.b,o=this.c;let r,a;la.subVectors(i,s),da.subVectors(o,s),Dp.subVectors(t,s);const c=la.dot(Dp),u=da.dot(Dp);if(c<=0&&u<=0)return e.copy(s);$p.subVectors(t,i);const l=la.dot($p),d=da.dot($p);if(l>=0&&d<=l)return e.copy(i);const h=c*d-l*u;if(h<=0&&c>=0&&l<=0)return r=c/(c-l),e.copy(s).addScaledVector(la,r);Fp.subVectors(t,o);const f=la.dot(Fp),p=da.dot(Fp);if(p>=0&&f<=p)return e.copy(o);const x=f*u-c*p;if(x<=0&&u>=0&&p<=0)return a=u/(u-p),e.copy(s).addScaledVector(da,a);const g=l*p-f*d;if(g<=0&&d-l>=0&&f-p>=0)return $y.subVectors(o,i),a=(d-l)/(d-l+(f-p)),e.copy(i).addScaledVector($y,a);const m=1/(g+x+h);return r=x*m,a=h*m,e.copy(s).addScaledVector(la,r).addScaledVector(da,a)}equals(t){return t.a.equals(this.a)&&t.b.equals(this.b)&&t.c.equals(this.c)}}const Rv={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},vo={h:0,s:0,l:0},Zl={h:0,s:0,l:0};function Up(n,t,e){return e<0&&(e+=1),e>1&&(e-=1),e<1/6?n+(t-n)*6*e:e<1/2?t:e<2/3?n+(t-n)*6*(2/3-e):n}class be{constructor(t,e,s){return this.isColor=!0,this.r=1,this.g=1,this.b=1,this.set(t,e,s)}set(t,e,s){if(e===void 0&&s===void 0){const i=t;i&&i.isColor?this.copy(i):typeof i=="number"?this.setHex(i):typeof i=="string"&&this.setStyle(i)}else this.setRGB(t,e,s);return this}setScalar(t){return this.r=t,this.g=t,this.b=t,this}setHex(t,e=Hs){return t=Math.floor(t),this.r=(t>>16&255)/255,this.g=(t>>8&255)/255,this.b=(t&255)/255,$e.colorSpaceToWorking(this,e),this}setRGB(t,e,s,i=$e.workingColorSpace){return this.r=t,this.g=e,this.b=s,$e.colorSpaceToWorking(this,i),this}setHSL(t,e,s,i=$e.workingColorSpace){if(t=Y3(t,1),e=Se(e,0,1),s=Se(s,0,1),e===0)this.r=this.g=this.b=s;else{const o=s<=.5?s*(1+e):s+e-s*e,r=2*s-o;this.r=Up(r,o,t+1/3),this.g=Up(r,o,t),this.b=Up(r,o,t-1/3)}return $e.colorSpaceToWorking(this,i),this}setStyle(t,e=Hs){function s(o){o!==void 0&&parseFloat(o)<1&&console.warn("THREE.Color: Alpha component of "+t+" will be ignored.")}let i;if(i=/^(\w+)\(([^\)]*)\)/.exec(t)){let o;const r=i[1],a=i[2];switch(r){case"rgb":case"rgba":if(o=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return s(o[4]),this.setRGB(Math.min(255,parseInt(o[1],10))/255,Math.min(255,parseInt(o[2],10))/255,Math.min(255,parseInt(o[3],10))/255,e);if(o=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return s(o[4]),this.setRGB(Math.min(100,parseInt(o[1],10))/100,Math.min(100,parseInt(o[2],10))/100,Math.min(100,parseInt(o[3],10))/100,e);break;case"hsl":case"hsla":if(o=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return s(o[4]),this.setHSL(parseFloat(o[1])/360,parseFloat(o[2])/100,parseFloat(o[3])/100,e);break;default:console.warn("THREE.Color: Unknown color model "+t)}}else if(i=/^\#([A-Fa-f\d]+)$/.exec(t)){const o=i[1],r=o.length;if(r===3)return this.setRGB(parseInt(o.charAt(0),16)/15,parseInt(o.charAt(1),16)/15,parseInt(o.charAt(2),16)/15,e);if(r===6)return this.setHex(parseInt(o,16),e);console.warn("THREE.Color: Invalid hex color "+t)}else if(t&&t.length>0)return this.setColorName(t,e);return this}setColorName(t,e=Hs){const s=Rv[t.toLowerCase()];return s!==void 0?this.setHex(s,e):console.warn("THREE.Color: Unknown color "+t),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(t){return this.r=t.r,this.g=t.g,this.b=t.b,this}copySRGBToLinear(t){return this.r=oo(t.r),this.g=oo(t.g),this.b=oo(t.b),this}copyLinearToSRGB(t){return this.r=ka(t.r),this.g=ka(t.g),this.b=ka(t.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(t=Hs){return $e.workingToColorSpace(ts.copy(this),t),Math.round(Se(ts.r*255,0,255))*65536+Math.round(Se(ts.g*255,0,255))*256+Math.round(Se(ts.b*255,0,255))}getHexString(t=Hs){return("000000"+this.getHex(t).toString(16)).slice(-6)}getHSL(t,e=$e.workingColorSpace){$e.workingToColorSpace(ts.copy(this),e);const s=ts.r,i=ts.g,o=ts.b,r=Math.max(s,i,o),a=Math.min(s,i,o);let c,u;const l=(a+r)/2;if(a===r)c=0,u=0;else{const d=r-a;switch(u=l<=.5?d/(r+a):d/(2-r-a),r){case s:c=(i-o)/d+(i<o?6:0);break;case i:c=(o-s)/d+2;break;case o:c=(s-i)/d+4;break}c/=6}return t.h=c,t.s=u,t.l=l,t}getRGB(t,e=$e.workingColorSpace){return $e.workingToColorSpace(ts.copy(this),e),t.r=ts.r,t.g=ts.g,t.b=ts.b,t}getStyle(t=Hs){$e.workingToColorSpace(ts.copy(this),t);const e=ts.r,s=ts.g,i=ts.b;return t!==Hs?`color(${t} ${e.toFixed(3)} ${s.toFixed(3)} ${i.toFixed(3)})`:`rgb(${Math.round(e*255)},${Math.round(s*255)},${Math.round(i*255)})`}offsetHSL(t,e,s){return this.getHSL(vo),this.setHSL(vo.h+t,vo.s+e,vo.l+s)}add(t){return this.r+=t.r,this.g+=t.g,this.b+=t.b,this}addColors(t,e){return this.r=t.r+e.r,this.g=t.g+e.g,this.b=t.b+e.b,this}addScalar(t){return this.r+=t,this.g+=t,this.b+=t,this}sub(t){return this.r=Math.max(0,this.r-t.r),this.g=Math.max(0,this.g-t.g),this.b=Math.max(0,this.b-t.b),this}multiply(t){return this.r*=t.r,this.g*=t.g,this.b*=t.b,this}multiplyScalar(t){return this.r*=t,this.g*=t,this.b*=t,this}lerp(t,e){return this.r+=(t.r-this.r)*e,this.g+=(t.g-this.g)*e,this.b+=(t.b-this.b)*e,this}lerpColors(t,e,s){return this.r=t.r+(e.r-t.r)*s,this.g=t.g+(e.g-t.g)*s,this.b=t.b+(e.b-t.b)*s,this}lerpHSL(t,e){this.getHSL(vo),t.getHSL(Zl);const s=vp(vo.h,Zl.h,e),i=vp(vo.s,Zl.s,e),o=vp(vo.l,Zl.l,e);return this.setHSL(s,i,o),this}setFromVector3(t){return this.r=t.x,this.g=t.y,this.b=t.z,this}applyMatrix3(t){const e=this.r,s=this.g,i=this.b,o=t.elements;return this.r=o[0]*e+o[3]*s+o[6]*i,this.g=o[1]*e+o[4]*s+o[7]*i,this.b=o[2]*e+o[5]*s+o[8]*i,this}equals(t){return t.r===this.r&&t.g===this.g&&t.b===this.b}fromArray(t,e=0){return this.r=t[e],this.g=t[e+1],this.b=t[e+2],this}toArray(t=[],e=0){return t[e]=this.r,t[e+1]=this.g,t[e+2]=this.b,t}fromBufferAttribute(t,e){return this.r=t.getX(e),this.g=t.getY(e),this.b=t.getZ(e),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}const ts=new be;be.NAMES=Rv;let mR=0;class bu extends Vr{constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:mR++}),this.uuid=xu(),this.name="",this.type="Material",this.blending=Aa,this.side=Po,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.alphaHash=!1,this.blendSrc=ym,this.blendDst=bm,this.blendEquation=dr,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.blendColor=new be(0,0,0),this.blendAlpha=0,this.depthFunc=Ua,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=vy,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=na,this.stencilZFail=na,this.stencilZPass=na,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.forceSinglePass=!1,this.allowOverride=!0,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(t){this._alphaTest>0!=t>0&&this.version++,this._alphaTest=t}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(t){if(t!==void 0)for(const e in t){const s=t[e];if(s===void 0){console.warn(`THREE.Material: parameter '${e}' has value of undefined.`);continue}const i=this[e];if(i===void 0){console.warn(`THREE.Material: '${e}' is not a property of THREE.${this.type}.`);continue}i&&i.isColor?i.set(s):i&&i.isVector3&&s&&s.isVector3?i.copy(s):this[e]=s}}toJSON(t){const e=t===void 0||typeof t=="string";e&&(t={textures:{},images:{}});const s={metadata:{version:4.7,type:"Material",generator:"Material.toJSON"}};s.uuid=this.uuid,s.type=this.type,this.name!==""&&(s.name=this.name),this.color&&this.color.isColor&&(s.color=this.color.getHex()),this.roughness!==void 0&&(s.roughness=this.roughness),this.metalness!==void 0&&(s.metalness=this.metalness),this.sheen!==void 0&&(s.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(s.sheenColor=this.sheenColor.getHex()),this.sheenRoughness!==void 0&&(s.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(s.emissive=this.emissive.getHex()),this.emissiveIntensity!==void 0&&this.emissiveIntensity!==1&&(s.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(s.specular=this.specular.getHex()),this.specularIntensity!==void 0&&(s.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(s.specularColor=this.specularColor.getHex()),this.shininess!==void 0&&(s.shininess=this.shininess),this.clearcoat!==void 0&&(s.clearcoat=this.clearcoat),this.clearcoatRoughness!==void 0&&(s.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(s.clearcoatMap=this.clearcoatMap.toJSON(t).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(s.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(t).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(s.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(t).uuid,s.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.dispersion!==void 0&&(s.dispersion=this.dispersion),this.iridescence!==void 0&&(s.iridescence=this.iridescence),this.iridescenceIOR!==void 0&&(s.iridescenceIOR=this.iridescenceIOR),this.iridescenceThicknessRange!==void 0&&(s.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(s.iridescenceMap=this.iridescenceMap.toJSON(t).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(s.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(t).uuid),this.anisotropy!==void 0&&(s.anisotropy=this.anisotropy),this.anisotropyRotation!==void 0&&(s.anisotropyRotation=this.anisotropyRotation),this.anisotropyMap&&this.anisotropyMap.isTexture&&(s.anisotropyMap=this.anisotropyMap.toJSON(t).uuid),this.map&&this.map.isTexture&&(s.map=this.map.toJSON(t).uuid),this.matcap&&this.matcap.isTexture&&(s.matcap=this.matcap.toJSON(t).uuid),this.alphaMap&&this.alphaMap.isTexture&&(s.alphaMap=this.alphaMap.toJSON(t).uuid),this.lightMap&&this.lightMap.isTexture&&(s.lightMap=this.lightMap.toJSON(t).uuid,s.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(s.aoMap=this.aoMap.toJSON(t).uuid,s.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(s.bumpMap=this.bumpMap.toJSON(t).uuid,s.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(s.normalMap=this.normalMap.toJSON(t).uuid,s.normalMapType=this.normalMapType,s.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(s.displacementMap=this.displacementMap.toJSON(t).uuid,s.displacementScale=this.displacementScale,s.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(s.roughnessMap=this.roughnessMap.toJSON(t).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(s.metalnessMap=this.metalnessMap.toJSON(t).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(s.emissiveMap=this.emissiveMap.toJSON(t).uuid),this.specularMap&&this.specularMap.isTexture&&(s.specularMap=this.specularMap.toJSON(t).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(s.specularIntensityMap=this.specularIntensityMap.toJSON(t).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(s.specularColorMap=this.specularColorMap.toJSON(t).uuid),this.envMap&&this.envMap.isTexture&&(s.envMap=this.envMap.toJSON(t).uuid,this.combine!==void 0&&(s.combine=this.combine)),this.envMapRotation!==void 0&&(s.envMapRotation=this.envMapRotation.toArray()),this.envMapIntensity!==void 0&&(s.envMapIntensity=this.envMapIntensity),this.reflectivity!==void 0&&(s.reflectivity=this.reflectivity),this.refractionRatio!==void 0&&(s.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(s.gradientMap=this.gradientMap.toJSON(t).uuid),this.transmission!==void 0&&(s.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(s.transmissionMap=this.transmissionMap.toJSON(t).uuid),this.thickness!==void 0&&(s.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(s.thicknessMap=this.thicknessMap.toJSON(t).uuid),this.attenuationDistance!==void 0&&this.attenuationDistance!==1/0&&(s.attenuationDistance=this.attenuationDistance),this.attenuationColor!==void 0&&(s.attenuationColor=this.attenuationColor.getHex()),this.size!==void 0&&(s.size=this.size),this.shadowSide!==null&&(s.shadowSide=this.shadowSide),this.sizeAttenuation!==void 0&&(s.sizeAttenuation=this.sizeAttenuation),this.blending!==Aa&&(s.blending=this.blending),this.side!==Po&&(s.side=this.side),this.vertexColors===!0&&(s.vertexColors=!0),this.opacity<1&&(s.opacity=this.opacity),this.transparent===!0&&(s.transparent=!0),this.blendSrc!==ym&&(s.blendSrc=this.blendSrc),this.blendDst!==bm&&(s.blendDst=this.blendDst),this.blendEquation!==dr&&(s.blendEquation=this.blendEquation),this.blendSrcAlpha!==null&&(s.blendSrcAlpha=this.blendSrcAlpha),this.blendDstAlpha!==null&&(s.blendDstAlpha=this.blendDstAlpha),this.blendEquationAlpha!==null&&(s.blendEquationAlpha=this.blendEquationAlpha),this.blendColor&&this.blendColor.isColor&&(s.blendColor=this.blendColor.getHex()),this.blendAlpha!==0&&(s.blendAlpha=this.blendAlpha),this.depthFunc!==Ua&&(s.depthFunc=this.depthFunc),this.depthTest===!1&&(s.depthTest=this.depthTest),this.depthWrite===!1&&(s.depthWrite=this.depthWrite),this.colorWrite===!1&&(s.colorWrite=this.colorWrite),this.stencilWriteMask!==255&&(s.stencilWriteMask=this.stencilWriteMask),this.stencilFunc!==vy&&(s.stencilFunc=this.stencilFunc),this.stencilRef!==0&&(s.stencilRef=this.stencilRef),this.stencilFuncMask!==255&&(s.stencilFuncMask=this.stencilFuncMask),this.stencilFail!==na&&(s.stencilFail=this.stencilFail),this.stencilZFail!==na&&(s.stencilZFail=this.stencilZFail),this.stencilZPass!==na&&(s.stencilZPass=this.stencilZPass),this.stencilWrite===!0&&(s.stencilWrite=this.stencilWrite),this.rotation!==void 0&&this.rotation!==0&&(s.rotation=this.rotation),this.polygonOffset===!0&&(s.polygonOffset=!0),this.polygonOffsetFactor!==0&&(s.polygonOffsetFactor=this.polygonOffsetFactor),this.polygonOffsetUnits!==0&&(s.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth!==void 0&&this.linewidth!==1&&(s.linewidth=this.linewidth),this.dashSize!==void 0&&(s.dashSize=this.dashSize),this.gapSize!==void 0&&(s.gapSize=this.gapSize),this.scale!==void 0&&(s.scale=this.scale),this.dithering===!0&&(s.dithering=!0),this.alphaTest>0&&(s.alphaTest=this.alphaTest),this.alphaHash===!0&&(s.alphaHash=!0),this.alphaToCoverage===!0&&(s.alphaToCoverage=!0),this.premultipliedAlpha===!0&&(s.premultipliedAlpha=!0),this.forceSinglePass===!0&&(s.forceSinglePass=!0),this.wireframe===!0&&(s.wireframe=!0),this.wireframeLinewidth>1&&(s.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(s.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(s.wireframeLinejoin=this.wireframeLinejoin),this.flatShading===!0&&(s.flatShading=!0),this.visible===!1&&(s.visible=!1),this.toneMapped===!1&&(s.toneMapped=!1),this.fog===!1&&(s.fog=!1),Object.keys(this.userData).length>0&&(s.userData=this.userData);function i(o){const r=[];for(const a in o){const c=o[a];delete c.metadata,r.push(c)}return r}if(e){const o=i(t.textures),r=i(t.images);o.length>0&&(s.textures=o),r.length>0&&(s.images=r)}return s}clone(){return new this.constructor().copy(this)}copy(t){this.name=t.name,this.blending=t.blending,this.side=t.side,this.vertexColors=t.vertexColors,this.opacity=t.opacity,this.transparent=t.transparent,this.blendSrc=t.blendSrc,this.blendDst=t.blendDst,this.blendEquation=t.blendEquation,this.blendSrcAlpha=t.blendSrcAlpha,this.blendDstAlpha=t.blendDstAlpha,this.blendEquationAlpha=t.blendEquationAlpha,this.blendColor.copy(t.blendColor),this.blendAlpha=t.blendAlpha,this.depthFunc=t.depthFunc,this.depthTest=t.depthTest,this.depthWrite=t.depthWrite,this.stencilWriteMask=t.stencilWriteMask,this.stencilFunc=t.stencilFunc,this.stencilRef=t.stencilRef,this.stencilFuncMask=t.stencilFuncMask,this.stencilFail=t.stencilFail,this.stencilZFail=t.stencilZFail,this.stencilZPass=t.stencilZPass,this.stencilWrite=t.stencilWrite;const e=t.clippingPlanes;let s=null;if(e!==null){const i=e.length;s=new Array(i);for(let o=0;o!==i;++o)s[o]=e[o].clone()}return this.clippingPlanes=s,this.clipIntersection=t.clipIntersection,this.clipShadows=t.clipShadows,this.shadowSide=t.shadowSide,this.colorWrite=t.colorWrite,this.precision=t.precision,this.polygonOffset=t.polygonOffset,this.polygonOffsetFactor=t.polygonOffsetFactor,this.polygonOffsetUnits=t.polygonOffsetUnits,this.dithering=t.dithering,this.alphaTest=t.alphaTest,this.alphaHash=t.alphaHash,this.alphaToCoverage=t.alphaToCoverage,this.premultipliedAlpha=t.premultipliedAlpha,this.forceSinglePass=t.forceSinglePass,this.visible=t.visible,this.toneMapped=t.toneMapped,this.userData=JSON.parse(JSON.stringify(t.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(t){t===!0&&this.version++}}class Mv extends bu{constructor(t){super(),this.isMeshBasicMaterial=!0,this.type="MeshBasicMaterial",this.color=new be(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new Ui,this.combine=Q0,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.envMapRotation.copy(t.envMapRotation),this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.fog=t.fog,this}}const vn=new st,Jl=new xe;let gR=0;class Js{constructor(t,e,s=!1){if(Array.isArray(t))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,Object.defineProperty(this,"id",{value:gR++}),this.name="",this.array=t,this.itemSize=e,this.count=t!==void 0?t.length/e:0,this.normalized=s,this.usage=s0,this.updateRanges=[],this.gpuType=Di,this.version=0}onUploadCallback(){}set needsUpdate(t){t===!0&&this.version++}setUsage(t){return this.usage=t,this}addUpdateRange(t,e){this.updateRanges.push({start:t,count:e})}clearUpdateRanges(){this.updateRanges.length=0}copy(t){return this.name=t.name,this.array=new t.array.constructor(t.array),this.itemSize=t.itemSize,this.count=t.count,this.normalized=t.normalized,this.usage=t.usage,this.gpuType=t.gpuType,this}copyAt(t,e,s){t*=this.itemSize,s*=e.itemSize;for(let i=0,o=this.itemSize;i<o;i++)this.array[t+i]=e.array[s+i];return this}copyArray(t){return this.array.set(t),this}applyMatrix3(t){if(this.itemSize===2)for(let e=0,s=this.count;e<s;e++)Jl.fromBufferAttribute(this,e),Jl.applyMatrix3(t),this.setXY(e,Jl.x,Jl.y);else if(this.itemSize===3)for(let e=0,s=this.count;e<s;e++)vn.fromBufferAttribute(this,e),vn.applyMatrix3(t),this.setXYZ(e,vn.x,vn.y,vn.z);return this}applyMatrix4(t){for(let e=0,s=this.count;e<s;e++)vn.fromBufferAttribute(this,e),vn.applyMatrix4(t),this.setXYZ(e,vn.x,vn.y,vn.z);return this}applyNormalMatrix(t){for(let e=0,s=this.count;e<s;e++)vn.fromBufferAttribute(this,e),vn.applyNormalMatrix(t),this.setXYZ(e,vn.x,vn.y,vn.z);return this}transformDirection(t){for(let e=0,s=this.count;e<s;e++)vn.fromBufferAttribute(this,e),vn.transformDirection(t),this.setXYZ(e,vn.x,vn.y,vn.z);return this}set(t,e=0){return this.array.set(t,e),this}getComponent(t,e){let s=this.array[t*this.itemSize+e];return this.normalized&&(s=Tc(s,this.array)),s}setComponent(t,e,s){return this.normalized&&(s=bs(s,this.array)),this.array[t*this.itemSize+e]=s,this}getX(t){let e=this.array[t*this.itemSize];return this.normalized&&(e=Tc(e,this.array)),e}setX(t,e){return this.normalized&&(e=bs(e,this.array)),this.array[t*this.itemSize]=e,this}getY(t){let e=this.array[t*this.itemSize+1];return this.normalized&&(e=Tc(e,this.array)),e}setY(t,e){return this.normalized&&(e=bs(e,this.array)),this.array[t*this.itemSize+1]=e,this}getZ(t){let e=this.array[t*this.itemSize+2];return this.normalized&&(e=Tc(e,this.array)),e}setZ(t,e){return this.normalized&&(e=bs(e,this.array)),this.array[t*this.itemSize+2]=e,this}getW(t){let e=this.array[t*this.itemSize+3];return this.normalized&&(e=Tc(e,this.array)),e}setW(t,e){return this.normalized&&(e=bs(e,this.array)),this.array[t*this.itemSize+3]=e,this}setXY(t,e,s){return t*=this.itemSize,this.normalized&&(e=bs(e,this.array),s=bs(s,this.array)),this.array[t+0]=e,this.array[t+1]=s,this}setXYZ(t,e,s,i){return t*=this.itemSize,this.normalized&&(e=bs(e,this.array),s=bs(s,this.array),i=bs(i,this.array)),this.array[t+0]=e,this.array[t+1]=s,this.array[t+2]=i,this}setXYZW(t,e,s,i,o){return t*=this.itemSize,this.normalized&&(e=bs(e,this.array),s=bs(s,this.array),i=bs(i,this.array),o=bs(o,this.array)),this.array[t+0]=e,this.array[t+1]=s,this.array[t+2]=i,this.array[t+3]=o,this}onUpload(t){return this.onUploadCallback=t,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const t={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return this.name!==""&&(t.name=this.name),this.usage!==s0&&(t.usage=this.usage),t}}class Av extends Js{constructor(t,e,s){super(new Uint16Array(t),e,s)}}class Nv extends Js{constructor(t,e,s){super(new Uint32Array(t),e,s)}}class wr extends Js{constructor(t,e,s){super(new Float32Array(t),e,s)}}let xR=0;const Bs=new cn,Bp=new Ln,ha=new st,As=new Wr,Mc=new Wr,Fn=new st;class Wo extends Vr{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:xR++}),this.uuid=xu(),this.name="",this.type="BufferGeometry",this.index=null,this.indirect=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(t){return Array.isArray(t)?this.index=new(Ev(t)?Nv:Av)(t,1):this.index=t,this}setIndirect(t){return this.indirect=t,this}getIndirect(){return this.indirect}getAttribute(t){return this.attributes[t]}setAttribute(t,e){return this.attributes[t]=e,this}deleteAttribute(t){return delete this.attributes[t],this}hasAttribute(t){return this.attributes[t]!==void 0}addGroup(t,e,s=0){this.groups.push({start:t,count:e,materialIndex:s})}clearGroups(){this.groups=[]}setDrawRange(t,e){this.drawRange.start=t,this.drawRange.count=e}applyMatrix4(t){const e=this.attributes.position;e!==void 0&&(e.applyMatrix4(t),e.needsUpdate=!0);const s=this.attributes.normal;if(s!==void 0){const o=new ge().getNormalMatrix(t);s.applyNormalMatrix(o),s.needsUpdate=!0}const i=this.attributes.tangent;return i!==void 0&&(i.transformDirection(t),i.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}applyQuaternion(t){return Bs.makeRotationFromQuaternion(t),this.applyMatrix4(Bs),this}rotateX(t){return Bs.makeRotationX(t),this.applyMatrix4(Bs),this}rotateY(t){return Bs.makeRotationY(t),this.applyMatrix4(Bs),this}rotateZ(t){return Bs.makeRotationZ(t),this.applyMatrix4(Bs),this}translate(t,e,s){return Bs.makeTranslation(t,e,s),this.applyMatrix4(Bs),this}scale(t,e,s){return Bs.makeScale(t,e,s),this.applyMatrix4(Bs),this}lookAt(t){return Bp.lookAt(t),Bp.updateMatrix(),this.applyMatrix4(Bp.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(ha).negate(),this.translate(ha.x,ha.y,ha.z),this}setFromPoints(t){const e=this.getAttribute("position");if(e===void 0){const s=[];for(let i=0,o=t.length;i<o;i++){const r=t[i];s.push(r.x,r.y,r.z||0)}this.setAttribute("position",new wr(s,3))}else{const s=Math.min(t.length,e.count);for(let i=0;i<s;i++){const o=t[i];e.setXYZ(i,o.x,o.y,o.z||0)}t.length>e.count&&console.warn("THREE.BufferGeometry: Buffer size too small for points data. Use .dispose() and create a new geometry."),e.needsUpdate=!0}return this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new Wr);const t=this.attributes.position,e=this.morphAttributes.position;if(t&&t.isGLBufferAttribute){console.error("THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box.",this),this.boundingBox.set(new st(-1/0,-1/0,-1/0),new st(1/0,1/0,1/0));return}if(t!==void 0){if(this.boundingBox.setFromBufferAttribute(t),e)for(let s=0,i=e.length;s<i;s++){const o=e[s];As.setFromBufferAttribute(o),this.morphTargetsRelative?(Fn.addVectors(this.boundingBox.min,As.min),this.boundingBox.expandByPoint(Fn),Fn.addVectors(this.boundingBox.max,As.max),this.boundingBox.expandByPoint(Fn)):(this.boundingBox.expandByPoint(As.min),this.boundingBox.expandByPoint(As.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new yu);const t=this.attributes.position,e=this.morphAttributes.position;if(t&&t.isGLBufferAttribute){console.error("THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere.",this),this.boundingSphere.set(new st,1/0);return}if(t){const s=this.boundingSphere.center;if(As.setFromBufferAttribute(t),e)for(let o=0,r=e.length;o<r;o++){const a=e[o];Mc.setFromBufferAttribute(a),this.morphTargetsRelative?(Fn.addVectors(As.min,Mc.min),As.expandByPoint(Fn),Fn.addVectors(As.max,Mc.max),As.expandByPoint(Fn)):(As.expandByPoint(Mc.min),As.expandByPoint(Mc.max))}As.getCenter(s);let i=0;for(let o=0,r=t.count;o<r;o++)Fn.fromBufferAttribute(t,o),i=Math.max(i,s.distanceToSquared(Fn));if(e)for(let o=0,r=e.length;o<r;o++){const a=e[o],c=this.morphTargetsRelative;for(let u=0,l=a.count;u<l;u++)Fn.fromBufferAttribute(a,u),c&&(ha.fromBufferAttribute(t,u),Fn.add(ha)),i=Math.max(i,s.distanceToSquared(Fn))}this.boundingSphere.radius=Math.sqrt(i),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const t=this.index,e=this.attributes;if(t===null||e.position===void 0||e.normal===void 0||e.uv===void 0){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}const s=e.position,i=e.normal,o=e.uv;this.hasAttribute("tangent")===!1&&this.setAttribute("tangent",new Js(new Float32Array(4*s.count),4));const r=this.getAttribute("tangent"),a=[],c=[];for(let I=0;I<s.count;I++)a[I]=new st,c[I]=new st;const u=new st,l=new st,d=new st,h=new xe,f=new xe,p=new xe,x=new st,g=new st;function m(I,S,v){u.fromBufferAttribute(s,I),l.fromBufferAttribute(s,S),d.fromBufferAttribute(s,v),h.fromBufferAttribute(o,I),f.fromBufferAttribute(o,S),p.fromBufferAttribute(o,v),l.sub(u),d.sub(u),f.sub(h),p.sub(h);const C=1/(f.x*p.y-p.x*f.y);isFinite(C)&&(x.copy(l).multiplyScalar(p.y).addScaledVector(d,-f.y).multiplyScalar(C),g.copy(d).multiplyScalar(f.x).addScaledVector(l,-p.x).multiplyScalar(C),a[I].add(x),a[S].add(x),a[v].add(x),c[I].add(g),c[S].add(g),c[v].add(g))}let y=this.groups;y.length===0&&(y=[{start:0,count:t.count}]);for(let I=0,S=y.length;I<S;++I){const v=y[I],C=v.start,M=v.count;for(let N=C,D=C+M;N<D;N+=3)m(t.getX(N+0),t.getX(N+1),t.getX(N+2))}const w=new st,b=new st,_=new st,T=new st;function E(I){_.fromBufferAttribute(i,I),T.copy(_);const S=a[I];w.copy(S),w.sub(_.multiplyScalar(_.dot(S))).normalize(),b.crossVectors(T,S);const C=b.dot(c[I])<0?-1:1;r.setXYZW(I,w.x,w.y,w.z,C)}for(let I=0,S=y.length;I<S;++I){const v=y[I],C=v.start,M=v.count;for(let N=C,D=C+M;N<D;N+=3)E(t.getX(N+0)),E(t.getX(N+1)),E(t.getX(N+2))}}computeVertexNormals(){const t=this.index,e=this.getAttribute("position");if(e!==void 0){let s=this.getAttribute("normal");if(s===void 0)s=new Js(new Float32Array(e.count*3),3),this.setAttribute("normal",s);else for(let h=0,f=s.count;h<f;h++)s.setXYZ(h,0,0,0);const i=new st,o=new st,r=new st,a=new st,c=new st,u=new st,l=new st,d=new st;if(t)for(let h=0,f=t.count;h<f;h+=3){const p=t.getX(h+0),x=t.getX(h+1),g=t.getX(h+2);i.fromBufferAttribute(e,p),o.fromBufferAttribute(e,x),r.fromBufferAttribute(e,g),l.subVectors(r,o),d.subVectors(i,o),l.cross(d),a.fromBufferAttribute(s,p),c.fromBufferAttribute(s,x),u.fromBufferAttribute(s,g),a.add(l),c.add(l),u.add(l),s.setXYZ(p,a.x,a.y,a.z),s.setXYZ(x,c.x,c.y,c.z),s.setXYZ(g,u.x,u.y,u.z)}else for(let h=0,f=e.count;h<f;h+=3)i.fromBufferAttribute(e,h+0),o.fromBufferAttribute(e,h+1),r.fromBufferAttribute(e,h+2),l.subVectors(r,o),d.subVectors(i,o),l.cross(d),s.setXYZ(h+0,l.x,l.y,l.z),s.setXYZ(h+1,l.x,l.y,l.z),s.setXYZ(h+2,l.x,l.y,l.z);this.normalizeNormals(),s.needsUpdate=!0}}normalizeNormals(){const t=this.attributes.normal;for(let e=0,s=t.count;e<s;e++)Fn.fromBufferAttribute(t,e),Fn.normalize(),t.setXYZ(e,Fn.x,Fn.y,Fn.z)}toNonIndexed(){function t(a,c){const u=a.array,l=a.itemSize,d=a.normalized,h=new u.constructor(c.length*l);let f=0,p=0;for(let x=0,g=c.length;x<g;x++){a.isInterleavedBufferAttribute?f=c[x]*a.data.stride+a.offset:f=c[x]*l;for(let m=0;m<l;m++)h[p++]=u[f++]}return new Js(h,l,d)}if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const e=new Wo,s=this.index.array,i=this.attributes;for(const a in i){const c=i[a],u=t(c,s);e.setAttribute(a,u)}const o=this.morphAttributes;for(const a in o){const c=[],u=o[a];for(let l=0,d=u.length;l<d;l++){const h=u[l],f=t(h,s);c.push(f)}e.morphAttributes[a]=c}e.morphTargetsRelative=this.morphTargetsRelative;const r=this.groups;for(let a=0,c=r.length;a<c;a++){const u=r[a];e.addGroup(u.start,u.count,u.materialIndex)}return e}toJSON(){const t={metadata:{version:4.7,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(t.uuid=this.uuid,t.type=this.type,this.name!==""&&(t.name=this.name),Object.keys(this.userData).length>0&&(t.userData=this.userData),this.parameters!==void 0){const c=this.parameters;for(const u in c)c[u]!==void 0&&(t[u]=c[u]);return t}t.data={attributes:{}};const e=this.index;e!==null&&(t.data.index={type:e.array.constructor.name,array:Array.prototype.slice.call(e.array)});const s=this.attributes;for(const c in s){const u=s[c];t.data.attributes[c]=u.toJSON(t.data)}const i={};let o=!1;for(const c in this.morphAttributes){const u=this.morphAttributes[c],l=[];for(let d=0,h=u.length;d<h;d++){const f=u[d];l.push(f.toJSON(t.data))}l.length>0&&(i[c]=l,o=!0)}o&&(t.data.morphAttributes=i,t.data.morphTargetsRelative=this.morphTargetsRelative);const r=this.groups;r.length>0&&(t.data.groups=JSON.parse(JSON.stringify(r)));const a=this.boundingSphere;return a!==null&&(t.data.boundingSphere=a.toJSON()),t}clone(){return new this.constructor().copy(this)}copy(t){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const e={};this.name=t.name;const s=t.index;s!==null&&this.setIndex(s.clone());const i=t.attributes;for(const u in i){const l=i[u];this.setAttribute(u,l.clone(e))}const o=t.morphAttributes;for(const u in o){const l=[],d=o[u];for(let h=0,f=d.length;h<f;h++)l.push(d[h].clone(e));this.morphAttributes[u]=l}this.morphTargetsRelative=t.morphTargetsRelative;const r=t.groups;for(let u=0,l=r.length;u<l;u++){const d=r[u];this.addGroup(d.start,d.count,d.materialIndex)}const a=t.boundingBox;a!==null&&(this.boundingBox=a.clone());const c=t.boundingSphere;return c!==null&&(this.boundingSphere=c.clone()),this.drawRange.start=t.drawRange.start,this.drawRange.count=t.drawRange.count,this.userData=t.userData,this}dispose(){this.dispatchEvent({type:"dispose"})}}const Fy=new cn,sr=new c1,Ql=new yu,Py=new st,td=new st,ed=new st,nd=new st,zp=new st,sd=new st,Ly=new st,id=new st;class Ks extends Ln{constructor(t=new Wo,e=new Mv){super(),this.isMesh=!0,this.type="Mesh",this.geometry=t,this.material=e,this.morphTargetDictionary=void 0,this.morphTargetInfluences=void 0,this.count=1,this.updateMorphTargets()}copy(t,e){return super.copy(t,e),t.morphTargetInfluences!==void 0&&(this.morphTargetInfluences=t.morphTargetInfluences.slice()),t.morphTargetDictionary!==void 0&&(this.morphTargetDictionary=Object.assign({},t.morphTargetDictionary)),this.material=Array.isArray(t.material)?t.material.slice():t.material,this.geometry=t.geometry,this}updateMorphTargets(){const e=this.geometry.morphAttributes,s=Object.keys(e);if(s.length>0){const i=e[s[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let o=0,r=i.length;o<r;o++){const a=i[o].name||String(o);this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=o}}}}getVertexPosition(t,e){const s=this.geometry,i=s.attributes.position,o=s.morphAttributes.position,r=s.morphTargetsRelative;e.fromBufferAttribute(i,t);const a=this.morphTargetInfluences;if(o&&a){sd.set(0,0,0);for(let c=0,u=o.length;c<u;c++){const l=a[c],d=o[c];l!==0&&(zp.fromBufferAttribute(d,t),r?sd.addScaledVector(zp,l):sd.addScaledVector(zp.sub(e),l))}e.add(sd)}return e}raycast(t,e){const s=this.geometry,i=this.material,o=this.matrixWorld;i!==void 0&&(s.boundingSphere===null&&s.computeBoundingSphere(),Ql.copy(s.boundingSphere),Ql.applyMatrix4(o),sr.copy(t.ray).recast(t.near),!(Ql.containsPoint(sr.origin)===!1&&(sr.intersectSphere(Ql,Py)===null||sr.origin.distanceToSquared(Py)>(t.far-t.near)**2))&&(Fy.copy(o).invert(),sr.copy(t.ray).applyMatrix4(Fy),!(s.boundingBox!==null&&sr.intersectsBox(s.boundingBox)===!1)&&this._computeIntersections(t,e,sr)))}_computeIntersections(t,e,s){let i;const o=this.geometry,r=this.material,a=o.index,c=o.attributes.position,u=o.attributes.uv,l=o.attributes.uv1,d=o.attributes.normal,h=o.groups,f=o.drawRange;if(a!==null)if(Array.isArray(r))for(let p=0,x=h.length;p<x;p++){const g=h[p],m=r[g.materialIndex],y=Math.max(g.start,f.start),w=Math.min(a.count,Math.min(g.start+g.count,f.start+f.count));for(let b=y,_=w;b<_;b+=3){const T=a.getX(b),E=a.getX(b+1),I=a.getX(b+2);i=od(this,m,t,s,u,l,d,T,E,I),i&&(i.faceIndex=Math.floor(b/3),i.face.materialIndex=g.materialIndex,e.push(i))}}else{const p=Math.max(0,f.start),x=Math.min(a.count,f.start+f.count);for(let g=p,m=x;g<m;g+=3){const y=a.getX(g),w=a.getX(g+1),b=a.getX(g+2);i=od(this,r,t,s,u,l,d,y,w,b),i&&(i.faceIndex=Math.floor(g/3),e.push(i))}}else if(c!==void 0)if(Array.isArray(r))for(let p=0,x=h.length;p<x;p++){const g=h[p],m=r[g.materialIndex],y=Math.max(g.start,f.start),w=Math.min(c.count,Math.min(g.start+g.count,f.start+f.count));for(let b=y,_=w;b<_;b+=3){const T=b,E=b+1,I=b+2;i=od(this,m,t,s,u,l,d,T,E,I),i&&(i.faceIndex=Math.floor(b/3),i.face.materialIndex=g.materialIndex,e.push(i))}}else{const p=Math.max(0,f.start),x=Math.min(c.count,f.start+f.count);for(let g=p,m=x;g<m;g+=3){const y=g,w=g+1,b=g+2;i=od(this,r,t,s,u,l,d,y,w,b),i&&(i.faceIndex=Math.floor(g/3),e.push(i))}}}}function yR(n,t,e,s,i,o,r,a){let c;if(t.side===Ss?c=s.intersectTriangle(r,o,i,!0,a):c=s.intersectTriangle(i,o,r,t.side===Po,a),c===null)return null;id.copy(a),id.applyMatrix4(n.matrixWorld);const u=e.ray.origin.distanceTo(id);return u<e.near||u>e.far?null:{distance:u,point:id.clone(),object:n}}function od(n,t,e,s,i,o,r,a,c,u){n.getVertexPosition(a,td),n.getVertexPosition(c,ed),n.getVertexPosition(u,nd);const l=yR(n,t,e,s,td,ed,nd,Ly);if(l){const d=new st;pi.getBarycoord(Ly,td,ed,nd,d),i&&(l.uv=pi.getInterpolatedAttribute(i,a,c,u,d,new xe)),o&&(l.uv1=pi.getInterpolatedAttribute(o,a,c,u,d,new xe)),r&&(l.normal=pi.getInterpolatedAttribute(r,a,c,u,d,new st),l.normal.dot(s.direction)>0&&l.normal.multiplyScalar(-1));const h={a,b:c,c:u,normal:new st,materialIndex:0};pi.getNormal(td,ed,nd,h.normal),l.face=h,l.barycoord=d}return l}class ic extends Wo{constructor(t=1,e=1,s=1,i=1,o=1,r=1){super(),this.type="BoxGeometry",this.parameters={width:t,height:e,depth:s,widthSegments:i,heightSegments:o,depthSegments:r};const a=this;i=Math.floor(i),o=Math.floor(o),r=Math.floor(r);const c=[],u=[],l=[],d=[];let h=0,f=0;p("z","y","x",-1,-1,s,e,t,r,o,0),p("z","y","x",1,-1,s,e,-t,r,o,1),p("x","z","y",1,1,t,s,e,i,r,2),p("x","z","y",1,-1,t,s,-e,i,r,3),p("x","y","z",1,-1,t,e,s,i,o,4),p("x","y","z",-1,-1,t,e,-s,i,o,5),this.setIndex(c),this.setAttribute("position",new wr(u,3)),this.setAttribute("normal",new wr(l,3)),this.setAttribute("uv",new wr(d,2));function p(x,g,m,y,w,b,_,T,E,I,S){const v=b/E,C=_/I,M=b/2,N=_/2,D=T/2,$=E+1,F=I+1;let B=0,P=0;const V=new st;for(let q=0;q<F;q++){const J=q*C-N;for(let it=0;it<$;it++){const ut=it*v-M;V[x]=ut*y,V[g]=J*w,V[m]=D,u.push(V.x,V.y,V.z),V[x]=0,V[g]=0,V[m]=T>0?1:-1,l.push(V.x,V.y,V.z),d.push(it/E),d.push(1-q/I),B+=1}}for(let q=0;q<I;q++)for(let J=0;J<E;J++){const it=h+J+$*q,ut=h+J+$*(q+1),G=h+(J+1)+$*(q+1),Q=h+(J+1)+$*q;c.push(it,ut,Q),c.push(ut,G,Q),P+=6}a.addGroup(f,P,S),f+=P,h+=B}}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new ic(t.width,t.height,t.depth,t.widthSegments,t.heightSegments,t.depthSegments)}}function Wa(n){const t={};for(const e in n){t[e]={};for(const s in n[e]){const i=n[e][s];i&&(i.isColor||i.isMatrix3||i.isMatrix4||i.isVector2||i.isVector3||i.isVector4||i.isTexture||i.isQuaternion)?i.isRenderTargetTexture?(console.warn("UniformsUtils: Textures of render targets cannot be cloned via cloneUniforms() or mergeUniforms()."),t[e][s]=null):t[e][s]=i.clone():Array.isArray(i)?t[e][s]=i.slice():t[e][s]=i}}return t}function ds(n){const t={};for(let e=0;e<n.length;e++){const s=Wa(n[e]);for(const i in s)t[i]=s[i]}return t}function bR(n){const t=[];for(let e=0;e<n.length;e++)t.push(n[e].clone());return t}function kv(n){const t=n.getRenderTarget();return t===null?n.outputColorSpace:t.isXRRenderTarget===!0?t.texture.colorSpace:$e.workingColorSpace}const wR={clone:Wa,merge:ds};var vR=`void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}`,_R=`void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}`;class co extends bu{constructor(t){super(),this.isShaderMaterial=!0,this.type="ShaderMaterial",this.defines={},this.uniforms={},this.uniformsGroups=[],this.vertexShader=vR,this.fragmentShader=_R,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.forceSinglePass=!0,this.extensions={clipCullDistance:!1,multiDraw:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv1:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,t!==void 0&&this.setValues(t)}copy(t){return super.copy(t),this.fragmentShader=t.fragmentShader,this.vertexShader=t.vertexShader,this.uniforms=Wa(t.uniforms),this.uniformsGroups=bR(t.uniformsGroups),this.defines=Object.assign({},t.defines),this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.fog=t.fog,this.lights=t.lights,this.clipping=t.clipping,this.extensions=Object.assign({},t.extensions),this.glslVersion=t.glslVersion,this}toJSON(t){const e=super.toJSON(t);e.glslVersion=this.glslVersion,e.uniforms={};for(const i in this.uniforms){const r=this.uniforms[i].value;r&&r.isTexture?e.uniforms[i]={type:"t",value:r.toJSON(t).uuid}:r&&r.isColor?e.uniforms[i]={type:"c",value:r.getHex()}:r&&r.isVector2?e.uniforms[i]={type:"v2",value:r.toArray()}:r&&r.isVector3?e.uniforms[i]={type:"v3",value:r.toArray()}:r&&r.isVector4?e.uniforms[i]={type:"v4",value:r.toArray()}:r&&r.isMatrix3?e.uniforms[i]={type:"m3",value:r.toArray()}:r&&r.isMatrix4?e.uniforms[i]={type:"m4",value:r.toArray()}:e.uniforms[i]={value:r}}Object.keys(this.defines).length>0&&(e.defines=this.defines),e.vertexShader=this.vertexShader,e.fragmentShader=this.fragmentShader,e.lights=this.lights,e.clipping=this.clipping;const s={};for(const i in this.extensions)this.extensions[i]===!0&&(s[i]=!0);return Object.keys(s).length>0&&(e.extensions=s),e}}class Dv extends Ln{constructor(){super(),this.isCamera=!0,this.type="Camera",this.matrixWorldInverse=new cn,this.projectionMatrix=new cn,this.projectionMatrixInverse=new cn,this.coordinateSystem=so}copy(t,e){return super.copy(t,e),this.matrixWorldInverse.copy(t.matrixWorldInverse),this.projectionMatrix.copy(t.projectionMatrix),this.projectionMatrixInverse.copy(t.projectionMatrixInverse),this.coordinateSystem=t.coordinateSystem,this}getWorldDirection(t){return super.getWorldDirection(t).negate()}updateMatrixWorld(t){super.updateMatrixWorld(t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(t,e){super.updateWorldMatrix(t,e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return new this.constructor().copy(this)}}const _o=new st,Oy=new xe,Uy=new xe;class Xs extends Dv{constructor(t=50,e=1,s=.1,i=2e3){super(),this.isPerspectiveCamera=!0,this.type="PerspectiveCamera",this.fov=t,this.zoom=1,this.near=s,this.far=i,this.focus=10,this.aspect=e,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(t,e){return super.copy(t,e),this.fov=t.fov,this.zoom=t.zoom,this.near=t.near,this.far=t.far,this.focus=t.focus,this.aspect=t.aspect,this.view=t.view===null?null:Object.assign({},t.view),this.filmGauge=t.filmGauge,this.filmOffset=t.filmOffset,this}setFocalLength(t){const e=.5*this.getFilmHeight()/t;this.fov=i0*2*Math.atan(e),this.updateProjectionMatrix()}getFocalLength(){const t=Math.tan(Dd*.5*this.fov);return .5*this.getFilmHeight()/t}getEffectiveFOV(){return i0*2*Math.atan(Math.tan(Dd*.5*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}getViewBounds(t,e,s){_o.set(-1,-1,.5).applyMatrix4(this.projectionMatrixInverse),e.set(_o.x,_o.y).multiplyScalar(-t/_o.z),_o.set(1,1,.5).applyMatrix4(this.projectionMatrixInverse),s.set(_o.x,_o.y).multiplyScalar(-t/_o.z)}getViewSize(t,e){return this.getViewBounds(t,Oy,Uy),e.subVectors(Uy,Oy)}setViewOffset(t,e,s,i,o,r){this.aspect=t/e,this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=t,this.view.fullHeight=e,this.view.offsetX=s,this.view.offsetY=i,this.view.width=o,this.view.height=r,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const t=this.near;let e=t*Math.tan(Dd*.5*this.fov)/this.zoom,s=2*e,i=this.aspect*s,o=-.5*i;const r=this.view;if(this.view!==null&&this.view.enabled){const c=r.fullWidth,u=r.fullHeight;o+=r.offsetX*i/c,e-=r.offsetY*s/u,i*=r.width/c,s*=r.height/u}const a=this.filmOffset;a!==0&&(o+=t*a/this.getFilmWidth()),this.projectionMatrix.makePerspective(o,o+i,e,e-s,t,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(t){const e=super.toJSON(t);return e.object.fov=this.fov,e.object.zoom=this.zoom,e.object.near=this.near,e.object.far=this.far,e.object.focus=this.focus,e.object.aspect=this.aspect,this.view!==null&&(e.object.view=Object.assign({},this.view)),e.object.filmGauge=this.filmGauge,e.object.filmOffset=this.filmOffset,e}}const fa=-90,pa=1;class CR extends Ln{constructor(t,e,s){super(),this.type="CubeCamera",this.renderTarget=s,this.coordinateSystem=null,this.activeMipmapLevel=0;const i=new Xs(fa,pa,t,e);i.layers=this.layers,this.add(i);const o=new Xs(fa,pa,t,e);o.layers=this.layers,this.add(o);const r=new Xs(fa,pa,t,e);r.layers=this.layers,this.add(r);const a=new Xs(fa,pa,t,e);a.layers=this.layers,this.add(a);const c=new Xs(fa,pa,t,e);c.layers=this.layers,this.add(c);const u=new Xs(fa,pa,t,e);u.layers=this.layers,this.add(u)}updateCoordinateSystem(){const t=this.coordinateSystem,e=this.children.concat(),[s,i,o,r,a,c]=e;for(const u of e)this.remove(u);if(t===so)s.up.set(0,1,0),s.lookAt(1,0,0),i.up.set(0,1,0),i.lookAt(-1,0,0),o.up.set(0,0,-1),o.lookAt(0,1,0),r.up.set(0,0,1),r.lookAt(0,-1,0),a.up.set(0,1,0),a.lookAt(0,0,1),c.up.set(0,1,0),c.lookAt(0,0,-1);else if(t===Kd)s.up.set(0,-1,0),s.lookAt(-1,0,0),i.up.set(0,-1,0),i.lookAt(1,0,0),o.up.set(0,0,1),o.lookAt(0,1,0),r.up.set(0,0,-1),r.lookAt(0,-1,0),a.up.set(0,-1,0),a.lookAt(0,0,1),c.up.set(0,-1,0),c.lookAt(0,0,-1);else throw new Error("THREE.CubeCamera.updateCoordinateSystem(): Invalid coordinate system: "+t);for(const u of e)this.add(u),u.updateMatrixWorld()}update(t,e){this.parent===null&&this.updateMatrixWorld();const{renderTarget:s,activeMipmapLevel:i}=this;this.coordinateSystem!==t.coordinateSystem&&(this.coordinateSystem=t.coordinateSystem,this.updateCoordinateSystem());const[o,r,a,c,u,l]=this.children,d=t.getRenderTarget(),h=t.getActiveCubeFace(),f=t.getActiveMipmapLevel(),p=t.xr.enabled;t.xr.enabled=!1;const x=s.texture.generateMipmaps;s.texture.generateMipmaps=!1,t.setRenderTarget(s,0,i),t.render(e,o),t.setRenderTarget(s,1,i),t.render(e,r),t.setRenderTarget(s,2,i),t.render(e,a),t.setRenderTarget(s,3,i),t.render(e,c),t.setRenderTarget(s,4,i),t.render(e,u),s.texture.generateMipmaps=x,t.setRenderTarget(s,5,i),t.render(e,l),t.setRenderTarget(d,h,f),t.xr.enabled=p,s.texture.needsPMREMUpdate=!0}}class $v extends Gn{constructor(t=[],e=Ba,s,i,o,r,a,c,u,l){super(t,e,s,i,o,r,a,c,u,l),this.isCubeTexture=!0,this.flipY=!1}get images(){return this.image}set images(t){this.image=t}}class SR extends Ir{constructor(t=1,e={}){super(t,t,e),this.isWebGLCubeRenderTarget=!0;const s={width:t,height:t,depth:1},i=[s,s,s,s,s,s];this.texture=new $v(i),this._setTextureOptions(e),this.texture.isRenderTargetTexture=!0}fromEquirectangularTexture(t,e){this.texture.type=e.type,this.texture.colorSpace=e.colorSpace,this.texture.generateMipmaps=e.generateMipmaps,this.texture.minFilter=e.minFilter,this.texture.magFilter=e.magFilter;const s={uniforms:{tEquirect:{value:null}},vertexShader:`

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,fragmentShader:`

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`},i=new ic(5,5,5),o=new co({name:"CubemapFromEquirect",uniforms:Wa(s.uniforms),vertexShader:s.vertexShader,fragmentShader:s.fragmentShader,side:Ss,blending:Mo});o.uniforms.tEquirect.value=e;const r=new Ks(i,o),a=e.minFilter;return e.minFilter===xr&&(e.minFilter=mi),new CR(1,10,this).update(t,r),e.minFilter=a,r.geometry.dispose(),r.material.dispose(),this}clear(t,e=!0,s=!0,i=!0){const o=t.getRenderTarget();for(let r=0;r<6;r++)t.setRenderTarget(this,r),t.clear(e,s,i);t.setRenderTarget(o)}}class rd extends Ln{constructor(){super(),this.isGroup=!0,this.type="Group"}}const TR={type:"move"};class Vp{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return this._hand===null&&(this._hand=new rd,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return this._targetRay===null&&(this._targetRay=new rd,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new st,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new st),this._targetRay}getGripSpace(){return this._grip===null&&(this._grip=new rd,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new st,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new st),this._grip}dispatchEvent(t){return this._targetRay!==null&&this._targetRay.dispatchEvent(t),this._grip!==null&&this._grip.dispatchEvent(t),this._hand!==null&&this._hand.dispatchEvent(t),this}connect(t){if(t&&t.hand){const e=this._hand;if(e)for(const s of t.hand.values())this._getHandJoint(e,s)}return this.dispatchEvent({type:"connected",data:t}),this}disconnect(t){return this.dispatchEvent({type:"disconnected",data:t}),this._targetRay!==null&&(this._targetRay.visible=!1),this._grip!==null&&(this._grip.visible=!1),this._hand!==null&&(this._hand.visible=!1),this}update(t,e,s){let i=null,o=null,r=null;const a=this._targetRay,c=this._grip,u=this._hand;if(t&&e.session.visibilityState!=="visible-blurred"){if(u&&t.hand){r=!0;for(const x of t.hand.values()){const g=e.getJointPose(x,s),m=this._getHandJoint(u,x);g!==null&&(m.matrix.fromArray(g.transform.matrix),m.matrix.decompose(m.position,m.rotation,m.scale),m.matrixWorldNeedsUpdate=!0,m.jointRadius=g.radius),m.visible=g!==null}const l=u.joints["index-finger-tip"],d=u.joints["thumb-tip"],h=l.position.distanceTo(d.position),f=.02,p=.005;u.inputState.pinching&&h>f+p?(u.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:t.handedness,target:this})):!u.inputState.pinching&&h<=f-p&&(u.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:t.handedness,target:this}))}else c!==null&&t.gripSpace&&(o=e.getPose(t.gripSpace,s),o!==null&&(c.matrix.fromArray(o.transform.matrix),c.matrix.decompose(c.position,c.rotation,c.scale),c.matrixWorldNeedsUpdate=!0,o.linearVelocity?(c.hasLinearVelocity=!0,c.linearVelocity.copy(o.linearVelocity)):c.hasLinearVelocity=!1,o.angularVelocity?(c.hasAngularVelocity=!0,c.angularVelocity.copy(o.angularVelocity)):c.hasAngularVelocity=!1));a!==null&&(i=e.getPose(t.targetRaySpace,s),i===null&&o!==null&&(i=o),i!==null&&(a.matrix.fromArray(i.transform.matrix),a.matrix.decompose(a.position,a.rotation,a.scale),a.matrixWorldNeedsUpdate=!0,i.linearVelocity?(a.hasLinearVelocity=!0,a.linearVelocity.copy(i.linearVelocity)):a.hasLinearVelocity=!1,i.angularVelocity?(a.hasAngularVelocity=!0,a.angularVelocity.copy(i.angularVelocity)):a.hasAngularVelocity=!1,this.dispatchEvent(TR)))}return a!==null&&(a.visible=i!==null),c!==null&&(c.visible=o!==null),u!==null&&(u.visible=r!==null),this}_getHandJoint(t,e){if(t.joints[e.jointName]===void 0){const s=new rd;s.matrixAutoUpdate=!1,s.visible=!1,t.joints[e.jointName]=s,t.add(s)}return t.joints[e.jointName]}}class ER extends Ln{constructor(){super(),this.isScene=!0,this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.backgroundBlurriness=0,this.backgroundIntensity=1,this.backgroundRotation=new Ui,this.environmentIntensity=1,this.environmentRotation=new Ui,this.overrideMaterial=null,typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(t,e){return super.copy(t,e),t.background!==null&&(this.background=t.background.clone()),t.environment!==null&&(this.environment=t.environment.clone()),t.fog!==null&&(this.fog=t.fog.clone()),this.backgroundBlurriness=t.backgroundBlurriness,this.backgroundIntensity=t.backgroundIntensity,this.backgroundRotation.copy(t.backgroundRotation),this.environmentIntensity=t.environmentIntensity,this.environmentRotation.copy(t.environmentRotation),t.overrideMaterial!==null&&(this.overrideMaterial=t.overrideMaterial.clone()),this.matrixAutoUpdate=t.matrixAutoUpdate,this}toJSON(t){const e=super.toJSON(t);return this.fog!==null&&(e.object.fog=this.fog.toJSON()),this.backgroundBlurriness>0&&(e.object.backgroundBlurriness=this.backgroundBlurriness),this.backgroundIntensity!==1&&(e.object.backgroundIntensity=this.backgroundIntensity),e.object.backgroundRotation=this.backgroundRotation.toArray(),this.environmentIntensity!==1&&(e.object.environmentIntensity=this.environmentIntensity),e.object.environmentRotation=this.environmentRotation.toArray(),e}}class IR extends Gn{constructor(t=null,e=1,s=1,i,o,r,a,c,u=Ds,l=Ds,d,h){super(null,r,a,c,u,l,i,o,d,h),this.isDataTexture=!0,this.image={data:t,width:e,height:s},this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class By extends Js{constructor(t,e,s,i=1){super(t,e,s),this.isInstancedBufferAttribute=!0,this.meshPerAttribute=i}copy(t){return super.copy(t),this.meshPerAttribute=t.meshPerAttribute,this}toJSON(){const t=super.toJSON();return t.meshPerAttribute=this.meshPerAttribute,t.isInstancedBufferAttribute=!0,t}}const ma=new cn,zy=new cn,ad=[],Vy=new Wr,RR=new cn,Ac=new Ks,Nc=new yu;class Wy extends Ks{constructor(t,e,s){super(t,e),this.isInstancedMesh=!0,this.instanceMatrix=new By(new Float32Array(s*16),16),this.instanceColor=null,this.morphTexture=null,this.count=s,this.boundingBox=null,this.boundingSphere=null;for(let i=0;i<s;i++)this.setMatrixAt(i,RR)}computeBoundingBox(){const t=this.geometry,e=this.count;this.boundingBox===null&&(this.boundingBox=new Wr),t.boundingBox===null&&t.computeBoundingBox(),this.boundingBox.makeEmpty();for(let s=0;s<e;s++)this.getMatrixAt(s,ma),Vy.copy(t.boundingBox).applyMatrix4(ma),this.boundingBox.union(Vy)}computeBoundingSphere(){const t=this.geometry,e=this.count;this.boundingSphere===null&&(this.boundingSphere=new yu),t.boundingSphere===null&&t.computeBoundingSphere(),this.boundingSphere.makeEmpty();for(let s=0;s<e;s++)this.getMatrixAt(s,ma),Nc.copy(t.boundingSphere).applyMatrix4(ma),this.boundingSphere.union(Nc)}copy(t,e){return super.copy(t,e),this.instanceMatrix.copy(t.instanceMatrix),t.morphTexture!==null&&(this.morphTexture=t.morphTexture.clone()),t.instanceColor!==null&&(this.instanceColor=t.instanceColor.clone()),this.count=t.count,t.boundingBox!==null&&(this.boundingBox=t.boundingBox.clone()),t.boundingSphere!==null&&(this.boundingSphere=t.boundingSphere.clone()),this}getColorAt(t,e){e.fromArray(this.instanceColor.array,t*3)}getMatrixAt(t,e){e.fromArray(this.instanceMatrix.array,t*16)}getMorphAt(t,e){const s=e.morphTargetInfluences,i=this.morphTexture.source.data.data,o=s.length+1,r=t*o+1;for(let a=0;a<s.length;a++)s[a]=i[r+a]}raycast(t,e){const s=this.matrixWorld,i=this.count;if(Ac.geometry=this.geometry,Ac.material=this.material,Ac.material!==void 0&&(this.boundingSphere===null&&this.computeBoundingSphere(),Nc.copy(this.boundingSphere),Nc.applyMatrix4(s),t.ray.intersectsSphere(Nc)!==!1))for(let o=0;o<i;o++){this.getMatrixAt(o,ma),zy.multiplyMatrices(s,ma),Ac.matrixWorld=zy,Ac.raycast(t,ad);for(let r=0,a=ad.length;r<a;r++){const c=ad[r];c.instanceId=o,c.object=this,e.push(c)}ad.length=0}}setColorAt(t,e){this.instanceColor===null&&(this.instanceColor=new By(new Float32Array(this.instanceMatrix.count*3).fill(1),3)),e.toArray(this.instanceColor.array,t*3)}setMatrixAt(t,e){e.toArray(this.instanceMatrix.array,t*16)}setMorphAt(t,e){const s=e.morphTargetInfluences,i=s.length+1;this.morphTexture===null&&(this.morphTexture=new IR(new Float32Array(i*this.count),i,this.count,s1,Di));const o=this.morphTexture.source.data.data;let r=0;for(let u=0;u<s.length;u++)r+=s[u];const a=this.geometry.morphTargetsRelative?1:1-r,c=i*t;o[c]=a,o.set(s,c+1)}updateMorphTargets(){}dispose(){this.dispatchEvent({type:"dispose"}),this.morphTexture!==null&&(this.morphTexture.dispose(),this.morphTexture=null)}}const Wp=new st,MR=new st,AR=new ge;class Qi{constructor(t=new st(1,0,0),e=0){this.isPlane=!0,this.normal=t,this.constant=e}set(t,e){return this.normal.copy(t),this.constant=e,this}setComponents(t,e,s,i){return this.normal.set(t,e,s),this.constant=i,this}setFromNormalAndCoplanarPoint(t,e){return this.normal.copy(t),this.constant=-e.dot(this.normal),this}setFromCoplanarPoints(t,e,s){const i=Wp.subVectors(s,e).cross(MR.subVectors(t,e)).normalize();return this.setFromNormalAndCoplanarPoint(i,t),this}copy(t){return this.normal.copy(t.normal),this.constant=t.constant,this}normalize(){const t=1/this.normal.length();return this.normal.multiplyScalar(t),this.constant*=t,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(t){return this.normal.dot(t)+this.constant}distanceToSphere(t){return this.distanceToPoint(t.center)-t.radius}projectPoint(t,e){return e.copy(t).addScaledVector(this.normal,-this.distanceToPoint(t))}intersectLine(t,e){const s=t.delta(Wp),i=this.normal.dot(s);if(i===0)return this.distanceToPoint(t.start)===0?e.copy(t.start):null;const o=-(t.start.dot(this.normal)+this.constant)/i;return o<0||o>1?null:e.copy(t.start).addScaledVector(s,o)}intersectsLine(t){const e=this.distanceToPoint(t.start),s=this.distanceToPoint(t.end);return e<0&&s>0||s<0&&e>0}intersectsBox(t){return t.intersectsPlane(this)}intersectsSphere(t){return t.intersectsPlane(this)}coplanarPoint(t){return t.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(t,e){const s=e||AR.getNormalMatrix(t),i=this.coplanarPoint(Wp).applyMatrix4(t),o=this.normal.applyMatrix3(s).normalize();return this.constant=-i.dot(o),this}translate(t){return this.constant-=t.dot(this.normal),this}equals(t){return t.normal.equals(this.normal)&&t.constant===this.constant}clone(){return new this.constructor().copy(this)}}const ir=new yu,cd=new st;class Fv{constructor(t=new Qi,e=new Qi,s=new Qi,i=new Qi,o=new Qi,r=new Qi){this.planes=[t,e,s,i,o,r]}set(t,e,s,i,o,r){const a=this.planes;return a[0].copy(t),a[1].copy(e),a[2].copy(s),a[3].copy(i),a[4].copy(o),a[5].copy(r),this}copy(t){const e=this.planes;for(let s=0;s<6;s++)e[s].copy(t.planes[s]);return this}setFromProjectionMatrix(t,e=so){const s=this.planes,i=t.elements,o=i[0],r=i[1],a=i[2],c=i[3],u=i[4],l=i[5],d=i[6],h=i[7],f=i[8],p=i[9],x=i[10],g=i[11],m=i[12],y=i[13],w=i[14],b=i[15];if(s[0].setComponents(c-o,h-u,g-f,b-m).normalize(),s[1].setComponents(c+o,h+u,g+f,b+m).normalize(),s[2].setComponents(c+r,h+l,g+p,b+y).normalize(),s[3].setComponents(c-r,h-l,g-p,b-y).normalize(),s[4].setComponents(c-a,h-d,g-x,b-w).normalize(),e===so)s[5].setComponents(c+a,h+d,g+x,b+w).normalize();else if(e===Kd)s[5].setComponents(a,d,x,w).normalize();else throw new Error("THREE.Frustum.setFromProjectionMatrix(): Invalid coordinate system: "+e);return this}intersectsObject(t){if(t.boundingSphere!==void 0)t.boundingSphere===null&&t.computeBoundingSphere(),ir.copy(t.boundingSphere).applyMatrix4(t.matrixWorld);else{const e=t.geometry;e.boundingSphere===null&&e.computeBoundingSphere(),ir.copy(e.boundingSphere).applyMatrix4(t.matrixWorld)}return this.intersectsSphere(ir)}intersectsSprite(t){return ir.center.set(0,0,0),ir.radius=.7071067811865476,ir.applyMatrix4(t.matrixWorld),this.intersectsSphere(ir)}intersectsSphere(t){const e=this.planes,s=t.center,i=-t.radius;for(let o=0;o<6;o++)if(e[o].distanceToPoint(s)<i)return!1;return!0}intersectsBox(t){const e=this.planes;for(let s=0;s<6;s++){const i=e[s];if(cd.x=i.normal.x>0?t.max.x:t.min.x,cd.y=i.normal.y>0?t.max.y:t.min.y,cd.z=i.normal.z>0?t.max.z:t.min.z,i.distanceToPoint(cd)<0)return!1}return!0}containsPoint(t){const e=this.planes;for(let s=0;s<6;s++)if(e[s].distanceToPoint(t)<0)return!1;return!0}clone(){return new this.constructor().copy(this)}}class NR extends Gn{constructor(t,e,s,i,o,r,a,c,u){super(t,e,s,i,o,r,a,c,u),this.isCanvasTexture=!0,this.needsUpdate=!0}}class Pv extends Gn{constructor(t,e,s=Tr,i,o,r,a=Ds,c=Ds,u,l=tu,d=1){if(l!==tu&&l!==eu)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");const h={width:t,height:e,depth:d};super(h,i,o,r,a,c,l,s,u),this.isDepthTexture=!0,this.flipY=!1,this.generateMipmaps=!1,this.compareFunction=null}copy(t){return super.copy(t),this.source=new a1(Object.assign({},t.image)),this.compareFunction=t.compareFunction,this}toJSON(t){const e=super.toJSON(t);return this.compareFunction!==null&&(e.compareFunction=this.compareFunction),e}}class wu extends Wo{constructor(t=1,e=1,s=1,i=1){super(),this.type="PlaneGeometry",this.parameters={width:t,height:e,widthSegments:s,heightSegments:i};const o=t/2,r=e/2,a=Math.floor(s),c=Math.floor(i),u=a+1,l=c+1,d=t/a,h=e/c,f=[],p=[],x=[],g=[];for(let m=0;m<l;m++){const y=m*h-r;for(let w=0;w<u;w++){const b=w*d-o;p.push(b,-y,0),x.push(0,0,1),g.push(w/a),g.push(1-m/c)}}for(let m=0;m<c;m++)for(let y=0;y<a;y++){const w=y+u*m,b=y+u*(m+1),_=y+1+u*(m+1),T=y+1+u*m;f.push(w,b,T),f.push(b,_,T)}this.setIndex(f),this.setAttribute("position",new wr(p,3)),this.setAttribute("normal",new wr(x,3)),this.setAttribute("uv",new wr(g,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new wu(t.width,t.height,t.widthSegments,t.heightSegments)}}class Gy extends bu{constructor(t){super(),this.isMeshPhongMaterial=!0,this.type="MeshPhongMaterial",this.color=new be(16777215),this.specular=new be(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new be(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Sv,this.normalScale=new xe(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new Ui,this.combine=Q0,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.specular.copy(t.specular),this.shininess=t.shininess,this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.envMapRotation.copy(t.envMapRotation),this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.flatShading=t.flatShading,this.fog=t.fog,this}}class kR extends bu{constructor(t){super(),this.isMeshDepthMaterial=!0,this.type="MeshDepthMaterial",this.depthPacking=U3,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(t)}copy(t){return super.copy(t),this.depthPacking=t.depthPacking,this.map=t.map,this.alphaMap=t.alphaMap,this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this}}class DR extends bu{constructor(t){super(),this.isMeshDistanceMaterial=!0,this.type="MeshDistanceMaterial",this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.setValues(t)}copy(t){return super.copy(t),this.map=t.map,this.alphaMap=t.alphaMap,this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this}}const Yd={enabled:!1,files:{},add:function(n,t){this.enabled!==!1&&(this.files[n]=t)},get:function(n){if(this.enabled!==!1)return this.files[n]},remove:function(n){delete this.files[n]},clear:function(){this.files={}}};class $R{constructor(t,e,s){const i=this;let o=!1,r=0,a=0,c;const u=[];this.onStart=void 0,this.onLoad=t,this.onProgress=e,this.onError=s,this.itemStart=function(l){a++,o===!1&&i.onStart!==void 0&&i.onStart(l,r,a),o=!0},this.itemEnd=function(l){r++,i.onProgress!==void 0&&i.onProgress(l,r,a),r===a&&(o=!1,i.onLoad!==void 0&&i.onLoad())},this.itemError=function(l){i.onError!==void 0&&i.onError(l)},this.resolveURL=function(l){return c?c(l):l},this.setURLModifier=function(l){return c=l,this},this.addHandler=function(l,d){return u.push(l,d),this},this.removeHandler=function(l){const d=u.indexOf(l);return d!==-1&&u.splice(d,2),this},this.getHandler=function(l){for(let d=0,h=u.length;d<h;d+=2){const f=u[d],p=u[d+1];if(f.global&&(f.lastIndex=0),f.test(l))return p}return null}}}const FR=new $R;class Rh{constructor(t){this.manager=t!==void 0?t:FR,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}load(){}loadAsync(t,e){const s=this;return new Promise(function(i,o){s.load(t,i,e,o)})}parse(){}setCrossOrigin(t){return this.crossOrigin=t,this}setWithCredentials(t){return this.withCredentials=t,this}setPath(t){return this.path=t,this}setResourcePath(t){return this.resourcePath=t,this}setRequestHeader(t){return this.requestHeader=t,this}}Rh.DEFAULT_MATERIAL_NAME="__DEFAULT";const Zi={};class PR extends Error{constructor(t,e){super(t),this.response=e}}class LR extends Rh{constructor(t){super(t),this.mimeType="",this.responseType=""}load(t,e,s,i){t===void 0&&(t=""),this.path!==void 0&&(t=this.path+t),t=this.manager.resolveURL(t);const o=Yd.get(t);if(o!==void 0)return this.manager.itemStart(t),setTimeout(()=>{e&&e(o),this.manager.itemEnd(t)},0),o;if(Zi[t]!==void 0){Zi[t].push({onLoad:e,onProgress:s,onError:i});return}Zi[t]=[],Zi[t].push({onLoad:e,onProgress:s,onError:i});const r=new Request(t,{headers:new Headers(this.requestHeader),credentials:this.withCredentials?"include":"same-origin"}),a=this.mimeType,c=this.responseType;fetch(r).then(u=>{if(u.status===200||u.status===0){if(u.status===0&&console.warn("THREE.FileLoader: HTTP Status 0 received."),typeof ReadableStream>"u"||u.body===void 0||u.body.getReader===void 0)return u;const l=Zi[t],d=u.body.getReader(),h=u.headers.get("X-File-Size")||u.headers.get("Content-Length"),f=h?parseInt(h):0,p=f!==0;let x=0;const g=new ReadableStream({start(m){y();function y(){d.read().then(({done:w,value:b})=>{if(w)m.close();else{x+=b.byteLength;const _=new ProgressEvent("progress",{lengthComputable:p,loaded:x,total:f});for(let T=0,E=l.length;T<E;T++){const I=l[T];I.onProgress&&I.onProgress(_)}m.enqueue(b),y()}},w=>{m.error(w)})}}});return new Response(g)}else throw new PR(`fetch for "${u.url}" responded with ${u.status}: ${u.statusText}`,u)}).then(u=>{switch(c){case"arraybuffer":return u.arrayBuffer();case"blob":return u.blob();case"document":return u.text().then(l=>new DOMParser().parseFromString(l,a));case"json":return u.json();default:if(a==="")return u.text();{const d=/charset="?([^;"\s]*)"?/i.exec(a),h=d&&d[1]?d[1].toLowerCase():void 0,f=new TextDecoder(h);return u.arrayBuffer().then(p=>f.decode(p))}}}).then(u=>{Yd.add(t,u);const l=Zi[t];delete Zi[t];for(let d=0,h=l.length;d<h;d++){const f=l[d];f.onLoad&&f.onLoad(u)}}).catch(u=>{const l=Zi[t];if(l===void 0)throw this.manager.itemError(t),u;delete Zi[t];for(let d=0,h=l.length;d<h;d++){const f=l[d];f.onError&&f.onError(u)}this.manager.itemError(t)}).finally(()=>{this.manager.itemEnd(t)}),this.manager.itemStart(t)}setResponseType(t){return this.responseType=t,this}setMimeType(t){return this.mimeType=t,this}}class OR extends Rh{constructor(t){super(t)}load(t,e,s,i){this.path!==void 0&&(t=this.path+t),t=this.manager.resolveURL(t);const o=this,r=Yd.get(t);if(r!==void 0)return o.manager.itemStart(t),setTimeout(function(){e&&e(r),o.manager.itemEnd(t)},0),r;const a=nu("img");function c(){l(),Yd.add(t,this),e&&e(this),o.manager.itemEnd(t)}function u(d){l(),i&&i(d),o.manager.itemError(t),o.manager.itemEnd(t)}function l(){a.removeEventListener("load",c,!1),a.removeEventListener("error",u,!1)}return a.addEventListener("load",c,!1),a.addEventListener("error",u,!1),t.slice(0,5)!=="data:"&&this.crossOrigin!==void 0&&(a.crossOrigin=this.crossOrigin),o.manager.itemStart(t),a.src=t,a}}class UR extends Rh{constructor(t){super(t)}load(t,e,s,i){const o=new Gn,r=new OR(this.manager);return r.setCrossOrigin(this.crossOrigin),r.setPath(this.path),r.load(t,function(a){o.image=a,o.needsUpdate=!0,e!==void 0&&e(o)},s,i),o}}class BR extends Ln{constructor(t,e=1){super(),this.isLight=!0,this.type="Light",this.color=new be(t),this.intensity=e}dispose(){}copy(t,e){return super.copy(t,e),this.color.copy(t.color),this.intensity=t.intensity,this}toJSON(t){const e=super.toJSON(t);return e.object.color=this.color.getHex(),e.object.intensity=this.intensity,this.groundColor!==void 0&&(e.object.groundColor=this.groundColor.getHex()),this.distance!==void 0&&(e.object.distance=this.distance),this.angle!==void 0&&(e.object.angle=this.angle),this.decay!==void 0&&(e.object.decay=this.decay),this.penumbra!==void 0&&(e.object.penumbra=this.penumbra),this.shadow!==void 0&&(e.object.shadow=this.shadow.toJSON()),this.target!==void 0&&(e.object.target=this.target.uuid),e}}class zR extends BR{constructor(t,e,s){super(t,s),this.isHemisphereLight=!0,this.type="HemisphereLight",this.position.copy(Ln.DEFAULT_UP),this.updateMatrix(),this.groundColor=new be(e)}copy(t,e){return super.copy(t,e),this.groundColor.copy(t.groundColor),this}}class VR extends Dv{constructor(t=-1,e=1,s=1,i=-1,o=.1,r=2e3){super(),this.isOrthographicCamera=!0,this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=t,this.right=e,this.top=s,this.bottom=i,this.near=o,this.far=r,this.updateProjectionMatrix()}copy(t,e){return super.copy(t,e),this.left=t.left,this.right=t.right,this.top=t.top,this.bottom=t.bottom,this.near=t.near,this.far=t.far,this.zoom=t.zoom,this.view=t.view===null?null:Object.assign({},t.view),this}setViewOffset(t,e,s,i,o,r){this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=t,this.view.fullHeight=e,this.view.offsetX=s,this.view.offsetY=i,this.view.width=o,this.view.height=r,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const t=(this.right-this.left)/(2*this.zoom),e=(this.top-this.bottom)/(2*this.zoom),s=(this.right+this.left)/2,i=(this.top+this.bottom)/2;let o=s-t,r=s+t,a=i+e,c=i-e;if(this.view!==null&&this.view.enabled){const u=(this.right-this.left)/this.view.fullWidth/this.zoom,l=(this.top-this.bottom)/this.view.fullHeight/this.zoom;o+=u*this.view.offsetX,r=o+u*this.view.width,a-=l*this.view.offsetY,c=a-l*this.view.height}this.projectionMatrix.makeOrthographic(o,r,a,c,this.near,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(t){const e=super.toJSON(t);return e.object.zoom=this.zoom,e.object.left=this.left,e.object.right=this.right,e.object.top=this.top,e.object.bottom=this.bottom,e.object.near=this.near,e.object.far=this.far,this.view!==null&&(e.object.view=Object.assign({},this.view)),e}}class WR extends Xs{constructor(t=[]){super(),this.isArrayCamera=!0,this.isMultiViewCamera=!1,this.cameras=t}}const Hy=new cn;class GR{constructor(t,e,s=0,i=1/0){this.ray=new c1(t,e),this.near=s,this.far=i,this.camera=null,this.layers=new u1,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}}}set(t,e){this.ray.set(t,e)}setFromCamera(t,e){e.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(e.matrixWorld),this.ray.direction.set(t.x,t.y,.5).unproject(e).sub(this.ray.origin).normalize(),this.camera=e):e.isOrthographicCamera?(this.ray.origin.set(t.x,t.y,(e.near+e.far)/(e.near-e.far)).unproject(e),this.ray.direction.set(0,0,-1).transformDirection(e.matrixWorld),this.camera=e):console.error("THREE.Raycaster: Unsupported camera type: "+e.type)}setFromXRController(t){return Hy.identity().extractRotation(t.matrixWorld),this.ray.origin.setFromMatrixPosition(t.matrixWorld),this.ray.direction.set(0,0,-1).applyMatrix4(Hy),this}intersectObject(t,e=!0,s=[]){return o0(t,this,s,e),s.sort(Xy),s}intersectObjects(t,e=!0,s=[]){for(let i=0,o=t.length;i<o;i++)o0(t[i],this,s,e);return s.sort(Xy),s}}function Xy(n,t){return n.distance-t.distance}function o0(n,t,e,s){let i=!0;if(n.layers.test(t.layers)&&n.raycast(t,e)===!1&&(i=!1),i===!0&&s===!0){const o=n.children;for(let r=0,a=o.length;r<a;r++)o0(o[r],t,e,!0)}}class qy{constructor(t=1,e=0,s=0){this.radius=t,this.phi=e,this.theta=s}set(t,e,s){return this.radius=t,this.phi=e,this.theta=s,this}copy(t){return this.radius=t.radius,this.phi=t.phi,this.theta=t.theta,this}makeSafe(){return this.phi=Se(this.phi,1e-6,Math.PI-1e-6),this}setFromVector3(t){return this.setFromCartesianCoords(t.x,t.y,t.z)}setFromCartesianCoords(t,e,s){return this.radius=Math.sqrt(t*t+e*e+s*s),this.radius===0?(this.theta=0,this.phi=0):(this.theta=Math.atan2(t,s),this.phi=Math.acos(Se(e/this.radius,-1,1))),this}clone(){return new this.constructor().copy(this)}}class HR extends Vr{constructor(t,e=null){super(),this.object=t,this.domElement=e,this.enabled=!0,this.state=-1,this.keys={},this.mouseButtons={LEFT:null,MIDDLE:null,RIGHT:null},this.touches={ONE:null,TWO:null}}connect(t){if(t===void 0){console.warn("THREE.Controls: connect() now requires an element.");return}this.domElement!==null&&this.disconnect(),this.domElement=t}disconnect(){}dispose(){}update(){}}function jy(n,t,e,s){const i=XR(s);switch(e){case wv:return n*t;case s1:return n*t/i.components*i.byteLength;case i1:return n*t/i.components*i.byteLength;case _v:return n*t*2/i.components*i.byteLength;case o1:return n*t*2/i.components*i.byteLength;case vv:return n*t*3/i.components*i.byteLength;case gi:return n*t*4/i.components*i.byteLength;case r1:return n*t*4/i.components*i.byteLength;case Rd:case Md:return Math.floor((n+3)/4)*Math.floor((t+3)/4)*8;case Ad:case Nd:return Math.floor((n+3)/4)*Math.floor((t+3)/4)*16;case km:case $m:return Math.max(n,16)*Math.max(t,8)/4;case Nm:case Dm:return Math.max(n,8)*Math.max(t,8)/2;case Fm:case Pm:return Math.floor((n+3)/4)*Math.floor((t+3)/4)*8;case Lm:return Math.floor((n+3)/4)*Math.floor((t+3)/4)*16;case Om:return Math.floor((n+3)/4)*Math.floor((t+3)/4)*16;case Um:return Math.floor((n+4)/5)*Math.floor((t+3)/4)*16;case Bm:return Math.floor((n+4)/5)*Math.floor((t+4)/5)*16;case zm:return Math.floor((n+5)/6)*Math.floor((t+4)/5)*16;case Vm:return Math.floor((n+5)/6)*Math.floor((t+5)/6)*16;case Wm:return Math.floor((n+7)/8)*Math.floor((t+4)/5)*16;case Gm:return Math.floor((n+7)/8)*Math.floor((t+5)/6)*16;case Hm:return Math.floor((n+7)/8)*Math.floor((t+7)/8)*16;case Xm:return Math.floor((n+9)/10)*Math.floor((t+4)/5)*16;case qm:return Math.floor((n+9)/10)*Math.floor((t+5)/6)*16;case jm:return Math.floor((n+9)/10)*Math.floor((t+7)/8)*16;case Km:return Math.floor((n+9)/10)*Math.floor((t+9)/10)*16;case Ym:return Math.floor((n+11)/12)*Math.floor((t+9)/10)*16;case Zm:return Math.floor((n+11)/12)*Math.floor((t+11)/12)*16;case kd:case Jm:case Qm:return Math.ceil(n/4)*Math.ceil(t/4)*16;case Cv:case t0:return Math.ceil(n/4)*Math.ceil(t/4)*8;case e0:case n0:return Math.ceil(n/4)*Math.ceil(t/4)*16}throw new Error(`Unable to determine texture byte length for ${e} format.`)}function XR(n){switch(n){case ao:case xv:return{byteLength:1,components:1};case Jc:case yv:case gu:return{byteLength:2,components:1};case e1:case n1:return{byteLength:2,components:4};case Tr:case t1:case Di:return{byteLength:4,components:1};case bv:return{byteLength:4,components:3}}throw new Error(`Unknown texture type ${n}.`)}typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:J0}}));typeof window<"u"&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=J0);/**
 * @license
 * Copyright 2010-2025 Three.js Authors
 * SPDX-License-Identifier: MIT
 */function Lv(){let n=null,t=!1,e=null,s=null;function i(o,r){e(o,r),s=n.requestAnimationFrame(i)}return{start:function(){t!==!0&&e!==null&&(s=n.requestAnimationFrame(i),t=!0)},stop:function(){n.cancelAnimationFrame(s),t=!1},setAnimationLoop:function(o){e=o},setContext:function(o){n=o}}}function qR(n){const t=new WeakMap;function e(a,c){const u=a.array,l=a.usage,d=u.byteLength,h=n.createBuffer();n.bindBuffer(c,h),n.bufferData(c,u,l),a.onUploadCallback();let f;if(u instanceof Float32Array)f=n.FLOAT;else if(u instanceof Uint16Array)a.isFloat16BufferAttribute?f=n.HALF_FLOAT:f=n.UNSIGNED_SHORT;else if(u instanceof Int16Array)f=n.SHORT;else if(u instanceof Uint32Array)f=n.UNSIGNED_INT;else if(u instanceof Int32Array)f=n.INT;else if(u instanceof Int8Array)f=n.BYTE;else if(u instanceof Uint8Array)f=n.UNSIGNED_BYTE;else if(u instanceof Uint8ClampedArray)f=n.UNSIGNED_BYTE;else throw new Error("THREE.WebGLAttributes: Unsupported buffer data format: "+u);return{buffer:h,type:f,bytesPerElement:u.BYTES_PER_ELEMENT,version:a.version,size:d}}function s(a,c,u){const l=c.array,d=c.updateRanges;if(n.bindBuffer(u,a),d.length===0)n.bufferSubData(u,0,l);else{d.sort((f,p)=>f.start-p.start);let h=0;for(let f=1;f<d.length;f++){const p=d[h],x=d[f];x.start<=p.start+p.count+1?p.count=Math.max(p.count,x.start+x.count-p.start):(++h,d[h]=x)}d.length=h+1;for(let f=0,p=d.length;f<p;f++){const x=d[f];n.bufferSubData(u,x.start*l.BYTES_PER_ELEMENT,l,x.start,x.count)}c.clearUpdateRanges()}c.onUploadCallback()}function i(a){return a.isInterleavedBufferAttribute&&(a=a.data),t.get(a)}function o(a){a.isInterleavedBufferAttribute&&(a=a.data);const c=t.get(a);c&&(n.deleteBuffer(c.buffer),t.delete(a))}function r(a,c){if(a.isInterleavedBufferAttribute&&(a=a.data),a.isGLBufferAttribute){const l=t.get(a);(!l||l.version<a.version)&&t.set(a,{buffer:a.buffer,type:a.type,bytesPerElement:a.elementSize,version:a.version});return}const u=t.get(a);if(u===void 0)t.set(a,e(a,c));else if(u.version<a.version){if(u.size!==a.array.byteLength)throw new Error("THREE.WebGLAttributes: The size of the buffer attribute's array buffer does not match the original size. Resizing buffer attributes is not supported.");s(u.buffer,a,c),u.version=a.version}}return{get:i,remove:o,update:r}}var jR=`#ifdef USE_ALPHAHASH
	if ( diffuseColor.a < getAlphaHashThreshold( vPosition ) ) discard;
#endif`,KR=`#ifdef USE_ALPHAHASH
	const float ALPHA_HASH_SCALE = 0.05;
	float hash2D( vec2 value ) {
		return fract( 1.0e4 * sin( 17.0 * value.x + 0.1 * value.y ) * ( 0.1 + abs( sin( 13.0 * value.y + value.x ) ) ) );
	}
	float hash3D( vec3 value ) {
		return hash2D( vec2( hash2D( value.xy ), value.z ) );
	}
	float getAlphaHashThreshold( vec3 position ) {
		float maxDeriv = max(
			length( dFdx( position.xyz ) ),
			length( dFdy( position.xyz ) )
		);
		float pixScale = 1.0 / ( ALPHA_HASH_SCALE * maxDeriv );
		vec2 pixScales = vec2(
			exp2( floor( log2( pixScale ) ) ),
			exp2( ceil( log2( pixScale ) ) )
		);
		vec2 alpha = vec2(
			hash3D( floor( pixScales.x * position.xyz ) ),
			hash3D( floor( pixScales.y * position.xyz ) )
		);
		float lerpFactor = fract( log2( pixScale ) );
		float x = ( 1.0 - lerpFactor ) * alpha.x + lerpFactor * alpha.y;
		float a = min( lerpFactor, 1.0 - lerpFactor );
		vec3 cases = vec3(
			x * x / ( 2.0 * a * ( 1.0 - a ) ),
			( x - 0.5 * a ) / ( 1.0 - a ),
			1.0 - ( ( 1.0 - x ) * ( 1.0 - x ) / ( 2.0 * a * ( 1.0 - a ) ) )
		);
		float threshold = ( x < ( 1.0 - a ) )
			? ( ( x < a ) ? cases.x : cases.y )
			: cases.z;
		return clamp( threshold , 1.0e-6, 1.0 );
	}
#endif`,YR=`#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, vAlphaMapUv ).g;
#endif`,ZR=`#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,JR=`#ifdef USE_ALPHATEST
	#ifdef ALPHA_TO_COVERAGE
	diffuseColor.a = smoothstep( alphaTest, alphaTest + fwidth( diffuseColor.a ), diffuseColor.a );
	if ( diffuseColor.a == 0.0 ) discard;
	#else
	if ( diffuseColor.a < alphaTest ) discard;
	#endif
#endif`,QR=`#ifdef USE_ALPHATEST
	uniform float alphaTest;
#endif`,tM=`#ifdef USE_AOMAP
	float ambientOcclusion = ( texture2D( aoMap, vAoMapUv ).r - 1.0 ) * aoMapIntensity + 1.0;
	reflectedLight.indirectDiffuse *= ambientOcclusion;
	#if defined( USE_CLEARCOAT ) 
		clearcoatSpecularIndirect *= ambientOcclusion;
	#endif
	#if defined( USE_SHEEN ) 
		sheenSpecularIndirect *= ambientOcclusion;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD )
		float dotNV = saturate( dot( geometryNormal, geometryViewDir ) );
		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );
	#endif
#endif`,eM=`#ifdef USE_AOMAP
	uniform sampler2D aoMap;
	uniform float aoMapIntensity;
#endif`,nM=`#ifdef USE_BATCHING
	#if ! defined( GL_ANGLE_multi_draw )
	#define gl_DrawID _gl_DrawID
	uniform int _gl_DrawID;
	#endif
	uniform highp sampler2D batchingTexture;
	uniform highp usampler2D batchingIdTexture;
	mat4 getBatchingMatrix( const in float i ) {
		int size = textureSize( batchingTexture, 0 ).x;
		int j = int( i ) * 4;
		int x = j % size;
		int y = j / size;
		vec4 v1 = texelFetch( batchingTexture, ivec2( x, y ), 0 );
		vec4 v2 = texelFetch( batchingTexture, ivec2( x + 1, y ), 0 );
		vec4 v3 = texelFetch( batchingTexture, ivec2( x + 2, y ), 0 );
		vec4 v4 = texelFetch( batchingTexture, ivec2( x + 3, y ), 0 );
		return mat4( v1, v2, v3, v4 );
	}
	float getIndirectIndex( const in int i ) {
		int size = textureSize( batchingIdTexture, 0 ).x;
		int x = i % size;
		int y = i / size;
		return float( texelFetch( batchingIdTexture, ivec2( x, y ), 0 ).r );
	}
#endif
#ifdef USE_BATCHING_COLOR
	uniform sampler2D batchingColorTexture;
	vec3 getBatchingColor( const in float i ) {
		int size = textureSize( batchingColorTexture, 0 ).x;
		int j = int( i );
		int x = j % size;
		int y = j / size;
		return texelFetch( batchingColorTexture, ivec2( x, y ), 0 ).rgb;
	}
#endif`,sM=`#ifdef USE_BATCHING
	mat4 batchingMatrix = getBatchingMatrix( getIndirectIndex( gl_DrawID ) );
#endif`,iM=`vec3 transformed = vec3( position );
#ifdef USE_ALPHAHASH
	vPosition = vec3( position );
#endif`,oM=`vec3 objectNormal = vec3( normal );
#ifdef USE_TANGENT
	vec3 objectTangent = vec3( tangent.xyz );
#endif`,rM=`float G_BlinnPhong_Implicit( ) {
	return 0.25;
}
float D_BlinnPhong( const in float shininess, const in float dotNH ) {
	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );
}
vec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( specularColor, 1.0, dotVH );
	float G = G_BlinnPhong_Implicit( );
	float D = D_BlinnPhong( shininess, dotNH );
	return F * ( G * D );
} // validated`,aM=`#ifdef USE_IRIDESCENCE
	const mat3 XYZ_TO_REC709 = mat3(
		 3.2404542, -0.9692660,  0.0556434,
		-1.5371385,  1.8760108, -0.2040259,
		-0.4985314,  0.0415560,  1.0572252
	);
	vec3 Fresnel0ToIor( vec3 fresnel0 ) {
		vec3 sqrtF0 = sqrt( fresnel0 );
		return ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );
	}
	vec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );
	}
	float IorToFresnel0( float transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));
	}
	vec3 evalSensitivity( float OPD, vec3 shift ) {
		float phase = 2.0 * PI * OPD * 1.0e-9;
		vec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );
		vec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );
		vec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );
		vec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );
		xyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );
		xyz /= 1.0685e-7;
		vec3 rgb = XYZ_TO_REC709 * xyz;
		return rgb;
	}
	vec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {
		vec3 I;
		float iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );
		float sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );
		float cosTheta2Sq = 1.0 - sinTheta2Sq;
		if ( cosTheta2Sq < 0.0 ) {
			return vec3( 1.0 );
		}
		float cosTheta2 = sqrt( cosTheta2Sq );
		float R0 = IorToFresnel0( iridescenceIOR, outsideIOR );
		float R12 = F_Schlick( R0, 1.0, cosTheta1 );
		float T121 = 1.0 - R12;
		float phi12 = 0.0;
		if ( iridescenceIOR < outsideIOR ) phi12 = PI;
		float phi21 = PI - phi12;
		vec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );		vec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );
		vec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );
		vec3 phi23 = vec3( 0.0 );
		if ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;
		if ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;
		if ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;
		float OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;
		vec3 phi = vec3( phi21 ) + phi23;
		vec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );
		vec3 r123 = sqrt( R123 );
		vec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );
		vec3 C0 = R12 + Rs;
		I = C0;
		vec3 Cm = Rs - T121;
		for ( int m = 1; m <= 2; ++ m ) {
			Cm *= r123;
			vec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );
			I += Cm * Sm;
		}
		return max( I, vec3( 0.0 ) );
	}
#endif`,cM=`#ifdef USE_BUMPMAP
	uniform sampler2D bumpMap;
	uniform float bumpScale;
	vec2 dHdxy_fwd() {
		vec2 dSTdx = dFdx( vBumpMapUv );
		vec2 dSTdy = dFdy( vBumpMapUv );
		float Hll = bumpScale * texture2D( bumpMap, vBumpMapUv ).x;
		float dBx = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdx ).x - Hll;
		float dBy = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdy ).x - Hll;
		return vec2( dBx, dBy );
	}
	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {
		vec3 vSigmaX = normalize( dFdx( surf_pos.xyz ) );
		vec3 vSigmaY = normalize( dFdy( surf_pos.xyz ) );
		vec3 vN = surf_norm;
		vec3 R1 = cross( vSigmaY, vN );
		vec3 R2 = cross( vN, vSigmaX );
		float fDet = dot( vSigmaX, R1 ) * faceDirection;
		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );
		return normalize( abs( fDet ) * surf_norm - vGrad );
	}
#endif`,uM=`#if NUM_CLIPPING_PLANES > 0
	vec4 plane;
	#ifdef ALPHA_TO_COVERAGE
		float distanceToPlane, distanceGradient;
		float clipOpacity = 1.0;
		#pragma unroll_loop_start
		for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			distanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;
			distanceGradient = fwidth( distanceToPlane ) / 2.0;
			clipOpacity *= smoothstep( - distanceGradient, distanceGradient, distanceToPlane );
			if ( clipOpacity == 0.0 ) discard;
		}
		#pragma unroll_loop_end
		#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
			float unionClipOpacity = 1.0;
			#pragma unroll_loop_start
			for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
				plane = clippingPlanes[ i ];
				distanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;
				distanceGradient = fwidth( distanceToPlane ) / 2.0;
				unionClipOpacity *= 1.0 - smoothstep( - distanceGradient, distanceGradient, distanceToPlane );
			}
			#pragma unroll_loop_end
			clipOpacity *= 1.0 - unionClipOpacity;
		#endif
		diffuseColor.a *= clipOpacity;
		if ( diffuseColor.a == 0.0 ) discard;
	#else
		#pragma unroll_loop_start
		for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;
		}
		#pragma unroll_loop_end
		#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
			bool clipped = true;
			#pragma unroll_loop_start
			for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
				plane = clippingPlanes[ i ];
				clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;
			}
			#pragma unroll_loop_end
			if ( clipped ) discard;
		#endif
	#endif
#endif`,lM=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];
#endif`,dM=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
#endif`,hM=`#if NUM_CLIPPING_PLANES > 0
	vClipPosition = - mvPosition.xyz;
#endif`,fM=`#if defined( USE_COLOR_ALPHA )
	diffuseColor *= vColor;
#elif defined( USE_COLOR )
	diffuseColor.rgb *= vColor;
#endif`,pM=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR )
	varying vec3 vColor;
#endif`,mM=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR ) || defined( USE_BATCHING_COLOR )
	varying vec3 vColor;
#endif`,gM=`#if defined( USE_COLOR_ALPHA )
	vColor = vec4( 1.0 );
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR ) || defined( USE_BATCHING_COLOR )
	vColor = vec3( 1.0 );
#endif
#ifdef USE_COLOR
	vColor *= color;
#endif
#ifdef USE_INSTANCING_COLOR
	vColor.xyz *= instanceColor.xyz;
#endif
#ifdef USE_BATCHING_COLOR
	vec3 batchingColor = getBatchingColor( getIndirectIndex( gl_DrawID ) );
	vColor.xyz *= batchingColor.xyz;
#endif`,xM=`#define PI 3.141592653589793
#define PI2 6.283185307179586
#define PI_HALF 1.5707963267948966
#define RECIPROCAL_PI 0.3183098861837907
#define RECIPROCAL_PI2 0.15915494309189535
#define EPSILON 1e-6
#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
#define whiteComplement( a ) ( 1.0 - saturate( a ) )
float pow2( const in float x ) { return x*x; }
vec3 pow2( const in vec3 x ) { return x*x; }
float pow3( const in float x ) { return x*x*x; }
float pow4( const in float x ) { float x2 = x*x; return x2*x2; }
float max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }
float average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }
highp float rand( const in vec2 uv ) {
	const highp float a = 12.9898, b = 78.233, c = 43758.5453;
	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );
	return fract( sin( sn ) * c );
}
#ifdef HIGH_PRECISION
	float precisionSafeLength( vec3 v ) { return length( v ); }
#else
	float precisionSafeLength( vec3 v ) {
		float maxComponent = max3( abs( v ) );
		return length( v / maxComponent ) * maxComponent;
	}
#endif
struct IncidentLight {
	vec3 color;
	vec3 direction;
	bool visible;
};
struct ReflectedLight {
	vec3 directDiffuse;
	vec3 directSpecular;
	vec3 indirectDiffuse;
	vec3 indirectSpecular;
};
#ifdef USE_ALPHAHASH
	varying vec3 vPosition;
#endif
vec3 transformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );
}
vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );
}
mat3 transposeMat3( const in mat3 m ) {
	mat3 tmp;
	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );
	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );
	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );
	return tmp;
}
bool isPerspectiveMatrix( mat4 m ) {
	return m[ 2 ][ 3 ] == - 1.0;
}
vec2 equirectUv( in vec3 dir ) {
	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;
	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
	return vec2( u, v );
}
vec3 BRDF_Lambert( const in vec3 diffuseColor ) {
	return RECIPROCAL_PI * diffuseColor;
}
vec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
float F_Schlick( const in float f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
} // validated`,yM=`#ifdef ENVMAP_TYPE_CUBE_UV
	#define cubeUV_minMipLevel 4.0
	#define cubeUV_minTileSize 16.0
	float getFace( vec3 direction ) {
		vec3 absDirection = abs( direction );
		float face = - 1.0;
		if ( absDirection.x > absDirection.z ) {
			if ( absDirection.x > absDirection.y )
				face = direction.x > 0.0 ? 0.0 : 3.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		} else {
			if ( absDirection.z > absDirection.y )
				face = direction.z > 0.0 ? 2.0 : 5.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		}
		return face;
	}
	vec2 getUV( vec3 direction, float face ) {
		vec2 uv;
		if ( face == 0.0 ) {
			uv = vec2( direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 1.0 ) {
			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );
		} else if ( face == 2.0 ) {
			uv = vec2( - direction.x, direction.y ) / abs( direction.z );
		} else if ( face == 3.0 ) {
			uv = vec2( - direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 4.0 ) {
			uv = vec2( - direction.x, direction.z ) / abs( direction.y );
		} else {
			uv = vec2( direction.x, direction.y ) / abs( direction.z );
		}
		return 0.5 * ( uv + 1.0 );
	}
	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {
		float face = getFace( direction );
		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );
		mipInt = max( mipInt, cubeUV_minMipLevel );
		float faceSize = exp2( mipInt );
		highp vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;
		if ( face > 2.0 ) {
			uv.y += faceSize;
			face -= 3.0;
		}
		uv.x += face * faceSize;
		uv.x += filterInt * 3.0 * cubeUV_minTileSize;
		uv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );
		uv.x *= CUBEUV_TEXEL_WIDTH;
		uv.y *= CUBEUV_TEXEL_HEIGHT;
		#ifdef texture2DGradEXT
			return texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;
		#else
			return texture2D( envMap, uv ).rgb;
		#endif
	}
	#define cubeUV_r0 1.0
	#define cubeUV_m0 - 2.0
	#define cubeUV_r1 0.8
	#define cubeUV_m1 - 1.0
	#define cubeUV_r4 0.4
	#define cubeUV_m4 2.0
	#define cubeUV_r5 0.305
	#define cubeUV_m5 3.0
	#define cubeUV_r6 0.21
	#define cubeUV_m6 4.0
	float roughnessToMip( float roughness ) {
		float mip = 0.0;
		if ( roughness >= cubeUV_r1 ) {
			mip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;
		} else if ( roughness >= cubeUV_r4 ) {
			mip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;
		} else if ( roughness >= cubeUV_r5 ) {
			mip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;
		} else if ( roughness >= cubeUV_r6 ) {
			mip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;
		} else {
			mip = - 2.0 * log2( 1.16 * roughness );		}
		return mip;
	}
	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {
		float mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );
		float mipF = fract( mip );
		float mipInt = floor( mip );
		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );
		if ( mipF == 0.0 ) {
			return vec4( color0, 1.0 );
		} else {
			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );
			return vec4( mix( color0, color1, mipF ), 1.0 );
		}
	}
#endif`,bM=`vec3 transformedNormal = objectNormal;
#ifdef USE_TANGENT
	vec3 transformedTangent = objectTangent;
#endif
#ifdef USE_BATCHING
	mat3 bm = mat3( batchingMatrix );
	transformedNormal /= vec3( dot( bm[ 0 ], bm[ 0 ] ), dot( bm[ 1 ], bm[ 1 ] ), dot( bm[ 2 ], bm[ 2 ] ) );
	transformedNormal = bm * transformedNormal;
	#ifdef USE_TANGENT
		transformedTangent = bm * transformedTangent;
	#endif
#endif
#ifdef USE_INSTANCING
	mat3 im = mat3( instanceMatrix );
	transformedNormal /= vec3( dot( im[ 0 ], im[ 0 ] ), dot( im[ 1 ], im[ 1 ] ), dot( im[ 2 ], im[ 2 ] ) );
	transformedNormal = im * transformedNormal;
	#ifdef USE_TANGENT
		transformedTangent = im * transformedTangent;
	#endif
#endif
transformedNormal = normalMatrix * transformedNormal;
#ifdef FLIP_SIDED
	transformedNormal = - transformedNormal;
#endif
#ifdef USE_TANGENT
	transformedTangent = ( modelViewMatrix * vec4( transformedTangent, 0.0 ) ).xyz;
	#ifdef FLIP_SIDED
		transformedTangent = - transformedTangent;
	#endif
#endif`,wM=`#ifdef USE_DISPLACEMENTMAP
	uniform sampler2D displacementMap;
	uniform float displacementScale;
	uniform float displacementBias;
#endif`,vM=`#ifdef USE_DISPLACEMENTMAP
	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vDisplacementMapUv ).x * displacementScale + displacementBias );
#endif`,_M=`#ifdef USE_EMISSIVEMAP
	vec4 emissiveColor = texture2D( emissiveMap, vEmissiveMapUv );
	#ifdef DECODE_VIDEO_TEXTURE_EMISSIVE
		emissiveColor = sRGBTransferEOTF( emissiveColor );
	#endif
	totalEmissiveRadiance *= emissiveColor.rgb;
#endif`,CM=`#ifdef USE_EMISSIVEMAP
	uniform sampler2D emissiveMap;
#endif`,SM="gl_FragColor = linearToOutputTexel( gl_FragColor );",TM=`vec4 LinearTransferOETF( in vec4 value ) {
	return value;
}
vec4 sRGBTransferEOTF( in vec4 value ) {
	return vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );
}
vec4 sRGBTransferOETF( in vec4 value ) {
	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );
}`,EM=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vec3 cameraToFrag;
		if ( isOrthographic ) {
			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToFrag = normalize( vWorldPosition - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( cameraToFrag, worldNormal );
		#else
			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );
		#endif
	#else
		vec3 reflectVec = vReflect;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		vec4 envColor = textureCube( envMap, envMapRotation * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );
	#else
		vec4 envColor = vec4( 0.0 );
	#endif
	#ifdef ENVMAP_BLENDING_MULTIPLY
		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_MIX )
		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_ADD )
		outgoingLight += envColor.xyz * specularStrength * reflectivity;
	#endif
#endif`,IM=`#ifdef USE_ENVMAP
	uniform float envMapIntensity;
	uniform float flipEnvMap;
	uniform mat3 envMapRotation;
	#ifdef ENVMAP_TYPE_CUBE
		uniform samplerCube envMap;
	#else
		uniform sampler2D envMap;
	#endif
	
#endif`,RM=`#ifdef USE_ENVMAP
	uniform float reflectivity;
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		varying vec3 vWorldPosition;
		uniform float refractionRatio;
	#else
		varying vec3 vReflect;
	#endif
#endif`,MM=`#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		
		varying vec3 vWorldPosition;
	#else
		varying vec3 vReflect;
		uniform float refractionRatio;
	#endif
#endif`,AM=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vWorldPosition = worldPosition.xyz;
	#else
		vec3 cameraToVertex;
		if ( isOrthographic ) {
			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vReflect = reflect( cameraToVertex, worldNormal );
		#else
			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#endif
#endif`,NM=`#ifdef USE_FOG
	vFogDepth = - mvPosition.z;
#endif`,kM=`#ifdef USE_FOG
	varying float vFogDepth;
#endif`,DM=`#ifdef USE_FOG
	#ifdef FOG_EXP2
		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );
	#else
		float fogFactor = smoothstep( fogNear, fogFar, vFogDepth );
	#endif
	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );
#endif`,$M=`#ifdef USE_FOG
	uniform vec3 fogColor;
	varying float vFogDepth;
	#ifdef FOG_EXP2
		uniform float fogDensity;
	#else
		uniform float fogNear;
		uniform float fogFar;
	#endif
#endif`,FM=`#ifdef USE_GRADIENTMAP
	uniform sampler2D gradientMap;
#endif
vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {
	float dotNL = dot( normal, lightDirection );
	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );
	#ifdef USE_GRADIENTMAP
		return vec3( texture2D( gradientMap, coord ).r );
	#else
		vec2 fw = fwidth( coord ) * 0.5;
		return mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );
	#endif
}`,PM=`#ifdef USE_LIGHTMAP
	uniform sampler2D lightMap;
	uniform float lightMapIntensity;
#endif`,LM=`LambertMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularStrength = specularStrength;`,OM=`varying vec3 vViewPosition;
struct LambertMaterial {
	vec3 diffuseColor;
	float specularStrength;
};
void RE_Direct_Lambert( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Lambert
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Lambert`,UM=`uniform bool receiveShadow;
uniform vec3 ambientLightColor;
#if defined( USE_LIGHT_PROBES )
	uniform vec3 lightProbe[ 9 ];
#endif
vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {
	float x = normal.x, y = normal.y, z = normal.z;
	vec3 result = shCoefficients[ 0 ] * 0.886227;
	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;
	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;
	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;
	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;
	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;
	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );
	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;
	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );
	return result;
}
vec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {
	vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );
	return irradiance;
}
vec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {
	vec3 irradiance = ambientLightColor;
	return irradiance;
}
float getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {
	float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );
	if ( cutoffDistance > 0.0 ) {
		distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );
	}
	return distanceFalloff;
}
float getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {
	return smoothstep( coneCosine, penumbraCosine, angleCosine );
}
#if NUM_DIR_LIGHTS > 0
	struct DirectionalLight {
		vec3 direction;
		vec3 color;
	};
	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];
	void getDirectionalLightInfo( const in DirectionalLight directionalLight, out IncidentLight light ) {
		light.color = directionalLight.color;
		light.direction = directionalLight.direction;
		light.visible = true;
	}
#endif
#if NUM_POINT_LIGHTS > 0
	struct PointLight {
		vec3 position;
		vec3 color;
		float distance;
		float decay;
	};
	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];
	void getPointLightInfo( const in PointLight pointLight, const in vec3 geometryPosition, out IncidentLight light ) {
		vec3 lVector = pointLight.position - geometryPosition;
		light.direction = normalize( lVector );
		float lightDistance = length( lVector );
		light.color = pointLight.color;
		light.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );
		light.visible = ( light.color != vec3( 0.0 ) );
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	struct SpotLight {
		vec3 position;
		vec3 direction;
		vec3 color;
		float distance;
		float decay;
		float coneCos;
		float penumbraCos;
	};
	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];
	void getSpotLightInfo( const in SpotLight spotLight, const in vec3 geometryPosition, out IncidentLight light ) {
		vec3 lVector = spotLight.position - geometryPosition;
		light.direction = normalize( lVector );
		float angleCos = dot( light.direction, spotLight.direction );
		float spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );
		if ( spotAttenuation > 0.0 ) {
			float lightDistance = length( lVector );
			light.color = spotLight.color * spotAttenuation;
			light.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );
			light.visible = ( light.color != vec3( 0.0 ) );
		} else {
			light.color = vec3( 0.0 );
			light.visible = false;
		}
	}
#endif
#if NUM_RECT_AREA_LIGHTS > 0
	struct RectAreaLight {
		vec3 color;
		vec3 position;
		vec3 halfWidth;
		vec3 halfHeight;
	};
	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;
	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];
#endif
#if NUM_HEMI_LIGHTS > 0
	struct HemisphereLight {
		vec3 direction;
		vec3 skyColor;
		vec3 groundColor;
	};
	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];
	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {
		float dotNL = dot( normal, hemiLight.direction );
		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;
		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );
		return irradiance;
	}
#endif`,BM=`#ifdef USE_ENVMAP
	vec3 getIBLIrradiance( const in vec3 normal ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, envMapRotation * worldNormal, 1.0 );
			return PI * envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	vec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 reflectVec = reflect( - viewDir, normal );
			reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );
			reflectVec = inverseTransformDirection( reflectVec, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, envMapRotation * reflectVec, roughness );
			return envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	#ifdef USE_ANISOTROPY
		vec3 getIBLAnisotropyRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in vec3 bitangent, const in float anisotropy ) {
			#ifdef ENVMAP_TYPE_CUBE_UV
				vec3 bentNormal = cross( bitangent, viewDir );
				bentNormal = normalize( cross( bentNormal, bitangent ) );
				bentNormal = normalize( mix( bentNormal, normal, pow2( pow2( 1.0 - anisotropy * ( 1.0 - roughness ) ) ) ) );
				return getIBLRadiance( viewDir, bentNormal, roughness );
			#else
				return vec3( 0.0 );
			#endif
		}
	#endif
#endif`,zM=`ToonMaterial material;
material.diffuseColor = diffuseColor.rgb;`,VM=`varying vec3 vViewPosition;
struct ToonMaterial {
	vec3 diffuseColor;
};
void RE_Direct_Toon( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	vec3 irradiance = getGradientIrradiance( geometryNormal, directLight.direction ) * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Toon
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon`,WM=`BlinnPhongMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;`,GM=`varying vec3 vViewPosition;
struct BlinnPhongMaterial {
	vec3 diffuseColor;
	vec3 specularColor;
	float specularShininess;
	float specularStrength;
};
void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
	reflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometryViewDir, geometryNormal, material.specularColor, material.specularShininess ) * material.specularStrength;
}
void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_BlinnPhong
#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong`,HM=`PhysicalMaterial material;
material.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );
vec3 dxy = max( abs( dFdx( nonPerturbedNormal ) ), abs( dFdy( nonPerturbedNormal ) ) );
float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );
material.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;
material.roughness = min( material.roughness, 1.0 );
#ifdef IOR
	material.ior = ior;
	#ifdef USE_SPECULAR
		float specularIntensityFactor = specularIntensity;
		vec3 specularColorFactor = specularColor;
		#ifdef USE_SPECULAR_COLORMAP
			specularColorFactor *= texture2D( specularColorMap, vSpecularColorMapUv ).rgb;
		#endif
		#ifdef USE_SPECULAR_INTENSITYMAP
			specularIntensityFactor *= texture2D( specularIntensityMap, vSpecularIntensityMapUv ).a;
		#endif
		material.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );
	#else
		float specularIntensityFactor = 1.0;
		vec3 specularColorFactor = vec3( 1.0 );
		material.specularF90 = 1.0;
	#endif
	material.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );
#else
	material.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );
	material.specularF90 = 1.0;
#endif
#ifdef USE_CLEARCOAT
	material.clearcoat = clearcoat;
	material.clearcoatRoughness = clearcoatRoughness;
	material.clearcoatF0 = vec3( 0.04 );
	material.clearcoatF90 = 1.0;
	#ifdef USE_CLEARCOATMAP
		material.clearcoat *= texture2D( clearcoatMap, vClearcoatMapUv ).x;
	#endif
	#ifdef USE_CLEARCOAT_ROUGHNESSMAP
		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vClearcoatRoughnessMapUv ).y;
	#endif
	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );
	material.clearcoatRoughness += geometryRoughness;
	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );
#endif
#ifdef USE_DISPERSION
	material.dispersion = dispersion;
#endif
#ifdef USE_IRIDESCENCE
	material.iridescence = iridescence;
	material.iridescenceIOR = iridescenceIOR;
	#ifdef USE_IRIDESCENCEMAP
		material.iridescence *= texture2D( iridescenceMap, vIridescenceMapUv ).r;
	#endif
	#ifdef USE_IRIDESCENCE_THICKNESSMAP
		material.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vIridescenceThicknessMapUv ).g + iridescenceThicknessMinimum;
	#else
		material.iridescenceThickness = iridescenceThicknessMaximum;
	#endif
#endif
#ifdef USE_SHEEN
	material.sheenColor = sheenColor;
	#ifdef USE_SHEEN_COLORMAP
		material.sheenColor *= texture2D( sheenColorMap, vSheenColorMapUv ).rgb;
	#endif
	material.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );
	#ifdef USE_SHEEN_ROUGHNESSMAP
		material.sheenRoughness *= texture2D( sheenRoughnessMap, vSheenRoughnessMapUv ).a;
	#endif
#endif
#ifdef USE_ANISOTROPY
	#ifdef USE_ANISOTROPYMAP
		mat2 anisotropyMat = mat2( anisotropyVector.x, anisotropyVector.y, - anisotropyVector.y, anisotropyVector.x );
		vec3 anisotropyPolar = texture2D( anisotropyMap, vAnisotropyMapUv ).rgb;
		vec2 anisotropyV = anisotropyMat * normalize( 2.0 * anisotropyPolar.rg - vec2( 1.0 ) ) * anisotropyPolar.b;
	#else
		vec2 anisotropyV = anisotropyVector;
	#endif
	material.anisotropy = length( anisotropyV );
	if( material.anisotropy == 0.0 ) {
		anisotropyV = vec2( 1.0, 0.0 );
	} else {
		anisotropyV /= material.anisotropy;
		material.anisotropy = saturate( material.anisotropy );
	}
	material.alphaT = mix( pow2( material.roughness ), 1.0, pow2( material.anisotropy ) );
	material.anisotropyT = tbn[ 0 ] * anisotropyV.x + tbn[ 1 ] * anisotropyV.y;
	material.anisotropyB = tbn[ 1 ] * anisotropyV.x - tbn[ 0 ] * anisotropyV.y;
#endif`,XM=`struct PhysicalMaterial {
	vec3 diffuseColor;
	float roughness;
	vec3 specularColor;
	float specularF90;
	float dispersion;
	#ifdef USE_CLEARCOAT
		float clearcoat;
		float clearcoatRoughness;
		vec3 clearcoatF0;
		float clearcoatF90;
	#endif
	#ifdef USE_IRIDESCENCE
		float iridescence;
		float iridescenceIOR;
		float iridescenceThickness;
		vec3 iridescenceFresnel;
		vec3 iridescenceF0;
	#endif
	#ifdef USE_SHEEN
		vec3 sheenColor;
		float sheenRoughness;
	#endif
	#ifdef IOR
		float ior;
	#endif
	#ifdef USE_TRANSMISSION
		float transmission;
		float transmissionAlpha;
		float thickness;
		float attenuationDistance;
		vec3 attenuationColor;
	#endif
	#ifdef USE_ANISOTROPY
		float anisotropy;
		float alphaT;
		vec3 anisotropyT;
		vec3 anisotropyB;
	#endif
};
vec3 clearcoatSpecularDirect = vec3( 0.0 );
vec3 clearcoatSpecularIndirect = vec3( 0.0 );
vec3 sheenSpecularDirect = vec3( 0.0 );
vec3 sheenSpecularIndirect = vec3(0.0 );
vec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {
    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );
    float x2 = x * x;
    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );
    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );
}
float V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	return 0.5 / max( gv + gl, EPSILON );
}
float D_GGX( const in float alpha, const in float dotNH ) {
	float a2 = pow2( alpha );
	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;
	return RECIPROCAL_PI * a2 / pow2( denom );
}
#ifdef USE_ANISOTROPY
	float V_GGX_SmithCorrelated_Anisotropic( const in float alphaT, const in float alphaB, const in float dotTV, const in float dotBV, const in float dotTL, const in float dotBL, const in float dotNV, const in float dotNL ) {
		float gv = dotNL * length( vec3( alphaT * dotTV, alphaB * dotBV, dotNV ) );
		float gl = dotNV * length( vec3( alphaT * dotTL, alphaB * dotBL, dotNL ) );
		float v = 0.5 / ( gv + gl );
		return saturate(v);
	}
	float D_GGX_Anisotropic( const in float alphaT, const in float alphaB, const in float dotNH, const in float dotTH, const in float dotBH ) {
		float a2 = alphaT * alphaB;
		highp vec3 v = vec3( alphaB * dotTH, alphaT * dotBH, a2 * dotNH );
		highp float v2 = dot( v, v );
		float w2 = a2 / v2;
		return RECIPROCAL_PI * a2 * pow2 ( w2 );
	}
#endif
#ifdef USE_CLEARCOAT
	vec3 BRDF_GGX_Clearcoat( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material) {
		vec3 f0 = material.clearcoatF0;
		float f90 = material.clearcoatF90;
		float roughness = material.clearcoatRoughness;
		float alpha = pow2( roughness );
		vec3 halfDir = normalize( lightDir + viewDir );
		float dotNL = saturate( dot( normal, lightDir ) );
		float dotNV = saturate( dot( normal, viewDir ) );
		float dotNH = saturate( dot( normal, halfDir ) );
		float dotVH = saturate( dot( viewDir, halfDir ) );
		vec3 F = F_Schlick( f0, f90, dotVH );
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
		return F * ( V * D );
	}
#endif
vec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material ) {
	vec3 f0 = material.specularColor;
	float f90 = material.specularF90;
	float roughness = material.roughness;
	float alpha = pow2( roughness );
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( f0, f90, dotVH );
	#ifdef USE_IRIDESCENCE
		F = mix( F, material.iridescenceFresnel, material.iridescence );
	#endif
	#ifdef USE_ANISOTROPY
		float dotTL = dot( material.anisotropyT, lightDir );
		float dotTV = dot( material.anisotropyT, viewDir );
		float dotTH = dot( material.anisotropyT, halfDir );
		float dotBL = dot( material.anisotropyB, lightDir );
		float dotBV = dot( material.anisotropyB, viewDir );
		float dotBH = dot( material.anisotropyB, halfDir );
		float V = V_GGX_SmithCorrelated_Anisotropic( material.alphaT, alpha, dotTV, dotBV, dotTL, dotBL, dotNV, dotNL );
		float D = D_GGX_Anisotropic( material.alphaT, alpha, dotNH, dotTH, dotBH );
	#else
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
	#endif
	return F * ( V * D );
}
vec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {
	const float LUT_SIZE = 64.0;
	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;
	const float LUT_BIAS = 0.5 / LUT_SIZE;
	float dotNV = saturate( dot( N, V ) );
	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );
	uv = uv * LUT_SCALE + LUT_BIAS;
	return uv;
}
float LTC_ClippedSphereFormFactor( const in vec3 f ) {
	float l = length( f );
	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );
}
vec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {
	float x = dot( v1, v2 );
	float y = abs( x );
	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;
	float b = 3.4175940 + ( 4.1616724 + y ) * y;
	float v = a / b;
	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;
	return cross( v1, v2 ) * theta_sintheta;
}
vec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {
	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];
	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];
	vec3 lightNormal = cross( v1, v2 );
	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );
	vec3 T1, T2;
	T1 = normalize( V - N * dot( V, N ) );
	T2 = - cross( N, T1 );
	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );
	vec3 coords[ 4 ];
	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );
	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );
	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );
	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );
	coords[ 0 ] = normalize( coords[ 0 ] );
	coords[ 1 ] = normalize( coords[ 1 ] );
	coords[ 2 ] = normalize( coords[ 2 ] );
	coords[ 3 ] = normalize( coords[ 3 ] );
	vec3 vectorFormFactor = vec3( 0.0 );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );
	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );
	return vec3( result );
}
#if defined( USE_SHEEN )
float D_Charlie( float roughness, float dotNH ) {
	float alpha = pow2( roughness );
	float invAlpha = 1.0 / alpha;
	float cos2h = dotNH * dotNH;
	float sin2h = max( 1.0 - cos2h, 0.0078125 );
	return ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );
}
float V_Neubelt( float dotNV, float dotNL ) {
	return saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );
}
vec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float D = D_Charlie( sheenRoughness, dotNH );
	float V = V_Neubelt( dotNV, dotNL );
	return sheenColor * ( D * V );
}
#endif
float IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	float r2 = roughness * roughness;
	float a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;
	float b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;
	float DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );
	return saturate( DG * RECIPROCAL_PI );
}
vec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );
	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );
	vec4 r = roughness * c0 + c1;
	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;
	vec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;
	return fab;
}
vec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	return specularColor * fab.x + specularF90 * fab.y;
}
#ifdef USE_IRIDESCENCE
void computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#else
void computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#endif
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	#ifdef USE_IRIDESCENCE
		vec3 Fr = mix( specularColor, iridescenceF0, iridescence );
	#else
		vec3 Fr = specularColor;
	#endif
	vec3 FssEss = Fr * fab.x + specularF90 * fab.y;
	float Ess = fab.x + fab.y;
	float Ems = 1.0 - Ess;
	vec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );
	singleScatter += FssEss;
	multiScatter += Fms * Ems;
}
#if NUM_RECT_AREA_LIGHTS > 0
	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
		vec3 normal = geometryNormal;
		vec3 viewDir = geometryViewDir;
		vec3 position = geometryPosition;
		vec3 lightPos = rectAreaLight.position;
		vec3 halfWidth = rectAreaLight.halfWidth;
		vec3 halfHeight = rectAreaLight.halfHeight;
		vec3 lightColor = rectAreaLight.color;
		float roughness = material.roughness;
		vec3 rectCoords[ 4 ];
		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;
		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;
		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;
		vec2 uv = LTC_Uv( normal, viewDir, roughness );
		vec4 t1 = texture2D( ltc_1, uv );
		vec4 t2 = texture2D( ltc_2, uv );
		mat3 mInv = mat3(
			vec3( t1.x, 0, t1.y ),
			vec3(    0, 1,    0 ),
			vec3( t1.z, 0, t1.w )
		);
		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );
		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );
		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );
	}
#endif
void RE_Direct_Physical( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifdef USE_CLEARCOAT
		float dotNLcc = saturate( dot( geometryClearcoatNormal, directLight.direction ) );
		vec3 ccIrradiance = dotNLcc * directLight.color;
		clearcoatSpecularDirect += ccIrradiance * BRDF_GGX_Clearcoat( directLight.direction, geometryViewDir, geometryClearcoatNormal, material );
	#endif
	#ifdef USE_SHEEN
		sheenSpecularDirect += irradiance * BRDF_Sheen( directLight.direction, geometryViewDir, geometryNormal, material.sheenColor, material.sheenRoughness );
	#endif
	reflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometryViewDir, geometryNormal, material );
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {
	#ifdef USE_CLEARCOAT
		clearcoatSpecularIndirect += clearcoatRadiance * EnvironmentBRDF( geometryClearcoatNormal, geometryViewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecularIndirect += irradiance * material.sheenColor * IBLSheenBRDF( geometryNormal, geometryViewDir, material.sheenRoughness );
	#endif
	vec3 singleScattering = vec3( 0.0 );
	vec3 multiScattering = vec3( 0.0 );
	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;
	#ifdef USE_IRIDESCENCE
		computeMultiscatteringIridescence( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );
	#else
		computeMultiscattering( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );
	#endif
	vec3 totalScattering = singleScattering + multiScattering;
	vec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );
	reflectedLight.indirectSpecular += radiance * singleScattering;
	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;
	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;
}
#define RE_Direct				RE_Direct_Physical
#define RE_Direct_RectArea		RE_Direct_RectArea_Physical
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical
#define RE_IndirectSpecular		RE_IndirectSpecular_Physical
float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {
	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );
}`,qM=`
vec3 geometryPosition = - vViewPosition;
vec3 geometryNormal = normal;
vec3 geometryViewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );
vec3 geometryClearcoatNormal = vec3( 0.0 );
#ifdef USE_CLEARCOAT
	geometryClearcoatNormal = clearcoatNormal;
#endif
#ifdef USE_IRIDESCENCE
	float dotNVi = saturate( dot( normal, geometryViewDir ) );
	if ( material.iridescenceThickness == 0.0 ) {
		material.iridescence = 0.0;
	} else {
		material.iridescence = saturate( material.iridescence );
	}
	if ( material.iridescence > 0.0 ) {
		material.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );
		material.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );
	}
#endif
IncidentLight directLight;
#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )
	PointLight pointLight;
	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		getPointLightInfo( pointLight, geometryPosition, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )
		pointLightShadow = pointLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowIntensity, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )
	SpotLight spotLight;
	vec4 spotColor;
	vec3 spotLightCoord;
	bool inSpotLightMap;
	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		getSpotLightInfo( spotLight, geometryPosition, directLight );
		#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX
		#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS
		#else
		#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#endif
		#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )
			spotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;
			inSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );
			spotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );
			directLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;
		#endif
		#undef SPOT_LIGHT_MAP_INDEX
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		spotLightShadow = spotLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowIntensity, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )
	DirectionalLight directionalLight;
	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		getDirectionalLightInfo( directionalLight, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )
		directionalLightShadow = directionalLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowIntensity, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )
	RectAreaLight rectAreaLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {
		rectAreaLight = rectAreaLights[ i ];
		RE_Direct_RectArea( rectAreaLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if defined( RE_IndirectDiffuse )
	vec3 iblIrradiance = vec3( 0.0 );
	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );
	#if defined( USE_LIGHT_PROBES )
		irradiance += getLightProbeIrradiance( lightProbe, geometryNormal );
	#endif
	#if ( NUM_HEMI_LIGHTS > 0 )
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometryNormal );
		}
		#pragma unroll_loop_end
	#endif
#endif
#if defined( RE_IndirectSpecular )
	vec3 radiance = vec3( 0.0 );
	vec3 clearcoatRadiance = vec3( 0.0 );
#endif`,jM=`#if defined( RE_IndirectDiffuse )
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
		irradiance += lightMapIrradiance;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )
		iblIrradiance += getIBLIrradiance( geometryNormal );
	#endif
#endif
#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )
	#ifdef USE_ANISOTROPY
		radiance += getIBLAnisotropyRadiance( geometryViewDir, geometryNormal, material.roughness, material.anisotropyB, material.anisotropy );
	#else
		radiance += getIBLRadiance( geometryViewDir, geometryNormal, material.roughness );
	#endif
	#ifdef USE_CLEARCOAT
		clearcoatRadiance += getIBLRadiance( geometryViewDir, geometryClearcoatNormal, material.clearcoatRoughness );
	#endif
#endif`,KM=`#if defined( RE_IndirectDiffuse )
	RE_IndirectDiffuse( irradiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
#endif
#if defined( RE_IndirectSpecular )
	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
#endif`,YM=`#if defined( USE_LOGDEPTHBUF )
	gl_FragDepth = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;
#endif`,ZM=`#if defined( USE_LOGDEPTHBUF )
	uniform float logDepthBufFC;
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,JM=`#ifdef USE_LOGDEPTHBUF
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,QM=`#ifdef USE_LOGDEPTHBUF
	vFragDepth = 1.0 + gl_Position.w;
	vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );
#endif`,tA=`#ifdef USE_MAP
	vec4 sampledDiffuseColor = texture2D( map, vMapUv );
	#ifdef DECODE_VIDEO_TEXTURE
		sampledDiffuseColor = sRGBTransferEOTF( sampledDiffuseColor );
	#endif
	diffuseColor *= sampledDiffuseColor;
#endif`,eA=`#ifdef USE_MAP
	uniform sampler2D map;
#endif`,nA=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	#if defined( USE_POINTS_UV )
		vec2 uv = vUv;
	#else
		vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;
	#endif
#endif
#ifdef USE_MAP
	diffuseColor *= texture2D( map, uv );
#endif
#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, uv ).g;
#endif`,sA=`#if defined( USE_POINTS_UV )
	varying vec2 vUv;
#else
	#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
		uniform mat3 uvTransform;
	#endif
#endif
#ifdef USE_MAP
	uniform sampler2D map;
#endif
#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,iA=`float metalnessFactor = metalness;
#ifdef USE_METALNESSMAP
	vec4 texelMetalness = texture2D( metalnessMap, vMetalnessMapUv );
	metalnessFactor *= texelMetalness.b;
#endif`,oA=`#ifdef USE_METALNESSMAP
	uniform sampler2D metalnessMap;
#endif`,rA=`#ifdef USE_INSTANCING_MORPH
	float morphTargetInfluences[ MORPHTARGETS_COUNT ];
	float morphTargetBaseInfluence = texelFetch( morphTexture, ivec2( 0, gl_InstanceID ), 0 ).r;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		morphTargetInfluences[i] =  texelFetch( morphTexture, ivec2( i + 1, gl_InstanceID ), 0 ).r;
	}
#endif`,aA=`#if defined( USE_MORPHCOLORS )
	vColor *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		#if defined( USE_COLOR_ALPHA )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];
		#elif defined( USE_COLOR )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];
		#endif
	}
#endif`,cA=`#ifdef USE_MORPHNORMALS
	objectNormal *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		if ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];
	}
#endif`,uA=`#ifdef USE_MORPHTARGETS
	#ifndef USE_INSTANCING_MORPH
		uniform float morphTargetBaseInfluence;
		uniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];
	#endif
	uniform sampler2DArray morphTargetsTexture;
	uniform ivec2 morphTargetsTextureSize;
	vec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {
		int texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;
		int y = texelIndex / morphTargetsTextureSize.x;
		int x = texelIndex - y * morphTargetsTextureSize.x;
		ivec3 morphUV = ivec3( x, y, morphTargetIndex );
		return texelFetch( morphTargetsTexture, morphUV, 0 );
	}
#endif`,lA=`#ifdef USE_MORPHTARGETS
	transformed *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		if ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];
	}
#endif`,dA=`float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;
#ifdef FLAT_SHADED
	vec3 fdx = dFdx( vViewPosition );
	vec3 fdy = dFdy( vViewPosition );
	vec3 normal = normalize( cross( fdx, fdy ) );
#else
	vec3 normal = normalize( vNormal );
	#ifdef DOUBLE_SIDED
		normal *= faceDirection;
	#endif
#endif
#if defined( USE_NORMALMAP_TANGENTSPACE ) || defined( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY )
	#ifdef USE_TANGENT
		mat3 tbn = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn = getTangentFrame( - vViewPosition, normal,
		#if defined( USE_NORMALMAP )
			vNormalMapUv
		#elif defined( USE_CLEARCOAT_NORMALMAP )
			vClearcoatNormalMapUv
		#else
			vUv
		#endif
		);
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn[0] *= faceDirection;
		tbn[1] *= faceDirection;
	#endif
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	#ifdef USE_TANGENT
		mat3 tbn2 = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn2 = getTangentFrame( - vViewPosition, normal, vClearcoatNormalMapUv );
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn2[0] *= faceDirection;
		tbn2[1] *= faceDirection;
	#endif
#endif
vec3 nonPerturbedNormal = normal;`,hA=`#ifdef USE_NORMALMAP_OBJECTSPACE
	normal = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	#ifdef FLIP_SIDED
		normal = - normal;
	#endif
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	normal = normalize( normalMatrix * normal );
#elif defined( USE_NORMALMAP_TANGENTSPACE )
	vec3 mapN = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	mapN.xy *= normalScale;
	normal = normalize( tbn * mapN );
#elif defined( USE_BUMPMAP )
	normal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );
#endif`,fA=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,pA=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,mA=`#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif`,gA=`#ifdef USE_NORMALMAP
	uniform sampler2D normalMap;
	uniform vec2 normalScale;
#endif
#ifdef USE_NORMALMAP_OBJECTSPACE
	uniform mat3 normalMatrix;
#endif
#if ! defined ( USE_TANGENT ) && ( defined ( USE_NORMALMAP_TANGENTSPACE ) || defined ( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY ) )
	mat3 getTangentFrame( vec3 eye_pos, vec3 surf_norm, vec2 uv ) {
		vec3 q0 = dFdx( eye_pos.xyz );
		vec3 q1 = dFdy( eye_pos.xyz );
		vec2 st0 = dFdx( uv.st );
		vec2 st1 = dFdy( uv.st );
		vec3 N = surf_norm;
		vec3 q1perp = cross( q1, N );
		vec3 q0perp = cross( N, q0 );
		vec3 T = q1perp * st0.x + q0perp * st1.x;
		vec3 B = q1perp * st0.y + q0perp * st1.y;
		float det = max( dot( T, T ), dot( B, B ) );
		float scale = ( det == 0.0 ) ? 0.0 : inversesqrt( det );
		return mat3( T * scale, B * scale, N );
	}
#endif`,xA=`#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal = nonPerturbedNormal;
#endif`,yA=`#ifdef USE_CLEARCOAT_NORMALMAP
	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vClearcoatNormalMapUv ).xyz * 2.0 - 1.0;
	clearcoatMapN.xy *= clearcoatNormalScale;
	clearcoatNormal = normalize( tbn2 * clearcoatMapN );
#endif`,bA=`#ifdef USE_CLEARCOATMAP
	uniform sampler2D clearcoatMap;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform sampler2D clearcoatNormalMap;
	uniform vec2 clearcoatNormalScale;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform sampler2D clearcoatRoughnessMap;
#endif`,wA=`#ifdef USE_IRIDESCENCEMAP
	uniform sampler2D iridescenceMap;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform sampler2D iridescenceThicknessMap;
#endif`,vA=`#ifdef OPAQUE
diffuseColor.a = 1.0;
#endif
#ifdef USE_TRANSMISSION
diffuseColor.a *= material.transmissionAlpha;
#endif
gl_FragColor = vec4( outgoingLight, diffuseColor.a );`,_A=`vec3 packNormalToRGB( const in vec3 normal ) {
	return normalize( normal ) * 0.5 + 0.5;
}
vec3 unpackRGBToNormal( const in vec3 rgb ) {
	return 2.0 * rgb.xyz - 1.0;
}
const float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;const float ShiftRight8 = 1. / 256.;
const float Inv255 = 1. / 255.;
const vec4 PackFactors = vec4( 1.0, 256.0, 256.0 * 256.0, 256.0 * 256.0 * 256.0 );
const vec2 UnpackFactors2 = vec2( UnpackDownscale, 1.0 / PackFactors.g );
const vec3 UnpackFactors3 = vec3( UnpackDownscale / PackFactors.rg, 1.0 / PackFactors.b );
const vec4 UnpackFactors4 = vec4( UnpackDownscale / PackFactors.rgb, 1.0 / PackFactors.a );
vec4 packDepthToRGBA( const in float v ) {
	if( v <= 0.0 )
		return vec4( 0., 0., 0., 0. );
	if( v >= 1.0 )
		return vec4( 1., 1., 1., 1. );
	float vuf;
	float af = modf( v * PackFactors.a, vuf );
	float bf = modf( vuf * ShiftRight8, vuf );
	float gf = modf( vuf * ShiftRight8, vuf );
	return vec4( vuf * Inv255, gf * PackUpscale, bf * PackUpscale, af );
}
vec3 packDepthToRGB( const in float v ) {
	if( v <= 0.0 )
		return vec3( 0., 0., 0. );
	if( v >= 1.0 )
		return vec3( 1., 1., 1. );
	float vuf;
	float bf = modf( v * PackFactors.b, vuf );
	float gf = modf( vuf * ShiftRight8, vuf );
	return vec3( vuf * Inv255, gf * PackUpscale, bf );
}
vec2 packDepthToRG( const in float v ) {
	if( v <= 0.0 )
		return vec2( 0., 0. );
	if( v >= 1.0 )
		return vec2( 1., 1. );
	float vuf;
	float gf = modf( v * 256., vuf );
	return vec2( vuf * Inv255, gf );
}
float unpackRGBAToDepth( const in vec4 v ) {
	return dot( v, UnpackFactors4 );
}
float unpackRGBToDepth( const in vec3 v ) {
	return dot( v, UnpackFactors3 );
}
float unpackRGToDepth( const in vec2 v ) {
	return v.r * UnpackFactors2.r + v.g * UnpackFactors2.g;
}
vec4 pack2HalfToRGBA( const in vec2 v ) {
	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );
	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );
}
vec2 unpackRGBATo2Half( const in vec4 v ) {
	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );
}
float viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {
	return ( viewZ + near ) / ( near - far );
}
float orthographicDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return depth * ( near - far ) - near;
}
float viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {
	return ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );
}
float perspectiveDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return ( near * far ) / ( ( far - near ) * depth - far );
}`,CA=`#ifdef PREMULTIPLIED_ALPHA
	gl_FragColor.rgb *= gl_FragColor.a;
#endif`,SA=`vec4 mvPosition = vec4( transformed, 1.0 );
#ifdef USE_BATCHING
	mvPosition = batchingMatrix * mvPosition;
#endif
#ifdef USE_INSTANCING
	mvPosition = instanceMatrix * mvPosition;
#endif
mvPosition = modelViewMatrix * mvPosition;
gl_Position = projectionMatrix * mvPosition;`,TA=`#ifdef DITHERING
	gl_FragColor.rgb = dithering( gl_FragColor.rgb );
#endif`,EA=`#ifdef DITHERING
	vec3 dithering( vec3 color ) {
		float grid_position = rand( gl_FragCoord.xy );
		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );
		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );
		return color + dither_shift_RGB;
	}
#endif`,IA=`float roughnessFactor = roughness;
#ifdef USE_ROUGHNESSMAP
	vec4 texelRoughness = texture2D( roughnessMap, vRoughnessMapUv );
	roughnessFactor *= texelRoughness.g;
#endif`,RA=`#ifdef USE_ROUGHNESSMAP
	uniform sampler2D roughnessMap;
#endif`,MA=`#if NUM_SPOT_LIGHT_COORDS > 0
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#if NUM_SPOT_LIGHT_MAPS > 0
	uniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {
		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );
	}
	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {
		return unpackRGBATo2Half( texture2D( shadow, uv ) );
	}
	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){
		float occlusion = 1.0;
		vec2 distribution = texture2DDistribution( shadow, uv );
		float hard_shadow = step( compare , distribution.x );
		if (hard_shadow != 1.0 ) {
			float distance = compare - distribution.x ;
			float variance = max( 0.00000, distribution.y * distribution.y );
			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );
		}
		return occlusion;
	}
	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowIntensity, float shadowBias, float shadowRadius, vec4 shadowCoord ) {
		float shadow = 1.0;
		shadowCoord.xyz /= shadowCoord.w;
		shadowCoord.z += shadowBias;
		bool inFrustum = shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0;
		bool frustumTest = inFrustum && shadowCoord.z <= 1.0;
		if ( frustumTest ) {
		#if defined( SHADOWMAP_TYPE_PCF )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			float dx2 = dx0 / 2.0;
			float dy2 = dy0 / 2.0;
			float dx3 = dx1 / 2.0;
			float dy3 = dy1 / 2.0;
			shadow = (
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 17.0 );
		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx = texelSize.x;
			float dy = texelSize.y;
			vec2 uv = shadowCoord.xy;
			vec2 f = fract( uv * shadowMapSize + 0.5 );
			uv -= f * texelSize;
			shadow = (
				texture2DCompare( shadowMap, uv, shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),
						  f.x ),
					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),
						  f.x ),
					 f.y )
			) * ( 1.0 / 9.0 );
		#elif defined( SHADOWMAP_TYPE_VSM )
			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );
		#else
			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );
		#endif
		}
		return mix( 1.0, shadow, shadowIntensity );
	}
	vec2 cubeToUV( vec3 v, float texelSizeY ) {
		vec3 absV = abs( v );
		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );
		absV *= scaleToCube;
		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );
		vec2 planar = v.xy;
		float almostATexel = 1.5 * texelSizeY;
		float almostOne = 1.0 - almostATexel;
		if ( absV.z >= almostOne ) {
			if ( v.z > 0.0 )
				planar.x = 4.0 - v.x;
		} else if ( absV.x >= almostOne ) {
			float signX = sign( v.x );
			planar.x = v.z * signX + 2.0 * signX;
		} else if ( absV.y >= almostOne ) {
			float signY = sign( v.y );
			planar.x = v.x + 2.0 * signY + 2.0;
			planar.y = v.z * signY - 2.0;
		}
		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );
	}
	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowIntensity, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {
		float shadow = 1.0;
		vec3 lightToPosition = shadowCoord.xyz;
		
		float lightToPositionLength = length( lightToPosition );
		if ( lightToPositionLength - shadowCameraFar <= 0.0 && lightToPositionLength - shadowCameraNear >= 0.0 ) {
			float dp = ( lightToPositionLength - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );			dp += shadowBias;
			vec3 bd3D = normalize( lightToPosition );
			vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );
			#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )
				vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;
				shadow = (
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )
				) * ( 1.0 / 9.0 );
			#else
				shadow = texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );
			#endif
		}
		return mix( 1.0, shadow, shadowIntensity );
	}
#endif`,AA=`#if NUM_SPOT_LIGHT_COORDS > 0
	uniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		struct SpotLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
#endif`,NA=`#if ( defined( USE_SHADOWMAP ) && ( NUM_DIR_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0 ) ) || ( NUM_SPOT_LIGHT_COORDS > 0 )
	vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
	vec4 shadowWorldPosition;
#endif
#if defined( USE_SHADOWMAP )
	#if NUM_DIR_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );
			vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );
			vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
#endif
#if NUM_SPOT_LIGHT_COORDS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {
		shadowWorldPosition = worldPosition;
		#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
			shadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;
		#endif
		vSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
#endif`,kA=`float getShadowMask() {
	float shadow = 1.0;
	#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		directionalLight = directionalLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowIntensity, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		spotLight = spotLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowIntensity, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		pointLight = pointLightShadows[ i ];
		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowIntensity, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#endif
	return shadow;
}`,DA=`#ifdef USE_SKINNING
	mat4 boneMatX = getBoneMatrix( skinIndex.x );
	mat4 boneMatY = getBoneMatrix( skinIndex.y );
	mat4 boneMatZ = getBoneMatrix( skinIndex.z );
	mat4 boneMatW = getBoneMatrix( skinIndex.w );
#endif`,$A=`#ifdef USE_SKINNING
	uniform mat4 bindMatrix;
	uniform mat4 bindMatrixInverse;
	uniform highp sampler2D boneTexture;
	mat4 getBoneMatrix( const in float i ) {
		int size = textureSize( boneTexture, 0 ).x;
		int j = int( i ) * 4;
		int x = j % size;
		int y = j / size;
		vec4 v1 = texelFetch( boneTexture, ivec2( x, y ), 0 );
		vec4 v2 = texelFetch( boneTexture, ivec2( x + 1, y ), 0 );
		vec4 v3 = texelFetch( boneTexture, ivec2( x + 2, y ), 0 );
		vec4 v4 = texelFetch( boneTexture, ivec2( x + 3, y ), 0 );
		return mat4( v1, v2, v3, v4 );
	}
#endif`,FA=`#ifdef USE_SKINNING
	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );
	vec4 skinned = vec4( 0.0 );
	skinned += boneMatX * skinVertex * skinWeight.x;
	skinned += boneMatY * skinVertex * skinWeight.y;
	skinned += boneMatZ * skinVertex * skinWeight.z;
	skinned += boneMatW * skinVertex * skinWeight.w;
	transformed = ( bindMatrixInverse * skinned ).xyz;
#endif`,PA=`#ifdef USE_SKINNING
	mat4 skinMatrix = mat4( 0.0 );
	skinMatrix += skinWeight.x * boneMatX;
	skinMatrix += skinWeight.y * boneMatY;
	skinMatrix += skinWeight.z * boneMatZ;
	skinMatrix += skinWeight.w * boneMatW;
	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;
	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;
	#ifdef USE_TANGENT
		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#endif
#endif`,LA=`float specularStrength;
#ifdef USE_SPECULARMAP
	vec4 texelSpecular = texture2D( specularMap, vSpecularMapUv );
	specularStrength = texelSpecular.r;
#else
	specularStrength = 1.0;
#endif`,OA=`#ifdef USE_SPECULARMAP
	uniform sampler2D specularMap;
#endif`,UA=`#if defined( TONE_MAPPING )
	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );
#endif`,BA=`#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
uniform float toneMappingExposure;
vec3 LinearToneMapping( vec3 color ) {
	return saturate( toneMappingExposure * color );
}
vec3 ReinhardToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( color / ( vec3( 1.0 ) + color ) );
}
vec3 CineonToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	color = max( vec3( 0.0 ), color - 0.004 );
	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );
}
vec3 RRTAndODTFit( vec3 v ) {
	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;
	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;
	return a / b;
}
vec3 ACESFilmicToneMapping( vec3 color ) {
	const mat3 ACESInputMat = mat3(
		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),
		vec3( 0.04823, 0.01566, 0.83777 )
	);
	const mat3 ACESOutputMat = mat3(
		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),
		vec3( -0.07367, -0.00605,  1.07602 )
	);
	color *= toneMappingExposure / 0.6;
	color = ACESInputMat * color;
	color = RRTAndODTFit( color );
	color = ACESOutputMat * color;
	return saturate( color );
}
const mat3 LINEAR_REC2020_TO_LINEAR_SRGB = mat3(
	vec3( 1.6605, - 0.1246, - 0.0182 ),
	vec3( - 0.5876, 1.1329, - 0.1006 ),
	vec3( - 0.0728, - 0.0083, 1.1187 )
);
const mat3 LINEAR_SRGB_TO_LINEAR_REC2020 = mat3(
	vec3( 0.6274, 0.0691, 0.0164 ),
	vec3( 0.3293, 0.9195, 0.0880 ),
	vec3( 0.0433, 0.0113, 0.8956 )
);
vec3 agxDefaultContrastApprox( vec3 x ) {
	vec3 x2 = x * x;
	vec3 x4 = x2 * x2;
	return + 15.5 * x4 * x2
		- 40.14 * x4 * x
		+ 31.96 * x4
		- 6.868 * x2 * x
		+ 0.4298 * x2
		+ 0.1191 * x
		- 0.00232;
}
vec3 AgXToneMapping( vec3 color ) {
	const mat3 AgXInsetMatrix = mat3(
		vec3( 0.856627153315983, 0.137318972929847, 0.11189821299995 ),
		vec3( 0.0951212405381588, 0.761241990602591, 0.0767994186031903 ),
		vec3( 0.0482516061458583, 0.101439036467562, 0.811302368396859 )
	);
	const mat3 AgXOutsetMatrix = mat3(
		vec3( 1.1271005818144368, - 0.1413297634984383, - 0.14132976349843826 ),
		vec3( - 0.11060664309660323, 1.157823702216272, - 0.11060664309660294 ),
		vec3( - 0.016493938717834573, - 0.016493938717834257, 1.2519364065950405 )
	);
	const float AgxMinEv = - 12.47393;	const float AgxMaxEv = 4.026069;
	color *= toneMappingExposure;
	color = LINEAR_SRGB_TO_LINEAR_REC2020 * color;
	color = AgXInsetMatrix * color;
	color = max( color, 1e-10 );	color = log2( color );
	color = ( color - AgxMinEv ) / ( AgxMaxEv - AgxMinEv );
	color = clamp( color, 0.0, 1.0 );
	color = agxDefaultContrastApprox( color );
	color = AgXOutsetMatrix * color;
	color = pow( max( vec3( 0.0 ), color ), vec3( 2.2 ) );
	color = LINEAR_REC2020_TO_LINEAR_SRGB * color;
	color = clamp( color, 0.0, 1.0 );
	return color;
}
vec3 NeutralToneMapping( vec3 color ) {
	const float StartCompression = 0.8 - 0.04;
	const float Desaturation = 0.15;
	color *= toneMappingExposure;
	float x = min( color.r, min( color.g, color.b ) );
	float offset = x < 0.08 ? x - 6.25 * x * x : 0.04;
	color -= offset;
	float peak = max( color.r, max( color.g, color.b ) );
	if ( peak < StartCompression ) return color;
	float d = 1. - StartCompression;
	float newPeak = 1. - d * d / ( peak + d - StartCompression );
	color *= newPeak / peak;
	float g = 1. - 1. / ( Desaturation * ( peak - newPeak ) + 1. );
	return mix( color, vec3( newPeak ), g );
}
vec3 CustomToneMapping( vec3 color ) { return color; }`,zA=`#ifdef USE_TRANSMISSION
	material.transmission = transmission;
	material.transmissionAlpha = 1.0;
	material.thickness = thickness;
	material.attenuationDistance = attenuationDistance;
	material.attenuationColor = attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		material.transmission *= texture2D( transmissionMap, vTransmissionMapUv ).r;
	#endif
	#ifdef USE_THICKNESSMAP
		material.thickness *= texture2D( thicknessMap, vThicknessMapUv ).g;
	#endif
	vec3 pos = vWorldPosition;
	vec3 v = normalize( cameraPosition - pos );
	vec3 n = inverseTransformDirection( normal, viewMatrix );
	vec4 transmitted = getIBLVolumeRefraction(
		n, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,
		pos, modelMatrix, viewMatrix, projectionMatrix, material.dispersion, material.ior, material.thickness,
		material.attenuationColor, material.attenuationDistance );
	material.transmissionAlpha = mix( material.transmissionAlpha, transmitted.a, material.transmission );
	totalDiffuse = mix( totalDiffuse, transmitted.rgb, material.transmission );
#endif`,VA=`#ifdef USE_TRANSMISSION
	uniform float transmission;
	uniform float thickness;
	uniform float attenuationDistance;
	uniform vec3 attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		uniform sampler2D transmissionMap;
	#endif
	#ifdef USE_THICKNESSMAP
		uniform sampler2D thicknessMap;
	#endif
	uniform vec2 transmissionSamplerSize;
	uniform sampler2D transmissionSamplerMap;
	uniform mat4 modelMatrix;
	uniform mat4 projectionMatrix;
	varying vec3 vWorldPosition;
	float w0( float a ) {
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - a + 3.0 ) - 3.0 ) + 1.0 );
	}
	float w1( float a ) {
		return ( 1.0 / 6.0 ) * ( a *  a * ( 3.0 * a - 6.0 ) + 4.0 );
	}
	float w2( float a ){
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - 3.0 * a + 3.0 ) + 3.0 ) + 1.0 );
	}
	float w3( float a ) {
		return ( 1.0 / 6.0 ) * ( a * a * a );
	}
	float g0( float a ) {
		return w0( a ) + w1( a );
	}
	float g1( float a ) {
		return w2( a ) + w3( a );
	}
	float h0( float a ) {
		return - 1.0 + w1( a ) / ( w0( a ) + w1( a ) );
	}
	float h1( float a ) {
		return 1.0 + w3( a ) / ( w2( a ) + w3( a ) );
	}
	vec4 bicubic( sampler2D tex, vec2 uv, vec4 texelSize, float lod ) {
		uv = uv * texelSize.zw + 0.5;
		vec2 iuv = floor( uv );
		vec2 fuv = fract( uv );
		float g0x = g0( fuv.x );
		float g1x = g1( fuv.x );
		float h0x = h0( fuv.x );
		float h1x = h1( fuv.x );
		float h0y = h0( fuv.y );
		float h1y = h1( fuv.y );
		vec2 p0 = ( vec2( iuv.x + h0x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p1 = ( vec2( iuv.x + h1x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p2 = ( vec2( iuv.x + h0x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		vec2 p3 = ( vec2( iuv.x + h1x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		return g0( fuv.y ) * ( g0x * textureLod( tex, p0, lod ) + g1x * textureLod( tex, p1, lod ) ) +
			g1( fuv.y ) * ( g0x * textureLod( tex, p2, lod ) + g1x * textureLod( tex, p3, lod ) );
	}
	vec4 textureBicubic( sampler2D sampler, vec2 uv, float lod ) {
		vec2 fLodSize = vec2( textureSize( sampler, int( lod ) ) );
		vec2 cLodSize = vec2( textureSize( sampler, int( lod + 1.0 ) ) );
		vec2 fLodSizeInv = 1.0 / fLodSize;
		vec2 cLodSizeInv = 1.0 / cLodSize;
		vec4 fSample = bicubic( sampler, uv, vec4( fLodSizeInv, fLodSize ), floor( lod ) );
		vec4 cSample = bicubic( sampler, uv, vec4( cLodSizeInv, cLodSize ), ceil( lod ) );
		return mix( fSample, cSample, fract( lod ) );
	}
	vec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {
		vec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );
		vec3 modelScale;
		modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );
		modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );
		modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );
		return normalize( refractionVector ) * thickness * modelScale;
	}
	float applyIorToRoughness( const in float roughness, const in float ior ) {
		return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );
	}
	vec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {
		float lod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );
		return textureBicubic( transmissionSamplerMap, fragCoord.xy, lod );
	}
	vec3 volumeAttenuation( const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {
		if ( isinf( attenuationDistance ) ) {
			return vec3( 1.0 );
		} else {
			vec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;
			vec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );			return transmittance;
		}
	}
	vec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,
		const in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,
		const in mat4 viewMatrix, const in mat4 projMatrix, const in float dispersion, const in float ior, const in float thickness,
		const in vec3 attenuationColor, const in float attenuationDistance ) {
		vec4 transmittedLight;
		vec3 transmittance;
		#ifdef USE_DISPERSION
			float halfSpread = ( ior - 1.0 ) * 0.025 * dispersion;
			vec3 iors = vec3( ior - halfSpread, ior, ior + halfSpread );
			for ( int i = 0; i < 3; i ++ ) {
				vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, iors[ i ], modelMatrix );
				vec3 refractedRayExit = position + transmissionRay;
				vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
				vec2 refractionCoords = ndcPos.xy / ndcPos.w;
				refractionCoords += 1.0;
				refractionCoords /= 2.0;
				vec4 transmissionSample = getTransmissionSample( refractionCoords, roughness, iors[ i ] );
				transmittedLight[ i ] = transmissionSample[ i ];
				transmittedLight.a += transmissionSample.a;
				transmittance[ i ] = diffuseColor[ i ] * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance )[ i ];
			}
			transmittedLight.a /= 3.0;
		#else
			vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );
			vec3 refractedRayExit = position + transmissionRay;
			vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
			vec2 refractionCoords = ndcPos.xy / ndcPos.w;
			refractionCoords += 1.0;
			refractionCoords /= 2.0;
			transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );
			transmittance = diffuseColor * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance );
		#endif
		vec3 attenuatedColor = transmittance * transmittedLight.rgb;
		vec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );
		float transmittanceFactor = ( transmittance.r + transmittance.g + transmittance.b ) / 3.0;
		return vec4( ( 1.0 - F ) * attenuatedColor, 1.0 - ( 1.0 - transmittedLight.a ) * transmittanceFactor );
	}
#endif`,WA=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_SPECULARMAP
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,GA=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	uniform mat3 mapTransform;
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	uniform mat3 alphaMapTransform;
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	uniform mat3 lightMapTransform;
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	uniform mat3 aoMapTransform;
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	uniform mat3 bumpMapTransform;
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	uniform mat3 normalMapTransform;
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_DISPLACEMENTMAP
	uniform mat3 displacementMapTransform;
	varying vec2 vDisplacementMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	uniform mat3 emissiveMapTransform;
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	uniform mat3 metalnessMapTransform;
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	uniform mat3 roughnessMapTransform;
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	uniform mat3 anisotropyMapTransform;
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	uniform mat3 clearcoatMapTransform;
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform mat3 clearcoatNormalMapTransform;
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform mat3 clearcoatRoughnessMapTransform;
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	uniform mat3 sheenColorMapTransform;
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	uniform mat3 sheenRoughnessMapTransform;
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	uniform mat3 iridescenceMapTransform;
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform mat3 iridescenceThicknessMapTransform;
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SPECULARMAP
	uniform mat3 specularMapTransform;
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	uniform mat3 specularColorMapTransform;
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	uniform mat3 specularIntensityMapTransform;
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,HA=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	vUv = vec3( uv, 1 ).xy;
#endif
#ifdef USE_MAP
	vMapUv = ( mapTransform * vec3( MAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ALPHAMAP
	vAlphaMapUv = ( alphaMapTransform * vec3( ALPHAMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_LIGHTMAP
	vLightMapUv = ( lightMapTransform * vec3( LIGHTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_AOMAP
	vAoMapUv = ( aoMapTransform * vec3( AOMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_BUMPMAP
	vBumpMapUv = ( bumpMapTransform * vec3( BUMPMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_NORMALMAP
	vNormalMapUv = ( normalMapTransform * vec3( NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_DISPLACEMENTMAP
	vDisplacementMapUv = ( displacementMapTransform * vec3( DISPLACEMENTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_EMISSIVEMAP
	vEmissiveMapUv = ( emissiveMapTransform * vec3( EMISSIVEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_METALNESSMAP
	vMetalnessMapUv = ( metalnessMapTransform * vec3( METALNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ROUGHNESSMAP
	vRoughnessMapUv = ( roughnessMapTransform * vec3( ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ANISOTROPYMAP
	vAnisotropyMapUv = ( anisotropyMapTransform * vec3( ANISOTROPYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOATMAP
	vClearcoatMapUv = ( clearcoatMapTransform * vec3( CLEARCOATMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	vClearcoatNormalMapUv = ( clearcoatNormalMapTransform * vec3( CLEARCOAT_NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	vClearcoatRoughnessMapUv = ( clearcoatRoughnessMapTransform * vec3( CLEARCOAT_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCEMAP
	vIridescenceMapUv = ( iridescenceMapTransform * vec3( IRIDESCENCEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	vIridescenceThicknessMapUv = ( iridescenceThicknessMapTransform * vec3( IRIDESCENCE_THICKNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_COLORMAP
	vSheenColorMapUv = ( sheenColorMapTransform * vec3( SHEEN_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	vSheenRoughnessMapUv = ( sheenRoughnessMapTransform * vec3( SHEEN_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULARMAP
	vSpecularMapUv = ( specularMapTransform * vec3( SPECULARMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_COLORMAP
	vSpecularColorMapUv = ( specularColorMapTransform * vec3( SPECULAR_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	vSpecularIntensityMapUv = ( specularIntensityMapTransform * vec3( SPECULAR_INTENSITYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_TRANSMISSIONMAP
	vTransmissionMapUv = ( transmissionMapTransform * vec3( TRANSMISSIONMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_THICKNESSMAP
	vThicknessMapUv = ( thicknessMapTransform * vec3( THICKNESSMAP_UV, 1 ) ).xy;
#endif`,XA=`#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0
	vec4 worldPosition = vec4( transformed, 1.0 );
	#ifdef USE_BATCHING
		worldPosition = batchingMatrix * worldPosition;
	#endif
	#ifdef USE_INSTANCING
		worldPosition = instanceMatrix * worldPosition;
	#endif
	worldPosition = modelMatrix * worldPosition;
#endif`;const qA=`varying vec2 vUv;
uniform mat3 uvTransform;
void main() {
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	gl_Position = vec4( position.xy, 1.0, 1.0 );
}`,jA=`uniform sampler2D t2D;
uniform float backgroundIntensity;
varying vec2 vUv;
void main() {
	vec4 texColor = texture2D( t2D, vUv );
	#ifdef DECODE_VIDEO_TEXTURE
		texColor = vec4( mix( pow( texColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), texColor.rgb * 0.0773993808, vec3( lessThanEqual( texColor.rgb, vec3( 0.04045 ) ) ) ), texColor.w );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,KA=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,YA=`#ifdef ENVMAP_TYPE_CUBE
	uniform samplerCube envMap;
#elif defined( ENVMAP_TYPE_CUBE_UV )
	uniform sampler2D envMap;
#endif
uniform float flipEnvMap;
uniform float backgroundBlurriness;
uniform float backgroundIntensity;
uniform mat3 backgroundRotation;
varying vec3 vWorldDirection;
#include <cube_uv_reflection_fragment>
void main() {
	#ifdef ENVMAP_TYPE_CUBE
		vec4 texColor = textureCube( envMap, backgroundRotation * vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );
	#elif defined( ENVMAP_TYPE_CUBE_UV )
		vec4 texColor = textureCubeUV( envMap, backgroundRotation * vWorldDirection, backgroundBlurriness );
	#else
		vec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,ZA=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,JA=`uniform samplerCube tCube;
uniform float tFlip;
uniform float opacity;
varying vec3 vWorldDirection;
void main() {
	vec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );
	gl_FragColor = texColor;
	gl_FragColor.a *= opacity;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,QA=`#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
varying vec2 vHighPrecisionZW;
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <skinbase_vertex>
	#include <morphinstance_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vHighPrecisionZW = gl_Position.zw;
}`,tN=`#if DEPTH_PACKING == 3200
	uniform float opacity;
#endif
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
varying vec2 vHighPrecisionZW;
void main() {
	vec4 diffuseColor = vec4( 1.0 );
	#include <clipping_planes_fragment>
	#if DEPTH_PACKING == 3200
		diffuseColor.a = opacity;
	#endif
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <logdepthbuf_fragment>
	float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;
	#if DEPTH_PACKING == 3200
		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );
	#elif DEPTH_PACKING == 3201
		gl_FragColor = packDepthToRGBA( fragCoordZ );
	#elif DEPTH_PACKING == 3202
		gl_FragColor = vec4( packDepthToRGB( fragCoordZ ), 1.0 );
	#elif DEPTH_PACKING == 3203
		gl_FragColor = vec4( packDepthToRG( fragCoordZ ), 0.0, 1.0 );
	#endif
}`,eN=`#define DISTANCE
varying vec3 vWorldPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <skinbase_vertex>
	#include <morphinstance_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	vWorldPosition = worldPosition.xyz;
}`,nN=`#define DISTANCE
uniform vec3 referencePosition;
uniform float nearDistance;
uniform float farDistance;
varying vec3 vWorldPosition;
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <clipping_planes_pars_fragment>
void main () {
	vec4 diffuseColor = vec4( 1.0 );
	#include <clipping_planes_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	float dist = length( vWorldPosition - referencePosition );
	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );
	dist = saturate( dist );
	gl_FragColor = packDepthToRGBA( dist );
}`,sN=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
}`,iN=`uniform sampler2D tEquirect;
varying vec3 vWorldDirection;
#include <common>
void main() {
	vec3 direction = normalize( vWorldDirection );
	vec2 sampleUV = equirectUv( direction );
	gl_FragColor = texture2D( tEquirect, sampleUV );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,oN=`uniform float scale;
attribute float lineDistance;
varying float vLineDistance;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	vLineDistance = scale * lineDistance;
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,rN=`uniform vec3 diffuse;
uniform float opacity;
uniform float dashSize;
uniform float totalSize;
varying float vLineDistance;
#include <common>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	if ( mod( vLineDistance, totalSize ) > dashSize ) {
		discard;
	}
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,aN=`#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinbase_vertex>
		#include <skinnormal_vertex>
		#include <defaultnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <fog_vertex>
}`,cN=`uniform vec3 diffuse;
uniform float opacity;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		reflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;
	#else
		reflectedLight.indirectDiffuse += vec3( 1.0 );
	#endif
	#include <aomap_fragment>
	reflectedLight.indirectDiffuse *= diffuseColor.rgb;
	vec3 outgoingLight = reflectedLight.indirectDiffuse;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,uN=`#define LAMBERT
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,lN=`#define LAMBERT
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_lambert_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_lambert_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,dN=`#define MATCAP
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <displacementmap_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
	vViewPosition = - mvPosition.xyz;
}`,hN=`#define MATCAP
uniform vec3 diffuse;
uniform float opacity;
uniform sampler2D matcap;
varying vec3 vViewPosition;
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	vec3 viewDir = normalize( vViewPosition );
	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );
	vec3 y = cross( viewDir, x );
	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;
	#ifdef USE_MATCAP
		vec4 matcapColor = texture2D( matcap, uv );
	#else
		vec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );
	#endif
	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,fN=`#define NORMAL
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	vViewPosition = - mvPosition.xyz;
#endif
}`,pN=`#define NORMAL
uniform float opacity;
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <packing>
#include <uv_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( 0.0, 0.0, 0.0, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	gl_FragColor = vec4( packNormalToRGB( normal ), diffuseColor.a );
	#ifdef OPAQUE
		gl_FragColor.a = 1.0;
	#endif
}`,mN=`#define PHONG
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,gN=`#define PHONG
uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_phong_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_phong_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,xN=`#define STANDARD
varying vec3 vViewPosition;
#ifdef USE_TRANSMISSION
	varying vec3 vWorldPosition;
#endif
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
#ifdef USE_TRANSMISSION
	vWorldPosition = worldPosition.xyz;
#endif
}`,yN=`#define STANDARD
#ifdef PHYSICAL
	#define IOR
	#define USE_SPECULAR
#endif
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float roughness;
uniform float metalness;
uniform float opacity;
#ifdef IOR
	uniform float ior;
#endif
#ifdef USE_SPECULAR
	uniform float specularIntensity;
	uniform vec3 specularColor;
	#ifdef USE_SPECULAR_COLORMAP
		uniform sampler2D specularColorMap;
	#endif
	#ifdef USE_SPECULAR_INTENSITYMAP
		uniform sampler2D specularIntensityMap;
	#endif
#endif
#ifdef USE_CLEARCOAT
	uniform float clearcoat;
	uniform float clearcoatRoughness;
#endif
#ifdef USE_DISPERSION
	uniform float dispersion;
#endif
#ifdef USE_IRIDESCENCE
	uniform float iridescence;
	uniform float iridescenceIOR;
	uniform float iridescenceThicknessMinimum;
	uniform float iridescenceThicknessMaximum;
#endif
#ifdef USE_SHEEN
	uniform vec3 sheenColor;
	uniform float sheenRoughness;
	#ifdef USE_SHEEN_COLORMAP
		uniform sampler2D sheenColorMap;
	#endif
	#ifdef USE_SHEEN_ROUGHNESSMAP
		uniform sampler2D sheenRoughnessMap;
	#endif
#endif
#ifdef USE_ANISOTROPY
	uniform vec2 anisotropyVector;
	#ifdef USE_ANISOTROPYMAP
		uniform sampler2D anisotropyMap;
	#endif
#endif
varying vec3 vViewPosition;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <iridescence_fragment>
#include <cube_uv_reflection_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_physical_pars_fragment>
#include <fog_pars_fragment>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_physical_pars_fragment>
#include <transmission_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <clearcoat_pars_fragment>
#include <iridescence_pars_fragment>
#include <roughnessmap_pars_fragment>
#include <metalnessmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <roughnessmap_fragment>
	#include <metalnessmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <clearcoat_normal_fragment_begin>
	#include <clearcoat_normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_physical_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;
	vec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;
	#include <transmission_fragment>
	vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;
	#ifdef USE_SHEEN
		float sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );
		outgoingLight = outgoingLight * sheenEnergyComp + sheenSpecularDirect + sheenSpecularIndirect;
	#endif
	#ifdef USE_CLEARCOAT
		float dotNVcc = saturate( dot( geometryClearcoatNormal, geometryViewDir ) );
		vec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );
		outgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + ( clearcoatSpecularDirect + clearcoatSpecularIndirect ) * material.clearcoat;
	#endif
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,bN=`#define TOON
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,wN=`#define TOON
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <gradientmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_toon_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_toon_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,vN=`uniform float size;
uniform float scale;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
#ifdef USE_POINTS_UV
	varying vec2 vUv;
	uniform mat3 uvTransform;
#endif
void main() {
	#ifdef USE_POINTS_UV
		vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	#endif
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	gl_PointSize = size;
	#ifdef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );
	#endif
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <fog_vertex>
}`,_N=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <color_pars_fragment>
#include <map_particle_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_particle_fragment>
	#include <color_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,CN=`#include <common>
#include <batching_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <shadowmap_pars_vertex>
void main() {
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,SN=`uniform vec3 color;
uniform float opacity;
#include <common>
#include <packing>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <logdepthbuf_pars_fragment>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
void main() {
	#include <logdepthbuf_fragment>
	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`,TN=`uniform float rotation;
uniform vec2 center;
#include <common>
#include <uv_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	vec4 mvPosition = modelViewMatrix[ 3 ];
	vec2 scale = vec2( length( modelMatrix[ 0 ].xyz ), length( modelMatrix[ 1 ].xyz ) );
	#ifndef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) scale *= - mvPosition.z;
	#endif
	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;
	vec2 rotatedPosition;
	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
	mvPosition.xy += rotatedPosition;
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,EN=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`,ye={alphahash_fragment:jR,alphahash_pars_fragment:KR,alphamap_fragment:YR,alphamap_pars_fragment:ZR,alphatest_fragment:JR,alphatest_pars_fragment:QR,aomap_fragment:tM,aomap_pars_fragment:eM,batching_pars_vertex:nM,batching_vertex:sM,begin_vertex:iM,beginnormal_vertex:oM,bsdfs:rM,iridescence_fragment:aM,bumpmap_pars_fragment:cM,clipping_planes_fragment:uM,clipping_planes_pars_fragment:lM,clipping_planes_pars_vertex:dM,clipping_planes_vertex:hM,color_fragment:fM,color_pars_fragment:pM,color_pars_vertex:mM,color_vertex:gM,common:xM,cube_uv_reflection_fragment:yM,defaultnormal_vertex:bM,displacementmap_pars_vertex:wM,displacementmap_vertex:vM,emissivemap_fragment:_M,emissivemap_pars_fragment:CM,colorspace_fragment:SM,colorspace_pars_fragment:TM,envmap_fragment:EM,envmap_common_pars_fragment:IM,envmap_pars_fragment:RM,envmap_pars_vertex:MM,envmap_physical_pars_fragment:BM,envmap_vertex:AM,fog_vertex:NM,fog_pars_vertex:kM,fog_fragment:DM,fog_pars_fragment:$M,gradientmap_pars_fragment:FM,lightmap_pars_fragment:PM,lights_lambert_fragment:LM,lights_lambert_pars_fragment:OM,lights_pars_begin:UM,lights_toon_fragment:zM,lights_toon_pars_fragment:VM,lights_phong_fragment:WM,lights_phong_pars_fragment:GM,lights_physical_fragment:HM,lights_physical_pars_fragment:XM,lights_fragment_begin:qM,lights_fragment_maps:jM,lights_fragment_end:KM,logdepthbuf_fragment:YM,logdepthbuf_pars_fragment:ZM,logdepthbuf_pars_vertex:JM,logdepthbuf_vertex:QM,map_fragment:tA,map_pars_fragment:eA,map_particle_fragment:nA,map_particle_pars_fragment:sA,metalnessmap_fragment:iA,metalnessmap_pars_fragment:oA,morphinstance_vertex:rA,morphcolor_vertex:aA,morphnormal_vertex:cA,morphtarget_pars_vertex:uA,morphtarget_vertex:lA,normal_fragment_begin:dA,normal_fragment_maps:hA,normal_pars_fragment:fA,normal_pars_vertex:pA,normal_vertex:mA,normalmap_pars_fragment:gA,clearcoat_normal_fragment_begin:xA,clearcoat_normal_fragment_maps:yA,clearcoat_pars_fragment:bA,iridescence_pars_fragment:wA,opaque_fragment:vA,packing:_A,premultiplied_alpha_fragment:CA,project_vertex:SA,dithering_fragment:TA,dithering_pars_fragment:EA,roughnessmap_fragment:IA,roughnessmap_pars_fragment:RA,shadowmap_pars_fragment:MA,shadowmap_pars_vertex:AA,shadowmap_vertex:NA,shadowmask_pars_fragment:kA,skinbase_vertex:DA,skinning_pars_vertex:$A,skinning_vertex:FA,skinnormal_vertex:PA,specularmap_fragment:LA,specularmap_pars_fragment:OA,tonemapping_fragment:UA,tonemapping_pars_fragment:BA,transmission_fragment:zA,transmission_pars_fragment:VA,uv_pars_fragment:WA,uv_pars_vertex:GA,uv_vertex:HA,worldpos_vertex:XA,background_vert:qA,background_frag:jA,backgroundCube_vert:KA,backgroundCube_frag:YA,cube_vert:ZA,cube_frag:JA,depth_vert:QA,depth_frag:tN,distanceRGBA_vert:eN,distanceRGBA_frag:nN,equirect_vert:sN,equirect_frag:iN,linedashed_vert:oN,linedashed_frag:rN,meshbasic_vert:aN,meshbasic_frag:cN,meshlambert_vert:uN,meshlambert_frag:lN,meshmatcap_vert:dN,meshmatcap_frag:hN,meshnormal_vert:fN,meshnormal_frag:pN,meshphong_vert:mN,meshphong_frag:gN,meshphysical_vert:xN,meshphysical_frag:yN,meshtoon_vert:bN,meshtoon_frag:wN,points_vert:vN,points_frag:_N,shadow_vert:CN,shadow_frag:SN,sprite_vert:TN,sprite_frag:EN},Mt={common:{diffuse:{value:new be(16777215)},opacity:{value:1},map:{value:null},mapTransform:{value:new ge},alphaMap:{value:null},alphaMapTransform:{value:new ge},alphaTest:{value:0}},specularmap:{specularMap:{value:null},specularMapTransform:{value:new ge}},envmap:{envMap:{value:null},envMapRotation:{value:new ge},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1},aoMapTransform:{value:new ge}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1},lightMapTransform:{value:new ge}},bumpmap:{bumpMap:{value:null},bumpMapTransform:{value:new ge},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalMapTransform:{value:new ge},normalScale:{value:new xe(1,1)}},displacementmap:{displacementMap:{value:null},displacementMapTransform:{value:new ge},displacementScale:{value:1},displacementBias:{value:0}},emissivemap:{emissiveMap:{value:null},emissiveMapTransform:{value:new ge}},metalnessmap:{metalnessMap:{value:null},metalnessMapTransform:{value:new ge}},roughnessmap:{roughnessMap:{value:null},roughnessMapTransform:{value:new ge}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new be(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotLightMap:{value:[]},spotShadowMap:{value:[]},spotLightMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new be(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaMapTransform:{value:new ge},alphaTest:{value:0},uvTransform:{value:new ge}},sprite:{diffuse:{value:new be(16777215)},opacity:{value:1},center:{value:new xe(.5,.5)},rotation:{value:0},map:{value:null},mapTransform:{value:new ge},alphaMap:{value:null},alphaMapTransform:{value:new ge},alphaTest:{value:0}}},Mi={basic:{uniforms:ds([Mt.common,Mt.specularmap,Mt.envmap,Mt.aomap,Mt.lightmap,Mt.fog]),vertexShader:ye.meshbasic_vert,fragmentShader:ye.meshbasic_frag},lambert:{uniforms:ds([Mt.common,Mt.specularmap,Mt.envmap,Mt.aomap,Mt.lightmap,Mt.emissivemap,Mt.bumpmap,Mt.normalmap,Mt.displacementmap,Mt.fog,Mt.lights,{emissive:{value:new be(0)}}]),vertexShader:ye.meshlambert_vert,fragmentShader:ye.meshlambert_frag},phong:{uniforms:ds([Mt.common,Mt.specularmap,Mt.envmap,Mt.aomap,Mt.lightmap,Mt.emissivemap,Mt.bumpmap,Mt.normalmap,Mt.displacementmap,Mt.fog,Mt.lights,{emissive:{value:new be(0)},specular:{value:new be(1118481)},shininess:{value:30}}]),vertexShader:ye.meshphong_vert,fragmentShader:ye.meshphong_frag},standard:{uniforms:ds([Mt.common,Mt.envmap,Mt.aomap,Mt.lightmap,Mt.emissivemap,Mt.bumpmap,Mt.normalmap,Mt.displacementmap,Mt.roughnessmap,Mt.metalnessmap,Mt.fog,Mt.lights,{emissive:{value:new be(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:ye.meshphysical_vert,fragmentShader:ye.meshphysical_frag},toon:{uniforms:ds([Mt.common,Mt.aomap,Mt.lightmap,Mt.emissivemap,Mt.bumpmap,Mt.normalmap,Mt.displacementmap,Mt.gradientmap,Mt.fog,Mt.lights,{emissive:{value:new be(0)}}]),vertexShader:ye.meshtoon_vert,fragmentShader:ye.meshtoon_frag},matcap:{uniforms:ds([Mt.common,Mt.bumpmap,Mt.normalmap,Mt.displacementmap,Mt.fog,{matcap:{value:null}}]),vertexShader:ye.meshmatcap_vert,fragmentShader:ye.meshmatcap_frag},points:{uniforms:ds([Mt.points,Mt.fog]),vertexShader:ye.points_vert,fragmentShader:ye.points_frag},dashed:{uniforms:ds([Mt.common,Mt.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:ye.linedashed_vert,fragmentShader:ye.linedashed_frag},depth:{uniforms:ds([Mt.common,Mt.displacementmap]),vertexShader:ye.depth_vert,fragmentShader:ye.depth_frag},normal:{uniforms:ds([Mt.common,Mt.bumpmap,Mt.normalmap,Mt.displacementmap,{opacity:{value:1}}]),vertexShader:ye.meshnormal_vert,fragmentShader:ye.meshnormal_frag},sprite:{uniforms:ds([Mt.sprite,Mt.fog]),vertexShader:ye.sprite_vert,fragmentShader:ye.sprite_frag},background:{uniforms:{uvTransform:{value:new ge},t2D:{value:null},backgroundIntensity:{value:1}},vertexShader:ye.background_vert,fragmentShader:ye.background_frag},backgroundCube:{uniforms:{envMap:{value:null},flipEnvMap:{value:-1},backgroundBlurriness:{value:0},backgroundIntensity:{value:1},backgroundRotation:{value:new ge}},vertexShader:ye.backgroundCube_vert,fragmentShader:ye.backgroundCube_frag},cube:{uniforms:{tCube:{value:null},tFlip:{value:-1},opacity:{value:1}},vertexShader:ye.cube_vert,fragmentShader:ye.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:ye.equirect_vert,fragmentShader:ye.equirect_frag},distanceRGBA:{uniforms:ds([Mt.common,Mt.displacementmap,{referencePosition:{value:new st},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:ye.distanceRGBA_vert,fragmentShader:ye.distanceRGBA_frag},shadow:{uniforms:ds([Mt.lights,Mt.fog,{color:{value:new be(0)},opacity:{value:1}}]),vertexShader:ye.shadow_vert,fragmentShader:ye.shadow_frag}};Mi.physical={uniforms:ds([Mi.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatMapTransform:{value:new ge},clearcoatNormalMap:{value:null},clearcoatNormalMapTransform:{value:new ge},clearcoatNormalScale:{value:new xe(1,1)},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatRoughnessMapTransform:{value:new ge},dispersion:{value:0},iridescence:{value:0},iridescenceMap:{value:null},iridescenceMapTransform:{value:new ge},iridescenceIOR:{value:1.3},iridescenceThicknessMinimum:{value:100},iridescenceThicknessMaximum:{value:400},iridescenceThicknessMap:{value:null},iridescenceThicknessMapTransform:{value:new ge},sheen:{value:0},sheenColor:{value:new be(0)},sheenColorMap:{value:null},sheenColorMapTransform:{value:new ge},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},sheenRoughnessMapTransform:{value:new ge},transmission:{value:0},transmissionMap:{value:null},transmissionMapTransform:{value:new ge},transmissionSamplerSize:{value:new xe},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},thicknessMapTransform:{value:new ge},attenuationDistance:{value:0},attenuationColor:{value:new be(0)},specularColor:{value:new be(1,1,1)},specularColorMap:{value:null},specularColorMapTransform:{value:new ge},specularIntensity:{value:1},specularIntensityMap:{value:null},specularIntensityMapTransform:{value:new ge},anisotropyVector:{value:new xe},anisotropyMap:{value:null},anisotropyMapTransform:{value:new ge}}]),vertexShader:ye.meshphysical_vert,fragmentShader:ye.meshphysical_frag};const ud={r:0,b:0,g:0},or=new Ui,IN=new cn;function RN(n,t,e,s,i,o,r){const a=new be(0);let c=o===!0?0:1,u,l,d=null,h=0,f=null;function p(w){let b=w.isScene===!0?w.background:null;return b&&b.isTexture&&(b=(w.backgroundBlurriness>0?e:t).get(b)),b}function x(w){let b=!1;const _=p(w);_===null?m(a,c):_&&_.isColor&&(m(_,1),b=!0);const T=n.xr.getEnvironmentBlendMode();T==="additive"?s.buffers.color.setClear(0,0,0,1,r):T==="alpha-blend"&&s.buffers.color.setClear(0,0,0,0,r),(n.autoClear||b)&&(s.buffers.depth.setTest(!0),s.buffers.depth.setMask(!0),s.buffers.color.setMask(!0),n.clear(n.autoClearColor,n.autoClearDepth,n.autoClearStencil))}function g(w,b){const _=p(b);_&&(_.isCubeTexture||_.mapping===Ih)?(l===void 0&&(l=new Ks(new ic(1,1,1),new co({name:"BackgroundCubeMaterial",uniforms:Wa(Mi.backgroundCube.uniforms),vertexShader:Mi.backgroundCube.vertexShader,fragmentShader:Mi.backgroundCube.fragmentShader,side:Ss,depthTest:!1,depthWrite:!1,fog:!1,allowOverride:!1})),l.geometry.deleteAttribute("normal"),l.geometry.deleteAttribute("uv"),l.onBeforeRender=function(T,E,I){this.matrixWorld.copyPosition(I.matrixWorld)},Object.defineProperty(l.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),i.update(l)),or.copy(b.backgroundRotation),or.x*=-1,or.y*=-1,or.z*=-1,_.isCubeTexture&&_.isRenderTargetTexture===!1&&(or.y*=-1,or.z*=-1),l.material.uniforms.envMap.value=_,l.material.uniforms.flipEnvMap.value=_.isCubeTexture&&_.isRenderTargetTexture===!1?-1:1,l.material.uniforms.backgroundBlurriness.value=b.backgroundBlurriness,l.material.uniforms.backgroundIntensity.value=b.backgroundIntensity,l.material.uniforms.backgroundRotation.value.setFromMatrix4(IN.makeRotationFromEuler(or)),l.material.toneMapped=$e.getTransfer(_.colorSpace)!==He,(d!==_||h!==_.version||f!==n.toneMapping)&&(l.material.needsUpdate=!0,d=_,h=_.version,f=n.toneMapping),l.layers.enableAll(),w.unshift(l,l.geometry,l.material,0,0,null)):_&&_.isTexture&&(u===void 0&&(u=new Ks(new wu(2,2),new co({name:"BackgroundMaterial",uniforms:Wa(Mi.background.uniforms),vertexShader:Mi.background.vertexShader,fragmentShader:Mi.background.fragmentShader,side:Po,depthTest:!1,depthWrite:!1,fog:!1,allowOverride:!1})),u.geometry.deleteAttribute("normal"),Object.defineProperty(u.material,"map",{get:function(){return this.uniforms.t2D.value}}),i.update(u)),u.material.uniforms.t2D.value=_,u.material.uniforms.backgroundIntensity.value=b.backgroundIntensity,u.material.toneMapped=$e.getTransfer(_.colorSpace)!==He,_.matrixAutoUpdate===!0&&_.updateMatrix(),u.material.uniforms.uvTransform.value.copy(_.matrix),(d!==_||h!==_.version||f!==n.toneMapping)&&(u.material.needsUpdate=!0,d=_,h=_.version,f=n.toneMapping),u.layers.enableAll(),w.unshift(u,u.geometry,u.material,0,0,null))}function m(w,b){w.getRGB(ud,kv(n)),s.buffers.color.setClear(ud.r,ud.g,ud.b,b,r)}function y(){l!==void 0&&(l.geometry.dispose(),l.material.dispose(),l=void 0),u!==void 0&&(u.geometry.dispose(),u.material.dispose(),u=void 0)}return{getClearColor:function(){return a},setClearColor:function(w,b=1){a.set(w),c=b,m(a,c)},getClearAlpha:function(){return c},setClearAlpha:function(w){c=w,m(a,c)},render:x,addToRenderList:g,dispose:y}}function MN(n,t){const e=n.getParameter(n.MAX_VERTEX_ATTRIBS),s={},i=h(null);let o=i,r=!1;function a(v,C,M,N,D){let $=!1;const F=d(N,M,C);o!==F&&(o=F,u(o.object)),$=f(v,N,M,D),$&&p(v,N,M,D),D!==null&&t.update(D,n.ELEMENT_ARRAY_BUFFER),($||r)&&(r=!1,b(v,C,M,N),D!==null&&n.bindBuffer(n.ELEMENT_ARRAY_BUFFER,t.get(D).buffer))}function c(){return n.createVertexArray()}function u(v){return n.bindVertexArray(v)}function l(v){return n.deleteVertexArray(v)}function d(v,C,M){const N=M.wireframe===!0;let D=s[v.id];D===void 0&&(D={},s[v.id]=D);let $=D[C.id];$===void 0&&($={},D[C.id]=$);let F=$[N];return F===void 0&&(F=h(c()),$[N]=F),F}function h(v){const C=[],M=[],N=[];for(let D=0;D<e;D++)C[D]=0,M[D]=0,N[D]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:C,enabledAttributes:M,attributeDivisors:N,object:v,attributes:{},index:null}}function f(v,C,M,N){const D=o.attributes,$=C.attributes;let F=0;const B=M.getAttributes();for(const P in B)if(B[P].location>=0){const q=D[P];let J=$[P];if(J===void 0&&(P==="instanceMatrix"&&v.instanceMatrix&&(J=v.instanceMatrix),P==="instanceColor"&&v.instanceColor&&(J=v.instanceColor)),q===void 0||q.attribute!==J||J&&q.data!==J.data)return!0;F++}return o.attributesNum!==F||o.index!==N}function p(v,C,M,N){const D={},$=C.attributes;let F=0;const B=M.getAttributes();for(const P in B)if(B[P].location>=0){let q=$[P];q===void 0&&(P==="instanceMatrix"&&v.instanceMatrix&&(q=v.instanceMatrix),P==="instanceColor"&&v.instanceColor&&(q=v.instanceColor));const J={};J.attribute=q,q&&q.data&&(J.data=q.data),D[P]=J,F++}o.attributes=D,o.attributesNum=F,o.index=N}function x(){const v=o.newAttributes;for(let C=0,M=v.length;C<M;C++)v[C]=0}function g(v){m(v,0)}function m(v,C){const M=o.newAttributes,N=o.enabledAttributes,D=o.attributeDivisors;M[v]=1,N[v]===0&&(n.enableVertexAttribArray(v),N[v]=1),D[v]!==C&&(n.vertexAttribDivisor(v,C),D[v]=C)}function y(){const v=o.newAttributes,C=o.enabledAttributes;for(let M=0,N=C.length;M<N;M++)C[M]!==v[M]&&(n.disableVertexAttribArray(M),C[M]=0)}function w(v,C,M,N,D,$,F){F===!0?n.vertexAttribIPointer(v,C,M,D,$):n.vertexAttribPointer(v,C,M,N,D,$)}function b(v,C,M,N){x();const D=N.attributes,$=M.getAttributes(),F=C.defaultAttributeValues;for(const B in $){const P=$[B];if(P.location>=0){let V=D[B];if(V===void 0&&(B==="instanceMatrix"&&v.instanceMatrix&&(V=v.instanceMatrix),B==="instanceColor"&&v.instanceColor&&(V=v.instanceColor)),V!==void 0){const q=V.normalized,J=V.itemSize,it=t.get(V);if(it===void 0)continue;const ut=it.buffer,G=it.type,Q=it.bytesPerElement,ht=G===n.INT||G===n.UNSIGNED_INT||V.gpuType===t1;if(V.isInterleavedBufferAttribute){const dt=V.data,gt=dt.stride,St=V.offset;if(dt.isInstancedInterleavedBuffer){for(let _t=0;_t<P.locationSize;_t++)m(P.location+_t,dt.meshPerAttribute);v.isInstancedMesh!==!0&&N._maxInstanceCount===void 0&&(N._maxInstanceCount=dt.meshPerAttribute*dt.count)}else for(let _t=0;_t<P.locationSize;_t++)g(P.location+_t);n.bindBuffer(n.ARRAY_BUFFER,ut);for(let _t=0;_t<P.locationSize;_t++)w(P.location+_t,J/P.locationSize,G,q,gt*Q,(St+J/P.locationSize*_t)*Q,ht)}else{if(V.isInstancedBufferAttribute){for(let dt=0;dt<P.locationSize;dt++)m(P.location+dt,V.meshPerAttribute);v.isInstancedMesh!==!0&&N._maxInstanceCount===void 0&&(N._maxInstanceCount=V.meshPerAttribute*V.count)}else for(let dt=0;dt<P.locationSize;dt++)g(P.location+dt);n.bindBuffer(n.ARRAY_BUFFER,ut);for(let dt=0;dt<P.locationSize;dt++)w(P.location+dt,J/P.locationSize,G,q,J*Q,J/P.locationSize*dt*Q,ht)}}else if(F!==void 0){const q=F[B];if(q!==void 0)switch(q.length){case 2:n.vertexAttrib2fv(P.location,q);break;case 3:n.vertexAttrib3fv(P.location,q);break;case 4:n.vertexAttrib4fv(P.location,q);break;default:n.vertexAttrib1fv(P.location,q)}}}}y()}function _(){I();for(const v in s){const C=s[v];for(const M in C){const N=C[M];for(const D in N)l(N[D].object),delete N[D];delete C[M]}delete s[v]}}function T(v){if(s[v.id]===void 0)return;const C=s[v.id];for(const M in C){const N=C[M];for(const D in N)l(N[D].object),delete N[D];delete C[M]}delete s[v.id]}function E(v){for(const C in s){const M=s[C];if(M[v.id]===void 0)continue;const N=M[v.id];for(const D in N)l(N[D].object),delete N[D];delete M[v.id]}}function I(){S(),r=!0,o!==i&&(o=i,u(o.object))}function S(){i.geometry=null,i.program=null,i.wireframe=!1}return{setup:a,reset:I,resetDefaultState:S,dispose:_,releaseStatesOfGeometry:T,releaseStatesOfProgram:E,initAttributes:x,enableAttribute:g,disableUnusedAttributes:y}}function AN(n,t,e){let s;function i(u){s=u}function o(u,l){n.drawArrays(s,u,l),e.update(l,s,1)}function r(u,l,d){d!==0&&(n.drawArraysInstanced(s,u,l,d),e.update(l,s,d))}function a(u,l,d){if(d===0)return;t.get("WEBGL_multi_draw").multiDrawArraysWEBGL(s,u,0,l,0,d);let f=0;for(let p=0;p<d;p++)f+=l[p];e.update(f,s,1)}function c(u,l,d,h){if(d===0)return;const f=t.get("WEBGL_multi_draw");if(f===null)for(let p=0;p<u.length;p++)r(u[p],l[p],h[p]);else{f.multiDrawArraysInstancedWEBGL(s,u,0,l,0,h,0,d);let p=0;for(let x=0;x<d;x++)p+=l[x]*h[x];e.update(p,s,1)}}this.setMode=i,this.render=o,this.renderInstances=r,this.renderMultiDraw=a,this.renderMultiDrawInstances=c}function NN(n,t,e,s){let i;function o(){if(i!==void 0)return i;if(t.has("EXT_texture_filter_anisotropic")===!0){const E=t.get("EXT_texture_filter_anisotropic");i=n.getParameter(E.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else i=0;return i}function r(E){return!(E!==gi&&s.convert(E)!==n.getParameter(n.IMPLEMENTATION_COLOR_READ_FORMAT))}function a(E){const I=E===gu&&(t.has("EXT_color_buffer_half_float")||t.has("EXT_color_buffer_float"));return!(E!==ao&&s.convert(E)!==n.getParameter(n.IMPLEMENTATION_COLOR_READ_TYPE)&&E!==Di&&!I)}function c(E){if(E==="highp"){if(n.getShaderPrecisionFormat(n.VERTEX_SHADER,n.HIGH_FLOAT).precision>0&&n.getShaderPrecisionFormat(n.FRAGMENT_SHADER,n.HIGH_FLOAT).precision>0)return"highp";E="mediump"}return E==="mediump"&&n.getShaderPrecisionFormat(n.VERTEX_SHADER,n.MEDIUM_FLOAT).precision>0&&n.getShaderPrecisionFormat(n.FRAGMENT_SHADER,n.MEDIUM_FLOAT).precision>0?"mediump":"lowp"}let u=e.precision!==void 0?e.precision:"highp";const l=c(u);l!==u&&(console.warn("THREE.WebGLRenderer:",u,"not supported, using",l,"instead."),u=l);const d=e.logarithmicDepthBuffer===!0,h=e.reverseDepthBuffer===!0&&t.has("EXT_clip_control"),f=n.getParameter(n.MAX_TEXTURE_IMAGE_UNITS),p=n.getParameter(n.MAX_VERTEX_TEXTURE_IMAGE_UNITS),x=n.getParameter(n.MAX_TEXTURE_SIZE),g=n.getParameter(n.MAX_CUBE_MAP_TEXTURE_SIZE),m=n.getParameter(n.MAX_VERTEX_ATTRIBS),y=n.getParameter(n.MAX_VERTEX_UNIFORM_VECTORS),w=n.getParameter(n.MAX_VARYING_VECTORS),b=n.getParameter(n.MAX_FRAGMENT_UNIFORM_VECTORS),_=p>0,T=n.getParameter(n.MAX_SAMPLES);return{isWebGL2:!0,getMaxAnisotropy:o,getMaxPrecision:c,textureFormatReadable:r,textureTypeReadable:a,precision:u,logarithmicDepthBuffer:d,reverseDepthBuffer:h,maxTextures:f,maxVertexTextures:p,maxTextureSize:x,maxCubemapSize:g,maxAttributes:m,maxVertexUniforms:y,maxVaryings:w,maxFragmentUniforms:b,vertexTextures:_,maxSamples:T}}function kN(n){const t=this;let e=null,s=0,i=!1,o=!1;const r=new Qi,a=new ge,c={value:null,needsUpdate:!1};this.uniform=c,this.numPlanes=0,this.numIntersection=0,this.init=function(d,h){const f=d.length!==0||h||s!==0||i;return i=h,s=d.length,f},this.beginShadows=function(){o=!0,l(null)},this.endShadows=function(){o=!1},this.setGlobalState=function(d,h){e=l(d,h,0)},this.setState=function(d,h,f){const p=d.clippingPlanes,x=d.clipIntersection,g=d.clipShadows,m=n.get(d);if(!i||p===null||p.length===0||o&&!g)o?l(null):u();else{const y=o?0:s,w=y*4;let b=m.clippingState||null;c.value=b,b=l(p,h,w,f);for(let _=0;_!==w;++_)b[_]=e[_];m.clippingState=b,this.numIntersection=x?this.numPlanes:0,this.numPlanes+=y}};function u(){c.value!==e&&(c.value=e,c.needsUpdate=s>0),t.numPlanes=s,t.numIntersection=0}function l(d,h,f,p){const x=d!==null?d.length:0;let g=null;if(x!==0){if(g=c.value,p!==!0||g===null){const m=f+x*4,y=h.matrixWorldInverse;a.getNormalMatrix(y),(g===null||g.length<m)&&(g=new Float32Array(m));for(let w=0,b=f;w!==x;++w,b+=4)r.copy(d[w]).applyMatrix4(y,a),r.normal.toArray(g,b),g[b+3]=r.constant}c.value=g,c.needsUpdate=!0}return t.numPlanes=x,t.numIntersection=0,g}}function DN(n){let t=new WeakMap;function e(r,a){return a===Im?r.mapping=Ba:a===Rm&&(r.mapping=za),r}function s(r){if(r&&r.isTexture){const a=r.mapping;if(a===Im||a===Rm)if(t.has(r)){const c=t.get(r).texture;return e(c,r.mapping)}else{const c=r.image;if(c&&c.height>0){const u=new SR(c.height);return u.fromEquirectangularTexture(n,r),t.set(r,u),r.addEventListener("dispose",i),e(u.texture,r.mapping)}else return null}}return r}function i(r){const a=r.target;a.removeEventListener("dispose",i);const c=t.get(a);c!==void 0&&(t.delete(a),c.dispose())}function o(){t=new WeakMap}return{get:s,dispose:o}}const Ta=4,Ky=[.125,.215,.35,.446,.526,.582],hr=20,Gp=new VR,Yy=new be;let Hp=null,Xp=0,qp=0,jp=!1;const ur=(1+Math.sqrt(5))/2,ga=1/ur,Zy=[new st(-ur,ga,0),new st(ur,ga,0),new st(-ga,0,ur),new st(ga,0,ur),new st(0,ur,-ga),new st(0,ur,ga),new st(-1,1,-1),new st(1,1,-1),new st(-1,1,1),new st(1,1,1)],$N=new st;class Jy{constructor(t){this._renderer=t,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}fromScene(t,e=0,s=.1,i=100,o={}){const{size:r=256,position:a=$N}=o;Hp=this._renderer.getRenderTarget(),Xp=this._renderer.getActiveCubeFace(),qp=this._renderer.getActiveMipmapLevel(),jp=this._renderer.xr.enabled,this._renderer.xr.enabled=!1,this._setSize(r);const c=this._allocateTargets();return c.depthBuffer=!0,this._sceneToCubeUV(t,s,i,c,a),e>0&&this._blur(c,0,0,e),this._applyPMREM(c),this._cleanup(c),c}fromEquirectangular(t,e=null){return this._fromTexture(t,e)}fromCubemap(t,e=null){return this._fromTexture(t,e)}compileCubemapShader(){this._cubemapMaterial===null&&(this._cubemapMaterial=eb(),this._compileMaterial(this._cubemapMaterial))}compileEquirectangularShader(){this._equirectMaterial===null&&(this._equirectMaterial=tb(),this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),this._cubemapMaterial!==null&&this._cubemapMaterial.dispose(),this._equirectMaterial!==null&&this._equirectMaterial.dispose()}_setSize(t){this._lodMax=Math.floor(Math.log2(t)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){this._blurMaterial!==null&&this._blurMaterial.dispose(),this._pingPongRenderTarget!==null&&this._pingPongRenderTarget.dispose();for(let t=0;t<this._lodPlanes.length;t++)this._lodPlanes[t].dispose()}_cleanup(t){this._renderer.setRenderTarget(Hp,Xp,qp),this._renderer.xr.enabled=jp,t.scissorTest=!1,ld(t,0,0,t.width,t.height)}_fromTexture(t,e){t.mapping===Ba||t.mapping===za?this._setSize(t.image.length===0?16:t.image[0].width||t.image[0].image.width):this._setSize(t.image.width/4),Hp=this._renderer.getRenderTarget(),Xp=this._renderer.getActiveCubeFace(),qp=this._renderer.getActiveMipmapLevel(),jp=this._renderer.xr.enabled,this._renderer.xr.enabled=!1;const s=e||this._allocateTargets();return this._textureToCubeUV(t,s),this._applyPMREM(s),this._cleanup(s),s}_allocateTargets(){const t=3*Math.max(this._cubeSize,112),e=4*this._cubeSize,s={magFilter:mi,minFilter:mi,generateMipmaps:!1,type:gu,format:gi,colorSpace:Va,depthBuffer:!1},i=Qy(t,e,s);if(this._pingPongRenderTarget===null||this._pingPongRenderTarget.width!==t||this._pingPongRenderTarget.height!==e){this._pingPongRenderTarget!==null&&this._dispose(),this._pingPongRenderTarget=Qy(t,e,s);const{_lodMax:o}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=FN(o)),this._blurMaterial=PN(o,t,e)}return i}_compileMaterial(t){const e=new Ks(this._lodPlanes[0],t);this._renderer.compile(e,Gp)}_sceneToCubeUV(t,e,s,i,o){const c=new Xs(90,1,e,s),u=[1,-1,1,1,1,1],l=[1,1,1,-1,-1,-1],d=this._renderer,h=d.autoClear,f=d.toneMapping;d.getClearColor(Yy),d.toneMapping=Ao,d.autoClear=!1;const p=new Mv({name:"PMREM.Background",side:Ss,depthWrite:!1,depthTest:!1}),x=new Ks(new ic,p);let g=!1;const m=t.background;m?m.isColor&&(p.color.copy(m),t.background=null,g=!0):(p.color.copy(Yy),g=!0);for(let y=0;y<6;y++){const w=y%3;w===0?(c.up.set(0,u[y],0),c.position.set(o.x,o.y,o.z),c.lookAt(o.x+l[y],o.y,o.z)):w===1?(c.up.set(0,0,u[y]),c.position.set(o.x,o.y,o.z),c.lookAt(o.x,o.y+l[y],o.z)):(c.up.set(0,u[y],0),c.position.set(o.x,o.y,o.z),c.lookAt(o.x,o.y,o.z+l[y]));const b=this._cubeSize;ld(i,w*b,y>2?b:0,b,b),d.setRenderTarget(i),g&&d.render(x,c),d.render(t,c)}x.geometry.dispose(),x.material.dispose(),d.toneMapping=f,d.autoClear=h,t.background=m}_textureToCubeUV(t,e){const s=this._renderer,i=t.mapping===Ba||t.mapping===za;i?(this._cubemapMaterial===null&&(this._cubemapMaterial=eb()),this._cubemapMaterial.uniforms.flipEnvMap.value=t.isRenderTargetTexture===!1?-1:1):this._equirectMaterial===null&&(this._equirectMaterial=tb());const o=i?this._cubemapMaterial:this._equirectMaterial,r=new Ks(this._lodPlanes[0],o),a=o.uniforms;a.envMap.value=t;const c=this._cubeSize;ld(e,0,0,3*c,2*c),s.setRenderTarget(e),s.render(r,Gp)}_applyPMREM(t){const e=this._renderer,s=e.autoClear;e.autoClear=!1;const i=this._lodPlanes.length;for(let o=1;o<i;o++){const r=Math.sqrt(this._sigmas[o]*this._sigmas[o]-this._sigmas[o-1]*this._sigmas[o-1]),a=Zy[(i-o-1)%Zy.length];this._blur(t,o-1,o,r,a)}e.autoClear=s}_blur(t,e,s,i,o){const r=this._pingPongRenderTarget;this._halfBlur(t,r,e,s,i,"latitudinal",o),this._halfBlur(r,t,s,s,i,"longitudinal",o)}_halfBlur(t,e,s,i,o,r,a){const c=this._renderer,u=this._blurMaterial;r!=="latitudinal"&&r!=="longitudinal"&&console.error("blur direction must be either latitudinal or longitudinal!");const l=3,d=new Ks(this._lodPlanes[i],u),h=u.uniforms,f=this._sizeLods[s]-1,p=isFinite(o)?Math.PI/(2*f):2*Math.PI/(2*hr-1),x=o/p,g=isFinite(o)?1+Math.floor(l*x):hr;g>hr&&console.warn(`sigmaRadians, ${o}, is too large and will clip, as it requested ${g} samples when the maximum is set to ${hr}`);const m=[];let y=0;for(let E=0;E<hr;++E){const I=E/x,S=Math.exp(-I*I/2);m.push(S),E===0?y+=S:E<g&&(y+=2*S)}for(let E=0;E<m.length;E++)m[E]=m[E]/y;h.envMap.value=t.texture,h.samples.value=g,h.weights.value=m,h.latitudinal.value=r==="latitudinal",a&&(h.poleAxis.value=a);const{_lodMax:w}=this;h.dTheta.value=p,h.mipInt.value=w-s;const b=this._sizeLods[i],_=3*b*(i>w-Ta?i-w+Ta:0),T=4*(this._cubeSize-b);ld(e,_,T,3*b,2*b),c.setRenderTarget(e),c.render(d,Gp)}}function FN(n){const t=[],e=[],s=[];let i=n;const o=n-Ta+1+Ky.length;for(let r=0;r<o;r++){const a=Math.pow(2,i);e.push(a);let c=1/a;r>n-Ta?c=Ky[r-n+Ta-1]:r===0&&(c=0),s.push(c);const u=1/(a-2),l=-u,d=1+u,h=[l,l,d,l,d,d,l,l,d,d,l,d],f=6,p=6,x=3,g=2,m=1,y=new Float32Array(x*p*f),w=new Float32Array(g*p*f),b=new Float32Array(m*p*f);for(let T=0;T<f;T++){const E=T%3*2/3-1,I=T>2?0:-1,S=[E,I,0,E+2/3,I,0,E+2/3,I+1,0,E,I,0,E+2/3,I+1,0,E,I+1,0];y.set(S,x*p*T),w.set(h,g*p*T);const v=[T,T,T,T,T,T];b.set(v,m*p*T)}const _=new Wo;_.setAttribute("position",new Js(y,x)),_.setAttribute("uv",new Js(w,g)),_.setAttribute("faceIndex",new Js(b,m)),t.push(_),i>Ta&&i--}return{lodPlanes:t,sizeLods:e,sigmas:s}}function Qy(n,t,e){const s=new Ir(n,t,e);return s.texture.mapping=Ih,s.texture.name="PMREM.cubeUv",s.scissorTest=!0,s}function ld(n,t,e,s,i){n.viewport.set(t,e,s,i),n.scissor.set(t,e,s,i)}function PN(n,t,e){const s=new Float32Array(hr),i=new st(0,1,0);return new co({name:"SphericalGaussianBlur",defines:{n:hr,CUBEUV_TEXEL_WIDTH:1/t,CUBEUV_TEXEL_HEIGHT:1/e,CUBEUV_MAX_MIP:`${n}.0`},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:s},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:i}},vertexShader:l1(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

			}
		`,blending:Mo,depthTest:!1,depthWrite:!1})}function tb(){return new co({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:l1(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;

			#include <common>

			void main() {

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				gl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );

			}
		`,blending:Mo,depthTest:!1,depthWrite:!1})}function eb(){return new co({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:l1(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			uniform float flipEnvMap;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			void main() {

				gl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );

			}
		`,blending:Mo,depthTest:!1,depthWrite:!1})}function l1(){return`

		precision mediump float;
		precision mediump int;

		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`}function LN(n){let t=new WeakMap,e=null;function s(a){if(a&&a.isTexture){const c=a.mapping,u=c===Im||c===Rm,l=c===Ba||c===za;if(u||l){let d=t.get(a);const h=d!==void 0?d.texture.pmremVersion:0;if(a.isRenderTargetTexture&&a.pmremVersion!==h)return e===null&&(e=new Jy(n)),d=u?e.fromEquirectangular(a,d):e.fromCubemap(a,d),d.texture.pmremVersion=a.pmremVersion,t.set(a,d),d.texture;if(d!==void 0)return d.texture;{const f=a.image;return u&&f&&f.height>0||l&&f&&i(f)?(e===null&&(e=new Jy(n)),d=u?e.fromEquirectangular(a):e.fromCubemap(a),d.texture.pmremVersion=a.pmremVersion,t.set(a,d),a.addEventListener("dispose",o),d.texture):null}}}return a}function i(a){let c=0;const u=6;for(let l=0;l<u;l++)a[l]!==void 0&&c++;return c===u}function o(a){const c=a.target;c.removeEventListener("dispose",o);const u=t.get(c);u!==void 0&&(t.delete(c),u.dispose())}function r(){t=new WeakMap,e!==null&&(e.dispose(),e=null)}return{get:s,dispose:r}}function ON(n){const t={};function e(s){if(t[s]!==void 0)return t[s];let i;switch(s){case"WEBGL_depth_texture":i=n.getExtension("WEBGL_depth_texture")||n.getExtension("MOZ_WEBGL_depth_texture")||n.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":i=n.getExtension("EXT_texture_filter_anisotropic")||n.getExtension("MOZ_EXT_texture_filter_anisotropic")||n.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":i=n.getExtension("WEBGL_compressed_texture_s3tc")||n.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||n.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":i=n.getExtension("WEBGL_compressed_texture_pvrtc")||n.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:i=n.getExtension(s)}return t[s]=i,i}return{has:function(s){return e(s)!==null},init:function(){e("EXT_color_buffer_float"),e("WEBGL_clip_cull_distance"),e("OES_texture_float_linear"),e("EXT_color_buffer_half_float"),e("WEBGL_multisampled_render_to_texture"),e("WEBGL_render_shared_exponent")},get:function(s){const i=e(s);return i===null&&Na("THREE.WebGLRenderer: "+s+" extension not supported."),i}}}function UN(n,t,e,s){const i={},o=new WeakMap;function r(d){const h=d.target;h.index!==null&&t.remove(h.index);for(const p in h.attributes)t.remove(h.attributes[p]);h.removeEventListener("dispose",r),delete i[h.id];const f=o.get(h);f&&(t.remove(f),o.delete(h)),s.releaseStatesOfGeometry(h),h.isInstancedBufferGeometry===!0&&delete h._maxInstanceCount,e.memory.geometries--}function a(d,h){return i[h.id]===!0||(h.addEventListener("dispose",r),i[h.id]=!0,e.memory.geometries++),h}function c(d){const h=d.attributes;for(const f in h)t.update(h[f],n.ARRAY_BUFFER)}function u(d){const h=[],f=d.index,p=d.attributes.position;let x=0;if(f!==null){const y=f.array;x=f.version;for(let w=0,b=y.length;w<b;w+=3){const _=y[w+0],T=y[w+1],E=y[w+2];h.push(_,T,T,E,E,_)}}else if(p!==void 0){const y=p.array;x=p.version;for(let w=0,b=y.length/3-1;w<b;w+=3){const _=w+0,T=w+1,E=w+2;h.push(_,T,T,E,E,_)}}else return;const g=new(Ev(h)?Nv:Av)(h,1);g.version=x;const m=o.get(d);m&&t.remove(m),o.set(d,g)}function l(d){const h=o.get(d);if(h){const f=d.index;f!==null&&h.version<f.version&&u(d)}else u(d);return o.get(d)}return{get:a,update:c,getWireframeAttribute:l}}function BN(n,t,e){let s;function i(h){s=h}let o,r;function a(h){o=h.type,r=h.bytesPerElement}function c(h,f){n.drawElements(s,f,o,h*r),e.update(f,s,1)}function u(h,f,p){p!==0&&(n.drawElementsInstanced(s,f,o,h*r,p),e.update(f,s,p))}function l(h,f,p){if(p===0)return;t.get("WEBGL_multi_draw").multiDrawElementsWEBGL(s,f,0,o,h,0,p);let g=0;for(let m=0;m<p;m++)g+=f[m];e.update(g,s,1)}function d(h,f,p,x){if(p===0)return;const g=t.get("WEBGL_multi_draw");if(g===null)for(let m=0;m<h.length;m++)u(h[m]/r,f[m],x[m]);else{g.multiDrawElementsInstancedWEBGL(s,f,0,o,h,0,x,0,p);let m=0;for(let y=0;y<p;y++)m+=f[y]*x[y];e.update(m,s,1)}}this.setMode=i,this.setIndex=a,this.render=c,this.renderInstances=u,this.renderMultiDraw=l,this.renderMultiDrawInstances=d}function zN(n){const t={geometries:0,textures:0},e={frame:0,calls:0,triangles:0,points:0,lines:0};function s(o,r,a){switch(e.calls++,r){case n.TRIANGLES:e.triangles+=a*(o/3);break;case n.LINES:e.lines+=a*(o/2);break;case n.LINE_STRIP:e.lines+=a*(o-1);break;case n.LINE_LOOP:e.lines+=a*o;break;case n.POINTS:e.points+=a*o;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",r);break}}function i(){e.calls=0,e.triangles=0,e.points=0,e.lines=0}return{memory:t,render:e,programs:null,autoReset:!0,reset:i,update:s}}function VN(n,t,e){const s=new WeakMap,i=new yn;function o(r,a,c){const u=r.morphTargetInfluences,l=a.morphAttributes.position||a.morphAttributes.normal||a.morphAttributes.color,d=l!==void 0?l.length:0;let h=s.get(a);if(h===void 0||h.count!==d){let S=function(){E.dispose(),s.delete(a),a.removeEventListener("dispose",S)};h!==void 0&&h.texture.dispose();const f=a.morphAttributes.position!==void 0,p=a.morphAttributes.normal!==void 0,x=a.morphAttributes.color!==void 0,g=a.morphAttributes.position||[],m=a.morphAttributes.normal||[],y=a.morphAttributes.color||[];let w=0;f===!0&&(w=1),p===!0&&(w=2),x===!0&&(w=3);let b=a.attributes.position.count*w,_=1;b>t.maxTextureSize&&(_=Math.ceil(b/t.maxTextureSize),b=t.maxTextureSize);const T=new Float32Array(b*_*4*d),E=new Iv(T,b,_,d);E.type=Di,E.needsUpdate=!0;const I=w*4;for(let v=0;v<d;v++){const C=g[v],M=m[v],N=y[v],D=b*_*4*v;for(let $=0;$<C.count;$++){const F=$*I;f===!0&&(i.fromBufferAttribute(C,$),T[D+F+0]=i.x,T[D+F+1]=i.y,T[D+F+2]=i.z,T[D+F+3]=0),p===!0&&(i.fromBufferAttribute(M,$),T[D+F+4]=i.x,T[D+F+5]=i.y,T[D+F+6]=i.z,T[D+F+7]=0),x===!0&&(i.fromBufferAttribute(N,$),T[D+F+8]=i.x,T[D+F+9]=i.y,T[D+F+10]=i.z,T[D+F+11]=N.itemSize===4?i.w:1)}}h={count:d,texture:E,size:new xe(b,_)},s.set(a,h),a.addEventListener("dispose",S)}if(r.isInstancedMesh===!0&&r.morphTexture!==null)c.getUniforms().setValue(n,"morphTexture",r.morphTexture,e);else{let f=0;for(let x=0;x<u.length;x++)f+=u[x];const p=a.morphTargetsRelative?1:1-f;c.getUniforms().setValue(n,"morphTargetBaseInfluence",p),c.getUniforms().setValue(n,"morphTargetInfluences",u)}c.getUniforms().setValue(n,"morphTargetsTexture",h.texture,e),c.getUniforms().setValue(n,"morphTargetsTextureSize",h.size)}return{update:o}}function WN(n,t,e,s){let i=new WeakMap;function o(c){const u=s.render.frame,l=c.geometry,d=t.get(c,l);if(i.get(d)!==u&&(t.update(d),i.set(d,u)),c.isInstancedMesh&&(c.hasEventListener("dispose",a)===!1&&c.addEventListener("dispose",a),i.get(c)!==u&&(e.update(c.instanceMatrix,n.ARRAY_BUFFER),c.instanceColor!==null&&e.update(c.instanceColor,n.ARRAY_BUFFER),i.set(c,u))),c.isSkinnedMesh){const h=c.skeleton;i.get(h)!==u&&(h.update(),i.set(h,u))}return d}function r(){i=new WeakMap}function a(c){const u=c.target;u.removeEventListener("dispose",a),e.remove(u.instanceMatrix),u.instanceColor!==null&&e.remove(u.instanceColor)}return{update:o,dispose:r}}const Ov=new Gn,nb=new Pv(1,1),Uv=new Iv,Bv=new aR,zv=new $v,sb=[],ib=[],ob=new Float32Array(16),rb=new Float32Array(9),ab=new Float32Array(4);function oc(n,t,e){const s=n[0];if(s<=0||s>0)return n;const i=t*e;let o=sb[i];if(o===void 0&&(o=new Float32Array(i),sb[i]=o),t!==0){s.toArray(o,0);for(let r=1,a=0;r!==t;++r)a+=e,n[r].toArray(o,a)}return o}function kn(n,t){if(n.length!==t.length)return!1;for(let e=0,s=n.length;e<s;e++)if(n[e]!==t[e])return!1;return!0}function Dn(n,t){for(let e=0,s=t.length;e<s;e++)n[e]=t[e]}function Mh(n,t){let e=ib[t];e===void 0&&(e=new Int32Array(t),ib[t]=e);for(let s=0;s!==t;++s)e[s]=n.allocateTextureUnit();return e}function GN(n,t){const e=this.cache;e[0]!==t&&(n.uniform1f(this.addr,t),e[0]=t)}function HN(n,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y)&&(n.uniform2f(this.addr,t.x,t.y),e[0]=t.x,e[1]=t.y);else{if(kn(e,t))return;n.uniform2fv(this.addr,t),Dn(e,t)}}function XN(n,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y||e[2]!==t.z)&&(n.uniform3f(this.addr,t.x,t.y,t.z),e[0]=t.x,e[1]=t.y,e[2]=t.z);else if(t.r!==void 0)(e[0]!==t.r||e[1]!==t.g||e[2]!==t.b)&&(n.uniform3f(this.addr,t.r,t.g,t.b),e[0]=t.r,e[1]=t.g,e[2]=t.b);else{if(kn(e,t))return;n.uniform3fv(this.addr,t),Dn(e,t)}}function qN(n,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y||e[2]!==t.z||e[3]!==t.w)&&(n.uniform4f(this.addr,t.x,t.y,t.z,t.w),e[0]=t.x,e[1]=t.y,e[2]=t.z,e[3]=t.w);else{if(kn(e,t))return;n.uniform4fv(this.addr,t),Dn(e,t)}}function jN(n,t){const e=this.cache,s=t.elements;if(s===void 0){if(kn(e,t))return;n.uniformMatrix2fv(this.addr,!1,t),Dn(e,t)}else{if(kn(e,s))return;ab.set(s),n.uniformMatrix2fv(this.addr,!1,ab),Dn(e,s)}}function KN(n,t){const e=this.cache,s=t.elements;if(s===void 0){if(kn(e,t))return;n.uniformMatrix3fv(this.addr,!1,t),Dn(e,t)}else{if(kn(e,s))return;rb.set(s),n.uniformMatrix3fv(this.addr,!1,rb),Dn(e,s)}}function YN(n,t){const e=this.cache,s=t.elements;if(s===void 0){if(kn(e,t))return;n.uniformMatrix4fv(this.addr,!1,t),Dn(e,t)}else{if(kn(e,s))return;ob.set(s),n.uniformMatrix4fv(this.addr,!1,ob),Dn(e,s)}}function ZN(n,t){const e=this.cache;e[0]!==t&&(n.uniform1i(this.addr,t),e[0]=t)}function JN(n,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y)&&(n.uniform2i(this.addr,t.x,t.y),e[0]=t.x,e[1]=t.y);else{if(kn(e,t))return;n.uniform2iv(this.addr,t),Dn(e,t)}}function QN(n,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y||e[2]!==t.z)&&(n.uniform3i(this.addr,t.x,t.y,t.z),e[0]=t.x,e[1]=t.y,e[2]=t.z);else{if(kn(e,t))return;n.uniform3iv(this.addr,t),Dn(e,t)}}function tk(n,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y||e[2]!==t.z||e[3]!==t.w)&&(n.uniform4i(this.addr,t.x,t.y,t.z,t.w),e[0]=t.x,e[1]=t.y,e[2]=t.z,e[3]=t.w);else{if(kn(e,t))return;n.uniform4iv(this.addr,t),Dn(e,t)}}function ek(n,t){const e=this.cache;e[0]!==t&&(n.uniform1ui(this.addr,t),e[0]=t)}function nk(n,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y)&&(n.uniform2ui(this.addr,t.x,t.y),e[0]=t.x,e[1]=t.y);else{if(kn(e,t))return;n.uniform2uiv(this.addr,t),Dn(e,t)}}function sk(n,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y||e[2]!==t.z)&&(n.uniform3ui(this.addr,t.x,t.y,t.z),e[0]=t.x,e[1]=t.y,e[2]=t.z);else{if(kn(e,t))return;n.uniform3uiv(this.addr,t),Dn(e,t)}}function ik(n,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y||e[2]!==t.z||e[3]!==t.w)&&(n.uniform4ui(this.addr,t.x,t.y,t.z,t.w),e[0]=t.x,e[1]=t.y,e[2]=t.z,e[3]=t.w);else{if(kn(e,t))return;n.uniform4uiv(this.addr,t),Dn(e,t)}}function ok(n,t,e){const s=this.cache,i=e.allocateTextureUnit();s[0]!==i&&(n.uniform1i(this.addr,i),s[0]=i);let o;this.type===n.SAMPLER_2D_SHADOW?(nb.compareFunction=Tv,o=nb):o=Ov,e.setTexture2D(t||o,i)}function rk(n,t,e){const s=this.cache,i=e.allocateTextureUnit();s[0]!==i&&(n.uniform1i(this.addr,i),s[0]=i),e.setTexture3D(t||Bv,i)}function ak(n,t,e){const s=this.cache,i=e.allocateTextureUnit();s[0]!==i&&(n.uniform1i(this.addr,i),s[0]=i),e.setTextureCube(t||zv,i)}function ck(n,t,e){const s=this.cache,i=e.allocateTextureUnit();s[0]!==i&&(n.uniform1i(this.addr,i),s[0]=i),e.setTexture2DArray(t||Uv,i)}function uk(n){switch(n){case 5126:return GN;case 35664:return HN;case 35665:return XN;case 35666:return qN;case 35674:return jN;case 35675:return KN;case 35676:return YN;case 5124:case 35670:return ZN;case 35667:case 35671:return JN;case 35668:case 35672:return QN;case 35669:case 35673:return tk;case 5125:return ek;case 36294:return nk;case 36295:return sk;case 36296:return ik;case 35678:case 36198:case 36298:case 36306:case 35682:return ok;case 35679:case 36299:case 36307:return rk;case 35680:case 36300:case 36308:case 36293:return ak;case 36289:case 36303:case 36311:case 36292:return ck}}function lk(n,t){n.uniform1fv(this.addr,t)}function dk(n,t){const e=oc(t,this.size,2);n.uniform2fv(this.addr,e)}function hk(n,t){const e=oc(t,this.size,3);n.uniform3fv(this.addr,e)}function fk(n,t){const e=oc(t,this.size,4);n.uniform4fv(this.addr,e)}function pk(n,t){const e=oc(t,this.size,4);n.uniformMatrix2fv(this.addr,!1,e)}function mk(n,t){const e=oc(t,this.size,9);n.uniformMatrix3fv(this.addr,!1,e)}function gk(n,t){const e=oc(t,this.size,16);n.uniformMatrix4fv(this.addr,!1,e)}function xk(n,t){n.uniform1iv(this.addr,t)}function yk(n,t){n.uniform2iv(this.addr,t)}function bk(n,t){n.uniform3iv(this.addr,t)}function wk(n,t){n.uniform4iv(this.addr,t)}function vk(n,t){n.uniform1uiv(this.addr,t)}function _k(n,t){n.uniform2uiv(this.addr,t)}function Ck(n,t){n.uniform3uiv(this.addr,t)}function Sk(n,t){n.uniform4uiv(this.addr,t)}function Tk(n,t,e){const s=this.cache,i=t.length,o=Mh(e,i);kn(s,o)||(n.uniform1iv(this.addr,o),Dn(s,o));for(let r=0;r!==i;++r)e.setTexture2D(t[r]||Ov,o[r])}function Ek(n,t,e){const s=this.cache,i=t.length,o=Mh(e,i);kn(s,o)||(n.uniform1iv(this.addr,o),Dn(s,o));for(let r=0;r!==i;++r)e.setTexture3D(t[r]||Bv,o[r])}function Ik(n,t,e){const s=this.cache,i=t.length,o=Mh(e,i);kn(s,o)||(n.uniform1iv(this.addr,o),Dn(s,o));for(let r=0;r!==i;++r)e.setTextureCube(t[r]||zv,o[r])}function Rk(n,t,e){const s=this.cache,i=t.length,o=Mh(e,i);kn(s,o)||(n.uniform1iv(this.addr,o),Dn(s,o));for(let r=0;r!==i;++r)e.setTexture2DArray(t[r]||Uv,o[r])}function Mk(n){switch(n){case 5126:return lk;case 35664:return dk;case 35665:return hk;case 35666:return fk;case 35674:return pk;case 35675:return mk;case 35676:return gk;case 5124:case 35670:return xk;case 35667:case 35671:return yk;case 35668:case 35672:return bk;case 35669:case 35673:return wk;case 5125:return vk;case 36294:return _k;case 36295:return Ck;case 36296:return Sk;case 35678:case 36198:case 36298:case 36306:case 35682:return Tk;case 35679:case 36299:case 36307:return Ek;case 35680:case 36300:case 36308:case 36293:return Ik;case 36289:case 36303:case 36311:case 36292:return Rk}}class Ak{constructor(t,e,s){this.id=t,this.addr=s,this.cache=[],this.type=e.type,this.setValue=uk(e.type)}}class Nk{constructor(t,e,s){this.id=t,this.addr=s,this.cache=[],this.type=e.type,this.size=e.size,this.setValue=Mk(e.type)}}class kk{constructor(t){this.id=t,this.seq=[],this.map={}}setValue(t,e,s){const i=this.seq;for(let o=0,r=i.length;o!==r;++o){const a=i[o];a.setValue(t,e[a.id],s)}}}const Kp=/(\w+)(\])?(\[|\.)?/g;function cb(n,t){n.seq.push(t),n.map[t.id]=t}function Dk(n,t,e){const s=n.name,i=s.length;for(Kp.lastIndex=0;;){const o=Kp.exec(s),r=Kp.lastIndex;let a=o[1];const c=o[2]==="]",u=o[3];if(c&&(a=a|0),u===void 0||u==="["&&r+2===i){cb(e,u===void 0?new Ak(a,n,t):new Nk(a,n,t));break}else{let d=e.map[a];d===void 0&&(d=new kk(a),cb(e,d)),e=d}}}class $d{constructor(t,e){this.seq=[],this.map={};const s=t.getProgramParameter(e,t.ACTIVE_UNIFORMS);for(let i=0;i<s;++i){const o=t.getActiveUniform(e,i),r=t.getUniformLocation(e,o.name);Dk(o,r,this)}}setValue(t,e,s,i){const o=this.map[e];o!==void 0&&o.setValue(t,s,i)}setOptional(t,e,s){const i=e[s];i!==void 0&&this.setValue(t,s,i)}static upload(t,e,s,i){for(let o=0,r=e.length;o!==r;++o){const a=e[o],c=s[a.id];c.needsUpdate!==!1&&a.setValue(t,c.value,i)}}static seqWithValue(t,e){const s=[];for(let i=0,o=t.length;i!==o;++i){const r=t[i];r.id in e&&s.push(r)}return s}}function ub(n,t,e){const s=n.createShader(t);return n.shaderSource(s,e),n.compileShader(s),s}const $k=37297;let Fk=0;function Pk(n,t){const e=n.split(`
`),s=[],i=Math.max(t-6,0),o=Math.min(t+6,e.length);for(let r=i;r<o;r++){const a=r+1;s.push(`${a===t?">":" "} ${a}: ${e[r]}`)}return s.join(`
`)}const lb=new ge;function Lk(n){$e._getMatrix(lb,$e.workingColorSpace,n);const t=`mat3( ${lb.elements.map(e=>e.toFixed(4))} )`;switch($e.getTransfer(n)){case jd:return[t,"LinearTransferOETF"];case He:return[t,"sRGBTransferOETF"];default:return console.warn("THREE.WebGLProgram: Unsupported color space: ",n),[t,"LinearTransferOETF"]}}function db(n,t,e){const s=n.getShaderParameter(t,n.COMPILE_STATUS),i=n.getShaderInfoLog(t).trim();if(s&&i==="")return"";const o=/ERROR: 0:(\d+)/.exec(i);if(o){const r=parseInt(o[1]);return e.toUpperCase()+`

`+i+`

`+Pk(n.getShaderSource(t),r)}else return i}function Ok(n,t){const e=Lk(t);return[`vec4 ${n}( vec4 value ) {`,`	return ${e[1]}( vec4( value.rgb * ${e[0]}, value.a ) );`,"}"].join(`
`)}function Uk(n,t){let e;switch(t){case N3:e="Linear";break;case k3:e="Reinhard";break;case D3:e="Cineon";break;case $3:e="ACESFilmic";break;case P3:e="AgX";break;case L3:e="Neutral";break;case F3:e="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",t),e="Linear"}return"vec3 "+n+"( vec3 color ) { return "+e+"ToneMapping( color ); }"}const dd=new st;function Bk(){$e.getLuminanceCoefficients(dd);const n=dd.x.toFixed(4),t=dd.y.toFixed(4),e=dd.z.toFixed(4);return["float luminance( const in vec3 rgb ) {",`	const vec3 weights = vec3( ${n}, ${t}, ${e} );`,"	return dot( weights, rgb );","}"].join(`
`)}function zk(n){return[n.extensionClipCullDistance?"#extension GL_ANGLE_clip_cull_distance : require":"",n.extensionMultiDraw?"#extension GL_ANGLE_multi_draw : require":""].filter(Pc).join(`
`)}function Vk(n){const t=[];for(const e in n){const s=n[e];s!==!1&&t.push("#define "+e+" "+s)}return t.join(`
`)}function Wk(n,t){const e={},s=n.getProgramParameter(t,n.ACTIVE_ATTRIBUTES);for(let i=0;i<s;i++){const o=n.getActiveAttrib(t,i),r=o.name;let a=1;o.type===n.FLOAT_MAT2&&(a=2),o.type===n.FLOAT_MAT3&&(a=3),o.type===n.FLOAT_MAT4&&(a=4),e[r]={type:o.type,location:n.getAttribLocation(t,r),locationSize:a}}return e}function Pc(n){return n!==""}function hb(n,t){const e=t.numSpotLightShadows+t.numSpotLightMaps-t.numSpotLightShadowsWithMaps;return n.replace(/NUM_DIR_LIGHTS/g,t.numDirLights).replace(/NUM_SPOT_LIGHTS/g,t.numSpotLights).replace(/NUM_SPOT_LIGHT_MAPS/g,t.numSpotLightMaps).replace(/NUM_SPOT_LIGHT_COORDS/g,e).replace(/NUM_RECT_AREA_LIGHTS/g,t.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,t.numPointLights).replace(/NUM_HEMI_LIGHTS/g,t.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,t.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g,t.numSpotLightShadowsWithMaps).replace(/NUM_SPOT_LIGHT_SHADOWS/g,t.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,t.numPointLightShadows)}function fb(n,t){return n.replace(/NUM_CLIPPING_PLANES/g,t.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,t.numClippingPlanes-t.numClipIntersection)}const Gk=/^[ \t]*#include +<([\w\d./]+)>/gm;function r0(n){return n.replace(Gk,Xk)}const Hk=new Map;function Xk(n,t){let e=ye[t];if(e===void 0){const s=Hk.get(t);if(s!==void 0)e=ye[s],console.warn('THREE.WebGLRenderer: Shader chunk "%s" has been deprecated. Use "%s" instead.',t,s);else throw new Error("Can not resolve #include <"+t+">")}return r0(e)}const qk=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function pb(n){return n.replace(qk,jk)}function jk(n,t,e,s){let i="";for(let o=parseInt(t);o<parseInt(e);o++)i+=s.replace(/\[\s*i\s*\]/g,"[ "+o+" ]").replace(/UNROLLED_LOOP_INDEX/g,o);return i}function mb(n){let t=`precision ${n.precision} float;
	precision ${n.precision} int;
	precision ${n.precision} sampler2D;
	precision ${n.precision} samplerCube;
	precision ${n.precision} sampler3D;
	precision ${n.precision} sampler2DArray;
	precision ${n.precision} sampler2DShadow;
	precision ${n.precision} samplerCubeShadow;
	precision ${n.precision} sampler2DArrayShadow;
	precision ${n.precision} isampler2D;
	precision ${n.precision} isampler3D;
	precision ${n.precision} isamplerCube;
	precision ${n.precision} isampler2DArray;
	precision ${n.precision} usampler2D;
	precision ${n.precision} usampler3D;
	precision ${n.precision} usamplerCube;
	precision ${n.precision} usampler2DArray;
	`;return n.precision==="highp"?t+=`
#define HIGH_PRECISION`:n.precision==="mediump"?t+=`
#define MEDIUM_PRECISION`:n.precision==="lowp"&&(t+=`
#define LOW_PRECISION`),t}function Kk(n){let t="SHADOWMAP_TYPE_BASIC";return n.shadowMapType===mv?t="SHADOWMAP_TYPE_PCF":n.shadowMapType===l3?t="SHADOWMAP_TYPE_PCF_SOFT":n.shadowMapType===Ji&&(t="SHADOWMAP_TYPE_VSM"),t}function Yk(n){let t="ENVMAP_TYPE_CUBE";if(n.envMap)switch(n.envMapMode){case Ba:case za:t="ENVMAP_TYPE_CUBE";break;case Ih:t="ENVMAP_TYPE_CUBE_UV";break}return t}function Zk(n){let t="ENVMAP_MODE_REFLECTION";if(n.envMap)switch(n.envMapMode){case za:t="ENVMAP_MODE_REFRACTION";break}return t}function Jk(n){let t="ENVMAP_BLENDING_NONE";if(n.envMap)switch(n.combine){case Q0:t="ENVMAP_BLENDING_MULTIPLY";break;case M3:t="ENVMAP_BLENDING_MIX";break;case A3:t="ENVMAP_BLENDING_ADD";break}return t}function Qk(n){const t=n.envMapCubeUVHeight;if(t===null)return null;const e=Math.log2(t)-2,s=1/t;return{texelWidth:1/(3*Math.max(Math.pow(2,e),7*16)),texelHeight:s,maxMip:e}}function tD(n,t,e,s){const i=n.getContext(),o=e.defines;let r=e.vertexShader,a=e.fragmentShader;const c=Kk(e),u=Yk(e),l=Zk(e),d=Jk(e),h=Qk(e),f=zk(e),p=Vk(o),x=i.createProgram();let g,m,y=e.glslVersion?"#version "+e.glslVersion+`
`:"";e.isRawShaderMaterial?(g=["#define SHADER_TYPE "+e.shaderType,"#define SHADER_NAME "+e.shaderName,p].filter(Pc).join(`
`),g.length>0&&(g+=`
`),m=["#define SHADER_TYPE "+e.shaderType,"#define SHADER_NAME "+e.shaderName,p].filter(Pc).join(`
`),m.length>0&&(m+=`
`)):(g=[mb(e),"#define SHADER_TYPE "+e.shaderType,"#define SHADER_NAME "+e.shaderName,p,e.extensionClipCullDistance?"#define USE_CLIP_DISTANCE":"",e.batching?"#define USE_BATCHING":"",e.batchingColor?"#define USE_BATCHING_COLOR":"",e.instancing?"#define USE_INSTANCING":"",e.instancingColor?"#define USE_INSTANCING_COLOR":"",e.instancingMorph?"#define USE_INSTANCING_MORPH":"",e.useFog&&e.fog?"#define USE_FOG":"",e.useFog&&e.fogExp2?"#define FOG_EXP2":"",e.map?"#define USE_MAP":"",e.envMap?"#define USE_ENVMAP":"",e.envMap?"#define "+l:"",e.lightMap?"#define USE_LIGHTMAP":"",e.aoMap?"#define USE_AOMAP":"",e.bumpMap?"#define USE_BUMPMAP":"",e.normalMap?"#define USE_NORMALMAP":"",e.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",e.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",e.displacementMap?"#define USE_DISPLACEMENTMAP":"",e.emissiveMap?"#define USE_EMISSIVEMAP":"",e.anisotropy?"#define USE_ANISOTROPY":"",e.anisotropyMap?"#define USE_ANISOTROPYMAP":"",e.clearcoatMap?"#define USE_CLEARCOATMAP":"",e.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",e.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",e.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",e.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",e.specularMap?"#define USE_SPECULARMAP":"",e.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",e.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",e.roughnessMap?"#define USE_ROUGHNESSMAP":"",e.metalnessMap?"#define USE_METALNESSMAP":"",e.alphaMap?"#define USE_ALPHAMAP":"",e.alphaHash?"#define USE_ALPHAHASH":"",e.transmission?"#define USE_TRANSMISSION":"",e.transmissionMap?"#define USE_TRANSMISSIONMAP":"",e.thicknessMap?"#define USE_THICKNESSMAP":"",e.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",e.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",e.mapUv?"#define MAP_UV "+e.mapUv:"",e.alphaMapUv?"#define ALPHAMAP_UV "+e.alphaMapUv:"",e.lightMapUv?"#define LIGHTMAP_UV "+e.lightMapUv:"",e.aoMapUv?"#define AOMAP_UV "+e.aoMapUv:"",e.emissiveMapUv?"#define EMISSIVEMAP_UV "+e.emissiveMapUv:"",e.bumpMapUv?"#define BUMPMAP_UV "+e.bumpMapUv:"",e.normalMapUv?"#define NORMALMAP_UV "+e.normalMapUv:"",e.displacementMapUv?"#define DISPLACEMENTMAP_UV "+e.displacementMapUv:"",e.metalnessMapUv?"#define METALNESSMAP_UV "+e.metalnessMapUv:"",e.roughnessMapUv?"#define ROUGHNESSMAP_UV "+e.roughnessMapUv:"",e.anisotropyMapUv?"#define ANISOTROPYMAP_UV "+e.anisotropyMapUv:"",e.clearcoatMapUv?"#define CLEARCOATMAP_UV "+e.clearcoatMapUv:"",e.clearcoatNormalMapUv?"#define CLEARCOAT_NORMALMAP_UV "+e.clearcoatNormalMapUv:"",e.clearcoatRoughnessMapUv?"#define CLEARCOAT_ROUGHNESSMAP_UV "+e.clearcoatRoughnessMapUv:"",e.iridescenceMapUv?"#define IRIDESCENCEMAP_UV "+e.iridescenceMapUv:"",e.iridescenceThicknessMapUv?"#define IRIDESCENCE_THICKNESSMAP_UV "+e.iridescenceThicknessMapUv:"",e.sheenColorMapUv?"#define SHEEN_COLORMAP_UV "+e.sheenColorMapUv:"",e.sheenRoughnessMapUv?"#define SHEEN_ROUGHNESSMAP_UV "+e.sheenRoughnessMapUv:"",e.specularMapUv?"#define SPECULARMAP_UV "+e.specularMapUv:"",e.specularColorMapUv?"#define SPECULAR_COLORMAP_UV "+e.specularColorMapUv:"",e.specularIntensityMapUv?"#define SPECULAR_INTENSITYMAP_UV "+e.specularIntensityMapUv:"",e.transmissionMapUv?"#define TRANSMISSIONMAP_UV "+e.transmissionMapUv:"",e.thicknessMapUv?"#define THICKNESSMAP_UV "+e.thicknessMapUv:"",e.vertexTangents&&e.flatShading===!1?"#define USE_TANGENT":"",e.vertexColors?"#define USE_COLOR":"",e.vertexAlphas?"#define USE_COLOR_ALPHA":"",e.vertexUv1s?"#define USE_UV1":"",e.vertexUv2s?"#define USE_UV2":"",e.vertexUv3s?"#define USE_UV3":"",e.pointsUvs?"#define USE_POINTS_UV":"",e.flatShading?"#define FLAT_SHADED":"",e.skinning?"#define USE_SKINNING":"",e.morphTargets?"#define USE_MORPHTARGETS":"",e.morphNormals&&e.flatShading===!1?"#define USE_MORPHNORMALS":"",e.morphColors?"#define USE_MORPHCOLORS":"",e.morphTargetsCount>0?"#define MORPHTARGETS_TEXTURE_STRIDE "+e.morphTextureStride:"",e.morphTargetsCount>0?"#define MORPHTARGETS_COUNT "+e.morphTargetsCount:"",e.doubleSided?"#define DOUBLE_SIDED":"",e.flipSided?"#define FLIP_SIDED":"",e.shadowMapEnabled?"#define USE_SHADOWMAP":"",e.shadowMapEnabled?"#define "+c:"",e.sizeAttenuation?"#define USE_SIZEATTENUATION":"",e.numLightProbes>0?"#define USE_LIGHT_PROBES":"",e.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",e.reverseDepthBuffer?"#define USE_REVERSEDEPTHBUF":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","	attribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","	attribute vec3 instanceColor;","#endif","#ifdef USE_INSTANCING_MORPH","	uniform sampler2D morphTexture;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_UV1","	attribute vec2 uv1;","#endif","#ifdef USE_UV2","	attribute vec2 uv2;","#endif","#ifdef USE_UV3","	attribute vec2 uv3;","#endif","#ifdef USE_TANGENT","	attribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","	attribute vec4 color;","#elif defined( USE_COLOR )","	attribute vec3 color;","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif",`
`].filter(Pc).join(`
`),m=[mb(e),"#define SHADER_TYPE "+e.shaderType,"#define SHADER_NAME "+e.shaderName,p,e.useFog&&e.fog?"#define USE_FOG":"",e.useFog&&e.fogExp2?"#define FOG_EXP2":"",e.alphaToCoverage?"#define ALPHA_TO_COVERAGE":"",e.map?"#define USE_MAP":"",e.matcap?"#define USE_MATCAP":"",e.envMap?"#define USE_ENVMAP":"",e.envMap?"#define "+u:"",e.envMap?"#define "+l:"",e.envMap?"#define "+d:"",h?"#define CUBEUV_TEXEL_WIDTH "+h.texelWidth:"",h?"#define CUBEUV_TEXEL_HEIGHT "+h.texelHeight:"",h?"#define CUBEUV_MAX_MIP "+h.maxMip+".0":"",e.lightMap?"#define USE_LIGHTMAP":"",e.aoMap?"#define USE_AOMAP":"",e.bumpMap?"#define USE_BUMPMAP":"",e.normalMap?"#define USE_NORMALMAP":"",e.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",e.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",e.emissiveMap?"#define USE_EMISSIVEMAP":"",e.anisotropy?"#define USE_ANISOTROPY":"",e.anisotropyMap?"#define USE_ANISOTROPYMAP":"",e.clearcoat?"#define USE_CLEARCOAT":"",e.clearcoatMap?"#define USE_CLEARCOATMAP":"",e.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",e.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",e.dispersion?"#define USE_DISPERSION":"",e.iridescence?"#define USE_IRIDESCENCE":"",e.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",e.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",e.specularMap?"#define USE_SPECULARMAP":"",e.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",e.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",e.roughnessMap?"#define USE_ROUGHNESSMAP":"",e.metalnessMap?"#define USE_METALNESSMAP":"",e.alphaMap?"#define USE_ALPHAMAP":"",e.alphaTest?"#define USE_ALPHATEST":"",e.alphaHash?"#define USE_ALPHAHASH":"",e.sheen?"#define USE_SHEEN":"",e.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",e.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",e.transmission?"#define USE_TRANSMISSION":"",e.transmissionMap?"#define USE_TRANSMISSIONMAP":"",e.thicknessMap?"#define USE_THICKNESSMAP":"",e.vertexTangents&&e.flatShading===!1?"#define USE_TANGENT":"",e.vertexColors||e.instancingColor||e.batchingColor?"#define USE_COLOR":"",e.vertexAlphas?"#define USE_COLOR_ALPHA":"",e.vertexUv1s?"#define USE_UV1":"",e.vertexUv2s?"#define USE_UV2":"",e.vertexUv3s?"#define USE_UV3":"",e.pointsUvs?"#define USE_POINTS_UV":"",e.gradientMap?"#define USE_GRADIENTMAP":"",e.flatShading?"#define FLAT_SHADED":"",e.doubleSided?"#define DOUBLE_SIDED":"",e.flipSided?"#define FLIP_SIDED":"",e.shadowMapEnabled?"#define USE_SHADOWMAP":"",e.shadowMapEnabled?"#define "+c:"",e.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",e.numLightProbes>0?"#define USE_LIGHT_PROBES":"",e.decodeVideoTexture?"#define DECODE_VIDEO_TEXTURE":"",e.decodeVideoTextureEmissive?"#define DECODE_VIDEO_TEXTURE_EMISSIVE":"",e.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",e.reverseDepthBuffer?"#define USE_REVERSEDEPTHBUF":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",e.toneMapping!==Ao?"#define TONE_MAPPING":"",e.toneMapping!==Ao?ye.tonemapping_pars_fragment:"",e.toneMapping!==Ao?Uk("toneMapping",e.toneMapping):"",e.dithering?"#define DITHERING":"",e.opaque?"#define OPAQUE":"",ye.colorspace_pars_fragment,Ok("linearToOutputTexel",e.outputColorSpace),Bk(),e.useDepthPacking?"#define DEPTH_PACKING "+e.depthPacking:"",`
`].filter(Pc).join(`
`)),r=r0(r),r=hb(r,e),r=fb(r,e),a=r0(a),a=hb(a,e),a=fb(a,e),r=pb(r),a=pb(a),e.isRawShaderMaterial!==!0&&(y=`#version 300 es
`,g=[f,"#define attribute in","#define varying out","#define texture2D texture"].join(`
`)+`
`+g,m=["#define varying in",e.glslVersion===_y?"":"layout(location = 0) out highp vec4 pc_fragColor;",e.glslVersion===_y?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join(`
`)+`
`+m);const w=y+g+r,b=y+m+a,_=ub(i,i.VERTEX_SHADER,w),T=ub(i,i.FRAGMENT_SHADER,b);i.attachShader(x,_),i.attachShader(x,T),e.index0AttributeName!==void 0?i.bindAttribLocation(x,0,e.index0AttributeName):e.morphTargets===!0&&i.bindAttribLocation(x,0,"position"),i.linkProgram(x);function E(C){if(n.debug.checkShaderErrors){const M=i.getProgramInfoLog(x).trim(),N=i.getShaderInfoLog(_).trim(),D=i.getShaderInfoLog(T).trim();let $=!0,F=!0;if(i.getProgramParameter(x,i.LINK_STATUS)===!1)if($=!1,typeof n.debug.onShaderError=="function")n.debug.onShaderError(i,x,_,T);else{const B=db(i,_,"vertex"),P=db(i,T,"fragment");console.error("THREE.WebGLProgram: Shader Error "+i.getError()+" - VALIDATE_STATUS "+i.getProgramParameter(x,i.VALIDATE_STATUS)+`

Material Name: `+C.name+`
Material Type: `+C.type+`

Program Info Log: `+M+`
`+B+`
`+P)}else M!==""?console.warn("THREE.WebGLProgram: Program Info Log:",M):(N===""||D==="")&&(F=!1);F&&(C.diagnostics={runnable:$,programLog:M,vertexShader:{log:N,prefix:g},fragmentShader:{log:D,prefix:m}})}i.deleteShader(_),i.deleteShader(T),I=new $d(i,x),S=Wk(i,x)}let I;this.getUniforms=function(){return I===void 0&&E(this),I};let S;this.getAttributes=function(){return S===void 0&&E(this),S};let v=e.rendererExtensionParallelShaderCompile===!1;return this.isReady=function(){return v===!1&&(v=i.getProgramParameter(x,$k)),v},this.destroy=function(){s.releaseStatesOfProgram(this),i.deleteProgram(x),this.program=void 0},this.type=e.shaderType,this.name=e.shaderName,this.id=Fk++,this.cacheKey=t,this.usedTimes=1,this.program=x,this.vertexShader=_,this.fragmentShader=T,this}let eD=0;class nD{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(t){const e=t.vertexShader,s=t.fragmentShader,i=this._getShaderStage(e),o=this._getShaderStage(s),r=this._getShaderCacheForMaterial(t);return r.has(i)===!1&&(r.add(i),i.usedTimes++),r.has(o)===!1&&(r.add(o),o.usedTimes++),this}remove(t){const e=this.materialCache.get(t);for(const s of e)s.usedTimes--,s.usedTimes===0&&this.shaderCache.delete(s.code);return this.materialCache.delete(t),this}getVertexShaderID(t){return this._getShaderStage(t.vertexShader).id}getFragmentShaderID(t){return this._getShaderStage(t.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(t){const e=this.materialCache;let s=e.get(t);return s===void 0&&(s=new Set,e.set(t,s)),s}_getShaderStage(t){const e=this.shaderCache;let s=e.get(t);return s===void 0&&(s=new sD(t),e.set(t,s)),s}}class sD{constructor(t){this.id=eD++,this.code=t,this.usedTimes=0}}function iD(n,t,e,s,i,o,r){const a=new u1,c=new nD,u=new Set,l=[],d=i.logarithmicDepthBuffer,h=i.vertexTextures;let f=i.precision;const p={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};function x(S){return u.add(S),S===0?"uv":`uv${S}`}function g(S,v,C,M,N){const D=M.fog,$=N.geometry,F=S.isMeshStandardMaterial?M.environment:null,B=(S.isMeshStandardMaterial?e:t).get(S.envMap||F),P=B&&B.mapping===Ih?B.image.height:null,V=p[S.type];S.precision!==null&&(f=i.getMaxPrecision(S.precision),f!==S.precision&&console.warn("THREE.WebGLProgram.getParameters:",S.precision,"not supported, using",f,"instead."));const q=$.morphAttributes.position||$.morphAttributes.normal||$.morphAttributes.color,J=q!==void 0?q.length:0;let it=0;$.morphAttributes.position!==void 0&&(it=1),$.morphAttributes.normal!==void 0&&(it=2),$.morphAttributes.color!==void 0&&(it=3);let ut,G,Q,ht;if(V){const Be=Mi[V];ut=Be.vertexShader,G=Be.fragmentShader}else ut=S.vertexShader,G=S.fragmentShader,c.update(S),Q=c.getVertexShaderID(S),ht=c.getFragmentShaderID(S);const dt=n.getRenderTarget(),gt=n.state.buffers.depth.getReversed(),St=N.isInstancedMesh===!0,_t=N.isBatchedMesh===!0,Pt=!!S.map,Zt=!!S.matcap,qt=!!B,U=!!S.aoMap,he=!!S.lightMap,Wt=!!S.bumpMap,Qt=!!S.normalMap,Tt=!!S.displacementMap,pe=!!S.emissiveMap,$t=!!S.metalnessMap,oe=!!S.roughnessMap,ke=S.anisotropy>0,L=S.clearcoat>0,R=S.dispersion>0,et=S.iridescence>0,ft=S.sheen>0,pt=S.transmission>0,lt=ke&&!!S.anisotropyMap,Vt=L&&!!S.clearcoatMap,It=L&&!!S.clearcoatNormalMap,Bt=L&&!!S.clearcoatRoughnessMap,jt=et&&!!S.iridescenceMap,bt=et&&!!S.iridescenceThicknessMap,Ft=ft&&!!S.sheenColorMap,ne=ft&&!!S.sheenRoughnessMap,se=!!S.specularMap,Rt=!!S.specularColorMap,le=!!S.specularIntensityMap,H=pt&&!!S.transmissionMap,kt=pt&&!!S.thicknessMap,wt=!!S.gradientMap,zt=!!S.alphaMap,vt=S.alphaTest>0,mt=!!S.alphaHash,Gt=!!S.extensions;let fe=Ao;S.toneMapped&&(dt===null||dt.isXRRenderTarget===!0)&&(fe=n.toneMapping);const tn={shaderID:V,shaderType:S.type,shaderName:S.name,vertexShader:ut,fragmentShader:G,defines:S.defines,customVertexShaderID:Q,customFragmentShaderID:ht,isRawShaderMaterial:S.isRawShaderMaterial===!0,glslVersion:S.glslVersion,precision:f,batching:_t,batchingColor:_t&&N._colorsTexture!==null,instancing:St,instancingColor:St&&N.instanceColor!==null,instancingMorph:St&&N.morphTexture!==null,supportsVertexTextures:h,outputColorSpace:dt===null?n.outputColorSpace:dt.isXRRenderTarget===!0?dt.texture.colorSpace:Va,alphaToCoverage:!!S.alphaToCoverage,map:Pt,matcap:Zt,envMap:qt,envMapMode:qt&&B.mapping,envMapCubeUVHeight:P,aoMap:U,lightMap:he,bumpMap:Wt,normalMap:Qt,displacementMap:h&&Tt,emissiveMap:pe,normalMapObjectSpace:Qt&&S.normalMapType===z3,normalMapTangentSpace:Qt&&S.normalMapType===Sv,metalnessMap:$t,roughnessMap:oe,anisotropy:ke,anisotropyMap:lt,clearcoat:L,clearcoatMap:Vt,clearcoatNormalMap:It,clearcoatRoughnessMap:Bt,dispersion:R,iridescence:et,iridescenceMap:jt,iridescenceThicknessMap:bt,sheen:ft,sheenColorMap:Ft,sheenRoughnessMap:ne,specularMap:se,specularColorMap:Rt,specularIntensityMap:le,transmission:pt,transmissionMap:H,thicknessMap:kt,gradientMap:wt,opaque:S.transparent===!1&&S.blending===Aa&&S.alphaToCoverage===!1,alphaMap:zt,alphaTest:vt,alphaHash:mt,combine:S.combine,mapUv:Pt&&x(S.map.channel),aoMapUv:U&&x(S.aoMap.channel),lightMapUv:he&&x(S.lightMap.channel),bumpMapUv:Wt&&x(S.bumpMap.channel),normalMapUv:Qt&&x(S.normalMap.channel),displacementMapUv:Tt&&x(S.displacementMap.channel),emissiveMapUv:pe&&x(S.emissiveMap.channel),metalnessMapUv:$t&&x(S.metalnessMap.channel),roughnessMapUv:oe&&x(S.roughnessMap.channel),anisotropyMapUv:lt&&x(S.anisotropyMap.channel),clearcoatMapUv:Vt&&x(S.clearcoatMap.channel),clearcoatNormalMapUv:It&&x(S.clearcoatNormalMap.channel),clearcoatRoughnessMapUv:Bt&&x(S.clearcoatRoughnessMap.channel),iridescenceMapUv:jt&&x(S.iridescenceMap.channel),iridescenceThicknessMapUv:bt&&x(S.iridescenceThicknessMap.channel),sheenColorMapUv:Ft&&x(S.sheenColorMap.channel),sheenRoughnessMapUv:ne&&x(S.sheenRoughnessMap.channel),specularMapUv:se&&x(S.specularMap.channel),specularColorMapUv:Rt&&x(S.specularColorMap.channel),specularIntensityMapUv:le&&x(S.specularIntensityMap.channel),transmissionMapUv:H&&x(S.transmissionMap.channel),thicknessMapUv:kt&&x(S.thicknessMap.channel),alphaMapUv:zt&&x(S.alphaMap.channel),vertexTangents:!!$.attributes.tangent&&(Qt||ke),vertexColors:S.vertexColors,vertexAlphas:S.vertexColors===!0&&!!$.attributes.color&&$.attributes.color.itemSize===4,pointsUvs:N.isPoints===!0&&!!$.attributes.uv&&(Pt||zt),fog:!!D,useFog:S.fog===!0,fogExp2:!!D&&D.isFogExp2,flatShading:S.flatShading===!0,sizeAttenuation:S.sizeAttenuation===!0,logarithmicDepthBuffer:d,reverseDepthBuffer:gt,skinning:N.isSkinnedMesh===!0,morphTargets:$.morphAttributes.position!==void 0,morphNormals:$.morphAttributes.normal!==void 0,morphColors:$.morphAttributes.color!==void 0,morphTargetsCount:J,morphTextureStride:it,numDirLights:v.directional.length,numPointLights:v.point.length,numSpotLights:v.spot.length,numSpotLightMaps:v.spotLightMap.length,numRectAreaLights:v.rectArea.length,numHemiLights:v.hemi.length,numDirLightShadows:v.directionalShadowMap.length,numPointLightShadows:v.pointShadowMap.length,numSpotLightShadows:v.spotShadowMap.length,numSpotLightShadowsWithMaps:v.numSpotLightShadowsWithMaps,numLightProbes:v.numLightProbes,numClippingPlanes:r.numPlanes,numClipIntersection:r.numIntersection,dithering:S.dithering,shadowMapEnabled:n.shadowMap.enabled&&C.length>0,shadowMapType:n.shadowMap.type,toneMapping:fe,decodeVideoTexture:Pt&&S.map.isVideoTexture===!0&&$e.getTransfer(S.map.colorSpace)===He,decodeVideoTextureEmissive:pe&&S.emissiveMap.isVideoTexture===!0&&$e.getTransfer(S.emissiveMap.colorSpace)===He,premultipliedAlpha:S.premultipliedAlpha,doubleSided:S.side===eo,flipSided:S.side===Ss,useDepthPacking:S.depthPacking>=0,depthPacking:S.depthPacking||0,index0AttributeName:S.index0AttributeName,extensionClipCullDistance:Gt&&S.extensions.clipCullDistance===!0&&s.has("WEBGL_clip_cull_distance"),extensionMultiDraw:(Gt&&S.extensions.multiDraw===!0||_t)&&s.has("WEBGL_multi_draw"),rendererExtensionParallelShaderCompile:s.has("KHR_parallel_shader_compile"),customProgramCacheKey:S.customProgramCacheKey()};return tn.vertexUv1s=u.has(1),tn.vertexUv2s=u.has(2),tn.vertexUv3s=u.has(3),u.clear(),tn}function m(S){const v=[];if(S.shaderID?v.push(S.shaderID):(v.push(S.customVertexShaderID),v.push(S.customFragmentShaderID)),S.defines!==void 0)for(const C in S.defines)v.push(C),v.push(S.defines[C]);return S.isRawShaderMaterial===!1&&(y(v,S),w(v,S),v.push(n.outputColorSpace)),v.push(S.customProgramCacheKey),v.join()}function y(S,v){S.push(v.precision),S.push(v.outputColorSpace),S.push(v.envMapMode),S.push(v.envMapCubeUVHeight),S.push(v.mapUv),S.push(v.alphaMapUv),S.push(v.lightMapUv),S.push(v.aoMapUv),S.push(v.bumpMapUv),S.push(v.normalMapUv),S.push(v.displacementMapUv),S.push(v.emissiveMapUv),S.push(v.metalnessMapUv),S.push(v.roughnessMapUv),S.push(v.anisotropyMapUv),S.push(v.clearcoatMapUv),S.push(v.clearcoatNormalMapUv),S.push(v.clearcoatRoughnessMapUv),S.push(v.iridescenceMapUv),S.push(v.iridescenceThicknessMapUv),S.push(v.sheenColorMapUv),S.push(v.sheenRoughnessMapUv),S.push(v.specularMapUv),S.push(v.specularColorMapUv),S.push(v.specularIntensityMapUv),S.push(v.transmissionMapUv),S.push(v.thicknessMapUv),S.push(v.combine),S.push(v.fogExp2),S.push(v.sizeAttenuation),S.push(v.morphTargetsCount),S.push(v.morphAttributeCount),S.push(v.numDirLights),S.push(v.numPointLights),S.push(v.numSpotLights),S.push(v.numSpotLightMaps),S.push(v.numHemiLights),S.push(v.numRectAreaLights),S.push(v.numDirLightShadows),S.push(v.numPointLightShadows),S.push(v.numSpotLightShadows),S.push(v.numSpotLightShadowsWithMaps),S.push(v.numLightProbes),S.push(v.shadowMapType),S.push(v.toneMapping),S.push(v.numClippingPlanes),S.push(v.numClipIntersection),S.push(v.depthPacking)}function w(S,v){a.disableAll(),v.supportsVertexTextures&&a.enable(0),v.instancing&&a.enable(1),v.instancingColor&&a.enable(2),v.instancingMorph&&a.enable(3),v.matcap&&a.enable(4),v.envMap&&a.enable(5),v.normalMapObjectSpace&&a.enable(6),v.normalMapTangentSpace&&a.enable(7),v.clearcoat&&a.enable(8),v.iridescence&&a.enable(9),v.alphaTest&&a.enable(10),v.vertexColors&&a.enable(11),v.vertexAlphas&&a.enable(12),v.vertexUv1s&&a.enable(13),v.vertexUv2s&&a.enable(14),v.vertexUv3s&&a.enable(15),v.vertexTangents&&a.enable(16),v.anisotropy&&a.enable(17),v.alphaHash&&a.enable(18),v.batching&&a.enable(19),v.dispersion&&a.enable(20),v.batchingColor&&a.enable(21),S.push(a.mask),a.disableAll(),v.fog&&a.enable(0),v.useFog&&a.enable(1),v.flatShading&&a.enable(2),v.logarithmicDepthBuffer&&a.enable(3),v.reverseDepthBuffer&&a.enable(4),v.skinning&&a.enable(5),v.morphTargets&&a.enable(6),v.morphNormals&&a.enable(7),v.morphColors&&a.enable(8),v.premultipliedAlpha&&a.enable(9),v.shadowMapEnabled&&a.enable(10),v.doubleSided&&a.enable(11),v.flipSided&&a.enable(12),v.useDepthPacking&&a.enable(13),v.dithering&&a.enable(14),v.transmission&&a.enable(15),v.sheen&&a.enable(16),v.opaque&&a.enable(17),v.pointsUvs&&a.enable(18),v.decodeVideoTexture&&a.enable(19),v.decodeVideoTextureEmissive&&a.enable(20),v.alphaToCoverage&&a.enable(21),S.push(a.mask)}function b(S){const v=p[S.type];let C;if(v){const M=Mi[v];C=wR.clone(M.uniforms)}else C=S.uniforms;return C}function _(S,v){let C;for(let M=0,N=l.length;M<N;M++){const D=l[M];if(D.cacheKey===v){C=D,++C.usedTimes;break}}return C===void 0&&(C=new tD(n,v,S,o),l.push(C)),C}function T(S){if(--S.usedTimes===0){const v=l.indexOf(S);l[v]=l[l.length-1],l.pop(),S.destroy()}}function E(S){c.remove(S)}function I(){c.dispose()}return{getParameters:g,getProgramCacheKey:m,getUniforms:b,acquireProgram:_,releaseProgram:T,releaseShaderCache:E,programs:l,dispose:I}}function oD(){let n=new WeakMap;function t(r){return n.has(r)}function e(r){let a=n.get(r);return a===void 0&&(a={},n.set(r,a)),a}function s(r){n.delete(r)}function i(r,a,c){n.get(r)[a]=c}function o(){n=new WeakMap}return{has:t,get:e,remove:s,update:i,dispose:o}}function rD(n,t){return n.groupOrder!==t.groupOrder?n.groupOrder-t.groupOrder:n.renderOrder!==t.renderOrder?n.renderOrder-t.renderOrder:n.material.id!==t.material.id?n.material.id-t.material.id:n.z!==t.z?n.z-t.z:n.id-t.id}function gb(n,t){return n.groupOrder!==t.groupOrder?n.groupOrder-t.groupOrder:n.renderOrder!==t.renderOrder?n.renderOrder-t.renderOrder:n.z!==t.z?t.z-n.z:n.id-t.id}function xb(){const n=[];let t=0;const e=[],s=[],i=[];function o(){t=0,e.length=0,s.length=0,i.length=0}function r(d,h,f,p,x,g){let m=n[t];return m===void 0?(m={id:d.id,object:d,geometry:h,material:f,groupOrder:p,renderOrder:d.renderOrder,z:x,group:g},n[t]=m):(m.id=d.id,m.object=d,m.geometry=h,m.material=f,m.groupOrder=p,m.renderOrder=d.renderOrder,m.z=x,m.group=g),t++,m}function a(d,h,f,p,x,g){const m=r(d,h,f,p,x,g);f.transmission>0?s.push(m):f.transparent===!0?i.push(m):e.push(m)}function c(d,h,f,p,x,g){const m=r(d,h,f,p,x,g);f.transmission>0?s.unshift(m):f.transparent===!0?i.unshift(m):e.unshift(m)}function u(d,h){e.length>1&&e.sort(d||rD),s.length>1&&s.sort(h||gb),i.length>1&&i.sort(h||gb)}function l(){for(let d=t,h=n.length;d<h;d++){const f=n[d];if(f.id===null)break;f.id=null,f.object=null,f.geometry=null,f.material=null,f.group=null}}return{opaque:e,transmissive:s,transparent:i,init:o,push:a,unshift:c,finish:l,sort:u}}function aD(){let n=new WeakMap;function t(s,i){const o=n.get(s);let r;return o===void 0?(r=new xb,n.set(s,[r])):i>=o.length?(r=new xb,o.push(r)):r=o[i],r}function e(){n=new WeakMap}return{get:t,dispose:e}}function cD(){const n={};return{get:function(t){if(n[t.id]!==void 0)return n[t.id];let e;switch(t.type){case"DirectionalLight":e={direction:new st,color:new be};break;case"SpotLight":e={position:new st,direction:new st,color:new be,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":e={position:new st,color:new be,distance:0,decay:0};break;case"HemisphereLight":e={direction:new st,skyColor:new be,groundColor:new be};break;case"RectAreaLight":e={color:new be,position:new st,halfWidth:new st,halfHeight:new st};break}return n[t.id]=e,e}}}function uD(){const n={};return{get:function(t){if(n[t.id]!==void 0)return n[t.id];let e;switch(t.type){case"DirectionalLight":e={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new xe};break;case"SpotLight":e={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new xe};break;case"PointLight":e={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new xe,shadowCameraNear:1,shadowCameraFar:1e3};break}return n[t.id]=e,e}}}let lD=0;function dD(n,t){return(t.castShadow?2:0)-(n.castShadow?2:0)+(t.map?1:0)-(n.map?1:0)}function hD(n){const t=new cD,e=uD(),s={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1,numSpotMaps:-1,numLightProbes:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotLightMap:[],spotShadow:[],spotShadowMap:[],spotLightMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[],numSpotLightShadowsWithMaps:0,numLightProbes:0};for(let u=0;u<9;u++)s.probe.push(new st);const i=new st,o=new cn,r=new cn;function a(u){let l=0,d=0,h=0;for(let S=0;S<9;S++)s.probe[S].set(0,0,0);let f=0,p=0,x=0,g=0,m=0,y=0,w=0,b=0,_=0,T=0,E=0;u.sort(dD);for(let S=0,v=u.length;S<v;S++){const C=u[S],M=C.color,N=C.intensity,D=C.distance,$=C.shadow&&C.shadow.map?C.shadow.map.texture:null;if(C.isAmbientLight)l+=M.r*N,d+=M.g*N,h+=M.b*N;else if(C.isLightProbe){for(let F=0;F<9;F++)s.probe[F].addScaledVector(C.sh.coefficients[F],N);E++}else if(C.isDirectionalLight){const F=t.get(C);if(F.color.copy(C.color).multiplyScalar(C.intensity),C.castShadow){const B=C.shadow,P=e.get(C);P.shadowIntensity=B.intensity,P.shadowBias=B.bias,P.shadowNormalBias=B.normalBias,P.shadowRadius=B.radius,P.shadowMapSize=B.mapSize,s.directionalShadow[f]=P,s.directionalShadowMap[f]=$,s.directionalShadowMatrix[f]=C.shadow.matrix,y++}s.directional[f]=F,f++}else if(C.isSpotLight){const F=t.get(C);F.position.setFromMatrixPosition(C.matrixWorld),F.color.copy(M).multiplyScalar(N),F.distance=D,F.coneCos=Math.cos(C.angle),F.penumbraCos=Math.cos(C.angle*(1-C.penumbra)),F.decay=C.decay,s.spot[x]=F;const B=C.shadow;if(C.map&&(s.spotLightMap[_]=C.map,_++,B.updateMatrices(C),C.castShadow&&T++),s.spotLightMatrix[x]=B.matrix,C.castShadow){const P=e.get(C);P.shadowIntensity=B.intensity,P.shadowBias=B.bias,P.shadowNormalBias=B.normalBias,P.shadowRadius=B.radius,P.shadowMapSize=B.mapSize,s.spotShadow[x]=P,s.spotShadowMap[x]=$,b++}x++}else if(C.isRectAreaLight){const F=t.get(C);F.color.copy(M).multiplyScalar(N),F.halfWidth.set(C.width*.5,0,0),F.halfHeight.set(0,C.height*.5,0),s.rectArea[g]=F,g++}else if(C.isPointLight){const F=t.get(C);if(F.color.copy(C.color).multiplyScalar(C.intensity),F.distance=C.distance,F.decay=C.decay,C.castShadow){const B=C.shadow,P=e.get(C);P.shadowIntensity=B.intensity,P.shadowBias=B.bias,P.shadowNormalBias=B.normalBias,P.shadowRadius=B.radius,P.shadowMapSize=B.mapSize,P.shadowCameraNear=B.camera.near,P.shadowCameraFar=B.camera.far,s.pointShadow[p]=P,s.pointShadowMap[p]=$,s.pointShadowMatrix[p]=C.shadow.matrix,w++}s.point[p]=F,p++}else if(C.isHemisphereLight){const F=t.get(C);F.skyColor.copy(C.color).multiplyScalar(N),F.groundColor.copy(C.groundColor).multiplyScalar(N),s.hemi[m]=F,m++}}g>0&&(n.has("OES_texture_float_linear")===!0?(s.rectAreaLTC1=Mt.LTC_FLOAT_1,s.rectAreaLTC2=Mt.LTC_FLOAT_2):(s.rectAreaLTC1=Mt.LTC_HALF_1,s.rectAreaLTC2=Mt.LTC_HALF_2)),s.ambient[0]=l,s.ambient[1]=d,s.ambient[2]=h;const I=s.hash;(I.directionalLength!==f||I.pointLength!==p||I.spotLength!==x||I.rectAreaLength!==g||I.hemiLength!==m||I.numDirectionalShadows!==y||I.numPointShadows!==w||I.numSpotShadows!==b||I.numSpotMaps!==_||I.numLightProbes!==E)&&(s.directional.length=f,s.spot.length=x,s.rectArea.length=g,s.point.length=p,s.hemi.length=m,s.directionalShadow.length=y,s.directionalShadowMap.length=y,s.pointShadow.length=w,s.pointShadowMap.length=w,s.spotShadow.length=b,s.spotShadowMap.length=b,s.directionalShadowMatrix.length=y,s.pointShadowMatrix.length=w,s.spotLightMatrix.length=b+_-T,s.spotLightMap.length=_,s.numSpotLightShadowsWithMaps=T,s.numLightProbes=E,I.directionalLength=f,I.pointLength=p,I.spotLength=x,I.rectAreaLength=g,I.hemiLength=m,I.numDirectionalShadows=y,I.numPointShadows=w,I.numSpotShadows=b,I.numSpotMaps=_,I.numLightProbes=E,s.version=lD++)}function c(u,l){let d=0,h=0,f=0,p=0,x=0;const g=l.matrixWorldInverse;for(let m=0,y=u.length;m<y;m++){const w=u[m];if(w.isDirectionalLight){const b=s.directional[d];b.direction.setFromMatrixPosition(w.matrixWorld),i.setFromMatrixPosition(w.target.matrixWorld),b.direction.sub(i),b.direction.transformDirection(g),d++}else if(w.isSpotLight){const b=s.spot[f];b.position.setFromMatrixPosition(w.matrixWorld),b.position.applyMatrix4(g),b.direction.setFromMatrixPosition(w.matrixWorld),i.setFromMatrixPosition(w.target.matrixWorld),b.direction.sub(i),b.direction.transformDirection(g),f++}else if(w.isRectAreaLight){const b=s.rectArea[p];b.position.setFromMatrixPosition(w.matrixWorld),b.position.applyMatrix4(g),r.identity(),o.copy(w.matrixWorld),o.premultiply(g),r.extractRotation(o),b.halfWidth.set(w.width*.5,0,0),b.halfHeight.set(0,w.height*.5,0),b.halfWidth.applyMatrix4(r),b.halfHeight.applyMatrix4(r),p++}else if(w.isPointLight){const b=s.point[h];b.position.setFromMatrixPosition(w.matrixWorld),b.position.applyMatrix4(g),h++}else if(w.isHemisphereLight){const b=s.hemi[x];b.direction.setFromMatrixPosition(w.matrixWorld),b.direction.transformDirection(g),x++}}}return{setup:a,setupView:c,state:s}}function yb(n){const t=new hD(n),e=[],s=[];function i(l){u.camera=l,e.length=0,s.length=0}function o(l){e.push(l)}function r(l){s.push(l)}function a(){t.setup(e)}function c(l){t.setupView(e,l)}const u={lightsArray:e,shadowsArray:s,camera:null,lights:t,transmissionRenderTarget:{}};return{init:i,state:u,setupLights:a,setupLightsView:c,pushLight:o,pushShadow:r}}function fD(n){let t=new WeakMap;function e(i,o=0){const r=t.get(i);let a;return r===void 0?(a=new yb(n),t.set(i,[a])):o>=r.length?(a=new yb(n),r.push(a)):a=r[o],a}function s(){t=new WeakMap}return{get:e,dispose:s}}const pD=`void main() {
	gl_Position = vec4( position, 1.0 );
}`,mD=`uniform sampler2D shadow_pass;
uniform vec2 resolution;
uniform float radius;
#include <packing>
void main() {
	const float samples = float( VSM_SAMPLES );
	float mean = 0.0;
	float squared_mean = 0.0;
	float uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );
	float uvStart = samples <= 1.0 ? 0.0 : - 1.0;
	for ( float i = 0.0; i < samples; i ++ ) {
		float uvOffset = uvStart + i * uvStride;
		#ifdef HORIZONTAL_PASS
			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );
			mean += distribution.x;
			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;
		#else
			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );
			mean += depth;
			squared_mean += depth * depth;
		#endif
	}
	mean = mean / samples;
	squared_mean = squared_mean / samples;
	float std_dev = sqrt( squared_mean - mean * mean );
	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );
}`;function gD(n,t,e){let s=new Fv;const i=new xe,o=new xe,r=new yn,a=new kR({depthPacking:B3}),c=new DR,u={},l=e.maxTextureSize,d={[Po]:Ss,[Ss]:Po,[eo]:eo},h=new co({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new xe},radius:{value:4}},vertexShader:pD,fragmentShader:mD}),f=h.clone();f.defines.HORIZONTAL_PASS=1;const p=new Wo;p.setAttribute("position",new Js(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const x=new Ks(p,h),g=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=mv;let m=this.type;this.render=function(T,E,I){if(g.enabled===!1||g.autoUpdate===!1&&g.needsUpdate===!1||T.length===0)return;const S=n.getRenderTarget(),v=n.getActiveCubeFace(),C=n.getActiveMipmapLevel(),M=n.state;M.setBlending(Mo),M.buffers.color.setClear(1,1,1,1),M.buffers.depth.setTest(!0),M.setScissorTest(!1);const N=m!==Ji&&this.type===Ji,D=m===Ji&&this.type!==Ji;for(let $=0,F=T.length;$<F;$++){const B=T[$],P=B.shadow;if(P===void 0){console.warn("THREE.WebGLShadowMap:",B,"has no shadow.");continue}if(P.autoUpdate===!1&&P.needsUpdate===!1)continue;i.copy(P.mapSize);const V=P.getFrameExtents();if(i.multiply(V),o.copy(P.mapSize),(i.x>l||i.y>l)&&(i.x>l&&(o.x=Math.floor(l/V.x),i.x=o.x*V.x,P.mapSize.x=o.x),i.y>l&&(o.y=Math.floor(l/V.y),i.y=o.y*V.y,P.mapSize.y=o.y)),P.map===null||N===!0||D===!0){const J=this.type!==Ji?{minFilter:Ds,magFilter:Ds}:{};P.map!==null&&P.map.dispose(),P.map=new Ir(i.x,i.y,J),P.map.texture.name=B.name+".shadowMap",P.camera.updateProjectionMatrix()}n.setRenderTarget(P.map),n.clear();const q=P.getViewportCount();for(let J=0;J<q;J++){const it=P.getViewport(J);r.set(o.x*it.x,o.y*it.y,o.x*it.z,o.y*it.w),M.viewport(r),P.updateMatrices(B,J),s=P.getFrustum(),b(E,I,P.camera,B,this.type)}P.isPointLightShadow!==!0&&this.type===Ji&&y(P,I),P.needsUpdate=!1}m=this.type,g.needsUpdate=!1,n.setRenderTarget(S,v,C)};function y(T,E){const I=t.update(x);h.defines.VSM_SAMPLES!==T.blurSamples&&(h.defines.VSM_SAMPLES=T.blurSamples,f.defines.VSM_SAMPLES=T.blurSamples,h.needsUpdate=!0,f.needsUpdate=!0),T.mapPass===null&&(T.mapPass=new Ir(i.x,i.y)),h.uniforms.shadow_pass.value=T.map.texture,h.uniforms.resolution.value=T.mapSize,h.uniforms.radius.value=T.radius,n.setRenderTarget(T.mapPass),n.clear(),n.renderBufferDirect(E,null,I,h,x,null),f.uniforms.shadow_pass.value=T.mapPass.texture,f.uniforms.resolution.value=T.mapSize,f.uniforms.radius.value=T.radius,n.setRenderTarget(T.map),n.clear(),n.renderBufferDirect(E,null,I,f,x,null)}function w(T,E,I,S){let v=null;const C=I.isPointLight===!0?T.customDistanceMaterial:T.customDepthMaterial;if(C!==void 0)v=C;else if(v=I.isPointLight===!0?c:a,n.localClippingEnabled&&E.clipShadows===!0&&Array.isArray(E.clippingPlanes)&&E.clippingPlanes.length!==0||E.displacementMap&&E.displacementScale!==0||E.alphaMap&&E.alphaTest>0||E.map&&E.alphaTest>0||E.alphaToCoverage===!0){const M=v.uuid,N=E.uuid;let D=u[M];D===void 0&&(D={},u[M]=D);let $=D[N];$===void 0&&($=v.clone(),D[N]=$,E.addEventListener("dispose",_)),v=$}if(v.visible=E.visible,v.wireframe=E.wireframe,S===Ji?v.side=E.shadowSide!==null?E.shadowSide:E.side:v.side=E.shadowSide!==null?E.shadowSide:d[E.side],v.alphaMap=E.alphaMap,v.alphaTest=E.alphaToCoverage===!0?.5:E.alphaTest,v.map=E.map,v.clipShadows=E.clipShadows,v.clippingPlanes=E.clippingPlanes,v.clipIntersection=E.clipIntersection,v.displacementMap=E.displacementMap,v.displacementScale=E.displacementScale,v.displacementBias=E.displacementBias,v.wireframeLinewidth=E.wireframeLinewidth,v.linewidth=E.linewidth,I.isPointLight===!0&&v.isMeshDistanceMaterial===!0){const M=n.properties.get(v);M.light=I}return v}function b(T,E,I,S,v){if(T.visible===!1)return;if(T.layers.test(E.layers)&&(T.isMesh||T.isLine||T.isPoints)&&(T.castShadow||T.receiveShadow&&v===Ji)&&(!T.frustumCulled||s.intersectsObject(T))){T.modelViewMatrix.multiplyMatrices(I.matrixWorldInverse,T.matrixWorld);const N=t.update(T),D=T.material;if(Array.isArray(D)){const $=N.groups;for(let F=0,B=$.length;F<B;F++){const P=$[F],V=D[P.materialIndex];if(V&&V.visible){const q=w(T,V,S,v);T.onBeforeShadow(n,T,E,I,N,q,P),n.renderBufferDirect(I,null,N,q,T,P),T.onAfterShadow(n,T,E,I,N,q,P)}}}else if(D.visible){const $=w(T,D,S,v);T.onBeforeShadow(n,T,E,I,N,$,null),n.renderBufferDirect(I,null,N,$,T,null),T.onAfterShadow(n,T,E,I,N,$,null)}}const M=T.children;for(let N=0,D=M.length;N<D;N++)b(M[N],E,I,S,v)}function _(T){T.target.removeEventListener("dispose",_);for(const I in u){const S=u[I],v=T.target.uuid;v in S&&(S[v].dispose(),delete S[v])}}}const xD={[wm]:vm,[_m]:Tm,[Cm]:Em,[Ua]:Sm,[vm]:wm,[Tm]:_m,[Em]:Cm,[Sm]:Ua};function yD(n,t){function e(){let H=!1;const kt=new yn;let wt=null;const zt=new yn(0,0,0,0);return{setMask:function(vt){wt!==vt&&!H&&(n.colorMask(vt,vt,vt,vt),wt=vt)},setLocked:function(vt){H=vt},setClear:function(vt,mt,Gt,fe,tn){tn===!0&&(vt*=fe,mt*=fe,Gt*=fe),kt.set(vt,mt,Gt,fe),zt.equals(kt)===!1&&(n.clearColor(vt,mt,Gt,fe),zt.copy(kt))},reset:function(){H=!1,wt=null,zt.set(-1,0,0,0)}}}function s(){let H=!1,kt=!1,wt=null,zt=null,vt=null;return{setReversed:function(mt){if(kt!==mt){const Gt=t.get("EXT_clip_control");mt?Gt.clipControlEXT(Gt.LOWER_LEFT_EXT,Gt.ZERO_TO_ONE_EXT):Gt.clipControlEXT(Gt.LOWER_LEFT_EXT,Gt.NEGATIVE_ONE_TO_ONE_EXT),kt=mt;const fe=vt;vt=null,this.setClear(fe)}},getReversed:function(){return kt},setTest:function(mt){mt?dt(n.DEPTH_TEST):gt(n.DEPTH_TEST)},setMask:function(mt){wt!==mt&&!H&&(n.depthMask(mt),wt=mt)},setFunc:function(mt){if(kt&&(mt=xD[mt]),zt!==mt){switch(mt){case wm:n.depthFunc(n.NEVER);break;case vm:n.depthFunc(n.ALWAYS);break;case _m:n.depthFunc(n.LESS);break;case Ua:n.depthFunc(n.LEQUAL);break;case Cm:n.depthFunc(n.EQUAL);break;case Sm:n.depthFunc(n.GEQUAL);break;case Tm:n.depthFunc(n.GREATER);break;case Em:n.depthFunc(n.NOTEQUAL);break;default:n.depthFunc(n.LEQUAL)}zt=mt}},setLocked:function(mt){H=mt},setClear:function(mt){vt!==mt&&(kt&&(mt=1-mt),n.clearDepth(mt),vt=mt)},reset:function(){H=!1,wt=null,zt=null,vt=null,kt=!1}}}function i(){let H=!1,kt=null,wt=null,zt=null,vt=null,mt=null,Gt=null,fe=null,tn=null;return{setTest:function(Be){H||(Be?dt(n.STENCIL_TEST):gt(n.STENCIL_TEST))},setMask:function(Be){kt!==Be&&!H&&(n.stencilMask(Be),kt=Be)},setFunc:function(Be,oi,Hi){(wt!==Be||zt!==oi||vt!==Hi)&&(n.stencilFunc(Be,oi,Hi),wt=Be,zt=oi,vt=Hi)},setOp:function(Be,oi,Hi){(mt!==Be||Gt!==oi||fe!==Hi)&&(n.stencilOp(Be,oi,Hi),mt=Be,Gt=oi,fe=Hi)},setLocked:function(Be){H=Be},setClear:function(Be){tn!==Be&&(n.clearStencil(Be),tn=Be)},reset:function(){H=!1,kt=null,wt=null,zt=null,vt=null,mt=null,Gt=null,fe=null,tn=null}}}const o=new e,r=new s,a=new i,c=new WeakMap,u=new WeakMap;let l={},d={},h=new WeakMap,f=[],p=null,x=!1,g=null,m=null,y=null,w=null,b=null,_=null,T=null,E=new be(0,0,0),I=0,S=!1,v=null,C=null,M=null,N=null,D=null;const $=n.getParameter(n.MAX_COMBINED_TEXTURE_IMAGE_UNITS);let F=!1,B=0;const P=n.getParameter(n.VERSION);P.indexOf("WebGL")!==-1?(B=parseFloat(/^WebGL (\d)/.exec(P)[1]),F=B>=1):P.indexOf("OpenGL ES")!==-1&&(B=parseFloat(/^OpenGL ES (\d)/.exec(P)[1]),F=B>=2);let V=null,q={};const J=n.getParameter(n.SCISSOR_BOX),it=n.getParameter(n.VIEWPORT),ut=new yn().fromArray(J),G=new yn().fromArray(it);function Q(H,kt,wt,zt){const vt=new Uint8Array(4),mt=n.createTexture();n.bindTexture(H,mt),n.texParameteri(H,n.TEXTURE_MIN_FILTER,n.NEAREST),n.texParameteri(H,n.TEXTURE_MAG_FILTER,n.NEAREST);for(let Gt=0;Gt<wt;Gt++)H===n.TEXTURE_3D||H===n.TEXTURE_2D_ARRAY?n.texImage3D(kt,0,n.RGBA,1,1,zt,0,n.RGBA,n.UNSIGNED_BYTE,vt):n.texImage2D(kt+Gt,0,n.RGBA,1,1,0,n.RGBA,n.UNSIGNED_BYTE,vt);return mt}const ht={};ht[n.TEXTURE_2D]=Q(n.TEXTURE_2D,n.TEXTURE_2D,1),ht[n.TEXTURE_CUBE_MAP]=Q(n.TEXTURE_CUBE_MAP,n.TEXTURE_CUBE_MAP_POSITIVE_X,6),ht[n.TEXTURE_2D_ARRAY]=Q(n.TEXTURE_2D_ARRAY,n.TEXTURE_2D_ARRAY,1,1),ht[n.TEXTURE_3D]=Q(n.TEXTURE_3D,n.TEXTURE_3D,1,1),o.setClear(0,0,0,1),r.setClear(1),a.setClear(0),dt(n.DEPTH_TEST),r.setFunc(Ua),Wt(!1),Qt(xy),dt(n.CULL_FACE),U(Mo);function dt(H){l[H]!==!0&&(n.enable(H),l[H]=!0)}function gt(H){l[H]!==!1&&(n.disable(H),l[H]=!1)}function St(H,kt){return d[H]!==kt?(n.bindFramebuffer(H,kt),d[H]=kt,H===n.DRAW_FRAMEBUFFER&&(d[n.FRAMEBUFFER]=kt),H===n.FRAMEBUFFER&&(d[n.DRAW_FRAMEBUFFER]=kt),!0):!1}function _t(H,kt){let wt=f,zt=!1;if(H){wt=h.get(kt),wt===void 0&&(wt=[],h.set(kt,wt));const vt=H.textures;if(wt.length!==vt.length||wt[0]!==n.COLOR_ATTACHMENT0){for(let mt=0,Gt=vt.length;mt<Gt;mt++)wt[mt]=n.COLOR_ATTACHMENT0+mt;wt.length=vt.length,zt=!0}}else wt[0]!==n.BACK&&(wt[0]=n.BACK,zt=!0);zt&&n.drawBuffers(wt)}function Pt(H){return p!==H?(n.useProgram(H),p=H,!0):!1}const Zt={[dr]:n.FUNC_ADD,[h3]:n.FUNC_SUBTRACT,[f3]:n.FUNC_REVERSE_SUBTRACT};Zt[p3]=n.MIN,Zt[m3]=n.MAX;const qt={[g3]:n.ZERO,[x3]:n.ONE,[y3]:n.SRC_COLOR,[ym]:n.SRC_ALPHA,[S3]:n.SRC_ALPHA_SATURATE,[_3]:n.DST_COLOR,[w3]:n.DST_ALPHA,[b3]:n.ONE_MINUS_SRC_COLOR,[bm]:n.ONE_MINUS_SRC_ALPHA,[C3]:n.ONE_MINUS_DST_COLOR,[v3]:n.ONE_MINUS_DST_ALPHA,[T3]:n.CONSTANT_COLOR,[E3]:n.ONE_MINUS_CONSTANT_COLOR,[I3]:n.CONSTANT_ALPHA,[R3]:n.ONE_MINUS_CONSTANT_ALPHA};function U(H,kt,wt,zt,vt,mt,Gt,fe,tn,Be){if(H===Mo){x===!0&&(gt(n.BLEND),x=!1);return}if(x===!1&&(dt(n.BLEND),x=!0),H!==d3){if(H!==g||Be!==S){if((m!==dr||b!==dr)&&(n.blendEquation(n.FUNC_ADD),m=dr,b=dr),Be)switch(H){case Aa:n.blendFuncSeparate(n.ONE,n.ONE_MINUS_SRC_ALPHA,n.ONE,n.ONE_MINUS_SRC_ALPHA);break;case yy:n.blendFunc(n.ONE,n.ONE);break;case by:n.blendFuncSeparate(n.ZERO,n.ONE_MINUS_SRC_COLOR,n.ZERO,n.ONE);break;case wy:n.blendFuncSeparate(n.ZERO,n.SRC_COLOR,n.ZERO,n.SRC_ALPHA);break;default:console.error("THREE.WebGLState: Invalid blending: ",H);break}else switch(H){case Aa:n.blendFuncSeparate(n.SRC_ALPHA,n.ONE_MINUS_SRC_ALPHA,n.ONE,n.ONE_MINUS_SRC_ALPHA);break;case yy:n.blendFunc(n.SRC_ALPHA,n.ONE);break;case by:n.blendFuncSeparate(n.ZERO,n.ONE_MINUS_SRC_COLOR,n.ZERO,n.ONE);break;case wy:n.blendFunc(n.ZERO,n.SRC_COLOR);break;default:console.error("THREE.WebGLState: Invalid blending: ",H);break}y=null,w=null,_=null,T=null,E.set(0,0,0),I=0,g=H,S=Be}return}vt=vt||kt,mt=mt||wt,Gt=Gt||zt,(kt!==m||vt!==b)&&(n.blendEquationSeparate(Zt[kt],Zt[vt]),m=kt,b=vt),(wt!==y||zt!==w||mt!==_||Gt!==T)&&(n.blendFuncSeparate(qt[wt],qt[zt],qt[mt],qt[Gt]),y=wt,w=zt,_=mt,T=Gt),(fe.equals(E)===!1||tn!==I)&&(n.blendColor(fe.r,fe.g,fe.b,tn),E.copy(fe),I=tn),g=H,S=!1}function he(H,kt){H.side===eo?gt(n.CULL_FACE):dt(n.CULL_FACE);let wt=H.side===Ss;kt&&(wt=!wt),Wt(wt),H.blending===Aa&&H.transparent===!1?U(Mo):U(H.blending,H.blendEquation,H.blendSrc,H.blendDst,H.blendEquationAlpha,H.blendSrcAlpha,H.blendDstAlpha,H.blendColor,H.blendAlpha,H.premultipliedAlpha),r.setFunc(H.depthFunc),r.setTest(H.depthTest),r.setMask(H.depthWrite),o.setMask(H.colorWrite);const zt=H.stencilWrite;a.setTest(zt),zt&&(a.setMask(H.stencilWriteMask),a.setFunc(H.stencilFunc,H.stencilRef,H.stencilFuncMask),a.setOp(H.stencilFail,H.stencilZFail,H.stencilZPass)),pe(H.polygonOffset,H.polygonOffsetFactor,H.polygonOffsetUnits),H.alphaToCoverage===!0?dt(n.SAMPLE_ALPHA_TO_COVERAGE):gt(n.SAMPLE_ALPHA_TO_COVERAGE)}function Wt(H){v!==H&&(H?n.frontFace(n.CW):n.frontFace(n.CCW),v=H)}function Qt(H){H!==c3?(dt(n.CULL_FACE),H!==C&&(H===xy?n.cullFace(n.BACK):H===u3?n.cullFace(n.FRONT):n.cullFace(n.FRONT_AND_BACK))):gt(n.CULL_FACE),C=H}function Tt(H){H!==M&&(F&&n.lineWidth(H),M=H)}function pe(H,kt,wt){H?(dt(n.POLYGON_OFFSET_FILL),(N!==kt||D!==wt)&&(n.polygonOffset(kt,wt),N=kt,D=wt)):gt(n.POLYGON_OFFSET_FILL)}function $t(H){H?dt(n.SCISSOR_TEST):gt(n.SCISSOR_TEST)}function oe(H){H===void 0&&(H=n.TEXTURE0+$-1),V!==H&&(n.activeTexture(H),V=H)}function ke(H,kt,wt){wt===void 0&&(V===null?wt=n.TEXTURE0+$-1:wt=V);let zt=q[wt];zt===void 0&&(zt={type:void 0,texture:void 0},q[wt]=zt),(zt.type!==H||zt.texture!==kt)&&(V!==wt&&(n.activeTexture(wt),V=wt),n.bindTexture(H,kt||ht[H]),zt.type=H,zt.texture=kt)}function L(){const H=q[V];H!==void 0&&H.type!==void 0&&(n.bindTexture(H.type,null),H.type=void 0,H.texture=void 0)}function R(){try{n.compressedTexImage2D(...arguments)}catch(H){console.error("THREE.WebGLState:",H)}}function et(){try{n.compressedTexImage3D(...arguments)}catch(H){console.error("THREE.WebGLState:",H)}}function ft(){try{n.texSubImage2D(...arguments)}catch(H){console.error("THREE.WebGLState:",H)}}function pt(){try{n.texSubImage3D(...arguments)}catch(H){console.error("THREE.WebGLState:",H)}}function lt(){try{n.compressedTexSubImage2D(...arguments)}catch(H){console.error("THREE.WebGLState:",H)}}function Vt(){try{n.compressedTexSubImage3D(...arguments)}catch(H){console.error("THREE.WebGLState:",H)}}function It(){try{n.texStorage2D(...arguments)}catch(H){console.error("THREE.WebGLState:",H)}}function Bt(){try{n.texStorage3D(...arguments)}catch(H){console.error("THREE.WebGLState:",H)}}function jt(){try{n.texImage2D(...arguments)}catch(H){console.error("THREE.WebGLState:",H)}}function bt(){try{n.texImage3D(...arguments)}catch(H){console.error("THREE.WebGLState:",H)}}function Ft(H){ut.equals(H)===!1&&(n.scissor(H.x,H.y,H.z,H.w),ut.copy(H))}function ne(H){G.equals(H)===!1&&(n.viewport(H.x,H.y,H.z,H.w),G.copy(H))}function se(H,kt){let wt=u.get(kt);wt===void 0&&(wt=new WeakMap,u.set(kt,wt));let zt=wt.get(H);zt===void 0&&(zt=n.getUniformBlockIndex(kt,H.name),wt.set(H,zt))}function Rt(H,kt){const zt=u.get(kt).get(H);c.get(kt)!==zt&&(n.uniformBlockBinding(kt,zt,H.__bindingPointIndex),c.set(kt,zt))}function le(){n.disable(n.BLEND),n.disable(n.CULL_FACE),n.disable(n.DEPTH_TEST),n.disable(n.POLYGON_OFFSET_FILL),n.disable(n.SCISSOR_TEST),n.disable(n.STENCIL_TEST),n.disable(n.SAMPLE_ALPHA_TO_COVERAGE),n.blendEquation(n.FUNC_ADD),n.blendFunc(n.ONE,n.ZERO),n.blendFuncSeparate(n.ONE,n.ZERO,n.ONE,n.ZERO),n.blendColor(0,0,0,0),n.colorMask(!0,!0,!0,!0),n.clearColor(0,0,0,0),n.depthMask(!0),n.depthFunc(n.LESS),r.setReversed(!1),n.clearDepth(1),n.stencilMask(4294967295),n.stencilFunc(n.ALWAYS,0,4294967295),n.stencilOp(n.KEEP,n.KEEP,n.KEEP),n.clearStencil(0),n.cullFace(n.BACK),n.frontFace(n.CCW),n.polygonOffset(0,0),n.activeTexture(n.TEXTURE0),n.bindFramebuffer(n.FRAMEBUFFER,null),n.bindFramebuffer(n.DRAW_FRAMEBUFFER,null),n.bindFramebuffer(n.READ_FRAMEBUFFER,null),n.useProgram(null),n.lineWidth(1),n.scissor(0,0,n.canvas.width,n.canvas.height),n.viewport(0,0,n.canvas.width,n.canvas.height),l={},V=null,q={},d={},h=new WeakMap,f=[],p=null,x=!1,g=null,m=null,y=null,w=null,b=null,_=null,T=null,E=new be(0,0,0),I=0,S=!1,v=null,C=null,M=null,N=null,D=null,ut.set(0,0,n.canvas.width,n.canvas.height),G.set(0,0,n.canvas.width,n.canvas.height),o.reset(),r.reset(),a.reset()}return{buffers:{color:o,depth:r,stencil:a},enable:dt,disable:gt,bindFramebuffer:St,drawBuffers:_t,useProgram:Pt,setBlending:U,setMaterial:he,setFlipSided:Wt,setCullFace:Qt,setLineWidth:Tt,setPolygonOffset:pe,setScissorTest:$t,activeTexture:oe,bindTexture:ke,unbindTexture:L,compressedTexImage2D:R,compressedTexImage3D:et,texImage2D:jt,texImage3D:bt,updateUBOMapping:se,uniformBlockBinding:Rt,texStorage2D:It,texStorage3D:Bt,texSubImage2D:ft,texSubImage3D:pt,compressedTexSubImage2D:lt,compressedTexSubImage3D:Vt,scissor:Ft,viewport:ne,reset:le}}function bD(n,t,e,s,i,o,r){const a=t.has("WEBGL_multisampled_render_to_texture")?t.get("WEBGL_multisampled_render_to_texture"):null,c=typeof navigator>"u"?!1:/OculusBrowser/g.test(navigator.userAgent),u=new xe,l=new WeakMap;let d;const h=new WeakMap;let f=!1;try{f=typeof OffscreenCanvas<"u"&&new OffscreenCanvas(1,1).getContext("2d")!==null}catch{}function p(L,R){return f?new OffscreenCanvas(L,R):nu("canvas")}function x(L,R,et){let ft=1;const pt=ke(L);if((pt.width>et||pt.height>et)&&(ft=et/Math.max(pt.width,pt.height)),ft<1)if(typeof HTMLImageElement<"u"&&L instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&L instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&L instanceof ImageBitmap||typeof VideoFrame<"u"&&L instanceof VideoFrame){const lt=Math.floor(ft*pt.width),Vt=Math.floor(ft*pt.height);d===void 0&&(d=p(lt,Vt));const It=R?p(lt,Vt):d;return It.width=lt,It.height=Vt,It.getContext("2d").drawImage(L,0,0,lt,Vt),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+pt.width+"x"+pt.height+") to ("+lt+"x"+Vt+")."),It}else return"data"in L&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+pt.width+"x"+pt.height+")."),L;return L}function g(L){return L.generateMipmaps}function m(L){n.generateMipmap(L)}function y(L){return L.isWebGLCubeRenderTarget?n.TEXTURE_CUBE_MAP:L.isWebGL3DRenderTarget?n.TEXTURE_3D:L.isWebGLArrayRenderTarget||L.isCompressedArrayTexture?n.TEXTURE_2D_ARRAY:n.TEXTURE_2D}function w(L,R,et,ft,pt=!1){if(L!==null){if(n[L]!==void 0)return n[L];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+L+"'")}let lt=R;if(R===n.RED&&(et===n.FLOAT&&(lt=n.R32F),et===n.HALF_FLOAT&&(lt=n.R16F),et===n.UNSIGNED_BYTE&&(lt=n.R8)),R===n.RED_INTEGER&&(et===n.UNSIGNED_BYTE&&(lt=n.R8UI),et===n.UNSIGNED_SHORT&&(lt=n.R16UI),et===n.UNSIGNED_INT&&(lt=n.R32UI),et===n.BYTE&&(lt=n.R8I),et===n.SHORT&&(lt=n.R16I),et===n.INT&&(lt=n.R32I)),R===n.RG&&(et===n.FLOAT&&(lt=n.RG32F),et===n.HALF_FLOAT&&(lt=n.RG16F),et===n.UNSIGNED_BYTE&&(lt=n.RG8)),R===n.RG_INTEGER&&(et===n.UNSIGNED_BYTE&&(lt=n.RG8UI),et===n.UNSIGNED_SHORT&&(lt=n.RG16UI),et===n.UNSIGNED_INT&&(lt=n.RG32UI),et===n.BYTE&&(lt=n.RG8I),et===n.SHORT&&(lt=n.RG16I),et===n.INT&&(lt=n.RG32I)),R===n.RGB_INTEGER&&(et===n.UNSIGNED_BYTE&&(lt=n.RGB8UI),et===n.UNSIGNED_SHORT&&(lt=n.RGB16UI),et===n.UNSIGNED_INT&&(lt=n.RGB32UI),et===n.BYTE&&(lt=n.RGB8I),et===n.SHORT&&(lt=n.RGB16I),et===n.INT&&(lt=n.RGB32I)),R===n.RGBA_INTEGER&&(et===n.UNSIGNED_BYTE&&(lt=n.RGBA8UI),et===n.UNSIGNED_SHORT&&(lt=n.RGBA16UI),et===n.UNSIGNED_INT&&(lt=n.RGBA32UI),et===n.BYTE&&(lt=n.RGBA8I),et===n.SHORT&&(lt=n.RGBA16I),et===n.INT&&(lt=n.RGBA32I)),R===n.RGB&&et===n.UNSIGNED_INT_5_9_9_9_REV&&(lt=n.RGB9_E5),R===n.RGBA){const Vt=pt?jd:$e.getTransfer(ft);et===n.FLOAT&&(lt=n.RGBA32F),et===n.HALF_FLOAT&&(lt=n.RGBA16F),et===n.UNSIGNED_BYTE&&(lt=Vt===He?n.SRGB8_ALPHA8:n.RGBA8),et===n.UNSIGNED_SHORT_4_4_4_4&&(lt=n.RGBA4),et===n.UNSIGNED_SHORT_5_5_5_1&&(lt=n.RGB5_A1)}return(lt===n.R16F||lt===n.R32F||lt===n.RG16F||lt===n.RG32F||lt===n.RGBA16F||lt===n.RGBA32F)&&t.get("EXT_color_buffer_float"),lt}function b(L,R){let et;return L?R===null||R===Tr||R===Qc?et=n.DEPTH24_STENCIL8:R===Di?et=n.DEPTH32F_STENCIL8:R===Jc&&(et=n.DEPTH24_STENCIL8,console.warn("DepthTexture: 16 bit depth attachment is not supported with stencil. Using 24-bit attachment.")):R===null||R===Tr||R===Qc?et=n.DEPTH_COMPONENT24:R===Di?et=n.DEPTH_COMPONENT32F:R===Jc&&(et=n.DEPTH_COMPONENT16),et}function _(L,R){return g(L)===!0||L.isFramebufferTexture&&L.minFilter!==Ds&&L.minFilter!==mi?Math.log2(Math.max(R.width,R.height))+1:L.mipmaps!==void 0&&L.mipmaps.length>0?L.mipmaps.length:L.isCompressedTexture&&Array.isArray(L.image)?R.mipmaps.length:1}function T(L){const R=L.target;R.removeEventListener("dispose",T),I(R),R.isVideoTexture&&l.delete(R)}function E(L){const R=L.target;R.removeEventListener("dispose",E),v(R)}function I(L){const R=s.get(L);if(R.__webglInit===void 0)return;const et=L.source,ft=h.get(et);if(ft){const pt=ft[R.__cacheKey];pt.usedTimes--,pt.usedTimes===0&&S(L),Object.keys(ft).length===0&&h.delete(et)}s.remove(L)}function S(L){const R=s.get(L);n.deleteTexture(R.__webglTexture);const et=L.source,ft=h.get(et);delete ft[R.__cacheKey],r.memory.textures--}function v(L){const R=s.get(L);if(L.depthTexture&&(L.depthTexture.dispose(),s.remove(L.depthTexture)),L.isWebGLCubeRenderTarget)for(let ft=0;ft<6;ft++){if(Array.isArray(R.__webglFramebuffer[ft]))for(let pt=0;pt<R.__webglFramebuffer[ft].length;pt++)n.deleteFramebuffer(R.__webglFramebuffer[ft][pt]);else n.deleteFramebuffer(R.__webglFramebuffer[ft]);R.__webglDepthbuffer&&n.deleteRenderbuffer(R.__webglDepthbuffer[ft])}else{if(Array.isArray(R.__webglFramebuffer))for(let ft=0;ft<R.__webglFramebuffer.length;ft++)n.deleteFramebuffer(R.__webglFramebuffer[ft]);else n.deleteFramebuffer(R.__webglFramebuffer);if(R.__webglDepthbuffer&&n.deleteRenderbuffer(R.__webglDepthbuffer),R.__webglMultisampledFramebuffer&&n.deleteFramebuffer(R.__webglMultisampledFramebuffer),R.__webglColorRenderbuffer)for(let ft=0;ft<R.__webglColorRenderbuffer.length;ft++)R.__webglColorRenderbuffer[ft]&&n.deleteRenderbuffer(R.__webglColorRenderbuffer[ft]);R.__webglDepthRenderbuffer&&n.deleteRenderbuffer(R.__webglDepthRenderbuffer)}const et=L.textures;for(let ft=0,pt=et.length;ft<pt;ft++){const lt=s.get(et[ft]);lt.__webglTexture&&(n.deleteTexture(lt.__webglTexture),r.memory.textures--),s.remove(et[ft])}s.remove(L)}let C=0;function M(){C=0}function N(){const L=C;return L>=i.maxTextures&&console.warn("THREE.WebGLTextures: Trying to use "+L+" texture units while this GPU supports only "+i.maxTextures),C+=1,L}function D(L){const R=[];return R.push(L.wrapS),R.push(L.wrapT),R.push(L.wrapR||0),R.push(L.magFilter),R.push(L.minFilter),R.push(L.anisotropy),R.push(L.internalFormat),R.push(L.format),R.push(L.type),R.push(L.generateMipmaps),R.push(L.premultiplyAlpha),R.push(L.flipY),R.push(L.unpackAlignment),R.push(L.colorSpace),R.join()}function $(L,R){const et=s.get(L);if(L.isVideoTexture&&$t(L),L.isRenderTargetTexture===!1&&L.version>0&&et.__version!==L.version){const ft=L.image;if(ft===null)console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");else if(ft.complete===!1)console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");else{ht(et,L,R);return}}e.bindTexture(n.TEXTURE_2D,et.__webglTexture,n.TEXTURE0+R)}function F(L,R){const et=s.get(L);if(L.version>0&&et.__version!==L.version){ht(et,L,R);return}e.bindTexture(n.TEXTURE_2D_ARRAY,et.__webglTexture,n.TEXTURE0+R)}function B(L,R){const et=s.get(L);if(L.version>0&&et.__version!==L.version){ht(et,L,R);return}e.bindTexture(n.TEXTURE_3D,et.__webglTexture,n.TEXTURE0+R)}function P(L,R){const et=s.get(L);if(L.version>0&&et.__version!==L.version){dt(et,L,R);return}e.bindTexture(n.TEXTURE_CUBE_MAP,et.__webglTexture,n.TEXTURE0+R)}const V={[Mm]:n.REPEAT,[gr]:n.CLAMP_TO_EDGE,[Am]:n.MIRRORED_REPEAT},q={[Ds]:n.NEAREST,[O3]:n.NEAREST_MIPMAP_NEAREST,[Wl]:n.NEAREST_MIPMAP_LINEAR,[mi]:n.LINEAR,[wp]:n.LINEAR_MIPMAP_NEAREST,[xr]:n.LINEAR_MIPMAP_LINEAR},J={[V3]:n.NEVER,[j3]:n.ALWAYS,[W3]:n.LESS,[Tv]:n.LEQUAL,[G3]:n.EQUAL,[q3]:n.GEQUAL,[H3]:n.GREATER,[X3]:n.NOTEQUAL};function it(L,R){if(R.type===Di&&t.has("OES_texture_float_linear")===!1&&(R.magFilter===mi||R.magFilter===wp||R.magFilter===Wl||R.magFilter===xr||R.minFilter===mi||R.minFilter===wp||R.minFilter===Wl||R.minFilter===xr)&&console.warn("THREE.WebGLRenderer: Unable to use linear filtering with floating point textures. OES_texture_float_linear not supported on this device."),n.texParameteri(L,n.TEXTURE_WRAP_S,V[R.wrapS]),n.texParameteri(L,n.TEXTURE_WRAP_T,V[R.wrapT]),(L===n.TEXTURE_3D||L===n.TEXTURE_2D_ARRAY)&&n.texParameteri(L,n.TEXTURE_WRAP_R,V[R.wrapR]),n.texParameteri(L,n.TEXTURE_MAG_FILTER,q[R.magFilter]),n.texParameteri(L,n.TEXTURE_MIN_FILTER,q[R.minFilter]),R.compareFunction&&(n.texParameteri(L,n.TEXTURE_COMPARE_MODE,n.COMPARE_REF_TO_TEXTURE),n.texParameteri(L,n.TEXTURE_COMPARE_FUNC,J[R.compareFunction])),t.has("EXT_texture_filter_anisotropic")===!0){if(R.magFilter===Ds||R.minFilter!==Wl&&R.minFilter!==xr||R.type===Di&&t.has("OES_texture_float_linear")===!1)return;if(R.anisotropy>1||s.get(R).__currentAnisotropy){const et=t.get("EXT_texture_filter_anisotropic");n.texParameterf(L,et.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(R.anisotropy,i.getMaxAnisotropy())),s.get(R).__currentAnisotropy=R.anisotropy}}}function ut(L,R){let et=!1;L.__webglInit===void 0&&(L.__webglInit=!0,R.addEventListener("dispose",T));const ft=R.source;let pt=h.get(ft);pt===void 0&&(pt={},h.set(ft,pt));const lt=D(R);if(lt!==L.__cacheKey){pt[lt]===void 0&&(pt[lt]={texture:n.createTexture(),usedTimes:0},r.memory.textures++,et=!0),pt[lt].usedTimes++;const Vt=pt[L.__cacheKey];Vt!==void 0&&(pt[L.__cacheKey].usedTimes--,Vt.usedTimes===0&&S(R)),L.__cacheKey=lt,L.__webglTexture=pt[lt].texture}return et}function G(L,R,et){return Math.floor(Math.floor(L/et)/R)}function Q(L,R,et,ft){const lt=L.updateRanges;if(lt.length===0)e.texSubImage2D(n.TEXTURE_2D,0,0,0,R.width,R.height,et,ft,R.data);else{lt.sort((bt,Ft)=>bt.start-Ft.start);let Vt=0;for(let bt=1;bt<lt.length;bt++){const Ft=lt[Vt],ne=lt[bt],se=Ft.start+Ft.count,Rt=G(ne.start,R.width,4),le=G(Ft.start,R.width,4);ne.start<=se+1&&Rt===le&&G(ne.start+ne.count-1,R.width,4)===Rt?Ft.count=Math.max(Ft.count,ne.start+ne.count-Ft.start):(++Vt,lt[Vt]=ne)}lt.length=Vt+1;const It=n.getParameter(n.UNPACK_ROW_LENGTH),Bt=n.getParameter(n.UNPACK_SKIP_PIXELS),jt=n.getParameter(n.UNPACK_SKIP_ROWS);n.pixelStorei(n.UNPACK_ROW_LENGTH,R.width);for(let bt=0,Ft=lt.length;bt<Ft;bt++){const ne=lt[bt],se=Math.floor(ne.start/4),Rt=Math.ceil(ne.count/4),le=se%R.width,H=Math.floor(se/R.width),kt=Rt,wt=1;n.pixelStorei(n.UNPACK_SKIP_PIXELS,le),n.pixelStorei(n.UNPACK_SKIP_ROWS,H),e.texSubImage2D(n.TEXTURE_2D,0,le,H,kt,wt,et,ft,R.data)}L.clearUpdateRanges(),n.pixelStorei(n.UNPACK_ROW_LENGTH,It),n.pixelStorei(n.UNPACK_SKIP_PIXELS,Bt),n.pixelStorei(n.UNPACK_SKIP_ROWS,jt)}}function ht(L,R,et){let ft=n.TEXTURE_2D;(R.isDataArrayTexture||R.isCompressedArrayTexture)&&(ft=n.TEXTURE_2D_ARRAY),R.isData3DTexture&&(ft=n.TEXTURE_3D);const pt=ut(L,R),lt=R.source;e.bindTexture(ft,L.__webglTexture,n.TEXTURE0+et);const Vt=s.get(lt);if(lt.version!==Vt.__version||pt===!0){e.activeTexture(n.TEXTURE0+et);const It=$e.getPrimaries($e.workingColorSpace),Bt=R.colorSpace===To?null:$e.getPrimaries(R.colorSpace),jt=R.colorSpace===To||It===Bt?n.NONE:n.BROWSER_DEFAULT_WEBGL;n.pixelStorei(n.UNPACK_FLIP_Y_WEBGL,R.flipY),n.pixelStorei(n.UNPACK_PREMULTIPLY_ALPHA_WEBGL,R.premultiplyAlpha),n.pixelStorei(n.UNPACK_ALIGNMENT,R.unpackAlignment),n.pixelStorei(n.UNPACK_COLORSPACE_CONVERSION_WEBGL,jt);let bt=x(R.image,!1,i.maxTextureSize);bt=oe(R,bt);const Ft=o.convert(R.format,R.colorSpace),ne=o.convert(R.type);let se=w(R.internalFormat,Ft,ne,R.colorSpace,R.isVideoTexture);it(ft,R);let Rt;const le=R.mipmaps,H=R.isVideoTexture!==!0,kt=Vt.__version===void 0||pt===!0,wt=lt.dataReady,zt=_(R,bt);if(R.isDepthTexture)se=b(R.format===eu,R.type),kt&&(H?e.texStorage2D(n.TEXTURE_2D,1,se,bt.width,bt.height):e.texImage2D(n.TEXTURE_2D,0,se,bt.width,bt.height,0,Ft,ne,null));else if(R.isDataTexture)if(le.length>0){H&&kt&&e.texStorage2D(n.TEXTURE_2D,zt,se,le[0].width,le[0].height);for(let vt=0,mt=le.length;vt<mt;vt++)Rt=le[vt],H?wt&&e.texSubImage2D(n.TEXTURE_2D,vt,0,0,Rt.width,Rt.height,Ft,ne,Rt.data):e.texImage2D(n.TEXTURE_2D,vt,se,Rt.width,Rt.height,0,Ft,ne,Rt.data);R.generateMipmaps=!1}else H?(kt&&e.texStorage2D(n.TEXTURE_2D,zt,se,bt.width,bt.height),wt&&Q(R,bt,Ft,ne)):e.texImage2D(n.TEXTURE_2D,0,se,bt.width,bt.height,0,Ft,ne,bt.data);else if(R.isCompressedTexture)if(R.isCompressedArrayTexture){H&&kt&&e.texStorage3D(n.TEXTURE_2D_ARRAY,zt,se,le[0].width,le[0].height,bt.depth);for(let vt=0,mt=le.length;vt<mt;vt++)if(Rt=le[vt],R.format!==gi)if(Ft!==null)if(H){if(wt)if(R.layerUpdates.size>0){const Gt=jy(Rt.width,Rt.height,R.format,R.type);for(const fe of R.layerUpdates){const tn=Rt.data.subarray(fe*Gt/Rt.data.BYTES_PER_ELEMENT,(fe+1)*Gt/Rt.data.BYTES_PER_ELEMENT);e.compressedTexSubImage3D(n.TEXTURE_2D_ARRAY,vt,0,0,fe,Rt.width,Rt.height,1,Ft,tn)}R.clearLayerUpdates()}else e.compressedTexSubImage3D(n.TEXTURE_2D_ARRAY,vt,0,0,0,Rt.width,Rt.height,bt.depth,Ft,Rt.data)}else e.compressedTexImage3D(n.TEXTURE_2D_ARRAY,vt,se,Rt.width,Rt.height,bt.depth,0,Rt.data,0,0);else console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()");else H?wt&&e.texSubImage3D(n.TEXTURE_2D_ARRAY,vt,0,0,0,Rt.width,Rt.height,bt.depth,Ft,ne,Rt.data):e.texImage3D(n.TEXTURE_2D_ARRAY,vt,se,Rt.width,Rt.height,bt.depth,0,Ft,ne,Rt.data)}else{H&&kt&&e.texStorage2D(n.TEXTURE_2D,zt,se,le[0].width,le[0].height);for(let vt=0,mt=le.length;vt<mt;vt++)Rt=le[vt],R.format!==gi?Ft!==null?H?wt&&e.compressedTexSubImage2D(n.TEXTURE_2D,vt,0,0,Rt.width,Rt.height,Ft,Rt.data):e.compressedTexImage2D(n.TEXTURE_2D,vt,se,Rt.width,Rt.height,0,Rt.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):H?wt&&e.texSubImage2D(n.TEXTURE_2D,vt,0,0,Rt.width,Rt.height,Ft,ne,Rt.data):e.texImage2D(n.TEXTURE_2D,vt,se,Rt.width,Rt.height,0,Ft,ne,Rt.data)}else if(R.isDataArrayTexture)if(H){if(kt&&e.texStorage3D(n.TEXTURE_2D_ARRAY,zt,se,bt.width,bt.height,bt.depth),wt)if(R.layerUpdates.size>0){const vt=jy(bt.width,bt.height,R.format,R.type);for(const mt of R.layerUpdates){const Gt=bt.data.subarray(mt*vt/bt.data.BYTES_PER_ELEMENT,(mt+1)*vt/bt.data.BYTES_PER_ELEMENT);e.texSubImage3D(n.TEXTURE_2D_ARRAY,0,0,0,mt,bt.width,bt.height,1,Ft,ne,Gt)}R.clearLayerUpdates()}else e.texSubImage3D(n.TEXTURE_2D_ARRAY,0,0,0,0,bt.width,bt.height,bt.depth,Ft,ne,bt.data)}else e.texImage3D(n.TEXTURE_2D_ARRAY,0,se,bt.width,bt.height,bt.depth,0,Ft,ne,bt.data);else if(R.isData3DTexture)H?(kt&&e.texStorage3D(n.TEXTURE_3D,zt,se,bt.width,bt.height,bt.depth),wt&&e.texSubImage3D(n.TEXTURE_3D,0,0,0,0,bt.width,bt.height,bt.depth,Ft,ne,bt.data)):e.texImage3D(n.TEXTURE_3D,0,se,bt.width,bt.height,bt.depth,0,Ft,ne,bt.data);else if(R.isFramebufferTexture){if(kt)if(H)e.texStorage2D(n.TEXTURE_2D,zt,se,bt.width,bt.height);else{let vt=bt.width,mt=bt.height;for(let Gt=0;Gt<zt;Gt++)e.texImage2D(n.TEXTURE_2D,Gt,se,vt,mt,0,Ft,ne,null),vt>>=1,mt>>=1}}else if(le.length>0){if(H&&kt){const vt=ke(le[0]);e.texStorage2D(n.TEXTURE_2D,zt,se,vt.width,vt.height)}for(let vt=0,mt=le.length;vt<mt;vt++)Rt=le[vt],H?wt&&e.texSubImage2D(n.TEXTURE_2D,vt,0,0,Ft,ne,Rt):e.texImage2D(n.TEXTURE_2D,vt,se,Ft,ne,Rt);R.generateMipmaps=!1}else if(H){if(kt){const vt=ke(bt);e.texStorage2D(n.TEXTURE_2D,zt,se,vt.width,vt.height)}wt&&e.texSubImage2D(n.TEXTURE_2D,0,0,0,Ft,ne,bt)}else e.texImage2D(n.TEXTURE_2D,0,se,Ft,ne,bt);g(R)&&m(ft),Vt.__version=lt.version,R.onUpdate&&R.onUpdate(R)}L.__version=R.version}function dt(L,R,et){if(R.image.length!==6)return;const ft=ut(L,R),pt=R.source;e.bindTexture(n.TEXTURE_CUBE_MAP,L.__webglTexture,n.TEXTURE0+et);const lt=s.get(pt);if(pt.version!==lt.__version||ft===!0){e.activeTexture(n.TEXTURE0+et);const Vt=$e.getPrimaries($e.workingColorSpace),It=R.colorSpace===To?null:$e.getPrimaries(R.colorSpace),Bt=R.colorSpace===To||Vt===It?n.NONE:n.BROWSER_DEFAULT_WEBGL;n.pixelStorei(n.UNPACK_FLIP_Y_WEBGL,R.flipY),n.pixelStorei(n.UNPACK_PREMULTIPLY_ALPHA_WEBGL,R.premultiplyAlpha),n.pixelStorei(n.UNPACK_ALIGNMENT,R.unpackAlignment),n.pixelStorei(n.UNPACK_COLORSPACE_CONVERSION_WEBGL,Bt);const jt=R.isCompressedTexture||R.image[0].isCompressedTexture,bt=R.image[0]&&R.image[0].isDataTexture,Ft=[];for(let mt=0;mt<6;mt++)!jt&&!bt?Ft[mt]=x(R.image[mt],!0,i.maxCubemapSize):Ft[mt]=bt?R.image[mt].image:R.image[mt],Ft[mt]=oe(R,Ft[mt]);const ne=Ft[0],se=o.convert(R.format,R.colorSpace),Rt=o.convert(R.type),le=w(R.internalFormat,se,Rt,R.colorSpace),H=R.isVideoTexture!==!0,kt=lt.__version===void 0||ft===!0,wt=pt.dataReady;let zt=_(R,ne);it(n.TEXTURE_CUBE_MAP,R);let vt;if(jt){H&&kt&&e.texStorage2D(n.TEXTURE_CUBE_MAP,zt,le,ne.width,ne.height);for(let mt=0;mt<6;mt++){vt=Ft[mt].mipmaps;for(let Gt=0;Gt<vt.length;Gt++){const fe=vt[Gt];R.format!==gi?se!==null?H?wt&&e.compressedTexSubImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+mt,Gt,0,0,fe.width,fe.height,se,fe.data):e.compressedTexImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+mt,Gt,le,fe.width,fe.height,0,fe.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):H?wt&&e.texSubImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+mt,Gt,0,0,fe.width,fe.height,se,Rt,fe.data):e.texImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+mt,Gt,le,fe.width,fe.height,0,se,Rt,fe.data)}}}else{if(vt=R.mipmaps,H&&kt){vt.length>0&&zt++;const mt=ke(Ft[0]);e.texStorage2D(n.TEXTURE_CUBE_MAP,zt,le,mt.width,mt.height)}for(let mt=0;mt<6;mt++)if(bt){H?wt&&e.texSubImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+mt,0,0,0,Ft[mt].width,Ft[mt].height,se,Rt,Ft[mt].data):e.texImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+mt,0,le,Ft[mt].width,Ft[mt].height,0,se,Rt,Ft[mt].data);for(let Gt=0;Gt<vt.length;Gt++){const tn=vt[Gt].image[mt].image;H?wt&&e.texSubImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+mt,Gt+1,0,0,tn.width,tn.height,se,Rt,tn.data):e.texImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+mt,Gt+1,le,tn.width,tn.height,0,se,Rt,tn.data)}}else{H?wt&&e.texSubImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+mt,0,0,0,se,Rt,Ft[mt]):e.texImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+mt,0,le,se,Rt,Ft[mt]);for(let Gt=0;Gt<vt.length;Gt++){const fe=vt[Gt];H?wt&&e.texSubImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+mt,Gt+1,0,0,se,Rt,fe.image[mt]):e.texImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+mt,Gt+1,le,se,Rt,fe.image[mt])}}}g(R)&&m(n.TEXTURE_CUBE_MAP),lt.__version=pt.version,R.onUpdate&&R.onUpdate(R)}L.__version=R.version}function gt(L,R,et,ft,pt,lt){const Vt=o.convert(et.format,et.colorSpace),It=o.convert(et.type),Bt=w(et.internalFormat,Vt,It,et.colorSpace),jt=s.get(R),bt=s.get(et);if(bt.__renderTarget=R,!jt.__hasExternalTextures){const Ft=Math.max(1,R.width>>lt),ne=Math.max(1,R.height>>lt);pt===n.TEXTURE_3D||pt===n.TEXTURE_2D_ARRAY?e.texImage3D(pt,lt,Bt,Ft,ne,R.depth,0,Vt,It,null):e.texImage2D(pt,lt,Bt,Ft,ne,0,Vt,It,null)}e.bindFramebuffer(n.FRAMEBUFFER,L),pe(R)?a.framebufferTexture2DMultisampleEXT(n.FRAMEBUFFER,ft,pt,bt.__webglTexture,0,Tt(R)):(pt===n.TEXTURE_2D||pt>=n.TEXTURE_CUBE_MAP_POSITIVE_X&&pt<=n.TEXTURE_CUBE_MAP_NEGATIVE_Z)&&n.framebufferTexture2D(n.FRAMEBUFFER,ft,pt,bt.__webglTexture,lt),e.bindFramebuffer(n.FRAMEBUFFER,null)}function St(L,R,et){if(n.bindRenderbuffer(n.RENDERBUFFER,L),R.depthBuffer){const ft=R.depthTexture,pt=ft&&ft.isDepthTexture?ft.type:null,lt=b(R.stencilBuffer,pt),Vt=R.stencilBuffer?n.DEPTH_STENCIL_ATTACHMENT:n.DEPTH_ATTACHMENT,It=Tt(R);pe(R)?a.renderbufferStorageMultisampleEXT(n.RENDERBUFFER,It,lt,R.width,R.height):et?n.renderbufferStorageMultisample(n.RENDERBUFFER,It,lt,R.width,R.height):n.renderbufferStorage(n.RENDERBUFFER,lt,R.width,R.height),n.framebufferRenderbuffer(n.FRAMEBUFFER,Vt,n.RENDERBUFFER,L)}else{const ft=R.textures;for(let pt=0;pt<ft.length;pt++){const lt=ft[pt],Vt=o.convert(lt.format,lt.colorSpace),It=o.convert(lt.type),Bt=w(lt.internalFormat,Vt,It,lt.colorSpace),jt=Tt(R);et&&pe(R)===!1?n.renderbufferStorageMultisample(n.RENDERBUFFER,jt,Bt,R.width,R.height):pe(R)?a.renderbufferStorageMultisampleEXT(n.RENDERBUFFER,jt,Bt,R.width,R.height):n.renderbufferStorage(n.RENDERBUFFER,Bt,R.width,R.height)}}n.bindRenderbuffer(n.RENDERBUFFER,null)}function _t(L,R){if(R&&R.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(e.bindFramebuffer(n.FRAMEBUFFER,L),!(R.depthTexture&&R.depthTexture.isDepthTexture))throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");const ft=s.get(R.depthTexture);ft.__renderTarget=R,(!ft.__webglTexture||R.depthTexture.image.width!==R.width||R.depthTexture.image.height!==R.height)&&(R.depthTexture.image.width=R.width,R.depthTexture.image.height=R.height,R.depthTexture.needsUpdate=!0),$(R.depthTexture,0);const pt=ft.__webglTexture,lt=Tt(R);if(R.depthTexture.format===tu)pe(R)?a.framebufferTexture2DMultisampleEXT(n.FRAMEBUFFER,n.DEPTH_ATTACHMENT,n.TEXTURE_2D,pt,0,lt):n.framebufferTexture2D(n.FRAMEBUFFER,n.DEPTH_ATTACHMENT,n.TEXTURE_2D,pt,0);else if(R.depthTexture.format===eu)pe(R)?a.framebufferTexture2DMultisampleEXT(n.FRAMEBUFFER,n.DEPTH_STENCIL_ATTACHMENT,n.TEXTURE_2D,pt,0,lt):n.framebufferTexture2D(n.FRAMEBUFFER,n.DEPTH_STENCIL_ATTACHMENT,n.TEXTURE_2D,pt,0);else throw new Error("Unknown depthTexture format")}function Pt(L){const R=s.get(L),et=L.isWebGLCubeRenderTarget===!0;if(R.__boundDepthTexture!==L.depthTexture){const ft=L.depthTexture;if(R.__depthDisposeCallback&&R.__depthDisposeCallback(),ft){const pt=()=>{delete R.__boundDepthTexture,delete R.__depthDisposeCallback,ft.removeEventListener("dispose",pt)};ft.addEventListener("dispose",pt),R.__depthDisposeCallback=pt}R.__boundDepthTexture=ft}if(L.depthTexture&&!R.__autoAllocateDepthBuffer){if(et)throw new Error("target.depthTexture not supported in Cube render targets");const ft=L.texture.mipmaps;ft&&ft.length>0?_t(R.__webglFramebuffer[0],L):_t(R.__webglFramebuffer,L)}else if(et){R.__webglDepthbuffer=[];for(let ft=0;ft<6;ft++)if(e.bindFramebuffer(n.FRAMEBUFFER,R.__webglFramebuffer[ft]),R.__webglDepthbuffer[ft]===void 0)R.__webglDepthbuffer[ft]=n.createRenderbuffer(),St(R.__webglDepthbuffer[ft],L,!1);else{const pt=L.stencilBuffer?n.DEPTH_STENCIL_ATTACHMENT:n.DEPTH_ATTACHMENT,lt=R.__webglDepthbuffer[ft];n.bindRenderbuffer(n.RENDERBUFFER,lt),n.framebufferRenderbuffer(n.FRAMEBUFFER,pt,n.RENDERBUFFER,lt)}}else{const ft=L.texture.mipmaps;if(ft&&ft.length>0?e.bindFramebuffer(n.FRAMEBUFFER,R.__webglFramebuffer[0]):e.bindFramebuffer(n.FRAMEBUFFER,R.__webglFramebuffer),R.__webglDepthbuffer===void 0)R.__webglDepthbuffer=n.createRenderbuffer(),St(R.__webglDepthbuffer,L,!1);else{const pt=L.stencilBuffer?n.DEPTH_STENCIL_ATTACHMENT:n.DEPTH_ATTACHMENT,lt=R.__webglDepthbuffer;n.bindRenderbuffer(n.RENDERBUFFER,lt),n.framebufferRenderbuffer(n.FRAMEBUFFER,pt,n.RENDERBUFFER,lt)}}e.bindFramebuffer(n.FRAMEBUFFER,null)}function Zt(L,R,et){const ft=s.get(L);R!==void 0&&gt(ft.__webglFramebuffer,L,L.texture,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,0),et!==void 0&&Pt(L)}function qt(L){const R=L.texture,et=s.get(L),ft=s.get(R);L.addEventListener("dispose",E);const pt=L.textures,lt=L.isWebGLCubeRenderTarget===!0,Vt=pt.length>1;if(Vt||(ft.__webglTexture===void 0&&(ft.__webglTexture=n.createTexture()),ft.__version=R.version,r.memory.textures++),lt){et.__webglFramebuffer=[];for(let It=0;It<6;It++)if(R.mipmaps&&R.mipmaps.length>0){et.__webglFramebuffer[It]=[];for(let Bt=0;Bt<R.mipmaps.length;Bt++)et.__webglFramebuffer[It][Bt]=n.createFramebuffer()}else et.__webglFramebuffer[It]=n.createFramebuffer()}else{if(R.mipmaps&&R.mipmaps.length>0){et.__webglFramebuffer=[];for(let It=0;It<R.mipmaps.length;It++)et.__webglFramebuffer[It]=n.createFramebuffer()}else et.__webglFramebuffer=n.createFramebuffer();if(Vt)for(let It=0,Bt=pt.length;It<Bt;It++){const jt=s.get(pt[It]);jt.__webglTexture===void 0&&(jt.__webglTexture=n.createTexture(),r.memory.textures++)}if(L.samples>0&&pe(L)===!1){et.__webglMultisampledFramebuffer=n.createFramebuffer(),et.__webglColorRenderbuffer=[],e.bindFramebuffer(n.FRAMEBUFFER,et.__webglMultisampledFramebuffer);for(let It=0;It<pt.length;It++){const Bt=pt[It];et.__webglColorRenderbuffer[It]=n.createRenderbuffer(),n.bindRenderbuffer(n.RENDERBUFFER,et.__webglColorRenderbuffer[It]);const jt=o.convert(Bt.format,Bt.colorSpace),bt=o.convert(Bt.type),Ft=w(Bt.internalFormat,jt,bt,Bt.colorSpace,L.isXRRenderTarget===!0),ne=Tt(L);n.renderbufferStorageMultisample(n.RENDERBUFFER,ne,Ft,L.width,L.height),n.framebufferRenderbuffer(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0+It,n.RENDERBUFFER,et.__webglColorRenderbuffer[It])}n.bindRenderbuffer(n.RENDERBUFFER,null),L.depthBuffer&&(et.__webglDepthRenderbuffer=n.createRenderbuffer(),St(et.__webglDepthRenderbuffer,L,!0)),e.bindFramebuffer(n.FRAMEBUFFER,null)}}if(lt){e.bindTexture(n.TEXTURE_CUBE_MAP,ft.__webglTexture),it(n.TEXTURE_CUBE_MAP,R);for(let It=0;It<6;It++)if(R.mipmaps&&R.mipmaps.length>0)for(let Bt=0;Bt<R.mipmaps.length;Bt++)gt(et.__webglFramebuffer[It][Bt],L,R,n.COLOR_ATTACHMENT0,n.TEXTURE_CUBE_MAP_POSITIVE_X+It,Bt);else gt(et.__webglFramebuffer[It],L,R,n.COLOR_ATTACHMENT0,n.TEXTURE_CUBE_MAP_POSITIVE_X+It,0);g(R)&&m(n.TEXTURE_CUBE_MAP),e.unbindTexture()}else if(Vt){for(let It=0,Bt=pt.length;It<Bt;It++){const jt=pt[It],bt=s.get(jt);e.bindTexture(n.TEXTURE_2D,bt.__webglTexture),it(n.TEXTURE_2D,jt),gt(et.__webglFramebuffer,L,jt,n.COLOR_ATTACHMENT0+It,n.TEXTURE_2D,0),g(jt)&&m(n.TEXTURE_2D)}e.unbindTexture()}else{let It=n.TEXTURE_2D;if((L.isWebGL3DRenderTarget||L.isWebGLArrayRenderTarget)&&(It=L.isWebGL3DRenderTarget?n.TEXTURE_3D:n.TEXTURE_2D_ARRAY),e.bindTexture(It,ft.__webglTexture),it(It,R),R.mipmaps&&R.mipmaps.length>0)for(let Bt=0;Bt<R.mipmaps.length;Bt++)gt(et.__webglFramebuffer[Bt],L,R,n.COLOR_ATTACHMENT0,It,Bt);else gt(et.__webglFramebuffer,L,R,n.COLOR_ATTACHMENT0,It,0);g(R)&&m(It),e.unbindTexture()}L.depthBuffer&&Pt(L)}function U(L){const R=L.textures;for(let et=0,ft=R.length;et<ft;et++){const pt=R[et];if(g(pt)){const lt=y(L),Vt=s.get(pt).__webglTexture;e.bindTexture(lt,Vt),m(lt),e.unbindTexture()}}}const he=[],Wt=[];function Qt(L){if(L.samples>0){if(pe(L)===!1){const R=L.textures,et=L.width,ft=L.height;let pt=n.COLOR_BUFFER_BIT;const lt=L.stencilBuffer?n.DEPTH_STENCIL_ATTACHMENT:n.DEPTH_ATTACHMENT,Vt=s.get(L),It=R.length>1;if(It)for(let jt=0;jt<R.length;jt++)e.bindFramebuffer(n.FRAMEBUFFER,Vt.__webglMultisampledFramebuffer),n.framebufferRenderbuffer(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0+jt,n.RENDERBUFFER,null),e.bindFramebuffer(n.FRAMEBUFFER,Vt.__webglFramebuffer),n.framebufferTexture2D(n.DRAW_FRAMEBUFFER,n.COLOR_ATTACHMENT0+jt,n.TEXTURE_2D,null,0);e.bindFramebuffer(n.READ_FRAMEBUFFER,Vt.__webglMultisampledFramebuffer);const Bt=L.texture.mipmaps;Bt&&Bt.length>0?e.bindFramebuffer(n.DRAW_FRAMEBUFFER,Vt.__webglFramebuffer[0]):e.bindFramebuffer(n.DRAW_FRAMEBUFFER,Vt.__webglFramebuffer);for(let jt=0;jt<R.length;jt++){if(L.resolveDepthBuffer&&(L.depthBuffer&&(pt|=n.DEPTH_BUFFER_BIT),L.stencilBuffer&&L.resolveStencilBuffer&&(pt|=n.STENCIL_BUFFER_BIT)),It){n.framebufferRenderbuffer(n.READ_FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.RENDERBUFFER,Vt.__webglColorRenderbuffer[jt]);const bt=s.get(R[jt]).__webglTexture;n.framebufferTexture2D(n.DRAW_FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,bt,0)}n.blitFramebuffer(0,0,et,ft,0,0,et,ft,pt,n.NEAREST),c===!0&&(he.length=0,Wt.length=0,he.push(n.COLOR_ATTACHMENT0+jt),L.depthBuffer&&L.resolveDepthBuffer===!1&&(he.push(lt),Wt.push(lt),n.invalidateFramebuffer(n.DRAW_FRAMEBUFFER,Wt)),n.invalidateFramebuffer(n.READ_FRAMEBUFFER,he))}if(e.bindFramebuffer(n.READ_FRAMEBUFFER,null),e.bindFramebuffer(n.DRAW_FRAMEBUFFER,null),It)for(let jt=0;jt<R.length;jt++){e.bindFramebuffer(n.FRAMEBUFFER,Vt.__webglMultisampledFramebuffer),n.framebufferRenderbuffer(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0+jt,n.RENDERBUFFER,Vt.__webglColorRenderbuffer[jt]);const bt=s.get(R[jt]).__webglTexture;e.bindFramebuffer(n.FRAMEBUFFER,Vt.__webglFramebuffer),n.framebufferTexture2D(n.DRAW_FRAMEBUFFER,n.COLOR_ATTACHMENT0+jt,n.TEXTURE_2D,bt,0)}e.bindFramebuffer(n.DRAW_FRAMEBUFFER,Vt.__webglMultisampledFramebuffer)}else if(L.depthBuffer&&L.resolveDepthBuffer===!1&&c){const R=L.stencilBuffer?n.DEPTH_STENCIL_ATTACHMENT:n.DEPTH_ATTACHMENT;n.invalidateFramebuffer(n.DRAW_FRAMEBUFFER,[R])}}}function Tt(L){return Math.min(i.maxSamples,L.samples)}function pe(L){const R=s.get(L);return L.samples>0&&t.has("WEBGL_multisampled_render_to_texture")===!0&&R.__useRenderToTexture!==!1}function $t(L){const R=r.render.frame;l.get(L)!==R&&(l.set(L,R),L.update())}function oe(L,R){const et=L.colorSpace,ft=L.format,pt=L.type;return L.isCompressedTexture===!0||L.isVideoTexture===!0||et!==Va&&et!==To&&($e.getTransfer(et)===He?(ft!==gi||pt!==ao)&&console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture color space:",et)),R}function ke(L){return typeof HTMLImageElement<"u"&&L instanceof HTMLImageElement?(u.width=L.naturalWidth||L.width,u.height=L.naturalHeight||L.height):typeof VideoFrame<"u"&&L instanceof VideoFrame?(u.width=L.displayWidth,u.height=L.displayHeight):(u.width=L.width,u.height=L.height),u}this.allocateTextureUnit=N,this.resetTextureUnits=M,this.setTexture2D=$,this.setTexture2DArray=F,this.setTexture3D=B,this.setTextureCube=P,this.rebindTextures=Zt,this.setupRenderTarget=qt,this.updateRenderTargetMipmap=U,this.updateMultisampleRenderTarget=Qt,this.setupDepthRenderbuffer=Pt,this.setupFrameBufferTexture=gt,this.useMultisampledRTT=pe}function wD(n,t){function e(s,i=To){let o;const r=$e.getTransfer(i);if(s===ao)return n.UNSIGNED_BYTE;if(s===e1)return n.UNSIGNED_SHORT_4_4_4_4;if(s===n1)return n.UNSIGNED_SHORT_5_5_5_1;if(s===bv)return n.UNSIGNED_INT_5_9_9_9_REV;if(s===xv)return n.BYTE;if(s===yv)return n.SHORT;if(s===Jc)return n.UNSIGNED_SHORT;if(s===t1)return n.INT;if(s===Tr)return n.UNSIGNED_INT;if(s===Di)return n.FLOAT;if(s===gu)return n.HALF_FLOAT;if(s===wv)return n.ALPHA;if(s===vv)return n.RGB;if(s===gi)return n.RGBA;if(s===tu)return n.DEPTH_COMPONENT;if(s===eu)return n.DEPTH_STENCIL;if(s===s1)return n.RED;if(s===i1)return n.RED_INTEGER;if(s===_v)return n.RG;if(s===o1)return n.RG_INTEGER;if(s===r1)return n.RGBA_INTEGER;if(s===Rd||s===Md||s===Ad||s===Nd)if(r===He)if(o=t.get("WEBGL_compressed_texture_s3tc_srgb"),o!==null){if(s===Rd)return o.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(s===Md)return o.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(s===Ad)return o.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(s===Nd)return o.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else return null;else if(o=t.get("WEBGL_compressed_texture_s3tc"),o!==null){if(s===Rd)return o.COMPRESSED_RGB_S3TC_DXT1_EXT;if(s===Md)return o.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(s===Ad)return o.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(s===Nd)return o.COMPRESSED_RGBA_S3TC_DXT5_EXT}else return null;if(s===Nm||s===km||s===Dm||s===$m)if(o=t.get("WEBGL_compressed_texture_pvrtc"),o!==null){if(s===Nm)return o.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(s===km)return o.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(s===Dm)return o.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(s===$m)return o.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}else return null;if(s===Fm||s===Pm||s===Lm)if(o=t.get("WEBGL_compressed_texture_etc"),o!==null){if(s===Fm||s===Pm)return r===He?o.COMPRESSED_SRGB8_ETC2:o.COMPRESSED_RGB8_ETC2;if(s===Lm)return r===He?o.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:o.COMPRESSED_RGBA8_ETC2_EAC}else return null;if(s===Om||s===Um||s===Bm||s===zm||s===Vm||s===Wm||s===Gm||s===Hm||s===Xm||s===qm||s===jm||s===Km||s===Ym||s===Zm)if(o=t.get("WEBGL_compressed_texture_astc"),o!==null){if(s===Om)return r===He?o.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:o.COMPRESSED_RGBA_ASTC_4x4_KHR;if(s===Um)return r===He?o.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:o.COMPRESSED_RGBA_ASTC_5x4_KHR;if(s===Bm)return r===He?o.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:o.COMPRESSED_RGBA_ASTC_5x5_KHR;if(s===zm)return r===He?o.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:o.COMPRESSED_RGBA_ASTC_6x5_KHR;if(s===Vm)return r===He?o.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:o.COMPRESSED_RGBA_ASTC_6x6_KHR;if(s===Wm)return r===He?o.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:o.COMPRESSED_RGBA_ASTC_8x5_KHR;if(s===Gm)return r===He?o.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:o.COMPRESSED_RGBA_ASTC_8x6_KHR;if(s===Hm)return r===He?o.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:o.COMPRESSED_RGBA_ASTC_8x8_KHR;if(s===Xm)return r===He?o.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:o.COMPRESSED_RGBA_ASTC_10x5_KHR;if(s===qm)return r===He?o.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:o.COMPRESSED_RGBA_ASTC_10x6_KHR;if(s===jm)return r===He?o.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:o.COMPRESSED_RGBA_ASTC_10x8_KHR;if(s===Km)return r===He?o.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:o.COMPRESSED_RGBA_ASTC_10x10_KHR;if(s===Ym)return r===He?o.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:o.COMPRESSED_RGBA_ASTC_12x10_KHR;if(s===Zm)return r===He?o.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:o.COMPRESSED_RGBA_ASTC_12x12_KHR}else return null;if(s===kd||s===Jm||s===Qm)if(o=t.get("EXT_texture_compression_bptc"),o!==null){if(s===kd)return r===He?o.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:o.COMPRESSED_RGBA_BPTC_UNORM_EXT;if(s===Jm)return o.COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT;if(s===Qm)return o.COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT}else return null;if(s===Cv||s===t0||s===e0||s===n0)if(o=t.get("EXT_texture_compression_rgtc"),o!==null){if(s===kd)return o.COMPRESSED_RED_RGTC1_EXT;if(s===t0)return o.COMPRESSED_SIGNED_RED_RGTC1_EXT;if(s===e0)return o.COMPRESSED_RED_GREEN_RGTC2_EXT;if(s===n0)return o.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT}else return null;return s===Qc?n.UNSIGNED_INT_24_8:n[s]!==void 0?n[s]:null}return{convert:e}}const vD=`
void main() {

	gl_Position = vec4( position, 1.0 );

}`,_D=`
uniform sampler2DArray depthColor;
uniform float depthWidth;
uniform float depthHeight;

void main() {

	vec2 coord = vec2( gl_FragCoord.x / depthWidth, gl_FragCoord.y / depthHeight );

	if ( coord.x >= 1.0 ) {

		gl_FragDepth = texture( depthColor, vec3( coord.x - 1.0, coord.y, 1 ) ).r;

	} else {

		gl_FragDepth = texture( depthColor, vec3( coord.x, coord.y, 0 ) ).r;

	}

}`;class CD{constructor(){this.texture=null,this.mesh=null,this.depthNear=0,this.depthFar=0}init(t,e,s){if(this.texture===null){const i=new Gn,o=t.properties.get(i);o.__webglTexture=e.texture,(e.depthNear!==s.depthNear||e.depthFar!==s.depthFar)&&(this.depthNear=e.depthNear,this.depthFar=e.depthFar),this.texture=i}}getMesh(t){if(this.texture!==null&&this.mesh===null){const e=t.cameras[0].viewport,s=new co({vertexShader:vD,fragmentShader:_D,uniforms:{depthColor:{value:this.texture},depthWidth:{value:e.z},depthHeight:{value:e.w}}});this.mesh=new Ks(new wu(20,20),s)}return this.mesh}reset(){this.texture=null,this.mesh=null}getDepthTexture(){return this.texture}}class SD extends Vr{constructor(t,e){super();const s=this;let i=null,o=1,r=null,a="local-floor",c=1,u=null,l=null,d=null,h=null,f=null,p=null;const x=new CD,g=e.getContextAttributes();let m=null,y=null;const w=[],b=[],_=new xe;let T=null;const E=new Xs;E.viewport=new yn;const I=new Xs;I.viewport=new yn;const S=[E,I],v=new WR;let C=null,M=null;this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(G){let Q=w[G];return Q===void 0&&(Q=new Vp,w[G]=Q),Q.getTargetRaySpace()},this.getControllerGrip=function(G){let Q=w[G];return Q===void 0&&(Q=new Vp,w[G]=Q),Q.getGripSpace()},this.getHand=function(G){let Q=w[G];return Q===void 0&&(Q=new Vp,w[G]=Q),Q.getHandSpace()};function N(G){const Q=b.indexOf(G.inputSource);if(Q===-1)return;const ht=w[Q];ht!==void 0&&(ht.update(G.inputSource,G.frame,u||r),ht.dispatchEvent({type:G.type,data:G.inputSource}))}function D(){i.removeEventListener("select",N),i.removeEventListener("selectstart",N),i.removeEventListener("selectend",N),i.removeEventListener("squeeze",N),i.removeEventListener("squeezestart",N),i.removeEventListener("squeezeend",N),i.removeEventListener("end",D),i.removeEventListener("inputsourceschange",$);for(let G=0;G<w.length;G++){const Q=b[G];Q!==null&&(b[G]=null,w[G].disconnect(Q))}C=null,M=null,x.reset(),t.setRenderTarget(m),f=null,h=null,d=null,i=null,y=null,ut.stop(),s.isPresenting=!1,t.setPixelRatio(T),t.setSize(_.width,_.height,!1),s.dispatchEvent({type:"sessionend"})}this.setFramebufferScaleFactor=function(G){o=G,s.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(G){a=G,s.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return u||r},this.setReferenceSpace=function(G){u=G},this.getBaseLayer=function(){return h!==null?h:f},this.getBinding=function(){return d},this.getFrame=function(){return p},this.getSession=function(){return i},this.setSession=async function(G){if(i=G,i!==null){if(m=t.getRenderTarget(),i.addEventListener("select",N),i.addEventListener("selectstart",N),i.addEventListener("selectend",N),i.addEventListener("squeeze",N),i.addEventListener("squeezestart",N),i.addEventListener("squeezeend",N),i.addEventListener("end",D),i.addEventListener("inputsourceschange",$),g.xrCompatible!==!0&&await e.makeXRCompatible(),T=t.getPixelRatio(),t.getSize(_),typeof XRWebGLBinding<"u"&&"createProjectionLayer"in XRWebGLBinding.prototype){let ht=null,dt=null,gt=null;g.depth&&(gt=g.stencil?e.DEPTH24_STENCIL8:e.DEPTH_COMPONENT24,ht=g.stencil?eu:tu,dt=g.stencil?Qc:Tr);const St={colorFormat:e.RGBA8,depthFormat:gt,scaleFactor:o};d=new XRWebGLBinding(i,e),h=d.createProjectionLayer(St),i.updateRenderState({layers:[h]}),t.setPixelRatio(1),t.setSize(h.textureWidth,h.textureHeight,!1),y=new Ir(h.textureWidth,h.textureHeight,{format:gi,type:ao,depthTexture:new Pv(h.textureWidth,h.textureHeight,dt,void 0,void 0,void 0,void 0,void 0,void 0,ht),stencilBuffer:g.stencil,colorSpace:t.outputColorSpace,samples:g.antialias?4:0,resolveDepthBuffer:h.ignoreDepthValues===!1,resolveStencilBuffer:h.ignoreDepthValues===!1})}else{const ht={antialias:g.antialias,alpha:!0,depth:g.depth,stencil:g.stencil,framebufferScaleFactor:o};f=new XRWebGLLayer(i,e,ht),i.updateRenderState({baseLayer:f}),t.setPixelRatio(1),t.setSize(f.framebufferWidth,f.framebufferHeight,!1),y=new Ir(f.framebufferWidth,f.framebufferHeight,{format:gi,type:ao,colorSpace:t.outputColorSpace,stencilBuffer:g.stencil,resolveDepthBuffer:f.ignoreDepthValues===!1,resolveStencilBuffer:f.ignoreDepthValues===!1})}y.isXRRenderTarget=!0,this.setFoveation(c),u=null,r=await i.requestReferenceSpace(a),ut.setContext(i),ut.start(),s.isPresenting=!0,s.dispatchEvent({type:"sessionstart"})}},this.getEnvironmentBlendMode=function(){if(i!==null)return i.environmentBlendMode},this.getDepthTexture=function(){return x.getDepthTexture()};function $(G){for(let Q=0;Q<G.removed.length;Q++){const ht=G.removed[Q],dt=b.indexOf(ht);dt>=0&&(b[dt]=null,w[dt].disconnect(ht))}for(let Q=0;Q<G.added.length;Q++){const ht=G.added[Q];let dt=b.indexOf(ht);if(dt===-1){for(let St=0;St<w.length;St++)if(St>=b.length){b.push(ht),dt=St;break}else if(b[St]===null){b[St]=ht,dt=St;break}if(dt===-1)break}const gt=w[dt];gt&&gt.connect(ht)}}const F=new st,B=new st;function P(G,Q,ht){F.setFromMatrixPosition(Q.matrixWorld),B.setFromMatrixPosition(ht.matrixWorld);const dt=F.distanceTo(B),gt=Q.projectionMatrix.elements,St=ht.projectionMatrix.elements,_t=gt[14]/(gt[10]-1),Pt=gt[14]/(gt[10]+1),Zt=(gt[9]+1)/gt[5],qt=(gt[9]-1)/gt[5],U=(gt[8]-1)/gt[0],he=(St[8]+1)/St[0],Wt=_t*U,Qt=_t*he,Tt=dt/(-U+he),pe=Tt*-U;if(Q.matrixWorld.decompose(G.position,G.quaternion,G.scale),G.translateX(pe),G.translateZ(Tt),G.matrixWorld.compose(G.position,G.quaternion,G.scale),G.matrixWorldInverse.copy(G.matrixWorld).invert(),gt[10]===-1)G.projectionMatrix.copy(Q.projectionMatrix),G.projectionMatrixInverse.copy(Q.projectionMatrixInverse);else{const $t=_t+Tt,oe=Pt+Tt,ke=Wt-pe,L=Qt+(dt-pe),R=Zt*Pt/oe*$t,et=qt*Pt/oe*$t;G.projectionMatrix.makePerspective(ke,L,R,et,$t,oe),G.projectionMatrixInverse.copy(G.projectionMatrix).invert()}}function V(G,Q){Q===null?G.matrixWorld.copy(G.matrix):G.matrixWorld.multiplyMatrices(Q.matrixWorld,G.matrix),G.matrixWorldInverse.copy(G.matrixWorld).invert()}this.updateCamera=function(G){if(i===null)return;let Q=G.near,ht=G.far;x.texture!==null&&(x.depthNear>0&&(Q=x.depthNear),x.depthFar>0&&(ht=x.depthFar)),v.near=I.near=E.near=Q,v.far=I.far=E.far=ht,(C!==v.near||M!==v.far)&&(i.updateRenderState({depthNear:v.near,depthFar:v.far}),C=v.near,M=v.far),E.layers.mask=G.layers.mask|2,I.layers.mask=G.layers.mask|4,v.layers.mask=E.layers.mask|I.layers.mask;const dt=G.parent,gt=v.cameras;V(v,dt);for(let St=0;St<gt.length;St++)V(gt[St],dt);gt.length===2?P(v,E,I):v.projectionMatrix.copy(E.projectionMatrix),q(G,v,dt)};function q(G,Q,ht){ht===null?G.matrix.copy(Q.matrixWorld):(G.matrix.copy(ht.matrixWorld),G.matrix.invert(),G.matrix.multiply(Q.matrixWorld)),G.matrix.decompose(G.position,G.quaternion,G.scale),G.updateMatrixWorld(!0),G.projectionMatrix.copy(Q.projectionMatrix),G.projectionMatrixInverse.copy(Q.projectionMatrixInverse),G.isPerspectiveCamera&&(G.fov=i0*2*Math.atan(1/G.projectionMatrix.elements[5]),G.zoom=1)}this.getCamera=function(){return v},this.getFoveation=function(){if(!(h===null&&f===null))return c},this.setFoveation=function(G){c=G,h!==null&&(h.fixedFoveation=G),f!==null&&f.fixedFoveation!==void 0&&(f.fixedFoveation=G)},this.hasDepthSensing=function(){return x.texture!==null},this.getDepthSensingMesh=function(){return x.getMesh(v)};let J=null;function it(G,Q){if(l=Q.getViewerPose(u||r),p=Q,l!==null){const ht=l.views;f!==null&&(t.setRenderTargetFramebuffer(y,f.framebuffer),t.setRenderTarget(y));let dt=!1;ht.length!==v.cameras.length&&(v.cameras.length=0,dt=!0);for(let _t=0;_t<ht.length;_t++){const Pt=ht[_t];let Zt=null;if(f!==null)Zt=f.getViewport(Pt);else{const U=d.getViewSubImage(h,Pt);Zt=U.viewport,_t===0&&(t.setRenderTargetTextures(y,U.colorTexture,U.depthStencilTexture),t.setRenderTarget(y))}let qt=S[_t];qt===void 0&&(qt=new Xs,qt.layers.enable(_t),qt.viewport=new yn,S[_t]=qt),qt.matrix.fromArray(Pt.transform.matrix),qt.matrix.decompose(qt.position,qt.quaternion,qt.scale),qt.projectionMatrix.fromArray(Pt.projectionMatrix),qt.projectionMatrixInverse.copy(qt.projectionMatrix).invert(),qt.viewport.set(Zt.x,Zt.y,Zt.width,Zt.height),_t===0&&(v.matrix.copy(qt.matrix),v.matrix.decompose(v.position,v.quaternion,v.scale)),dt===!0&&v.cameras.push(qt)}const gt=i.enabledFeatures;if(gt&&gt.includes("depth-sensing")&&i.depthUsage=="gpu-optimized"&&d){const _t=d.getDepthInformation(ht[0]);_t&&_t.isValid&&_t.texture&&x.init(t,_t,i.renderState)}}for(let ht=0;ht<w.length;ht++){const dt=b[ht],gt=w[ht];dt!==null&&gt!==void 0&&gt.update(dt,Q,u||r)}J&&J(G,Q),Q.detectedPlanes&&s.dispatchEvent({type:"planesdetected",data:Q}),p=null}const ut=new Lv;ut.setAnimationLoop(it),this.setAnimationLoop=function(G){J=G},this.dispose=function(){}}}const rr=new Ui,TD=new cn;function ED(n,t){function e(g,m){g.matrixAutoUpdate===!0&&g.updateMatrix(),m.value.copy(g.matrix)}function s(g,m){m.color.getRGB(g.fogColor.value,kv(n)),m.isFog?(g.fogNear.value=m.near,g.fogFar.value=m.far):m.isFogExp2&&(g.fogDensity.value=m.density)}function i(g,m,y,w,b){m.isMeshBasicMaterial||m.isMeshLambertMaterial?o(g,m):m.isMeshToonMaterial?(o(g,m),d(g,m)):m.isMeshPhongMaterial?(o(g,m),l(g,m)):m.isMeshStandardMaterial?(o(g,m),h(g,m),m.isMeshPhysicalMaterial&&f(g,m,b)):m.isMeshMatcapMaterial?(o(g,m),p(g,m)):m.isMeshDepthMaterial?o(g,m):m.isMeshDistanceMaterial?(o(g,m),x(g,m)):m.isMeshNormalMaterial?o(g,m):m.isLineBasicMaterial?(r(g,m),m.isLineDashedMaterial&&a(g,m)):m.isPointsMaterial?c(g,m,y,w):m.isSpriteMaterial?u(g,m):m.isShadowMaterial?(g.color.value.copy(m.color),g.opacity.value=m.opacity):m.isShaderMaterial&&(m.uniformsNeedUpdate=!1)}function o(g,m){g.opacity.value=m.opacity,m.color&&g.diffuse.value.copy(m.color),m.emissive&&g.emissive.value.copy(m.emissive).multiplyScalar(m.emissiveIntensity),m.map&&(g.map.value=m.map,e(m.map,g.mapTransform)),m.alphaMap&&(g.alphaMap.value=m.alphaMap,e(m.alphaMap,g.alphaMapTransform)),m.bumpMap&&(g.bumpMap.value=m.bumpMap,e(m.bumpMap,g.bumpMapTransform),g.bumpScale.value=m.bumpScale,m.side===Ss&&(g.bumpScale.value*=-1)),m.normalMap&&(g.normalMap.value=m.normalMap,e(m.normalMap,g.normalMapTransform),g.normalScale.value.copy(m.normalScale),m.side===Ss&&g.normalScale.value.negate()),m.displacementMap&&(g.displacementMap.value=m.displacementMap,e(m.displacementMap,g.displacementMapTransform),g.displacementScale.value=m.displacementScale,g.displacementBias.value=m.displacementBias),m.emissiveMap&&(g.emissiveMap.value=m.emissiveMap,e(m.emissiveMap,g.emissiveMapTransform)),m.specularMap&&(g.specularMap.value=m.specularMap,e(m.specularMap,g.specularMapTransform)),m.alphaTest>0&&(g.alphaTest.value=m.alphaTest);const y=t.get(m),w=y.envMap,b=y.envMapRotation;w&&(g.envMap.value=w,rr.copy(b),rr.x*=-1,rr.y*=-1,rr.z*=-1,w.isCubeTexture&&w.isRenderTargetTexture===!1&&(rr.y*=-1,rr.z*=-1),g.envMapRotation.value.setFromMatrix4(TD.makeRotationFromEuler(rr)),g.flipEnvMap.value=w.isCubeTexture&&w.isRenderTargetTexture===!1?-1:1,g.reflectivity.value=m.reflectivity,g.ior.value=m.ior,g.refractionRatio.value=m.refractionRatio),m.lightMap&&(g.lightMap.value=m.lightMap,g.lightMapIntensity.value=m.lightMapIntensity,e(m.lightMap,g.lightMapTransform)),m.aoMap&&(g.aoMap.value=m.aoMap,g.aoMapIntensity.value=m.aoMapIntensity,e(m.aoMap,g.aoMapTransform))}function r(g,m){g.diffuse.value.copy(m.color),g.opacity.value=m.opacity,m.map&&(g.map.value=m.map,e(m.map,g.mapTransform))}function a(g,m){g.dashSize.value=m.dashSize,g.totalSize.value=m.dashSize+m.gapSize,g.scale.value=m.scale}function c(g,m,y,w){g.diffuse.value.copy(m.color),g.opacity.value=m.opacity,g.size.value=m.size*y,g.scale.value=w*.5,m.map&&(g.map.value=m.map,e(m.map,g.uvTransform)),m.alphaMap&&(g.alphaMap.value=m.alphaMap,e(m.alphaMap,g.alphaMapTransform)),m.alphaTest>0&&(g.alphaTest.value=m.alphaTest)}function u(g,m){g.diffuse.value.copy(m.color),g.opacity.value=m.opacity,g.rotation.value=m.rotation,m.map&&(g.map.value=m.map,e(m.map,g.mapTransform)),m.alphaMap&&(g.alphaMap.value=m.alphaMap,e(m.alphaMap,g.alphaMapTransform)),m.alphaTest>0&&(g.alphaTest.value=m.alphaTest)}function l(g,m){g.specular.value.copy(m.specular),g.shininess.value=Math.max(m.shininess,1e-4)}function d(g,m){m.gradientMap&&(g.gradientMap.value=m.gradientMap)}function h(g,m){g.metalness.value=m.metalness,m.metalnessMap&&(g.metalnessMap.value=m.metalnessMap,e(m.metalnessMap,g.metalnessMapTransform)),g.roughness.value=m.roughness,m.roughnessMap&&(g.roughnessMap.value=m.roughnessMap,e(m.roughnessMap,g.roughnessMapTransform)),m.envMap&&(g.envMapIntensity.value=m.envMapIntensity)}function f(g,m,y){g.ior.value=m.ior,m.sheen>0&&(g.sheenColor.value.copy(m.sheenColor).multiplyScalar(m.sheen),g.sheenRoughness.value=m.sheenRoughness,m.sheenColorMap&&(g.sheenColorMap.value=m.sheenColorMap,e(m.sheenColorMap,g.sheenColorMapTransform)),m.sheenRoughnessMap&&(g.sheenRoughnessMap.value=m.sheenRoughnessMap,e(m.sheenRoughnessMap,g.sheenRoughnessMapTransform))),m.clearcoat>0&&(g.clearcoat.value=m.clearcoat,g.clearcoatRoughness.value=m.clearcoatRoughness,m.clearcoatMap&&(g.clearcoatMap.value=m.clearcoatMap,e(m.clearcoatMap,g.clearcoatMapTransform)),m.clearcoatRoughnessMap&&(g.clearcoatRoughnessMap.value=m.clearcoatRoughnessMap,e(m.clearcoatRoughnessMap,g.clearcoatRoughnessMapTransform)),m.clearcoatNormalMap&&(g.clearcoatNormalMap.value=m.clearcoatNormalMap,e(m.clearcoatNormalMap,g.clearcoatNormalMapTransform),g.clearcoatNormalScale.value.copy(m.clearcoatNormalScale),m.side===Ss&&g.clearcoatNormalScale.value.negate())),m.dispersion>0&&(g.dispersion.value=m.dispersion),m.iridescence>0&&(g.iridescence.value=m.iridescence,g.iridescenceIOR.value=m.iridescenceIOR,g.iridescenceThicknessMinimum.value=m.iridescenceThicknessRange[0],g.iridescenceThicknessMaximum.value=m.iridescenceThicknessRange[1],m.iridescenceMap&&(g.iridescenceMap.value=m.iridescenceMap,e(m.iridescenceMap,g.iridescenceMapTransform)),m.iridescenceThicknessMap&&(g.iridescenceThicknessMap.value=m.iridescenceThicknessMap,e(m.iridescenceThicknessMap,g.iridescenceThicknessMapTransform))),m.transmission>0&&(g.transmission.value=m.transmission,g.transmissionSamplerMap.value=y.texture,g.transmissionSamplerSize.value.set(y.width,y.height),m.transmissionMap&&(g.transmissionMap.value=m.transmissionMap,e(m.transmissionMap,g.transmissionMapTransform)),g.thickness.value=m.thickness,m.thicknessMap&&(g.thicknessMap.value=m.thicknessMap,e(m.thicknessMap,g.thicknessMapTransform)),g.attenuationDistance.value=m.attenuationDistance,g.attenuationColor.value.copy(m.attenuationColor)),m.anisotropy>0&&(g.anisotropyVector.value.set(m.anisotropy*Math.cos(m.anisotropyRotation),m.anisotropy*Math.sin(m.anisotropyRotation)),m.anisotropyMap&&(g.anisotropyMap.value=m.anisotropyMap,e(m.anisotropyMap,g.anisotropyMapTransform))),g.specularIntensity.value=m.specularIntensity,g.specularColor.value.copy(m.specularColor),m.specularColorMap&&(g.specularColorMap.value=m.specularColorMap,e(m.specularColorMap,g.specularColorMapTransform)),m.specularIntensityMap&&(g.specularIntensityMap.value=m.specularIntensityMap,e(m.specularIntensityMap,g.specularIntensityMapTransform))}function p(g,m){m.matcap&&(g.matcap.value=m.matcap)}function x(g,m){const y=t.get(m).light;g.referencePosition.value.setFromMatrixPosition(y.matrixWorld),g.nearDistance.value=y.shadow.camera.near,g.farDistance.value=y.shadow.camera.far}return{refreshFogUniforms:s,refreshMaterialUniforms:i}}function ID(n,t,e,s){let i={},o={},r=[];const a=n.getParameter(n.MAX_UNIFORM_BUFFER_BINDINGS);function c(y,w){const b=w.program;s.uniformBlockBinding(y,b)}function u(y,w){let b=i[y.id];b===void 0&&(p(y),b=l(y),i[y.id]=b,y.addEventListener("dispose",g));const _=w.program;s.updateUBOMapping(y,_);const T=t.render.frame;o[y.id]!==T&&(h(y),o[y.id]=T)}function l(y){const w=d();y.__bindingPointIndex=w;const b=n.createBuffer(),_=y.__size,T=y.usage;return n.bindBuffer(n.UNIFORM_BUFFER,b),n.bufferData(n.UNIFORM_BUFFER,_,T),n.bindBuffer(n.UNIFORM_BUFFER,null),n.bindBufferBase(n.UNIFORM_BUFFER,w,b),b}function d(){for(let y=0;y<a;y++)if(r.indexOf(y)===-1)return r.push(y),y;return console.error("THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached."),0}function h(y){const w=i[y.id],b=y.uniforms,_=y.__cache;n.bindBuffer(n.UNIFORM_BUFFER,w);for(let T=0,E=b.length;T<E;T++){const I=Array.isArray(b[T])?b[T]:[b[T]];for(let S=0,v=I.length;S<v;S++){const C=I[S];if(f(C,T,S,_)===!0){const M=C.__offset,N=Array.isArray(C.value)?C.value:[C.value];let D=0;for(let $=0;$<N.length;$++){const F=N[$],B=x(F);typeof F=="number"||typeof F=="boolean"?(C.__data[0]=F,n.bufferSubData(n.UNIFORM_BUFFER,M+D,C.__data)):F.isMatrix3?(C.__data[0]=F.elements[0],C.__data[1]=F.elements[1],C.__data[2]=F.elements[2],C.__data[3]=0,C.__data[4]=F.elements[3],C.__data[5]=F.elements[4],C.__data[6]=F.elements[5],C.__data[7]=0,C.__data[8]=F.elements[6],C.__data[9]=F.elements[7],C.__data[10]=F.elements[8],C.__data[11]=0):(F.toArray(C.__data,D),D+=B.storage/Float32Array.BYTES_PER_ELEMENT)}n.bufferSubData(n.UNIFORM_BUFFER,M,C.__data)}}}n.bindBuffer(n.UNIFORM_BUFFER,null)}function f(y,w,b,_){const T=y.value,E=w+"_"+b;if(_[E]===void 0)return typeof T=="number"||typeof T=="boolean"?_[E]=T:_[E]=T.clone(),!0;{const I=_[E];if(typeof T=="number"||typeof T=="boolean"){if(I!==T)return _[E]=T,!0}else if(I.equals(T)===!1)return I.copy(T),!0}return!1}function p(y){const w=y.uniforms;let b=0;const _=16;for(let E=0,I=w.length;E<I;E++){const S=Array.isArray(w[E])?w[E]:[w[E]];for(let v=0,C=S.length;v<C;v++){const M=S[v],N=Array.isArray(M.value)?M.value:[M.value];for(let D=0,$=N.length;D<$;D++){const F=N[D],B=x(F),P=b%_,V=P%B.boundary,q=P+V;b+=V,q!==0&&_-q<B.storage&&(b+=_-q),M.__data=new Float32Array(B.storage/Float32Array.BYTES_PER_ELEMENT),M.__offset=b,b+=B.storage}}}const T=b%_;return T>0&&(b+=_-T),y.__size=b,y.__cache={},this}function x(y){const w={boundary:0,storage:0};return typeof y=="number"||typeof y=="boolean"?(w.boundary=4,w.storage=4):y.isVector2?(w.boundary=8,w.storage=8):y.isVector3||y.isColor?(w.boundary=16,w.storage=12):y.isVector4?(w.boundary=16,w.storage=16):y.isMatrix3?(w.boundary=48,w.storage=48):y.isMatrix4?(w.boundary=64,w.storage=64):y.isTexture?console.warn("THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group."):console.warn("THREE.WebGLRenderer: Unsupported uniform value type.",y),w}function g(y){const w=y.target;w.removeEventListener("dispose",g);const b=r.indexOf(w.__bindingPointIndex);r.splice(b,1),n.deleteBuffer(i[w.id]),delete i[w.id],delete o[w.id]}function m(){for(const y in i)n.deleteBuffer(i[y]);r=[],i={},o={}}return{bind:c,update:u,dispose:m}}class RD{constructor(t={}){const{canvas:e=J3(),context:s=null,depth:i=!0,stencil:o=!1,alpha:r=!1,antialias:a=!1,premultipliedAlpha:c=!0,preserveDrawingBuffer:u=!1,powerPreference:l="default",failIfMajorPerformanceCaveat:d=!1,reverseDepthBuffer:h=!1}=t;this.isWebGLRenderer=!0;let f;if(s!==null){if(typeof WebGLRenderingContext<"u"&&s instanceof WebGLRenderingContext)throw new Error("THREE.WebGLRenderer: WebGL 1 is not supported since r163.");f=s.getContextAttributes().alpha}else f=r;const p=new Uint32Array(4),x=new Int32Array(4);let g=null,m=null;const y=[],w=[];this.domElement=e,this.debug={checkShaderErrors:!0,onShaderError:null},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.toneMapping=Ao,this.toneMappingExposure=1,this.transmissionResolutionScale=1;const b=this;let _=!1;this._outputColorSpace=Hs;let T=0,E=0,I=null,S=-1,v=null;const C=new yn,M=new yn;let N=null;const D=new be(0);let $=0,F=e.width,B=e.height,P=1,V=null,q=null;const J=new yn(0,0,F,B),it=new yn(0,0,F,B);let ut=!1;const G=new Fv;let Q=!1,ht=!1;const dt=new cn,gt=new cn,St=new st,_t=new yn,Pt={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};let Zt=!1;function qt(){return I===null?P:1}let U=s;function he(A,Y){return e.getContext(A,Y)}try{const A={alpha:!0,depth:i,stencil:o,antialias:a,premultipliedAlpha:c,preserveDrawingBuffer:u,powerPreference:l,failIfMajorPerformanceCaveat:d};if("setAttribute"in e&&e.setAttribute("data-engine",`three.js r${J0}`),e.addEventListener("webglcontextlost",zt,!1),e.addEventListener("webglcontextrestored",vt,!1),e.addEventListener("webglcontextcreationerror",mt,!1),U===null){const Y="webgl2";if(U=he(Y,A),U===null)throw he(Y)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}}catch(A){throw console.error("THREE.WebGLRenderer: "+A.message),A}let Wt,Qt,Tt,pe,$t,oe,ke,L,R,et,ft,pt,lt,Vt,It,Bt,jt,bt,Ft,ne,se,Rt,le,H;function kt(){Wt=new ON(U),Wt.init(),Rt=new wD(U,Wt),Qt=new NN(U,Wt,t,Rt),Tt=new yD(U,Wt),Qt.reverseDepthBuffer&&h&&Tt.buffers.depth.setReversed(!0),pe=new zN(U),$t=new oD,oe=new bD(U,Wt,Tt,$t,Qt,Rt,pe),ke=new DN(b),L=new LN(b),R=new qR(U),le=new MN(U,R),et=new UN(U,R,pe,le),ft=new WN(U,et,R,pe),Ft=new VN(U,Qt,oe),Bt=new kN($t),pt=new iD(b,ke,L,Wt,Qt,le,Bt),lt=new ED(b,$t),Vt=new aD,It=new fD(Wt),bt=new RN(b,ke,L,Tt,ft,f,c),jt=new gD(b,ft,Qt),H=new ID(U,pe,Qt,Tt),ne=new AN(U,Wt,pe),se=new BN(U,Wt,pe),pe.programs=pt.programs,b.capabilities=Qt,b.extensions=Wt,b.properties=$t,b.renderLists=Vt,b.shadowMap=jt,b.state=Tt,b.info=pe}kt();const wt=new SD(b,U);this.xr=wt,this.getContext=function(){return U},this.getContextAttributes=function(){return U.getContextAttributes()},this.forceContextLoss=function(){const A=Wt.get("WEBGL_lose_context");A&&A.loseContext()},this.forceContextRestore=function(){const A=Wt.get("WEBGL_lose_context");A&&A.restoreContext()},this.getPixelRatio=function(){return P},this.setPixelRatio=function(A){A!==void 0&&(P=A,this.setSize(F,B,!1))},this.getSize=function(A){return A.set(F,B)},this.setSize=function(A,Y,ot=!0){if(wt.isPresenting){console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");return}F=A,B=Y,e.width=Math.floor(A*P),e.height=Math.floor(Y*P),ot===!0&&(e.style.width=A+"px",e.style.height=Y+"px"),this.setViewport(0,0,A,Y)},this.getDrawingBufferSize=function(A){return A.set(F*P,B*P).floor()},this.setDrawingBufferSize=function(A,Y,ot){F=A,B=Y,P=ot,e.width=Math.floor(A*ot),e.height=Math.floor(Y*ot),this.setViewport(0,0,A,Y)},this.getCurrentViewport=function(A){return A.copy(C)},this.getViewport=function(A){return A.copy(J)},this.setViewport=function(A,Y,ot,rt){A.isVector4?J.set(A.x,A.y,A.z,A.w):J.set(A,Y,ot,rt),Tt.viewport(C.copy(J).multiplyScalar(P).round())},this.getScissor=function(A){return A.copy(it)},this.setScissor=function(A,Y,ot,rt){A.isVector4?it.set(A.x,A.y,A.z,A.w):it.set(A,Y,ot,rt),Tt.scissor(M.copy(it).multiplyScalar(P).round())},this.getScissorTest=function(){return ut},this.setScissorTest=function(A){Tt.setScissorTest(ut=A)},this.setOpaqueSort=function(A){V=A},this.setTransparentSort=function(A){q=A},this.getClearColor=function(A){return A.copy(bt.getClearColor())},this.setClearColor=function(){bt.setClearColor(...arguments)},this.getClearAlpha=function(){return bt.getClearAlpha()},this.setClearAlpha=function(){bt.setClearAlpha(...arguments)},this.clear=function(A=!0,Y=!0,ot=!0){let rt=0;if(A){let Z=!1;if(I!==null){const Ct=I.texture.format;Z=Ct===r1||Ct===o1||Ct===i1}if(Z){const Ct=I.texture.type,Dt=Ct===ao||Ct===Tr||Ct===Jc||Ct===Qc||Ct===e1||Ct===n1,Ht=bt.getClearColor(),Lt=bt.getClearAlpha(),ce=Ht.r,ue=Ht.g,Jt=Ht.b;Dt?(p[0]=ce,p[1]=ue,p[2]=Jt,p[3]=Lt,U.clearBufferuiv(U.COLOR,0,p)):(x[0]=ce,x[1]=ue,x[2]=Jt,x[3]=Lt,U.clearBufferiv(U.COLOR,0,x))}else rt|=U.COLOR_BUFFER_BIT}Y&&(rt|=U.DEPTH_BUFFER_BIT),ot&&(rt|=U.STENCIL_BUFFER_BIT,this.state.buffers.stencil.setMask(4294967295)),U.clear(rt)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){e.removeEventListener("webglcontextlost",zt,!1),e.removeEventListener("webglcontextrestored",vt,!1),e.removeEventListener("webglcontextcreationerror",mt,!1),bt.dispose(),Vt.dispose(),It.dispose(),$t.dispose(),ke.dispose(),L.dispose(),ft.dispose(),le.dispose(),H.dispose(),pt.dispose(),wt.dispose(),wt.removeEventListener("sessionstart",ly),wt.removeEventListener("sessionend",dy),Qo.stop()};function zt(A){A.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),_=!0}function vt(){console.log("THREE.WebGLRenderer: Context Restored."),_=!1;const A=pe.autoReset,Y=jt.enabled,ot=jt.autoUpdate,rt=jt.needsUpdate,Z=jt.type;kt(),pe.autoReset=A,jt.enabled=Y,jt.autoUpdate=ot,jt.needsUpdate=rt,jt.type=Z}function mt(A){console.error("THREE.WebGLRenderer: A WebGL context could not be created. Reason: ",A.statusMessage)}function Gt(A){const Y=A.target;Y.removeEventListener("dispose",Gt),fe(Y)}function fe(A){tn(A),$t.remove(A)}function tn(A){const Y=$t.get(A).programs;Y!==void 0&&(Y.forEach(function(ot){pt.releaseProgram(ot)}),A.isShaderMaterial&&pt.releaseShaderCache(A))}this.renderBufferDirect=function(A,Y,ot,rt,Z,Ct){Y===null&&(Y=Pt);const Dt=Z.isMesh&&Z.matrixWorld.determinant()<0,Ht=e3(A,Y,ot,rt,Z);Tt.setMaterial(rt,Dt);let Lt=ot.index,ce=1;if(rt.wireframe===!0){if(Lt=et.getWireframeAttribute(ot),Lt===void 0)return;ce=2}const ue=ot.drawRange,Jt=ot.attributes.position;let Ie=ue.start*ce,ze=(ue.start+ue.count)*ce;Ct!==null&&(Ie=Math.max(Ie,Ct.start*ce),ze=Math.min(ze,(Ct.start+Ct.count)*ce)),Lt!==null?(Ie=Math.max(Ie,0),ze=Math.min(ze,Lt.count)):Jt!=null&&(Ie=Math.max(Ie,0),ze=Math.min(ze,Jt.count));const ln=ze-Ie;if(ln<0||ln===1/0)return;le.setup(Z,rt,Ht,ot,Lt);let hn,De=ne;if(Lt!==null&&(hn=R.get(Lt),De=se,De.setIndex(hn)),Z.isMesh)rt.wireframe===!0?(Tt.setLineWidth(rt.wireframeLinewidth*qt()),De.setMode(U.LINES)):De.setMode(U.TRIANGLES);else if(Z.isLine){let te=rt.linewidth;te===void 0&&(te=1),Tt.setLineWidth(te*qt()),Z.isLineSegments?De.setMode(U.LINES):Z.isLineLoop?De.setMode(U.LINE_LOOP):De.setMode(U.LINE_STRIP)}else Z.isPoints?De.setMode(U.POINTS):Z.isSprite&&De.setMode(U.TRIANGLES);if(Z.isBatchedMesh)if(Z._multiDrawInstances!==null)Na("THREE.WebGLRenderer: renderMultiDrawInstances has been deprecated and will be removed in r184. Append to renderMultiDraw arguments and use indirection."),De.renderMultiDrawInstances(Z._multiDrawStarts,Z._multiDrawCounts,Z._multiDrawCount,Z._multiDrawInstances);else if(Wt.get("WEBGL_multi_draw"))De.renderMultiDraw(Z._multiDrawStarts,Z._multiDrawCounts,Z._multiDrawCount);else{const te=Z._multiDrawStarts,Vn=Z._multiDrawCounts,Le=Z._multiDrawCount,ri=Lt?R.get(Lt).bytesPerElement:1,ea=$t.get(rt).currentProgram.getUniforms();for(let Rs=0;Rs<Le;Rs++)ea.setValue(U,"_gl_DrawID",Rs),De.render(te[Rs]/ri,Vn[Rs])}else if(Z.isInstancedMesh)De.renderInstances(Ie,ln,Z.count);else if(ot.isInstancedBufferGeometry){const te=ot._maxInstanceCount!==void 0?ot._maxInstanceCount:1/0,Vn=Math.min(ot.instanceCount,te);De.renderInstances(Ie,ln,Vn)}else De.render(Ie,ln)};function Be(A,Y,ot){A.transparent===!0&&A.side===eo&&A.forceSinglePass===!1?(A.side=Ss,A.needsUpdate=!0,Vl(A,Y,ot),A.side=Po,A.needsUpdate=!0,Vl(A,Y,ot),A.side=eo):Vl(A,Y,ot)}this.compile=function(A,Y,ot=null){ot===null&&(ot=A),m=It.get(ot),m.init(Y),w.push(m),ot.traverseVisible(function(Z){Z.isLight&&Z.layers.test(Y.layers)&&(m.pushLight(Z),Z.castShadow&&m.pushShadow(Z))}),A!==ot&&A.traverseVisible(function(Z){Z.isLight&&Z.layers.test(Y.layers)&&(m.pushLight(Z),Z.castShadow&&m.pushShadow(Z))}),m.setupLights();const rt=new Set;return A.traverse(function(Z){if(!(Z.isMesh||Z.isPoints||Z.isLine||Z.isSprite))return;const Ct=Z.material;if(Ct)if(Array.isArray(Ct))for(let Dt=0;Dt<Ct.length;Dt++){const Ht=Ct[Dt];Be(Ht,ot,Z),rt.add(Ht)}else Be(Ct,ot,Z),rt.add(Ct)}),m=w.pop(),rt},this.compileAsync=function(A,Y,ot=null){const rt=this.compile(A,Y,ot);return new Promise(Z=>{function Ct(){if(rt.forEach(function(Dt){$t.get(Dt).currentProgram.isReady()&&rt.delete(Dt)}),rt.size===0){Z(A);return}setTimeout(Ct,10)}Wt.get("KHR_parallel_shader_compile")!==null?Ct():setTimeout(Ct,10)})};let oi=null;function Hi(A){oi&&oi(A)}function ly(){Qo.stop()}function dy(){Qo.start()}const Qo=new Lv;Qo.setAnimationLoop(Hi),typeof self<"u"&&Qo.setContext(self),this.setAnimationLoop=function(A){oi=A,wt.setAnimationLoop(A),A===null?Qo.stop():Qo.start()},wt.addEventListener("sessionstart",ly),wt.addEventListener("sessionend",dy),this.render=function(A,Y){if(Y!==void 0&&Y.isCamera!==!0){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}if(_===!0)return;if(A.matrixWorldAutoUpdate===!0&&A.updateMatrixWorld(),Y.parent===null&&Y.matrixWorldAutoUpdate===!0&&Y.updateMatrixWorld(),wt.enabled===!0&&wt.isPresenting===!0&&(wt.cameraAutoUpdate===!0&&wt.updateCamera(Y),Y=wt.getCamera()),A.isScene===!0&&A.onBeforeRender(b,A,Y,I),m=It.get(A,w.length),m.init(Y),w.push(m),gt.multiplyMatrices(Y.projectionMatrix,Y.matrixWorldInverse),G.setFromProjectionMatrix(gt),ht=this.localClippingEnabled,Q=Bt.init(this.clippingPlanes,ht),g=Vt.get(A,y.length),g.init(),y.push(g),wt.enabled===!0&&wt.isPresenting===!0){const Ct=b.xr.getDepthSensingMesh();Ct!==null&&yp(Ct,Y,-1/0,b.sortObjects)}yp(A,Y,0,b.sortObjects),g.finish(),b.sortObjects===!0&&g.sort(V,q),Zt=wt.enabled===!1||wt.isPresenting===!1||wt.hasDepthSensing()===!1,Zt&&bt.addToRenderList(g,A),this.info.render.frame++,Q===!0&&Bt.beginShadows();const ot=m.state.shadowsArray;jt.render(ot,A,Y),Q===!0&&Bt.endShadows(),this.info.autoReset===!0&&this.info.reset();const rt=g.opaque,Z=g.transmissive;if(m.setupLights(),Y.isArrayCamera){const Ct=Y.cameras;if(Z.length>0)for(let Dt=0,Ht=Ct.length;Dt<Ht;Dt++){const Lt=Ct[Dt];fy(rt,Z,A,Lt)}Zt&&bt.render(A);for(let Dt=0,Ht=Ct.length;Dt<Ht;Dt++){const Lt=Ct[Dt];hy(g,A,Lt,Lt.viewport)}}else Z.length>0&&fy(rt,Z,A,Y),Zt&&bt.render(A),hy(g,A,Y);I!==null&&E===0&&(oe.updateMultisampleRenderTarget(I),oe.updateRenderTargetMipmap(I)),A.isScene===!0&&A.onAfterRender(b,A,Y),le.resetDefaultState(),S=-1,v=null,w.pop(),w.length>0?(m=w[w.length-1],Q===!0&&Bt.setGlobalState(b.clippingPlanes,m.state.camera)):m=null,y.pop(),y.length>0?g=y[y.length-1]:g=null};function yp(A,Y,ot,rt){if(A.visible===!1)return;if(A.layers.test(Y.layers)){if(A.isGroup)ot=A.renderOrder;else if(A.isLOD)A.autoUpdate===!0&&A.update(Y);else if(A.isLight)m.pushLight(A),A.castShadow&&m.pushShadow(A);else if(A.isSprite){if(!A.frustumCulled||G.intersectsSprite(A)){rt&&_t.setFromMatrixPosition(A.matrixWorld).applyMatrix4(gt);const Dt=ft.update(A),Ht=A.material;Ht.visible&&g.push(A,Dt,Ht,ot,_t.z,null)}}else if((A.isMesh||A.isLine||A.isPoints)&&(!A.frustumCulled||G.intersectsObject(A))){const Dt=ft.update(A),Ht=A.material;if(rt&&(A.boundingSphere!==void 0?(A.boundingSphere===null&&A.computeBoundingSphere(),_t.copy(A.boundingSphere.center)):(Dt.boundingSphere===null&&Dt.computeBoundingSphere(),_t.copy(Dt.boundingSphere.center)),_t.applyMatrix4(A.matrixWorld).applyMatrix4(gt)),Array.isArray(Ht)){const Lt=Dt.groups;for(let ce=0,ue=Lt.length;ce<ue;ce++){const Jt=Lt[ce],Ie=Ht[Jt.materialIndex];Ie&&Ie.visible&&g.push(A,Dt,Ie,ot,_t.z,Jt)}}else Ht.visible&&g.push(A,Dt,Ht,ot,_t.z,null)}}const Ct=A.children;for(let Dt=0,Ht=Ct.length;Dt<Ht;Dt++)yp(Ct[Dt],Y,ot,rt)}function hy(A,Y,ot,rt){const Z=A.opaque,Ct=A.transmissive,Dt=A.transparent;m.setupLightsView(ot),Q===!0&&Bt.setGlobalState(b.clippingPlanes,ot),rt&&Tt.viewport(C.copy(rt)),Z.length>0&&zl(Z,Y,ot),Ct.length>0&&zl(Ct,Y,ot),Dt.length>0&&zl(Dt,Y,ot),Tt.buffers.depth.setTest(!0),Tt.buffers.depth.setMask(!0),Tt.buffers.color.setMask(!0),Tt.setPolygonOffset(!1)}function fy(A,Y,ot,rt){if((ot.isScene===!0?ot.overrideMaterial:null)!==null)return;m.state.transmissionRenderTarget[rt.id]===void 0&&(m.state.transmissionRenderTarget[rt.id]=new Ir(1,1,{generateMipmaps:!0,type:Wt.has("EXT_color_buffer_half_float")||Wt.has("EXT_color_buffer_float")?gu:ao,minFilter:xr,samples:4,stencilBuffer:o,resolveDepthBuffer:!1,resolveStencilBuffer:!1,colorSpace:$e.workingColorSpace}));const Ct=m.state.transmissionRenderTarget[rt.id],Dt=rt.viewport||C;Ct.setSize(Dt.z*b.transmissionResolutionScale,Dt.w*b.transmissionResolutionScale);const Ht=b.getRenderTarget();b.setRenderTarget(Ct),b.getClearColor(D),$=b.getClearAlpha(),$<1&&b.setClearColor(16777215,.5),b.clear(),Zt&&bt.render(ot);const Lt=b.toneMapping;b.toneMapping=Ao;const ce=rt.viewport;if(rt.viewport!==void 0&&(rt.viewport=void 0),m.setupLightsView(rt),Q===!0&&Bt.setGlobalState(b.clippingPlanes,rt),zl(A,ot,rt),oe.updateMultisampleRenderTarget(Ct),oe.updateRenderTargetMipmap(Ct),Wt.has("WEBGL_multisampled_render_to_texture")===!1){let ue=!1;for(let Jt=0,Ie=Y.length;Jt<Ie;Jt++){const ze=Y[Jt],ln=ze.object,hn=ze.geometry,De=ze.material,te=ze.group;if(De.side===eo&&ln.layers.test(rt.layers)){const Vn=De.side;De.side=Ss,De.needsUpdate=!0,py(ln,ot,rt,hn,De,te),De.side=Vn,De.needsUpdate=!0,ue=!0}}ue===!0&&(oe.updateMultisampleRenderTarget(Ct),oe.updateRenderTargetMipmap(Ct))}b.setRenderTarget(Ht),b.setClearColor(D,$),ce!==void 0&&(rt.viewport=ce),b.toneMapping=Lt}function zl(A,Y,ot){const rt=Y.isScene===!0?Y.overrideMaterial:null;for(let Z=0,Ct=A.length;Z<Ct;Z++){const Dt=A[Z],Ht=Dt.object,Lt=Dt.geometry,ce=Dt.group;let ue=Dt.material;ue.allowOverride===!0&&rt!==null&&(ue=rt),Ht.layers.test(ot.layers)&&py(Ht,Y,ot,Lt,ue,ce)}}function py(A,Y,ot,rt,Z,Ct){A.onBeforeRender(b,Y,ot,rt,Z,Ct),A.modelViewMatrix.multiplyMatrices(ot.matrixWorldInverse,A.matrixWorld),A.normalMatrix.getNormalMatrix(A.modelViewMatrix),Z.onBeforeRender(b,Y,ot,rt,A,Ct),Z.transparent===!0&&Z.side===eo&&Z.forceSinglePass===!1?(Z.side=Ss,Z.needsUpdate=!0,b.renderBufferDirect(ot,Y,rt,Z,A,Ct),Z.side=Po,Z.needsUpdate=!0,b.renderBufferDirect(ot,Y,rt,Z,A,Ct),Z.side=eo):b.renderBufferDirect(ot,Y,rt,Z,A,Ct),A.onAfterRender(b,Y,ot,rt,Z,Ct)}function Vl(A,Y,ot){Y.isScene!==!0&&(Y=Pt);const rt=$t.get(A),Z=m.state.lights,Ct=m.state.shadowsArray,Dt=Z.state.version,Ht=pt.getParameters(A,Z.state,Ct,Y,ot),Lt=pt.getProgramCacheKey(Ht);let ce=rt.programs;rt.environment=A.isMeshStandardMaterial?Y.environment:null,rt.fog=Y.fog,rt.envMap=(A.isMeshStandardMaterial?L:ke).get(A.envMap||rt.environment),rt.envMapRotation=rt.environment!==null&&A.envMap===null?Y.environmentRotation:A.envMapRotation,ce===void 0&&(A.addEventListener("dispose",Gt),ce=new Map,rt.programs=ce);let ue=ce.get(Lt);if(ue!==void 0){if(rt.currentProgram===ue&&rt.lightsStateVersion===Dt)return gy(A,Ht),ue}else Ht.uniforms=pt.getUniforms(A),A.onBeforeCompile(Ht,b),ue=pt.acquireProgram(Ht,Lt),ce.set(Lt,ue),rt.uniforms=Ht.uniforms;const Jt=rt.uniforms;return(!A.isShaderMaterial&&!A.isRawShaderMaterial||A.clipping===!0)&&(Jt.clippingPlanes=Bt.uniform),gy(A,Ht),rt.needsLights=s3(A),rt.lightsStateVersion=Dt,rt.needsLights&&(Jt.ambientLightColor.value=Z.state.ambient,Jt.lightProbe.value=Z.state.probe,Jt.directionalLights.value=Z.state.directional,Jt.directionalLightShadows.value=Z.state.directionalShadow,Jt.spotLights.value=Z.state.spot,Jt.spotLightShadows.value=Z.state.spotShadow,Jt.rectAreaLights.value=Z.state.rectArea,Jt.ltc_1.value=Z.state.rectAreaLTC1,Jt.ltc_2.value=Z.state.rectAreaLTC2,Jt.pointLights.value=Z.state.point,Jt.pointLightShadows.value=Z.state.pointShadow,Jt.hemisphereLights.value=Z.state.hemi,Jt.directionalShadowMap.value=Z.state.directionalShadowMap,Jt.directionalShadowMatrix.value=Z.state.directionalShadowMatrix,Jt.spotShadowMap.value=Z.state.spotShadowMap,Jt.spotLightMatrix.value=Z.state.spotLightMatrix,Jt.spotLightMap.value=Z.state.spotLightMap,Jt.pointShadowMap.value=Z.state.pointShadowMap,Jt.pointShadowMatrix.value=Z.state.pointShadowMatrix),rt.currentProgram=ue,rt.uniformsList=null,ue}function my(A){if(A.uniformsList===null){const Y=A.currentProgram.getUniforms();A.uniformsList=$d.seqWithValue(Y.seq,A.uniforms)}return A.uniformsList}function gy(A,Y){const ot=$t.get(A);ot.outputColorSpace=Y.outputColorSpace,ot.batching=Y.batching,ot.batchingColor=Y.batchingColor,ot.instancing=Y.instancing,ot.instancingColor=Y.instancingColor,ot.instancingMorph=Y.instancingMorph,ot.skinning=Y.skinning,ot.morphTargets=Y.morphTargets,ot.morphNormals=Y.morphNormals,ot.morphColors=Y.morphColors,ot.morphTargetsCount=Y.morphTargetsCount,ot.numClippingPlanes=Y.numClippingPlanes,ot.numIntersection=Y.numClipIntersection,ot.vertexAlphas=Y.vertexAlphas,ot.vertexTangents=Y.vertexTangents,ot.toneMapping=Y.toneMapping}function e3(A,Y,ot,rt,Z){Y.isScene!==!0&&(Y=Pt),oe.resetTextureUnits();const Ct=Y.fog,Dt=rt.isMeshStandardMaterial?Y.environment:null,Ht=I===null?b.outputColorSpace:I.isXRRenderTarget===!0?I.texture.colorSpace:Va,Lt=(rt.isMeshStandardMaterial?L:ke).get(rt.envMap||Dt),ce=rt.vertexColors===!0&&!!ot.attributes.color&&ot.attributes.color.itemSize===4,ue=!!ot.attributes.tangent&&(!!rt.normalMap||rt.anisotropy>0),Jt=!!ot.morphAttributes.position,Ie=!!ot.morphAttributes.normal,ze=!!ot.morphAttributes.color;let ln=Ao;rt.toneMapped&&(I===null||I.isXRRenderTarget===!0)&&(ln=b.toneMapping);const hn=ot.morphAttributes.position||ot.morphAttributes.normal||ot.morphAttributes.color,De=hn!==void 0?hn.length:0,te=$t.get(rt),Vn=m.state.lights;if(Q===!0&&(ht===!0||A!==v)){const ls=A===v&&rt.id===S;Bt.setState(rt,A,ls)}let Le=!1;rt.version===te.__version?(te.needsLights&&te.lightsStateVersion!==Vn.state.version||te.outputColorSpace!==Ht||Z.isBatchedMesh&&te.batching===!1||!Z.isBatchedMesh&&te.batching===!0||Z.isBatchedMesh&&te.batchingColor===!0&&Z.colorTexture===null||Z.isBatchedMesh&&te.batchingColor===!1&&Z.colorTexture!==null||Z.isInstancedMesh&&te.instancing===!1||!Z.isInstancedMesh&&te.instancing===!0||Z.isSkinnedMesh&&te.skinning===!1||!Z.isSkinnedMesh&&te.skinning===!0||Z.isInstancedMesh&&te.instancingColor===!0&&Z.instanceColor===null||Z.isInstancedMesh&&te.instancingColor===!1&&Z.instanceColor!==null||Z.isInstancedMesh&&te.instancingMorph===!0&&Z.morphTexture===null||Z.isInstancedMesh&&te.instancingMorph===!1&&Z.morphTexture!==null||te.envMap!==Lt||rt.fog===!0&&te.fog!==Ct||te.numClippingPlanes!==void 0&&(te.numClippingPlanes!==Bt.numPlanes||te.numIntersection!==Bt.numIntersection)||te.vertexAlphas!==ce||te.vertexTangents!==ue||te.morphTargets!==Jt||te.morphNormals!==Ie||te.morphColors!==ze||te.toneMapping!==ln||te.morphTargetsCount!==De)&&(Le=!0):(Le=!0,te.__version=rt.version);let ri=te.currentProgram;Le===!0&&(ri=Vl(rt,Y,Z));let ea=!1,Rs=!1,Sc=!1;const on=ri.getUniforms(),Os=te.uniforms;if(Tt.useProgram(ri.program)&&(ea=!0,Rs=!0,Sc=!0),rt.id!==S&&(S=rt.id,Rs=!0),ea||v!==A){Tt.buffers.depth.getReversed()?(dt.copy(A.projectionMatrix),tR(dt),eR(dt),on.setValue(U,"projectionMatrix",dt)):on.setValue(U,"projectionMatrix",A.projectionMatrix),on.setValue(U,"viewMatrix",A.matrixWorldInverse);const ys=on.map.cameraPosition;ys!==void 0&&ys.setValue(U,St.setFromMatrixPosition(A.matrixWorld)),Qt.logarithmicDepthBuffer&&on.setValue(U,"logDepthBufFC",2/(Math.log(A.far+1)/Math.LN2)),(rt.isMeshPhongMaterial||rt.isMeshToonMaterial||rt.isMeshLambertMaterial||rt.isMeshBasicMaterial||rt.isMeshStandardMaterial||rt.isShaderMaterial)&&on.setValue(U,"isOrthographic",A.isOrthographicCamera===!0),v!==A&&(v=A,Rs=!0,Sc=!0)}if(Z.isSkinnedMesh){on.setOptional(U,Z,"bindMatrix"),on.setOptional(U,Z,"bindMatrixInverse");const ls=Z.skeleton;ls&&(ls.boneTexture===null&&ls.computeBoneTexture(),on.setValue(U,"boneTexture",ls.boneTexture,oe))}Z.isBatchedMesh&&(on.setOptional(U,Z,"batchingTexture"),on.setValue(U,"batchingTexture",Z._matricesTexture,oe),on.setOptional(U,Z,"batchingIdTexture"),on.setValue(U,"batchingIdTexture",Z._indirectTexture,oe),on.setOptional(U,Z,"batchingColorTexture"),Z._colorsTexture!==null&&on.setValue(U,"batchingColorTexture",Z._colorsTexture,oe));const Us=ot.morphAttributes;if((Us.position!==void 0||Us.normal!==void 0||Us.color!==void 0)&&Ft.update(Z,ot,ri),(Rs||te.receiveShadow!==Z.receiveShadow)&&(te.receiveShadow=Z.receiveShadow,on.setValue(U,"receiveShadow",Z.receiveShadow)),rt.isMeshGouraudMaterial&&rt.envMap!==null&&(Os.envMap.value=Lt,Os.flipEnvMap.value=Lt.isCubeTexture&&Lt.isRenderTargetTexture===!1?-1:1),rt.isMeshStandardMaterial&&rt.envMap===null&&Y.environment!==null&&(Os.envMapIntensity.value=Y.environmentIntensity),Rs&&(on.setValue(U,"toneMappingExposure",b.toneMappingExposure),te.needsLights&&n3(Os,Sc),Ct&&rt.fog===!0&&lt.refreshFogUniforms(Os,Ct),lt.refreshMaterialUniforms(Os,rt,P,B,m.state.transmissionRenderTarget[A.id]),$d.upload(U,my(te),Os,oe)),rt.isShaderMaterial&&rt.uniformsNeedUpdate===!0&&($d.upload(U,my(te),Os,oe),rt.uniformsNeedUpdate=!1),rt.isSpriteMaterial&&on.setValue(U,"center",Z.center),on.setValue(U,"modelViewMatrix",Z.modelViewMatrix),on.setValue(U,"normalMatrix",Z.normalMatrix),on.setValue(U,"modelMatrix",Z.matrixWorld),rt.isShaderMaterial||rt.isRawShaderMaterial){const ls=rt.uniformsGroups;for(let ys=0,bp=ls.length;ys<bp;ys++){const tr=ls[ys];H.update(tr,ri),H.bind(tr,ri)}}return ri}function n3(A,Y){A.ambientLightColor.needsUpdate=Y,A.lightProbe.needsUpdate=Y,A.directionalLights.needsUpdate=Y,A.directionalLightShadows.needsUpdate=Y,A.pointLights.needsUpdate=Y,A.pointLightShadows.needsUpdate=Y,A.spotLights.needsUpdate=Y,A.spotLightShadows.needsUpdate=Y,A.rectAreaLights.needsUpdate=Y,A.hemisphereLights.needsUpdate=Y}function s3(A){return A.isMeshLambertMaterial||A.isMeshToonMaterial||A.isMeshPhongMaterial||A.isMeshStandardMaterial||A.isShadowMaterial||A.isShaderMaterial&&A.lights===!0}this.getActiveCubeFace=function(){return T},this.getActiveMipmapLevel=function(){return E},this.getRenderTarget=function(){return I},this.setRenderTargetTextures=function(A,Y,ot){const rt=$t.get(A);rt.__autoAllocateDepthBuffer=A.resolveDepthBuffer===!1,rt.__autoAllocateDepthBuffer===!1&&(rt.__useRenderToTexture=!1),$t.get(A.texture).__webglTexture=Y,$t.get(A.depthTexture).__webglTexture=rt.__autoAllocateDepthBuffer?void 0:ot,rt.__hasExternalTextures=!0},this.setRenderTargetFramebuffer=function(A,Y){const ot=$t.get(A);ot.__webglFramebuffer=Y,ot.__useDefaultFramebuffer=Y===void 0};const i3=U.createFramebuffer();this.setRenderTarget=function(A,Y=0,ot=0){I=A,T=Y,E=ot;let rt=!0,Z=null,Ct=!1,Dt=!1;if(A){const Lt=$t.get(A);if(Lt.__useDefaultFramebuffer!==void 0)Tt.bindFramebuffer(U.FRAMEBUFFER,null),rt=!1;else if(Lt.__webglFramebuffer===void 0)oe.setupRenderTarget(A);else if(Lt.__hasExternalTextures)oe.rebindTextures(A,$t.get(A.texture).__webglTexture,$t.get(A.depthTexture).__webglTexture);else if(A.depthBuffer){const Jt=A.depthTexture;if(Lt.__boundDepthTexture!==Jt){if(Jt!==null&&$t.has(Jt)&&(A.width!==Jt.image.width||A.height!==Jt.image.height))throw new Error("WebGLRenderTarget: Attached DepthTexture is initialized to the incorrect size.");oe.setupDepthRenderbuffer(A)}}const ce=A.texture;(ce.isData3DTexture||ce.isDataArrayTexture||ce.isCompressedArrayTexture)&&(Dt=!0);const ue=$t.get(A).__webglFramebuffer;A.isWebGLCubeRenderTarget?(Array.isArray(ue[Y])?Z=ue[Y][ot]:Z=ue[Y],Ct=!0):A.samples>0&&oe.useMultisampledRTT(A)===!1?Z=$t.get(A).__webglMultisampledFramebuffer:Array.isArray(ue)?Z=ue[ot]:Z=ue,C.copy(A.viewport),M.copy(A.scissor),N=A.scissorTest}else C.copy(J).multiplyScalar(P).floor(),M.copy(it).multiplyScalar(P).floor(),N=ut;if(ot!==0&&(Z=i3),Tt.bindFramebuffer(U.FRAMEBUFFER,Z)&&rt&&Tt.drawBuffers(A,Z),Tt.viewport(C),Tt.scissor(M),Tt.setScissorTest(N),Ct){const Lt=$t.get(A.texture);U.framebufferTexture2D(U.FRAMEBUFFER,U.COLOR_ATTACHMENT0,U.TEXTURE_CUBE_MAP_POSITIVE_X+Y,Lt.__webglTexture,ot)}else if(Dt){const Lt=$t.get(A.texture),ce=Y;U.framebufferTextureLayer(U.FRAMEBUFFER,U.COLOR_ATTACHMENT0,Lt.__webglTexture,ot,ce)}else if(A!==null&&ot!==0){const Lt=$t.get(A.texture);U.framebufferTexture2D(U.FRAMEBUFFER,U.COLOR_ATTACHMENT0,U.TEXTURE_2D,Lt.__webglTexture,ot)}S=-1},this.readRenderTargetPixels=function(A,Y,ot,rt,Z,Ct,Dt,Ht=0){if(!(A&&A.isWebGLRenderTarget)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");return}let Lt=$t.get(A).__webglFramebuffer;if(A.isWebGLCubeRenderTarget&&Dt!==void 0&&(Lt=Lt[Dt]),Lt){Tt.bindFramebuffer(U.FRAMEBUFFER,Lt);try{const ce=A.textures[Ht],ue=ce.format,Jt=ce.type;if(!Qt.textureFormatReadable(ue)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");return}if(!Qt.textureTypeReadable(Jt)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");return}Y>=0&&Y<=A.width-rt&&ot>=0&&ot<=A.height-Z&&(A.textures.length>1&&U.readBuffer(U.COLOR_ATTACHMENT0+Ht),U.readPixels(Y,ot,rt,Z,Rt.convert(ue),Rt.convert(Jt),Ct))}finally{const ce=I!==null?$t.get(I).__webglFramebuffer:null;Tt.bindFramebuffer(U.FRAMEBUFFER,ce)}}},this.readRenderTargetPixelsAsync=async function(A,Y,ot,rt,Z,Ct,Dt,Ht=0){if(!(A&&A.isWebGLRenderTarget))throw new Error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");let Lt=$t.get(A).__webglFramebuffer;if(A.isWebGLCubeRenderTarget&&Dt!==void 0&&(Lt=Lt[Dt]),Lt)if(Y>=0&&Y<=A.width-rt&&ot>=0&&ot<=A.height-Z){Tt.bindFramebuffer(U.FRAMEBUFFER,Lt);const ce=A.textures[Ht],ue=ce.format,Jt=ce.type;if(!Qt.textureFormatReadable(ue))throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: renderTarget is not in RGBA or implementation defined format.");if(!Qt.textureTypeReadable(Jt))throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: renderTarget is not in UnsignedByteType or implementation defined type.");const Ie=U.createBuffer();U.bindBuffer(U.PIXEL_PACK_BUFFER,Ie),U.bufferData(U.PIXEL_PACK_BUFFER,Ct.byteLength,U.STREAM_READ),A.textures.length>1&&U.readBuffer(U.COLOR_ATTACHMENT0+Ht),U.readPixels(Y,ot,rt,Z,Rt.convert(ue),Rt.convert(Jt),0);const ze=I!==null?$t.get(I).__webglFramebuffer:null;Tt.bindFramebuffer(U.FRAMEBUFFER,ze);const ln=U.fenceSync(U.SYNC_GPU_COMMANDS_COMPLETE,0);return U.flush(),await Q3(U,ln,4),U.bindBuffer(U.PIXEL_PACK_BUFFER,Ie),U.getBufferSubData(U.PIXEL_PACK_BUFFER,0,Ct),U.deleteBuffer(Ie),U.deleteSync(ln),Ct}else throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: requested read bounds are out of range.")},this.copyFramebufferToTexture=function(A,Y=null,ot=0){const rt=Math.pow(2,-ot),Z=Math.floor(A.image.width*rt),Ct=Math.floor(A.image.height*rt),Dt=Y!==null?Y.x:0,Ht=Y!==null?Y.y:0;oe.setTexture2D(A,0),U.copyTexSubImage2D(U.TEXTURE_2D,ot,0,0,Dt,Ht,Z,Ct),Tt.unbindTexture()};const o3=U.createFramebuffer(),r3=U.createFramebuffer();this.copyTextureToTexture=function(A,Y,ot=null,rt=null,Z=0,Ct=null){Ct===null&&(Z!==0?(Na("WebGLRenderer: copyTextureToTexture function signature has changed to support src and dst mipmap levels."),Ct=Z,Z=0):Ct=0);let Dt,Ht,Lt,ce,ue,Jt,Ie,ze,ln;const hn=A.isCompressedTexture?A.mipmaps[Ct]:A.image;if(ot!==null)Dt=ot.max.x-ot.min.x,Ht=ot.max.y-ot.min.y,Lt=ot.isBox3?ot.max.z-ot.min.z:1,ce=ot.min.x,ue=ot.min.y,Jt=ot.isBox3?ot.min.z:0;else{const Us=Math.pow(2,-Z);Dt=Math.floor(hn.width*Us),Ht=Math.floor(hn.height*Us),A.isDataArrayTexture?Lt=hn.depth:A.isData3DTexture?Lt=Math.floor(hn.depth*Us):Lt=1,ce=0,ue=0,Jt=0}rt!==null?(Ie=rt.x,ze=rt.y,ln=rt.z):(Ie=0,ze=0,ln=0);const De=Rt.convert(Y.format),te=Rt.convert(Y.type);let Vn;Y.isData3DTexture?(oe.setTexture3D(Y,0),Vn=U.TEXTURE_3D):Y.isDataArrayTexture||Y.isCompressedArrayTexture?(oe.setTexture2DArray(Y,0),Vn=U.TEXTURE_2D_ARRAY):(oe.setTexture2D(Y,0),Vn=U.TEXTURE_2D),U.pixelStorei(U.UNPACK_FLIP_Y_WEBGL,Y.flipY),U.pixelStorei(U.UNPACK_PREMULTIPLY_ALPHA_WEBGL,Y.premultiplyAlpha),U.pixelStorei(U.UNPACK_ALIGNMENT,Y.unpackAlignment);const Le=U.getParameter(U.UNPACK_ROW_LENGTH),ri=U.getParameter(U.UNPACK_IMAGE_HEIGHT),ea=U.getParameter(U.UNPACK_SKIP_PIXELS),Rs=U.getParameter(U.UNPACK_SKIP_ROWS),Sc=U.getParameter(U.UNPACK_SKIP_IMAGES);U.pixelStorei(U.UNPACK_ROW_LENGTH,hn.width),U.pixelStorei(U.UNPACK_IMAGE_HEIGHT,hn.height),U.pixelStorei(U.UNPACK_SKIP_PIXELS,ce),U.pixelStorei(U.UNPACK_SKIP_ROWS,ue),U.pixelStorei(U.UNPACK_SKIP_IMAGES,Jt);const on=A.isDataArrayTexture||A.isData3DTexture,Os=Y.isDataArrayTexture||Y.isData3DTexture;if(A.isDepthTexture){const Us=$t.get(A),ls=$t.get(Y),ys=$t.get(Us.__renderTarget),bp=$t.get(ls.__renderTarget);Tt.bindFramebuffer(U.READ_FRAMEBUFFER,ys.__webglFramebuffer),Tt.bindFramebuffer(U.DRAW_FRAMEBUFFER,bp.__webglFramebuffer);for(let tr=0;tr<Lt;tr++)on&&(U.framebufferTextureLayer(U.READ_FRAMEBUFFER,U.COLOR_ATTACHMENT0,$t.get(A).__webglTexture,Z,Jt+tr),U.framebufferTextureLayer(U.DRAW_FRAMEBUFFER,U.COLOR_ATTACHMENT0,$t.get(Y).__webglTexture,Ct,ln+tr)),U.blitFramebuffer(ce,ue,Dt,Ht,Ie,ze,Dt,Ht,U.DEPTH_BUFFER_BIT,U.NEAREST);Tt.bindFramebuffer(U.READ_FRAMEBUFFER,null),Tt.bindFramebuffer(U.DRAW_FRAMEBUFFER,null)}else if(Z!==0||A.isRenderTargetTexture||$t.has(A)){const Us=$t.get(A),ls=$t.get(Y);Tt.bindFramebuffer(U.READ_FRAMEBUFFER,o3),Tt.bindFramebuffer(U.DRAW_FRAMEBUFFER,r3);for(let ys=0;ys<Lt;ys++)on?U.framebufferTextureLayer(U.READ_FRAMEBUFFER,U.COLOR_ATTACHMENT0,Us.__webglTexture,Z,Jt+ys):U.framebufferTexture2D(U.READ_FRAMEBUFFER,U.COLOR_ATTACHMENT0,U.TEXTURE_2D,Us.__webglTexture,Z),Os?U.framebufferTextureLayer(U.DRAW_FRAMEBUFFER,U.COLOR_ATTACHMENT0,ls.__webglTexture,Ct,ln+ys):U.framebufferTexture2D(U.DRAW_FRAMEBUFFER,U.COLOR_ATTACHMENT0,U.TEXTURE_2D,ls.__webglTexture,Ct),Z!==0?U.blitFramebuffer(ce,ue,Dt,Ht,Ie,ze,Dt,Ht,U.COLOR_BUFFER_BIT,U.NEAREST):Os?U.copyTexSubImage3D(Vn,Ct,Ie,ze,ln+ys,ce,ue,Dt,Ht):U.copyTexSubImage2D(Vn,Ct,Ie,ze,ce,ue,Dt,Ht);Tt.bindFramebuffer(U.READ_FRAMEBUFFER,null),Tt.bindFramebuffer(U.DRAW_FRAMEBUFFER,null)}else Os?A.isDataTexture||A.isData3DTexture?U.texSubImage3D(Vn,Ct,Ie,ze,ln,Dt,Ht,Lt,De,te,hn.data):Y.isCompressedArrayTexture?U.compressedTexSubImage3D(Vn,Ct,Ie,ze,ln,Dt,Ht,Lt,De,hn.data):U.texSubImage3D(Vn,Ct,Ie,ze,ln,Dt,Ht,Lt,De,te,hn):A.isDataTexture?U.texSubImage2D(U.TEXTURE_2D,Ct,Ie,ze,Dt,Ht,De,te,hn.data):A.isCompressedTexture?U.compressedTexSubImage2D(U.TEXTURE_2D,Ct,Ie,ze,hn.width,hn.height,De,hn.data):U.texSubImage2D(U.TEXTURE_2D,Ct,Ie,ze,Dt,Ht,De,te,hn);U.pixelStorei(U.UNPACK_ROW_LENGTH,Le),U.pixelStorei(U.UNPACK_IMAGE_HEIGHT,ri),U.pixelStorei(U.UNPACK_SKIP_PIXELS,ea),U.pixelStorei(U.UNPACK_SKIP_ROWS,Rs),U.pixelStorei(U.UNPACK_SKIP_IMAGES,Sc),Ct===0&&Y.generateMipmaps&&U.generateMipmap(Vn),Tt.unbindTexture()},this.copyTextureToTexture3D=function(A,Y,ot=null,rt=null,Z=0){return Na('WebGLRenderer: copyTextureToTexture3D function has been deprecated. Use "copyTextureToTexture" instead.'),this.copyTextureToTexture(A,Y,ot,rt,Z)},this.initRenderTarget=function(A){$t.get(A).__webglFramebuffer===void 0&&oe.setupRenderTarget(A)},this.initTexture=function(A){A.isCubeTexture?oe.setTextureCube(A,0):A.isData3DTexture?oe.setTexture3D(A,0):A.isDataArrayTexture||A.isCompressedArrayTexture?oe.setTexture2DArray(A,0):oe.setTexture2D(A,0),Tt.unbindTexture()},this.resetState=function(){T=0,E=0,I=null,Tt.reset(),le.reset()},typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}get coordinateSystem(){return so}get outputColorSpace(){return this._outputColorSpace}set outputColorSpace(t){this._outputColorSpace=t;const e=this.getContext();e.drawingBufferColorSpace=$e._getDrawingBufferColorSpace(t),e.unpackColorSpace=$e._getUnpackColorSpace()}}var Hn={};Hn.d=(n,t)=>{for(var e in t)Hn.o(t,e)&&!Hn.o(n,e)&&Object.defineProperty(n,e,{enumerable:!0,get:t[e]})};Hn.o=(n,t)=>Object.prototype.hasOwnProperty.call(n,t);Hn.r=n=>{typeof Symbol<"u"&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})};var Ps={};Hn.d(Ps,{g1:()=>Nh,gO:()=>qc,km:()=>Ah,zV:()=>su,ol:()=>E1,uM:()=>kh,N1:()=>l2,xv:()=>T1,PH:()=>$h,UH:()=>Dh,ZP:()=>s9,Vx:()=>d2});var Ah={};Hn.r(Ah);Hn.d(Ah,{COLUMN:()=>Fh,COLUMN_REVERSE:()=>Wv,ROW:()=>Xc,ROW_REVERSE:()=>Vv,contentDirection:()=>Gv});var Nh={};Hn.r(Nh);Hn.d(Nh,{CENTER:()=>h1,END:()=>f1,START:()=>d1,STRETCH:()=>Hv,alignItems:()=>Xv,warnAboutDeprecatedAlignItems:()=>qv});var kh={};Hn.r(kh);Hn.d(kh,{CENTER:()=>m1,END:()=>g1,SPACE_AROUND:()=>x1,SPACE_BETWEEN:()=>y1,SPACE_EVENLY:()=>b1,START:()=>p1,justifyContent:()=>jv});var Dh={};Hn.r(Dh);Hn.d(Dh,{NORMAL:()=>Ph,NOWRAP:()=>vu,PRE:()=>Lh,PRE_LINE:()=>rc,PRE_WRAP:()=>Oh,WHITE_CHARS:()=>a0,collapseWhitespaceOnInlines:()=>Jv,collapseWhitespaceOnString:()=>Kv,newlineBreakability:()=>Yv,shouldBreak:()=>Zv});var $h={};Hn.r($h);Hn.d($h,{CENTER:()=>v1,JUSTIFY:()=>_1,JUSTIFY_CENTER:()=>s2,JUSTIFY_LEFT:()=>n2,JUSTIFY_RIGHT:()=>Zd,LEFT:()=>t2,RIGHT:()=>e2,textAlign:()=>i2});var MD=n=>{var t={};return Hn.d(t,n),t};const Te=MD({BufferAttribute:()=>Js,BufferGeometry:()=>Wo,CanvasTexture:()=>NR,Color:()=>be,FileLoader:()=>LR,LinearFilter:()=>mi,Mesh:()=>Ks,Object3D:()=>Ln,Plane:()=>Qi,PlaneGeometry:()=>wu,ShaderMaterial:()=>co,TextureLoader:()=>UR,Vector2:()=>xe,Vector3:()=>st}),Xc="row",Vv="row-reverse",Fh="column",Wv="column-reverse";function Gv(n,t,e,s){let i=e,o="getWidth",r="x",a="y";t.indexOf(Fh)===0&&(o="getHeight",r="y",a="x");for(let c=0;c<n.childrenBoxes.length;c++){const u=n.childrenBoxes[c],l=u.id,d=u[o](),h=u.margin||0;i+=h*s,n.childrenPos[l]={[r]:i+d/2*s,[a]:0},i+=s*(d+h)}}const d1="start",h1="center",f1="end",Hv="stretch";function Xv(n,t){const e=n.getAlignItems();AD.indexOf(e)===-1&&console.warn(`alignItems === '${e}' is not supported`);let s="getWidth",i="x";t.indexOf(Xc)===0&&(s="getHeight",i="y");const o=n[s]()/2-(n.padding||0);n.childrenBoxes.forEach(r=>{let a;switch(e){case f1:case"right":case"bottom":t.indexOf(Xc)===0?a=-o+r[s]()/2+(r.margin||0):a=o-r[s]()/2-(r.margin||0);break;case d1:case"left":case"top":t.indexOf(Xc)===0?a=o-r[s]()/2-(r.margin||0):a=-o+r[s]()/2+(r.margin||0);break}n.childrenPos[r.id][i]=a||0})}function qv(n){ND.indexOf(n)!==-1&&console.warn(`alignItems === '${n}' is deprecated and will be remove in 7.x.x. Fallback are 'start'|'end'`)}const AD=[d1,h1,f1,Hv,"top","right","bottom","left"],ND=["top","right","bottom","left"],p1="start",m1="center",g1="end",x1="space-around",y1="space-between",b1="space-evenly";function jv(n,t,e,s){const i=n.getJustifyContent();kD.indexOf(i)===-1&&console.warn(`justifyContent === '${i}' is not supported`);const o=t.indexOf("row")===0?"width":"height",r=n.getChildrenSideSum(o),c=(o==="width"?n.getInnerWidth():n.getInnerHeight())-r,u=e*2-r*Math.sign(e),l=DD(i,u),d=$D(n.childrenBoxes,c,i,s),h=t.indexOf("row")===0?"x":"y";n.childrenBoxes.forEach((f,p)=>{n.childrenPos[f.id][h]-=l-d[p]})}const kD=[p1,m1,g1,x1,y1,b1];function DD(n,t){switch(n){case g1:return t;case m1:return t/2}return 0}function $D(n,t,e,s){const i=Array(n.length).fill(0);if(t>0)switch(e){case y1:if(n.length>1){const o=t/(n.length-1)*s;i[0]=0;for(let r=1;r<n.length;r++)i[r]=o*r}break;case b1:if(n.length>1){const o=t/(n.length+1)*s;for(let r=0;r<n.length;r++)i[r]=o*(r+1)}break;case x1:if(n.length>1){const o=t/n.length*s,r=o/2;i[0]=r;for(let a=1;a<n.length;a++)i[a]=r+o*a}break}return i}function w1(n){return class extends n{constructor(e){super(e),this.isBoxComponent=!0,this.childrenPos={}}getInnerWidth(){const e=this.getContentDirection();switch(e){case"row":case"row-reverse":return this.width-(this.padding*2||0)||this.getChildrenSideSum("width");case"column":case"column-reverse":return this.getHighestChildSizeOn("width");default:console.error(`Invalid contentDirection : ${e}`);break}}getInnerHeight(){const e=this.getContentDirection();switch(e){case"row":case"row-reverse":return this.getHighestChildSizeOn("height");case"column":case"column-reverse":return this.height-(this.padding*2||0)||this.getChildrenSideSum("height");default:console.error(`Invalid contentDirection : ${e}`);break}}getChildrenSideSum(e){return this.childrenBoxes.reduce((s,i)=>{const o=i.margin*2||0,r=e==="width"?i.getWidth()+o:i.getHeight()+o;return s+r},0)}setPosFromParentRecords(){this.parentUI&&this.parentUI.childrenPos[this.id]&&(this.position.x=this.parentUI.childrenPos[this.id].x,this.position.y=this.parentUI.childrenPos[this.id].y)}computeChildrenPosition(){if(this.children.length>0){const e=this.getContentDirection();let s;switch(e){case Xc:s=-this.getInnerWidth()/2;break;case Vv:s=this.getInnerWidth()/2;break;case Fh:s=this.getInnerHeight()/2;break;case Wv:s=-this.getInnerHeight()/2;break}const i=-Math.sign(s);Gv(this,e,s,i),jv(this,e,s,i),Xv(this,e)}}getHighestChildSizeOn(e){return this.childrenBoxes.reduce((s,i)=>{const o=i.margin||0,r=e==="width"?i.getWidth()+o*2:i.getHeight()+o*2;return Math.max(s,r)},0)}getWidth(){return this.parentUI&&this.parentUI.getAlignItems()==="stretch"&&this.parentUI.getContentDirection().indexOf("column")!==-1?this.parentUI.getWidth()-(this.parentUI.padding*2||0):this.width||this.getInnerWidth()+(this.padding*2||0)}getHeight(){return this.parentUI&&this.parentUI.getAlignItems()==="stretch"&&this.parentUI.getContentDirection().indexOf("row")!==-1?this.parentUI.getHeight()-(this.parentUI.padding*2||0):this.height||this.getInnerHeight()+(this.padding*2||0)}}}const a0={"	":"	","\n":`
`,"\r":"\r"," ":" "},Ph="normal",vu="nowrap",Lh="pre",rc="pre-line",Oh="pre-wrap",Kv=function(n,t){switch(t){case vu:case Ph:n=n.replace(/\n/g," ");case rc:n=n.replace(/[ ]{2,}/g," ");break}return n},Yv=function(n){switch(n){case Lh:case Oh:case rc:return"mandatory"}},Zv=function(n,t,e,s){const i=n[t];switch(s.WHITESPACE){case Ph:case rc:case Oh:if(i.lineBreak==="mandatory")return!0;const o=i.kerning?i.kerning:0,r=i.xoffset?i.xoffset:0,a=i.xadvance?i.xadvance:i.width;if(e+a+r+o>s.INNER_WIDTH)return!0;const c=Qv(n,t,s);return FD(n[t-1],e,c,s);case Lh:return i.lineBreak==="mandatory";case vu:default:return!1}},Jv=function(n,t){const e=n[0],s=n[n.length-1];switch(t){case Oh:e.glyph&&e.glyph===`
`&&n.length>1&&wb([e],n[1]),s.glyph&&s.glyph===`
`&&n.length>1&&bb([s],n[n.length-2]);break;case rc:case vu:case Ph:let i=[],o;for(let r=0;r<n.length;r++){const a=n[r];if(a.glyph&&a0[a.glyph]&&n.length>r){i.push(a),o=n[r+1];continue}break}wb(i,o),i=[],o=null;for(let r=n.length-1;r>0;r--){const a=n[r];if(a.glyph&&a0[a.glyph]&&r>0){i.push(a),o=n[r-1];continue}break}bb(i,o);break;case Lh:break;default:return console.warn(`whiteSpace: '${t}' is not valid`),0}return e.offsetX};function bb(n,t){if(t)for(let e=0;e<n.length;e++){const s=n[e];s.width=0,s.height=0,s.offsetX=t.offsetX+t.width}}function wb(n,t){if(t)for(let e=0;e<n.length;e++){const s=n[e];s.width=0,s.height=0,s.offsetX=t.offsetX}}function Qv(n,t,e,s){if(s=s||0,!n[t])return s;const i=n[t],o=i.kerning?i.kerning:0,r=i.xoffset?i.xoffset:0,a=i.xadvance?i.xadvance:i.width;return i.lineBreak?s+a:Qv(n,t+1,e,s+a+e.LETTERSPACING+r+o)}function FD(n,t,e,s){return!n||!n.glyph||t+e<s.INNER_WIDTH?!1:s.BREAKON.indexOf(n.glyph)>-1}const t2="left",e2="right",v1="center",_1="justify",n2="justify-left",Zd="justify-right",s2="justify-center";function i2(n,t,e){for(let s=0;s<n.length;s++){const i=n[s],o=PD(i,t,e,s===n.length-1);for(let r=0;r<i.length;r++)i[r].offsetX+=o;i.x=o}if(t.indexOf(_1)===0)for(let s=0;s<n.length;s++){const i=n[s];if(t.indexOf("-")!==-1&&s===n.length-1)return;const o=e-i.width;if(o<=0)return;let r=0;for(let l=1;l<i.length-1;l++)r+=i[l].glyph===" "?1:0;const a=o/r;let c=1;t===Zd&&(i.reverse(),c=-1);let u=0;for(let l=1;l<=i.length-1;l++){const d=i[l];d.offsetX+=u*c,u+=d.glyph===" "?a:0}t===Zd&&i.reverse()}}const PD=(n,t,e,s)=>{switch(t){case n2:case _1:case t2:return-e/2;case Zd:case e2:return-n.width+e/2;case v1:return-n.width/2;case s2:return s?-n.width/2:-e/2;default:console.warn(`textAlign: '${t}' is not valid`)}};function o2(n){return class extends n{computeInlinesPosition(){const e=this.getWidth()-(this.padding*2||0),s=this.getHeight()-(this.padding*2||0),i=this.getJustifyContent(),o=this.getTextAlign(),r=this.getInterLine(),a=this.computeLines();a.interLine=r;const c=Math.abs(a.height),u=(()=>{switch(i){case"start":return s/2;case"end":return c-s/2;case"center":return c/2;default:console.warn(`justifyContent: '${i}' is not valid`)}})();a.forEach(l=>{l.y+=u,l.forEach(d=>{d.offsetY+=u})}),i2(a,o,e),this.lines=a}calculateBestFit(e){if(this.childrenInlines.length!==0)switch(e){case"grow":this.calculateGrowFit();break;case"shrink":this.calculateShrinkFit();break;case"auto":this.calculateAutoFit();break}}calculateGrowFit(){const e=this.getHeight()-(this.padding*2||0);let s=1;const i=.075,o=this.childrenInlines.find(l=>l.isText);let r=1,a=2,c=o._fitFontSize?o._fitFontSize/o.getFontSize():1,u;do if(u=this.calculateHeight(c),u>e){if(c<=r){this.childrenInlines.forEach(l=>{l.isInlineBlock||(l._fitFontSize=l.getFontSize())});break}a=c,c-=(a-r)/2}else{if(Math.abs(e-u)<i)break;Math.abs(c-a)<5e-10&&(a*=2),r=c,c+=(a-r)/2}while(++s<=10)}calculateShrinkFit(){const e=this.getHeight()-(this.padding*2||0);let s=1;const i=.075,o=this.childrenInlines.find(l=>l.isText);let r=0,a=1,c=o._fitFontSize?o._fitFontSize/o.getFontSize():1,u;do if(u=this.calculateHeight(c),u>e)a=c,c-=(a-r)/2;else{if(c>=a){this.childrenInlines.forEach(l=>{l.isInlineBlock||(l._fitFontSize=l.getFontSize())});break}if(Math.abs(e-u)<i)break;r=c,c+=(a-r)/2}while(++s<=10)}calculateAutoFit(){const e=this.getHeight()-(this.padding*2||0);let s=1;const i=.075,o=this.childrenInlines.find(l=>l.isText);let r=0,a=2,c=o._fitFontSize?o._fitFontSize/o.getFontSize():1,u;do if(u=this.calculateHeight(c),u>e)a=c,c-=(a-r)/2;else{if(Math.abs(e-u)<i)break;Math.abs(c-a)<5e-10&&(a*=2),r=c,c+=(a-r)/2}while(++s<=10)}computeLines(){const e=this.getWidth()-(this.padding*2||0),s=[[]];s.height=0;const i=this.getInterLine();this.childrenInlines.reduce((c,u)=>{if(!u.inlines)return;const l=u._fitFontSize||u.getFontSize(),d=u.isText?u.getLetterSpacing()*l:0,h=u.getWhiteSpace(),f=u.getBreakOn(),p={WHITESPACE:h,LETTERSPACING:d,BREAKON:f,INNER_WIDTH:e};return u.inlines.reduce((g,m,y,w)=>{const b=m.kerning?m.kerning:0,_=m.xoffset?m.xoffset:0,T=m.xadvance?m.xadvance:m.width;return Zv(w,y,g,p)?(s.push([m]),m.offsetX=_,m.width===0?0:T+d):(s[s.length-1].push(m),m.offsetX=g+_+b,g+T+b+d)},c)},0);let o=0,r=0,a=-i/2;return s.forEach(c=>{if(c.lineHeight=c.reduce((l,d)=>{const h=d.lineHeight!==void 0?d.lineHeight:d.height;return Math.max(l,h)},0),c.lineBase=c.reduce((l,d)=>{const h=d.lineBase!==void 0?d.lineBase:d.height;return Math.max(l,h)},0),c.width=0,c.height=c.lineHeight,c[0]){const l=this.getWhiteSpace(),d=Jv(c,l);c.forEach(h=>{h.offsetX-=d}),c.width=this.computeLineWidth(c),c.width>o&&(o=c.width),c.forEach(h=>{h.offsetY=a-h.height-h.anchor,h.lineHeight<c.lineHeight&&(h.offsetY-=c.lineBase-h.lineBase)}),c.y=a,r+=c.lineHeight+i,a=a-(c.lineHeight+i)}}),s.height=r,s.width=o,s}calculateHeight(e){this.childrenInlines.forEach(i=>{i.isInlineBlock||(i._fitFontSize=i.getFontSize()*e,i.calculateInlines(i._fitFontSize))});const s=this.computeLines();return Math.abs(s.height)}computeLineWidth(e){const s=e[0],i=e[e.length-1];return i.offsetX+i.width+s.offsetX}}}const LD=new Te.FileLoader,c0=[],Fd={},OD=new Te.TextureLoader,u0=[],Pd={},ss={};function UD(n,t){typeof t=="string"?zD(n,t):(ss[n.id]||(ss[n.id]={component:n}),C1(t),ss[n.id].json=t,n._updateFontFamily(t))}function BD(n,t){u0.indexOf(t)===-1&&(u0.push(t),OD.load(t,e=>{e.generateMipmaps=!1,e.minFilter=Te.LinearFilter,e.magFilter=Te.LinearFilter,Pd[t]=e;for(const s of Object.keys(ss))t===ss[s].textureURL&&ss[s].component._updateFontTexture(e)})),ss[n.id]||(ss[n.id]={component:n}),ss[n.id].textureURL=t,Pd[t]&&n._updateFontTexture(Pd[t])}function r2(n){const t=ss[n.id];return!t&&n.parentUI?r2(n.parentUI):t}function zD(n,t){c0.indexOf(t)===-1&&(c0.push(t),LD.load(t,e=>{const s=JSON.parse(e);C1(s),Fd[t]=s;for(const i of Object.keys(ss))t===ss[i].jsonURL&&ss[i].component._updateFontFamily(s)})),ss[n.id]||(ss[n.id]={component:n}),ss[n.id].jsonURL=t,Fd[t]&&n._updateFontFamily(Fd[t])}function C1(n){if(n._kernings)return;const t={};for(let e=0;e<n.kernings.length;e++){const s=n.kernings[e];if(s.amount===0)continue;const i=String.fromCharCode(s.first,s.second);t[i]=s.amount}n._kernings=t}function VD(n,t,e){e.generateMipmaps=!1,e.minFilter=Te.LinearFilter,e.magFilter=Te.LinearFilter,c0.push(n),Fd[n]=t,C1(t),e&&(u0.push(n),Pd[n]=e)}const WD={setFontFamily:UD,setFontTexture:BD,getFontOf:r2,addFont:VD},su=WD;class vr{static requestUpdate(t,e,s,i){t.traverse(o=>{o.isUI&&(this.requestedUpdates[o.id]?(e&&(this.requestedUpdates[o.id].updateParsing=!0),s&&(this.requestedUpdates[o.id].updateLayout=!0),i&&(this.requestedUpdates[o.id].updateInner=!0)):this.requestedUpdates[o.id]={updateParsing:e,updateLayout:s,updateInner:i,needCallback:e||s||i})})}static register(t){this.components.includes(t)||this.components.push(t)}static disposeOf(t){const e=this.components.indexOf(t);e>-1&&this.components.splice(e,1)}static update(){if(Object.keys(this.requestedUpdates).length>0){const t=this.components.filter(e=>!e.parentUI);t.forEach(e=>this.traverseParsing(e)),t.forEach(e=>this.traverseUpdates(e))}}static traverseParsing(t){const e=this.requestedUpdates[t.id];e&&e.updateParsing&&(t.parseParams(),e.updateParsing=!1),t.childrenUIs.forEach(s=>this.traverseParsing(s))}static traverseUpdates(t){const e=this.requestedUpdates[t.id];delete this.requestedUpdates[t.id],e&&e.updateLayout&&(e.updateLayout=!1,t.updateLayout()),e&&e.updateInner&&(e.updateInner=!1,t.updateInner()),t.childrenUIs.forEach(s=>{this.traverseUpdates(s)}),e&&e.needCallback&&t.onAfterUpdate()}}vr.components=[];vr.requestedUpdates={};const Wn={container:null,fontFamily:null,fontSize:.05,fontKerning:"normal",bestFit:"none",offset:.01,interLine:.01,breakOn:`- ,.:?!
`,whiteSpace:rc,contentDirection:Fh,alignItems:h1,justifyContent:p1,textAlign:v1,textType:"MSDF",fontColor:new Te.Color(16777215),fontOpacity:1,fontPXRange:4,fontSupersampling:!0,borderRadius:.01,borderWidth:0,borderColor:new Te.Color("black"),borderOpacity:1,backgroundSize:"cover",backgroundColor:new Te.Color(2236962),backgroundWhiteColor:new Te.Color(16777215),backgroundOpacity:.8,backgroundOpaqueOpacity:1,getDefaultTexture:GD,hiddenOverflow:!1,letterSpacing:0};let hd;function GD(){if(!hd){const n=document.createElement("canvas").getContext("2d");n.canvas.width=1,n.canvas.height=1,n.fillStyle="#ffffff",n.fillRect(0,0,1,1),hd=new Te.CanvasTexture(n.canvas),hd.isDefault=!0}return hd}function Uh(n){return class extends n{constructor(e){super(e),this.states={},this.currentState=void 0,this.isUI=!0,this.autoLayout=!0,this.childrenUIs=[],this.childrenBoxes=[],this.childrenTexts=[],this.childrenInlines=[],this.parentUI=null,this.addEventListener("added",this._rebuildParentUI),this.addEventListener("removed",this._rebuildParentUI)}getClippingPlanes(){const e=[];if(this.parentUI){if(this.isBlock&&this.parentUI.getHiddenOverflow()){const s=this.parentUI.getHeight()/2-(this.parentUI.padding||0),i=this.parentUI.getWidth()/2-(this.parentUI.padding||0),o=[new Te.Plane(new Te.Vector3(0,1,0),s),new Te.Plane(new Te.Vector3(0,-1,0),s),new Te.Plane(new Te.Vector3(1,0,0),i),new Te.Plane(new Te.Vector3(-1,0,0),i)];o.forEach(r=>{r.applyMatrix4(this.parent.matrixWorld)}),e.push(...o)}this.parentUI.parentUI&&e.push(...this.parentUI.getClippingPlanes())}return e}getHighestParent(){return this.parentUI?this.parent.getHighestParent():this}_getProperty(e){return this[e]===void 0&&this.parentUI?this.parent._getProperty(e):this[e]!==void 0?this[e]:Wn[e]}getFontSize(){return this._getProperty("fontSize")}getFontKerning(){return this._getProperty("fontKerning")}getLetterSpacing(){return this._getProperty("letterSpacing")}getFontTexture(){return this.fontTexture===void 0&&this.parentUI?this.parent._getProperty("fontTexture"):this.fontTexture!==void 0?this.fontTexture:Wn.getDefaultTexture()}getFontFamily(){return this._getProperty("fontFamily")}getBreakOn(){return this._getProperty("breakOn")}getWhiteSpace(){return this._getProperty("whiteSpace")}getTextAlign(){return this._getProperty("textAlign")}getTextType(){return this._getProperty("textType")}getFontColor(){return this._getProperty("fontColor")}getFontSupersampling(){return this._getProperty("fontSupersampling")}getFontOpacity(){return this._getProperty("fontOpacity")}getFontPXRange(){return this._getProperty("fontPXRange")}getBorderRadius(){return this._getProperty("borderRadius")}getBorderWidth(){return this._getProperty("borderWidth")}getBorderColor(){return this._getProperty("borderColor")}getBorderOpacity(){return this._getProperty("borderOpacity")}getContainer(){return!this.threeOBJ&&this.parent?this.parent.getContainer():this.threeOBJ?this:Wn.container}getParentsNumber(e){return e=e||0,this.parentUI?this.parentUI.getParentsNumber(e+1):e}getBackgroundOpacity(){return!this.backgroundOpacity&&this.backgroundOpacity!==0?Wn.backgroundOpacity:this.backgroundOpacity}getBackgroundColor(){return this.backgroundColor||Wn.backgroundColor}getBackgroundTexture(){return this.backgroundTexture||Wn.getDefaultTexture()}getAlignContent(){return this.alignContent||Wn.alignContent}getAlignItems(){return this.alignItems||Wn.alignItems}getContentDirection(){return this.contentDirection||Wn.contentDirection}getJustifyContent(){return this.justifyContent||Wn.justifyContent}getInterLine(){return this.interLine===void 0?Wn.interLine:this.interLine}getOffset(){return this.offset===void 0?Wn.offset:this.offset}getBackgroundSize(){return this.backgroundSize===void 0?Wn.backgroundSize:this.backgroundSize}getHiddenOverflow(){return this.hiddenOverflow===void 0?Wn.hiddenOverflow:this.hiddenOverflow}getBestFit(){return this.bestFit===void 0?Wn.bestFit:this.bestFit}_rebuildChildrenLists(){this.childrenUIs=this.children.filter(e=>e.isUI),this.childrenBoxes=this.children.filter(e=>e.isBoxComponent),this.childrenInlines=this.children.filter(e=>e.isInline),this.childrenTexts=this.children.filter(e=>e.isText)}_rebuildParentUI=()=>{this.parent&&this.parent.isUI?this.parentUI=this.parent:this.parentUI=null};add(){for(const s of Object.keys(arguments))arguments[s].isInline&&this.update(null,!0);const e=super.add(...arguments);return this._rebuildChildrenLists(),e}remove(){for(const s of Object.keys(arguments))arguments[s].isInline&&this.update(null,!0);const e=super.remove(...arguments);return this._rebuildChildrenLists(),e}update(e,s,i){vr.requestUpdate(this,e,s,i)}onAfterUpdate(){}_updateFontFamily(e){this.fontFamily=e,this.traverse(s=>{s.isUI&&s.update(!0,!0,!1)}),this.getHighestParent().update(!1,!0,!1)}_updateFontTexture(e){this.fontTexture=e,this.getHighestParent().update(!1,!0,!1)}set(e){let s,i,o;if(vr.register(this),!(!e||JSON.stringify(e)===JSON.stringify({}))){e.alignContent&&(e.alignItems=e.alignContent,e.textAlign||(e.textAlign=e.alignContent),console.warn("`alignContent` property has been deprecated, please rely on `alignItems` and `textAlign` instead."),delete e.alignContent),e.alignItems&&qv(e.alignItems);for(const r of Object.keys(e))if(this[r]!=e[r])switch(r){case"content":case"fontSize":case"fontKerning":case"breakOn":case"whiteSpace":this.isText&&(s=!0),i=!0,this[r]=e[r];break;case"bestFit":this.isBlock&&(s=!0,i=!0),this[r]=e[r];break;case"width":case"height":case"padding":(this.isInlineBlock||this.isBlock&&this.getBestFit()!="none")&&(s=!0),i=!0,this[r]=e[r];break;case"letterSpacing":case"interLine":this.isBlock&&this.getBestFit()!="none"&&(s=!0),i=!0,this[r]=e[r];break;case"margin":case"contentDirection":case"justifyContent":case"alignContent":case"alignItems":case"textAlign":case"textType":i=!0,this[r]=e[r];break;case"fontColor":case"fontOpacity":case"fontSupersampling":case"offset":case"backgroundColor":case"backgroundOpacity":case"backgroundTexture":case"backgroundSize":case"borderRadius":case"borderWidth":case"borderColor":case"borderOpacity":o=!0,this[r]=e[r];break;case"hiddenOverflow":this[r]=e[r];break}e.fontFamily&&su.setFontFamily(this,e.fontFamily),e.fontTexture&&su.setFontTexture(this,e.fontTexture),this.parentUI&&this.parentUI.getBestFit()!="none"&&this.parentUI.update(!0,!0,!1),this.update(s,i,o),i&&this.getHighestParent().update(!1,!0,!1)}}setupState(e){this.states[e.state]={attributes:e.attributes,onSet:e.onSet}}setState(e){const s=this.states[e];if(!s){console.warn(`state "${e}" does not exist within this component:`,this.name);return}e!==this.currentState&&(this.currentState=e,s.onSet&&s.onSet(),s.attributes&&this.set(s.attributes))}clear(){this.traverse(e=>{vr.disposeOf(e),e.material&&e.material.dispose(),e.geometry&&e.geometry.dispose()})}}}function S1(n){return class extends n{constructor(e){super(e),this.textUniforms={u_texture:{value:this.getFontTexture()},u_color:{value:this.getFontColor()},u_opacity:{value:this.getFontOpacity()},u_pxRange:{value:this.getFontPXRange()},u_useRGSS:{value:this.getFontSupersampling()}},this.backgroundUniforms={u_texture:{value:this.getBackgroundTexture()},u_color:{value:this.getBackgroundColor()},u_opacity:{value:this.getBackgroundOpacity()},u_backgroundMapping:{value:this.getBackgroundSize()},u_borderWidth:{value:this.getBorderWidth()},u_borderColor:{value:this.getBorderColor()},u_borderRadiusTopLeft:{value:this.getBorderRadius()},u_borderRadiusTopRight:{value:this.getBorderRadius()},u_borderRadiusBottomRight:{value:this.getBorderRadius()},u_borderRadiusBottomLeft:{value:this.getBorderRadius()},u_borderOpacity:{value:this.getBorderOpacity()},u_size:{value:new Te.Vector2(1,1)},u_tSize:{value:new Te.Vector2(1,1)}}}updateBackgroundMaterial(){this.backgroundUniforms.u_texture.value=this.getBackgroundTexture(),this.backgroundUniforms.u_tSize.value.set(this.backgroundUniforms.u_texture.value.image.width,this.backgroundUniforms.u_texture.value.image.height),this.size&&this.backgroundUniforms.u_size.value.copy(this.size),this.backgroundUniforms.u_texture.value.isDefault?(this.backgroundUniforms.u_color.value=this.getBackgroundColor(),this.backgroundUniforms.u_opacity.value=this.getBackgroundOpacity()):(this.backgroundUniforms.u_color.value=this.backgroundColor||Wn.backgroundWhiteColor,this.backgroundUniforms.u_opacity.value=!this.backgroundOpacity&&this.backgroundOpacity!==0?Wn.backgroundOpaqueOpacity:this.backgroundOpacity),this.backgroundUniforms.u_backgroundMapping.value=(()=>{switch(this.getBackgroundSize()){case"stretch":return 0;case"contain":return 1;case"cover":return 2}})();const e=this.getBorderRadius();this.backgroundUniforms.u_borderWidth.value=this.getBorderWidth(),this.backgroundUniforms.u_borderColor.value=this.getBorderColor(),this.backgroundUniforms.u_borderOpacity.value=this.getBorderOpacity(),Array.isArray(e)?(this.backgroundUniforms.u_borderRadiusTopLeft.value=e[0],this.backgroundUniforms.u_borderRadiusTopRight.value=e[1],this.backgroundUniforms.u_borderRadiusBottomRight.value=e[2],this.backgroundUniforms.u_borderRadiusBottomLeft.value=e[3]):(this.backgroundUniforms.u_borderRadiusTopLeft.value=e,this.backgroundUniforms.u_borderRadiusTopRight.value=e,this.backgroundUniforms.u_borderRadiusBottomRight.value=e,this.backgroundUniforms.u_borderRadiusBottomLeft.value=e)}updateTextMaterial(){this.textUniforms.u_texture.value=this.getFontTexture(),this.textUniforms.u_color.value=this.getFontColor(),this.textUniforms.u_opacity.value=this.getFontOpacity(),this.textUniforms.u_pxRange.value=this.getFontPXRange(),this.textUniforms.u_useRGSS.value=this.getFontSupersampling()}getBackgroundMaterial(){return(!this.backgroundMaterial||!this.backgroundUniforms)&&(this.backgroundMaterial=this._makeBackgroundMaterial()),this.backgroundMaterial}getFontMaterial(){return(!this.fontMaterial||!this.textUniforms)&&(this.fontMaterial=this._makeTextMaterial()),this.fontMaterial}_makeTextMaterial(){return new Te.ShaderMaterial({uniforms:this.textUniforms,transparent:!0,clipping:!0,vertexShader:HD,fragmentShader:XD,extensions:{derivatives:!0}})}_makeBackgroundMaterial(){return new Te.ShaderMaterial({uniforms:this.backgroundUniforms,transparent:!0,clipping:!0,vertexShader:qD,fragmentShader:jD,extensions:{derivatives:!0}})}updateClippingPlanes(e){const s=e!==void 0?e:this.getClippingPlanes();JSON.stringify(s)!==JSON.stringify(this.clippingPlanes)&&(this.clippingPlanes=s,this.fontMaterial&&(this.fontMaterial.clippingPlanes=this.clippingPlanes),this.backgroundMaterial&&(this.backgroundMaterial.clippingPlanes=this.clippingPlanes))}}}const HD=`
varying vec2 vUv;

#include <clipping_planes_pars_vertex>

void main() {

	vUv = uv;
	vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );
	gl_Position = projectionMatrix * mvPosition;
	gl_Position.z -= 0.00001;

	#include <clipping_planes_vertex>

}
`,XD=`

uniform sampler2D u_texture;
uniform vec3 u_color;
uniform float u_opacity;
uniform float u_pxRange;
uniform bool u_useRGSS;

varying vec2 vUv;

#include <clipping_planes_pars_fragment>

// functions from the original msdf repo:
// https://github.com/Chlumsky/msdfgen#using-a-multi-channel-distance-field

float median(float r, float g, float b) {
	return max(min(r, g), min(max(r, g), b));
}

float screenPxRange() {
	vec2 unitRange = vec2(u_pxRange)/vec2(textureSize(u_texture, 0));
	vec2 screenTexSize = vec2(1.0)/fwidth(vUv);
	return max(0.5*dot(unitRange, screenTexSize), 1.0);
}

float tap(vec2 offsetUV) {
	vec3 msd = texture( u_texture, offsetUV ).rgb;
	float sd = median(msd.r, msd.g, msd.b);
	float screenPxDistance = screenPxRange() * (sd - 0.5);
	float alpha = clamp(screenPxDistance + 0.5, 0.0, 1.0);
	return alpha;
}

void main() {

	float alpha;

	if ( u_useRGSS ) {

		// shader-based supersampling based on https://bgolus.medium.com/sharper-mipmapping-using-shader-based-supersampling-ed7aadb47bec
		// per pixel partial derivatives
		vec2 dx = dFdx(vUv);
		vec2 dy = dFdy(vUv);

		// rotated grid uv offsets
		vec2 uvOffsets = vec2(0.125, 0.375);
		vec2 offsetUV = vec2(0.0, 0.0);

		// supersampled using 2x2 rotated grid
		alpha = 0.0;
		offsetUV.xy = vUv + uvOffsets.x * dx + uvOffsets.y * dy;
		alpha += tap(offsetUV);
		offsetUV.xy = vUv - uvOffsets.x * dx - uvOffsets.y * dy;
		alpha += tap(offsetUV);
		offsetUV.xy = vUv + uvOffsets.y * dx - uvOffsets.x * dy;
		alpha += tap(offsetUV);
		offsetUV.xy = vUv - uvOffsets.y * dx + uvOffsets.x * dy;
		alpha += tap(offsetUV);
		alpha *= 0.25;

	} else {

		alpha = tap( vUv );

	}


	// apply the opacity
	alpha *= u_opacity;

	// this is useful to avoid z-fighting when quads overlap because of kerning
	if ( alpha < 0.02) discard;


	gl_FragColor = vec4( u_color, alpha );

	#include <clipping_planes_fragment>

}
`,qD=`
varying vec2 vUv;

#include <clipping_planes_pars_vertex>

void main() {

	vUv = uv;
	vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );
	gl_Position = projectionMatrix * mvPosition;

	#include <clipping_planes_vertex>

}
`,jD=`

uniform sampler2D u_texture;
uniform vec3 u_color;
uniform float u_opacity;

uniform float u_borderRadiusTopLeft;
uniform float u_borderRadiusTopRight;
uniform float u_borderRadiusBottomLeft;
uniform float u_borderRadiusBottomRight;
uniform float u_borderWidth;
uniform vec3 u_borderColor;
uniform float u_borderOpacity;
uniform vec2 u_size;
uniform vec2 u_tSize;
uniform int u_backgroundMapping;

varying vec2 vUv;

#include <clipping_planes_pars_fragment>

float getEdgeDist() {
	vec2 ndc = vec2( vUv.x * 2.0 - 1.0, vUv.y * 2.0 - 1.0 );
	vec2 planeSpaceCoord = vec2( u_size.x * 0.5 * ndc.x, u_size.y * 0.5 * ndc.y );
	vec2 corner = u_size * 0.5;
	vec2 offsetCorner = corner - abs( planeSpaceCoord );
	float innerRadDist = min( offsetCorner.x, offsetCorner.y ) * -1.0;
	if (vUv.x < 0.5 && vUv.y >= 0.5) {
		float roundedDist = length( max( abs( planeSpaceCoord ) - u_size * 0.5 + u_borderRadiusTopLeft, 0.0 ) ) - u_borderRadiusTopLeft;
		float s = step( innerRadDist * -1.0, u_borderRadiusTopLeft );
		return mix( innerRadDist, roundedDist, s );
	}
	if (vUv.x >= 0.5 && vUv.y >= 0.5) {
		float roundedDist = length( max( abs( planeSpaceCoord ) - u_size * 0.5 + u_borderRadiusTopRight, 0.0 ) ) - u_borderRadiusTopRight;
		float s = step( innerRadDist * -1.0, u_borderRadiusTopRight );
		return mix( innerRadDist, roundedDist, s );
	}
	if (vUv.x >= 0.5 && vUv.y < 0.5) {
		float roundedDist = length( max( abs( planeSpaceCoord ) - u_size * 0.5 + u_borderRadiusBottomRight, 0.0 ) ) - u_borderRadiusBottomRight;
		float s = step( innerRadDist * -1.0, u_borderRadiusBottomRight );
		return mix( innerRadDist, roundedDist, s );
	}
	if (vUv.x < 0.5 && vUv.y < 0.5) {
		float roundedDist = length( max( abs( planeSpaceCoord ) - u_size * 0.5 + u_borderRadiusBottomLeft, 0.0 ) ) - u_borderRadiusBottomLeft;
		float s = step( innerRadDist * -1.0, u_borderRadiusBottomLeft );
		return mix( innerRadDist, roundedDist, s );
	}
}

vec4 sampleTexture() {
	float textureRatio = u_tSize.x / u_tSize.y;
	float panelRatio = u_size.x / u_size.y;
	vec2 uv = vUv;
	if ( u_backgroundMapping == 1 ) { // contain
		if ( textureRatio < panelRatio ) { // repeat on X
			float newX = uv.x * ( panelRatio / textureRatio );
			newX += 0.5 - 0.5 * ( panelRatio / textureRatio );
			uv.x = newX;
		} else { // repeat on Y
			float newY = uv.y * ( textureRatio / panelRatio );
			newY += 0.5 - 0.5 * ( textureRatio / panelRatio );
			uv.y = newY;
		}
	} else if ( u_backgroundMapping == 2 ) { // cover
		if ( textureRatio < panelRatio ) { // stretch on Y
			float newY = uv.y * ( textureRatio / panelRatio );
			newY += 0.5 - 0.5 * ( textureRatio / panelRatio );
			uv.y = newY;
		} else { // stretch on X
			float newX = uv.x * ( panelRatio / textureRatio );
			newX += 0.5 - 0.5 * ( panelRatio / textureRatio );
			uv.x = newX;
		}
	}
	return texture2D( u_texture, uv ).rgba;
}

void main() {

	float edgeDist = getEdgeDist();
	float change = fwidth( edgeDist );

	vec4 textureSample = sampleTexture();
	vec3 blendedColor = textureSample.rgb * u_color;

	float alpha = smoothstep( change, 0.0, edgeDist );
	float blendedOpacity = u_opacity * textureSample.a * alpha;

	vec4 frameColor = vec4( blendedColor, blendedOpacity );

	if ( u_borderWidth <= 0.0 ) {
		gl_FragColor = frameColor;
	} else {
		vec4 borderColor = vec4( u_borderColor, u_borderOpacity * alpha );
		float stp = smoothstep( edgeDist + change, edgeDist, u_borderWidth * -1.0 );
		gl_FragColor = mix( frameColor, borderColor, stp );
	}

	#include <clipping_planes_fragment>
}
`;class a2 extends Te.Mesh{constructor(t){const e=new Te.PlaneGeometry;super(e,t),this.castShadow=!0,this.receiveShadow=!0,this.name="MeshUI-Frame"}}let Ld=null;function Ga(...n){if(!Ld)throw new Error("Cannot use mixins with Base null");let t=Ld;Ld=null;let e=n.length,s;for(;--e>=0;)s=n[e],t=s(t);return t}Ga.withBase=n=>(Ld=n,Ga);class qc extends Ga.withBase(Te.Object3D)(w1,o2,S1,Uh){constructor(t){super(t),this.isBlock=!0,this.size=new Te.Vector2(1,1),this.frame=new a2(this.getBackgroundMaterial()),this.frame.onBeforeRender=()=>{this.updateClippingPlanes&&this.updateClippingPlanes()},this.add(this.frame),this.set(t)}parseParams(){const t=this.getBestFit();t!="none"&&this.childrenTexts.length?this.calculateBestFit(t):this.childrenTexts.forEach(e=>{e._fitFontSize=void 0})}updateLayout(){const t=this.getWidth(),e=this.getHeight();if(!t||!e){console.warn("Block got no dimension from its parameters or from children parameters");return}this.size.set(t,e),this.frame.scale.set(t,e,1),this.frame&&this.updateBackgroundMaterial(),this.frame.renderOrder=this.getParentsNumber(),this.autoLayout&&this.setPosFromParentRecords(),this.childrenInlines.length&&this.computeInlinesPosition(),this.computeChildrenPosition(),this.parentUI&&(this.position.z=this.getOffset())}updateInner(){this.parentUI&&(this.position.z=this.getOffset()),this.frame&&this.updateBackgroundMaterial()}}function c2(n){return class extends n{constructor(e){super(e),this.isInline=!0}}}function KD(n,t=!1){const e=n[0].index!==null,s=new Set(Object.keys(n[0].attributes)),i=new Set(Object.keys(n[0].morphAttributes)),o={},r={},a=n[0].morphTargetsRelative,c=new Te.BufferGeometry;let u=0;for(let l=0;l<n.length;++l){const d=n[l];let h=0;if(e!==(d.index!==null))return console.error("THREE.BufferGeometryUtils: .mergeBufferGeometries() failed with geometry at index "+l+". All geometries must have compatible attributes; make sure index attribute exists among all geometries, or in none of them."),null;for(const f in d.attributes){if(!s.has(f))return console.error("THREE.BufferGeometryUtils: .mergeBufferGeometries() failed with geometry at index "+l+'. All geometries must have compatible attributes; make sure "'+f+'" attribute exists among all geometries, or in none of them.'),null;o[f]===void 0&&(o[f]=[]),o[f].push(d.attributes[f]),h++}if(h!==s.size)return console.error("THREE.BufferGeometryUtils: .mergeBufferGeometries() failed with geometry at index "+l+". Make sure all geometries have the same number of attributes."),null;if(a!==d.morphTargetsRelative)return console.error("THREE.BufferGeometryUtils: .mergeBufferGeometries() failed with geometry at index "+l+". .morphTargetsRelative must be consistent throughout all geometries."),null;for(const f in d.morphAttributes){if(!i.has(f))return console.error("THREE.BufferGeometryUtils: .mergeBufferGeometries() failed with geometry at index "+l+".  .morphAttributes must be consistent throughout all geometries."),null;r[f]===void 0&&(r[f]=[]),r[f].push(d.morphAttributes[f])}if(c.userData.mergedUserData=c.userData.mergedUserData||[],c.userData.mergedUserData.push(d.userData),t){let f;if(e)f=d.index.count;else if(d.attributes.position!==void 0)f=d.attributes.position.count;else return console.error("THREE.BufferGeometryUtils: .mergeBufferGeometries() failed with geometry at index "+l+". The geometry must have either an index or a position attribute"),null;c.addGroup(u,f,l),u+=f}}if(e){let l=0;const d=[];for(let h=0;h<n.length;++h){const f=n[h].index;for(let p=0;p<f.count;++p)d.push(f.getX(p)+l);l+=n[h].attributes.position.count}c.setIndex(d)}for(const l in o){const d=vb(o[l]);if(!d)return console.error("THREE.BufferGeometryUtils: .mergeBufferGeometries() failed while trying to merge the "+l+" attribute."),null;c.setAttribute(l,d)}for(const l in r){const d=r[l][0].length;if(d===0)break;c.morphAttributes=c.morphAttributes||{},c.morphAttributes[l]=[];for(let h=0;h<d;++h){const f=[];for(let x=0;x<r[l].length;++x)f.push(r[l][x][h]);const p=vb(f);if(!p)return console.error("THREE.BufferGeometryUtils: .mergeBufferGeometries() failed while trying to merge the "+l+" morphAttribute."),null;c.morphAttributes[l].push(p)}}return c}function vb(n){let t,e,s,i=0;for(let a=0;a<n.length;++a){const c=n[a];if(c.isInterleavedBufferAttribute)return console.error("THREE.BufferGeometryUtils: .mergeBufferAttributes() failed. InterleavedBufferAttributes are not supported."),null;if(t===void 0&&(t=c.array.constructor),t!==c.array.constructor)return console.error("THREE.BufferGeometryUtils: .mergeBufferAttributes() failed. BufferAttribute.array must be of consistent array types across matching attributes."),null;if(e===void 0&&(e=c.itemSize),e!==c.itemSize)return console.error("THREE.BufferGeometryUtils: .mergeBufferAttributes() failed. BufferAttribute.itemSize must be consistent across matching attributes."),null;if(s===void 0&&(s=c.normalized),s!==c.normalized)return console.error("THREE.BufferGeometryUtils: .mergeBufferAttributes() failed. BufferAttribute.normalized must be consistent across matching attributes."),null;i+=c.array.length}const o=new t(i);let r=0;for(let a=0;a<n.length;++a)o.set(n[a].array,r),r+=n[a].array.length;return new Te.BufferAttribute(o,e,s)}class YD extends Te.PlaneGeometry{constructor(t,e){const s=t.glyph,i=t.fontSize;super(t.width,t.height),s.match(/\s/g)===null?(e.info.charset.indexOf(s)===-1&&console.error(`The character '${s}' is not included in the font characters set.`),this.mapUVs(e,s),this.transformGeometry(t)):(this.nullifyUVs(),this.scale(0,0,1),this.translate(0,i/2,0))}mapUVs(t,e){const s=t.chars.find(l=>l.char===e),i=t.common,o=s.x/i.scaleW,r=(s.x+s.width)/i.scaleW,a=1-(s.y+s.height)/i.scaleH,c=1-s.y/i.scaleH,u=this.attributes.uv;for(let l=0;l<u.count;l++){let d=u.getX(l),h=u.getY(l);[d,h]=(()=>{switch(l){case 0:return[o,c];case 1:return[r,c];case 2:return[o,a];case 3:return[r,a]}})(),u.setXY(l,d,h)}}nullifyUVs(){const t=this.attributes.uv;for(let e=0;e<t.count;e++)t.setXY(e,0,0)}transformGeometry(t){this.translate(t.width/2,t.height/2,0)}}function ZD(n){const t=n.font,e=n.fontSize,s=n.glyph,i=e/t.info.size,o=t.chars.find(d=>d.char===s);let r=o?o.width*i:e/3,a=o?o.height*i:0;r===0&&(r=o?o.xadvance*i:e),a===0&&(a=e*.7),s===`
`&&(r=0);const c=o?o.xadvance*i:r,u=o?o.xoffset*i:0,l=o?o.yoffset*i:0;return{width:r,height:a,anchor:l,xadvance:c,xoffset:u}}function JD(n,t){const e=n._kernings;return e[t]?e[t]:0}function QD(){const n=[];this.inlines.forEach((s,i)=>{n[i]=new YD(s,this.getFontFamily()),n[i].translate(s.offsetX,s.offsetY,0)});const t=KD(n);return new Te.Mesh(t,this.getFontMaterial())}const Yp={getGlyphDimensions:ZD,getGlyphPairKerning:JD,buildText:QD};function t9(n){return class extends n{createText(){const e=this,s=(()=>{switch(this.getTextType()){case"MSDF":return Yp.buildText.call(this);default:console.warn(`'${this.getTextType()}' is not a supported text type.
See https://github.com/felixmariotto/three-mesh-ui/wiki/Using-a-custom-text-type`);break}})();return s.renderOrder=1/0,s.onBeforeRender=function(){e.updateClippingPlanes&&e.updateClippingPlanes()},s}getGlyphDimensions(e){switch(e.textType){case"MSDF":return Yp.getGlyphDimensions(e);default:console.warn(`'${e.textType}' is not a supported text type.
See https://github.com/felixmariotto/three-mesh-ui/wiki/Using-a-custom-text-type`);break}}getGlyphPairKerning(e,s,i){switch(e){case"MSDF":return Yp.getGlyphPairKerning(s,i);default:console.warn(`'${e}' is not a supported text type.
See https://github.com/felixmariotto/three-mesh-ui/wiki/Using-a-custom-text-type`);break}}}}function u2(n){n.children.forEach(t=>{t.children.length>0&&u2(t),n.remove(t),vr.disposeOf(t),t.material&&t.material.dispose(),t.geometry&&t.geometry.dispose()}),n.children=[]}const e9=u2;class T1 extends Ga.withBase(Te.Object3D)(c2,t9,S1,Uh){constructor(t){super(t),this.isText=!0,this.set(t)}parseParams(){this.calculateInlines(this._fitFontSize||this.getFontSize())}updateLayout(){e9(this),this.inlines&&(this.textContent=this.createText(),this.updateTextMaterial(),this.add(this.textContent)),this.position.z=this.getOffset()}updateInner(){this.position.z=this.getOffset(),this.textContent&&this.updateTextMaterial()}calculateInlines(t){const e=this.content,s=this.getFontFamily(),i=this.getBreakOn(),o=this.getTextType(),r=this.getWhiteSpace();if(!s||typeof s=="string"){su.getFontOf(this)||console.warn("no font was found");return}if(!this.content){this.inlines=null;return}if(!o){console.error(`You must provide a 'textType' attribute so three-mesh-ui knows how to render your text.
 See https://github.com/felixmariotto/three-mesh-ui/wiki/Using-a-custom-text-type`);return}const a=Kv(e,r),c=Array.from?Array.from(a):String(a).split(""),u=t/s.info.size,l=s.common.lineHeight*u,d=s.common.base*u,h=c.map(f=>{const p=this.getGlyphDimensions({textType:o,glyph:f,font:s,fontSize:t});let x=null;return r!==vu&&(i.includes(f)||f.match(/\s/g))&&(x="possible"),f.match(/\n/g)&&(x=Yv(r)),{height:p.height,width:p.width,anchor:p.anchor,xadvance:p.xadvance,xoffset:p.xoffset,lineBreak:x,glyph:f,fontSize:t,lineHeight:l,lineBase:d}});if(this.getFontKerning()!=="none")for(let f=1;f<h.length;f++){const p=h[f],x=h[f-1].glyph+h[f].glyph,g=this.getGlyphPairKerning(o,s,x);p.kerning=g*(t/s.info.size)}this.inlines=h}}class E1 extends Ga.withBase(Te.Object3D)(c2,w1,o2,S1,Uh){constructor(t){super(t),this.isInlineBlock=!0,this.size=new Te.Vector2(1,1),this.frame=new a2(this.getBackgroundMaterial()),this.frame.onBeforeRender=()=>{this.updateClippingPlanes&&this.updateClippingPlanes()},this.add(this.frame),this.set(t)}parseParams(){this.width||console.warn("inlineBlock has no width. Set to 0.3 by default"),this.height||console.warn("inlineBlock has no height. Set to 0.3 by default"),this.inlines=[{height:this.height||.3,width:this.width||.3,anchor:0,lineBreak:"possible"}]}updateLayout(){const t=this.getWidth(),e=this.getHeight();if(this.inlines){const s=this.inlines[0];this.position.set(s.width/2,s.height/2,0),this.position.x+=s.offsetX,this.position.y+=s.offsetY}this.size.set(t,e),this.frame.scale.set(t,e,1),this.frame&&this.updateBackgroundMaterial(),this.frame.renderOrder=this.getParentsNumber(),this.childrenInlines.length&&this.computeInlinesPosition(),this.computeChildrenPosition(),this.position.z=this.getOffset()}updateInner(){this.position.z=this.getOffset(),this.frame&&this.updateBackgroundMaterial()}}const Co={fr:[[[{width:.1,chars:[{lowerCase:"a",upperCase:"A"}]},{width:.1,chars:[{lowerCase:"z",upperCase:"Z"}]},{width:.1,chars:[{lowerCase:"e",upperCase:"E"}]},{width:.1,chars:[{lowerCase:"r",upperCase:"R"}]},{width:.1,chars:[{lowerCase:"t",upperCase:"T"}]},{width:.1,chars:[{lowerCase:"y",upperCase:"Y"}]},{width:.1,chars:[{lowerCase:"u",upperCase:"U"}]},{width:.1,chars:[{lowerCase:"i",upperCase:"I"}]},{width:.1,chars:[{lowerCase:"o",upperCase:"O"}]},{width:.1,chars:[{lowerCase:"p",upperCase:"P"}]}],[{width:.1,chars:[{lowerCase:"q",upperCase:"Q"}]},{width:.1,chars:[{lowerCase:"s",upperCase:"S"}]},{width:.1,chars:[{lowerCase:"d",upperCase:"D"}]},{width:.1,chars:[{lowerCase:"f",upperCase:"F"}]},{width:.1,chars:[{lowerCase:"g",upperCase:"G"}]},{width:.1,chars:[{lowerCase:"h",upperCase:"H"}]},{width:.1,chars:[{lowerCase:"j",upperCase:"J"}]},{width:.1,chars:[{lowerCase:"k",upperCase:"K"}]},{width:.1,chars:[{lowerCase:"l",upperCase:"L"}]},{width:.1,chars:[{lowerCase:"m",upperCase:"M"}]}],[{width:.2,command:"shift",chars:[{icon:"shift"}]},{width:.1,chars:[{lowerCase:"w",upperCase:"W"}]},{width:.1,chars:[{lowerCase:"x",upperCase:"X"}]},{width:.1,chars:[{lowerCase:"c",upperCase:"C"}]},{width:.1,chars:[{lowerCase:"v",upperCase:"V"}]},{width:.1,chars:[{lowerCase:"b",upperCase:"B"}]},{width:.1,chars:[{lowerCase:"n",upperCase:"N"}]},{width:.2,command:"backspace",chars:[{icon:"backspace"}]}],[{width:.2,command:"switch",chars:[{lowerCase:".?12"}]},{width:.1,chars:[{lowerCase:","}]},{width:.4,command:"space",chars:[{icon:"space"}]},{width:.1,chars:[{lowerCase:"."}]},{width:.2,command:"enter",chars:[{icon:"enter"}]}]],[[{width:.1,chars:[{lowerCase:"1"}]},{width:.1,chars:[{lowerCase:"2"}]},{width:.1,chars:[{lowerCase:"3"}]},{width:.1,chars:[{lowerCase:"4"}]},{width:.1,chars:[{lowerCase:"5"}]},{width:.1,chars:[{lowerCase:"6"}]},{width:.1,chars:[{lowerCase:"7"}]},{width:.1,chars:[{lowerCase:"8"}]},{width:.1,chars:[{lowerCase:"9"}]},{width:.1,chars:[{lowerCase:"0"}]}],[{width:.1,chars:[{lowerCase:"@"}]},{width:.1,chars:[{lowerCase:"#"}]},{width:.1,chars:[{lowerCase:"|"}]},{width:.1,chars:[{lowerCase:"_"}]},{width:.1,chars:[{lowerCase:"&"}]},{width:.1,chars:[{lowerCase:"-"}]},{width:.1,chars:[{lowerCase:"+"}]},{width:.1,chars:[{lowerCase:"("}]},{width:.1,chars:[{lowerCase:")"}]},{width:.1,chars:[{lowerCase:"/"}]}],[{width:.1,chars:[{lowerCase:"="}]},{width:.1,chars:[{lowerCase:"*"}]},{width:.1,chars:[{lowerCase:'"'}]},{width:.1,chars:[{lowerCase:"'"}]},{width:.1,chars:[{lowerCase:":"}]},{width:.1,chars:[{lowerCase:";"}]},{width:.1,chars:[{lowerCase:"!"}]},{width:.1,chars:[{lowerCase:"?"}]},{width:.2,command:"backspace",chars:[{icon:"backspace"}]}],[{width:.2,command:"switch",chars:[{lowerCase:".?12"}]},{width:.1,chars:[{lowerCase:","}]},{width:.4,command:"space",chars:[{icon:"space"}]},{width:.1,chars:[{lowerCase:"."}]},{width:.2,command:"enter",chars:[{icon:"enter"}]}]]],eng:[[[{width:.1,chars:[{lowerCase:"q",upperCase:"Q"}]},{width:.1,chars:[{lowerCase:"w",upperCase:"W"}]},{width:.1,chars:[{lowerCase:"e",upperCase:"E"}]},{width:.1,chars:[{lowerCase:"r",upperCase:"R"}]},{width:.1,chars:[{lowerCase:"t",upperCase:"T"}]},{width:.1,chars:[{lowerCase:"y",upperCase:"Y"}]},{width:.1,chars:[{lowerCase:"u",upperCase:"U"}]},{width:.1,chars:[{lowerCase:"i",upperCase:"I"}]},{width:.1,chars:[{lowerCase:"o",upperCase:"O"}]},{width:.1,chars:[{lowerCase:"p",upperCase:"P"}]}],[{width:.1,chars:[{lowerCase:"a",upperCase:"A"}]},{width:.1,chars:[{lowerCase:"s",upperCase:"S"}]},{width:.1,chars:[{lowerCase:"d",upperCase:"D"}]},{width:.1,chars:[{lowerCase:"f",upperCase:"F"}]},{width:.1,chars:[{lowerCase:"g",upperCase:"G"}]},{width:.1,chars:[{lowerCase:"h",upperCase:"H"}]},{width:.1,chars:[{lowerCase:"j",upperCase:"J"}]},{width:.1,chars:[{lowerCase:"k",upperCase:"K"}]},{width:.1,chars:[{lowerCase:"l",upperCase:"L"}]}],[{width:.15,command:"shift",chars:[{icon:"shift"}]},{width:.1,chars:[{lowerCase:"z",upperCase:"Z"}]},{width:.1,chars:[{lowerCase:"x",upperCase:"X"}]},{width:.1,chars:[{lowerCase:"c",upperCase:"C"}]},{width:.1,chars:[{lowerCase:"v",upperCase:"V"}]},{width:.1,chars:[{lowerCase:"b",upperCase:"B"}]},{width:.1,chars:[{lowerCase:"n",upperCase:"N"}]},{width:.1,chars:[{lowerCase:"m",upperCase:"M"}]},{width:.15,command:"backspace",chars:[{icon:"backspace"}]}],[{width:.2,command:"switch",chars:[{lowerCase:".?12"}]},{width:.1,chars:[{lowerCase:","}]},{width:.4,command:"space",chars:[{icon:"space"}]},{width:.1,chars:[{lowerCase:"."}]},{width:.2,command:"enter",chars:[{icon:"enter"}]}]],[[{width:.1,chars:[{lowerCase:"1"}]},{width:.1,chars:[{lowerCase:"2"}]},{width:.1,chars:[{lowerCase:"3"}]},{width:.1,chars:[{lowerCase:"4"}]},{width:.1,chars:[{lowerCase:"5"}]},{width:.1,chars:[{lowerCase:"6"}]},{width:.1,chars:[{lowerCase:"7"}]},{width:.1,chars:[{lowerCase:"8"}]},{width:.1,chars:[{lowerCase:"9"}]},{width:.1,chars:[{lowerCase:"0"}]}],[{width:.1,chars:[{lowerCase:"@"}]},{width:.1,chars:[{lowerCase:"#"}]},{width:.1,chars:[{lowerCase:"|"}]},{width:.1,chars:[{lowerCase:"_"}]},{width:.1,chars:[{lowerCase:"&"}]},{width:.1,chars:[{lowerCase:"-"}]},{width:.1,chars:[{lowerCase:"+"}]},{width:.1,chars:[{lowerCase:"("}]},{width:.1,chars:[{lowerCase:")"}]},{width:.1,chars:[{lowerCase:"/"}]}],[{width:.1,chars:[{lowerCase:"="}]},{width:.1,chars:[{lowerCase:"*"}]},{width:.1,chars:[{lowerCase:'"'}]},{width:.1,chars:[{lowerCase:"'"}]},{width:.1,chars:[{lowerCase:":"}]},{width:.1,chars:[{lowerCase:";"}]},{width:.1,chars:[{lowerCase:"!"}]},{width:.1,chars:[{lowerCase:"?"}]},{width:.2,command:"backspace",chars:[{icon:"backspace"}]}],[{width:.2,command:"switch",chars:[{lowerCase:".?12"}]},{width:.1,chars:[{lowerCase:","}]},{width:.4,command:"space",chars:[{icon:"space"}]},{width:.1,chars:[{lowerCase:"."}]},{width:.2,command:"enter",chars:[{icon:"enter"}]}]]],ru:[[[{width:1/12,chars:[{lowerCase:"й",upperCase:"Й"},{lowerCase:"q",upperCase:"Q"}]},{width:1/12,chars:[{lowerCase:"ц",upperCase:"Ц"},{lowerCase:"w",upperCase:"W"}]},{width:1/12,chars:[{lowerCase:"у",upperCase:"У"},{lowerCase:"e",upperCase:"E"}]},{width:1/12,chars:[{lowerCase:"к",upperCase:"К"},{lowerCase:"r",upperCase:"R"}]},{width:1/12,chars:[{lowerCase:"е",upperCase:"Е"},{lowerCase:"t",upperCase:"T"}]},{width:1/12,chars:[{lowerCase:"н",upperCase:"Н"},{lowerCase:"y",upperCase:"Y"}]},{width:1/12,chars:[{lowerCase:"г",upperCase:"Г"},{lowerCase:"u",upperCase:"U"}]},{width:1/12,chars:[{lowerCase:"ш",upperCase:"Ш"},{lowerCase:"i",upperCase:"I"}]},{width:1/12,chars:[{lowerCase:"щ",upperCase:"Щ"},{lowerCase:"o",upperCase:"O"}]},{width:1/12,chars:[{lowerCase:"з",upperCase:"З"},{lowerCase:"p",upperCase:"P"}]},{width:1/12,chars:[{lowerCase:"х",upperCase:"Х"},{lowerCase:"{",upperCase:"["}]},{width:1/12,chars:[{lowerCase:"ъ",upperCase:"Ъ"},{lowerCase:"}",upperCase:"]"}]}],[{width:1/12,chars:[{lowerCase:"ф",upperCase:"Ф"},{lowerCase:"a",upperCase:"A"}]},{width:1/12,chars:[{lowerCase:"ы",upperCase:"Ы"},{lowerCase:"s",upperCase:"S"}]},{width:1/12,chars:[{lowerCase:"в",upperCase:"В"},{lowerCase:"d",upperCase:"D"}]},{width:1/12,chars:[{lowerCase:"а",upperCase:"А"},{lowerCase:"f",upperCase:"F"}]},{width:1/12,chars:[{lowerCase:"п",upperCase:"П"},{lowerCase:"g",upperCase:"G"}]},{width:1/12,chars:[{lowerCase:"р",upperCase:"Р"},{lowerCase:"h",upperCase:"H"}]},{width:1/12,chars:[{lowerCase:"о",upperCase:"О"},{lowerCase:"j",upperCase:"J"}]},{width:1/12,chars:[{lowerCase:"л",upperCase:"Л"},{lowerCase:"k",upperCase:"K"}]},{width:1/12,chars:[{lowerCase:"д",upperCase:"Д"},{lowerCase:"l",upperCase:"L"}]},{width:1/12,chars:[{lowerCase:"ж",upperCase:"Ж"},{lowerCase:":",upperCase:";"}]},{width:1/12,chars:[{lowerCase:"э",upperCase:"Э"},{lowerCase:'"',upperCase:"'"}]},{width:1/12,chars:[{lowerCase:"ё",upperCase:"Ё"},{lowerCase:"|",upperCase:"\\"}]}],[{width:1.5/12,command:"shift",chars:[{icon:"shift"}]},{width:1/12,chars:[{lowerCase:"я",upperCase:"Я"},{lowerCase:"z",upperCase:"Z"}]},{width:1/12,chars:[{lowerCase:"ч",upperCase:"Ч"},{lowerCase:"x",upperCase:"X"}]},{width:1/12,chars:[{lowerCase:"с",upperCase:"С"},{lowerCase:"c",upperCase:"C"}]},{width:1/12,chars:[{lowerCase:"м",upperCase:"М"},{lowerCase:"v",upperCase:"V"}]},{width:1/12,chars:[{lowerCase:"и",upperCase:"И"},{lowerCase:"b",upperCase:"B"}]},{width:1/12,chars:[{lowerCase:"т",upperCase:"Т"},{lowerCase:"n",upperCase:"N"}]},{width:1/12,chars:[{lowerCase:"ь",upperCase:"Ь"},{lowerCase:"m",upperCase:"M"}]},{width:1/12,chars:[{lowerCase:"б",upperCase:"Б"},{lowerCase:",",upperCase:""}]},{width:1/12,chars:[{lowerCase:"ю",upperCase:"Ю"},{lowerCase:".",upperCase:""}]},{width:1.5/12,command:"backspace",chars:[{icon:"backspace"}]}],[{width:.15,command:"switch-set",chars:[{lowerCase:"eng"}]},{width:.15,command:"switch",chars:[{lowerCase:".?12"}]},{width:.4,command:"space",chars:[{icon:"space"}]},{width:.1,chars:[{lowerCase:"?"}]},{width:.2,command:"enter",chars:[{icon:"enter"}]}]],[[{width:.1,chars:[{lowerCase:"1"}]},{width:.1,chars:[{lowerCase:"2"}]},{width:.1,chars:[{lowerCase:"3"}]},{width:.1,chars:[{lowerCase:"4"}]},{width:.1,chars:[{lowerCase:"5"}]},{width:.1,chars:[{lowerCase:"6"}]},{width:.1,chars:[{lowerCase:"7"}]},{width:.1,chars:[{lowerCase:"8"}]},{width:.1,chars:[{lowerCase:"9"}]},{width:.1,chars:[{lowerCase:"0"}]}],[{width:.1,chars:[{lowerCase:"@"}]},{width:.1,chars:[{lowerCase:"#"}]},{width:.1,chars:[{lowerCase:"|"}]},{width:.1,chars:[{lowerCase:"_"}]},{width:.1,chars:[{lowerCase:"&"}]},{width:.1,chars:[{lowerCase:"-"}]},{width:.1,chars:[{lowerCase:"+"}]},{width:.1,chars:[{lowerCase:"("}]},{width:.1,chars:[{lowerCase:")"}]},{width:.1,chars:[{lowerCase:"/"}]}],[{width:.1,chars:[{lowerCase:"="}]},{width:.1,chars:[{lowerCase:"*"}]},{width:.1,chars:[{lowerCase:'"'}]},{width:.1,chars:[{lowerCase:"'"}]},{width:.1,chars:[{lowerCase:":"}]},{width:.1,chars:[{lowerCase:";"}]},{width:.1,chars:[{lowerCase:"!"}]},{width:.1,chars:[{lowerCase:"?"}]},{width:.2,command:"backspace",chars:[{icon:"backspace"}]}],[{width:.3,command:"switch",chars:[{lowerCase:"АБВ"}]},{width:.4,command:"space",chars:[{icon:"space"}]},{width:.1,chars:[{lowerCase:"."}]},{width:.2,command:"enter",chars:[{icon:"enter"}]}]]],de:[[[{width:1/11,chars:[{lowerCase:"q",upperCase:"Q"}]},{width:1/11,chars:[{lowerCase:"w",upperCase:"W"}]},{width:1/11,chars:[{lowerCase:"e",upperCase:"E"}]},{width:1/11,chars:[{lowerCase:"r",upperCase:"R"}]},{width:1/11,chars:[{lowerCase:"t",upperCase:"T"}]},{width:1/11,chars:[{lowerCase:"z",upperCase:"Z"}]},{width:1/11,chars:[{lowerCase:"u",upperCase:"U"}]},{width:1/11,chars:[{lowerCase:"i",upperCase:"I"}]},{width:1/11,chars:[{lowerCase:"o",upperCase:"O"}]},{width:1/11,chars:[{lowerCase:"p",upperCase:"P"}]},{width:1/11,chars:[{lowerCase:"ü",upperCase:"Ü"}]}],[{width:1/11,chars:[{lowerCase:"a",upperCase:"A"}]},{width:1/11,chars:[{lowerCase:"s",upperCase:"S"}]},{width:1/11,chars:[{lowerCase:"d",upperCase:"D"}]},{width:1/11,chars:[{lowerCase:"f",upperCase:"F"}]},{width:1/11,chars:[{lowerCase:"g",upperCase:"G"}]},{width:1/11,chars:[{lowerCase:"h",upperCase:"H"}]},{width:1/11,chars:[{lowerCase:"j",upperCase:"J"}]},{width:1/11,chars:[{lowerCase:"k",upperCase:"K"}]},{width:1/11,chars:[{lowerCase:"l",upperCase:"L"}]},{width:1/11,chars:[{lowerCase:"ö",upperCase:"Ö"}]},{width:1/11,chars:[{lowerCase:"ä",upperCase:"Ä"}]}],[{width:2/11,command:"shift",chars:[{icon:"shift"}]},{width:1/11,chars:[{lowerCase:"y",upperCase:"Y"}]},{width:1/11,chars:[{lowerCase:"x",upperCase:"X"}]},{width:1/11,chars:[{lowerCase:"c",upperCase:"C"}]},{width:1/11,chars:[{lowerCase:"v",upperCase:"V"}]},{width:1/11,chars:[{lowerCase:"b",upperCase:"B"}]},{width:1/11,chars:[{lowerCase:"n",upperCase:"N"}]},{width:1/11,chars:[{lowerCase:"m",upperCase:"M"}]},{width:2/11,command:"backspace",chars:[{icon:"backspace"}]}],[{width:.2,command:"switch",chars:[{lowerCase:".?12"}]},{width:.1,chars:[{lowerCase:","}]},{width:.4,command:"space",chars:[{icon:"space"}]},{width:.1,chars:[{lowerCase:"."}]},{width:.2,command:"enter",chars:[{icon:"enter"}]}]],[[{width:.1,chars:[{lowerCase:"1"}]},{width:.1,chars:[{lowerCase:"2"}]},{width:.1,chars:[{lowerCase:"3"}]},{width:.1,chars:[{lowerCase:"4"}]},{width:.1,chars:[{lowerCase:"5"}]},{width:.1,chars:[{lowerCase:"6"}]},{width:.1,chars:[{lowerCase:"7"}]},{width:.1,chars:[{lowerCase:"8"}]},{width:.1,chars:[{lowerCase:"9"}]},{width:.1,chars:[{lowerCase:"0"}]}],[{width:.1,chars:[{lowerCase:"@"}]},{width:.1,chars:[{lowerCase:"#"}]},{width:.1,chars:[{lowerCase:"|"}]},{width:.1,chars:[{lowerCase:"_"}]},{width:.1,chars:[{lowerCase:"&"}]},{width:.1,chars:[{lowerCase:"-"}]},{width:.1,chars:[{lowerCase:"+"}]},{width:.1,chars:[{lowerCase:"("}]},{width:.1,chars:[{lowerCase:")"}]},{width:.1,chars:[{lowerCase:"/"}]}],[{width:.1,chars:[{lowerCase:"="}]},{width:.1,chars:[{lowerCase:"*"}]},{width:.1,chars:[{lowerCase:'"'}]},{width:.1,chars:[{lowerCase:"'"}]},{width:.1,chars:[{lowerCase:":"}]},{width:.1,chars:[{lowerCase:";"}]},{width:.1,chars:[{lowerCase:"!"}]},{width:.1,chars:[{lowerCase:"?"}]},{width:.2,command:"backspace",chars:[{icon:"backspace"}]}],[{width:.2,command:"switch",chars:[{lowerCase:".?12"}]},{width:.1,chars:[{lowerCase:","}]},{width:.4,command:"space",chars:[{icon:"space"}]},{width:.1,chars:[{lowerCase:"."}]},{width:.2,command:"enter",chars:[{icon:"enter"}]}]]],es:[[[{width:.1,chars:[{lowerCase:"q",upperCase:"Q"}]},{width:.1,chars:[{lowerCase:"w",upperCase:"W"}]},{width:.1,chars:[{lowerCase:"e",upperCase:"E"}]},{width:.1,chars:[{lowerCase:"r",upperCase:"R"}]},{width:.1,chars:[{lowerCase:"t",upperCase:"T"}]},{width:.1,chars:[{lowerCase:"y",upperCase:"Y"}]},{width:.1,chars:[{lowerCase:"u",upperCase:"U"}]},{width:.1,chars:[{lowerCase:"i",upperCase:"I"}]},{width:.1,chars:[{lowerCase:"o",upperCase:"O"}]},{width:.1,chars:[{lowerCase:"p",upperCase:"P"}]}],[{width:.1,chars:[{lowerCase:"a",upperCase:"A"}]},{width:.1,chars:[{lowerCase:"s",upperCase:"S"}]},{width:.1,chars:[{lowerCase:"d",upperCase:"D"}]},{width:.1,chars:[{lowerCase:"f",upperCase:"F"}]},{width:.1,chars:[{lowerCase:"g",upperCase:"G"}]},{width:.1,chars:[{lowerCase:"h",upperCase:"H"}]},{width:.1,chars:[{lowerCase:"j",upperCase:"J"}]},{width:.1,chars:[{lowerCase:"k",upperCase:"K"}]},{width:.1,chars:[{lowerCase:"l",upperCase:"L"}]},{width:.1,chars:[{lowerCase:"ñ",upperCase:"Ñ"}]}],[{width:.15,command:"shift",chars:[{icon:"shift"}]},{width:.1,chars:[{lowerCase:"z",upperCase:"Z"}]},{width:.1,chars:[{lowerCase:"x",upperCase:"X"}]},{width:.1,chars:[{lowerCase:"c",upperCase:"C"}]},{width:.1,chars:[{lowerCase:"v",upperCase:"V"}]},{width:.1,chars:[{lowerCase:"b",upperCase:"B"}]},{width:.1,chars:[{lowerCase:"n",upperCase:"N"}]},{width:.1,chars:[{lowerCase:"m",upperCase:"M"}]},{width:.15,command:"backspace",chars:[{icon:"backspace"}]}],[{width:.2,command:"switch",chars:[{lowerCase:".?12"}]},{width:.1,chars:[{lowerCase:","}]},{width:.4,command:"space",chars:[{icon:"space"}]},{width:.1,chars:[{lowerCase:"."}]},{width:.2,command:"enter",chars:[{icon:"enter"}]}]],[[{width:.1,chars:[{lowerCase:"1"}]},{width:.1,chars:[{lowerCase:"2"}]},{width:.1,chars:[{lowerCase:"3"}]},{width:.1,chars:[{lowerCase:"4"}]},{width:.1,chars:[{lowerCase:"5"}]},{width:.1,chars:[{lowerCase:"6"}]},{width:.1,chars:[{lowerCase:"7"}]},{width:.1,chars:[{lowerCase:"8"}]},{width:.1,chars:[{lowerCase:"9"}]},{width:.1,chars:[{lowerCase:"0"}]}],[{width:.1,chars:[{lowerCase:"@"}]},{width:.1,chars:[{lowerCase:"#"}]},{width:.1,chars:[{lowerCase:"|"}]},{width:.1,chars:[{lowerCase:"_"}]},{width:.1,chars:[{lowerCase:"&"}]},{width:.1,chars:[{lowerCase:"-"}]},{width:.1,chars:[{lowerCase:"+"}]},{width:.1,chars:[{lowerCase:"("}]},{width:.1,chars:[{lowerCase:")"}]},{width:.1,chars:[{lowerCase:"/"}]}],[{width:.1,chars:[{lowerCase:"="}]},{width:.1,chars:[{lowerCase:"*"}]},{width:.1,chars:[{lowerCase:'"'}]},{width:.1,chars:[{lowerCase:"'"}]},{width:.1,chars:[{lowerCase:":"}]},{width:.1,chars:[{lowerCase:";"}]},{width:.1,chars:[{lowerCase:"!"}]},{width:.1,chars:[{lowerCase:"?"}]},{width:.2,command:"backspace",chars:[{icon:"backspace"}]}],[{width:.2,command:"switch",chars:[{lowerCase:".?12"}]},{width:.1,chars:[{lowerCase:","}]},{width:.4,command:"space",chars:[{icon:"space"}]},{width:.1,chars:[{lowerCase:"."}]},{width:.2,command:"enter",chars:[{icon:"enter"}]}]]],el:[[[{width:.1,chars:[{lowerCase:";",upperCase:":"},{lowerCase:"q",upperCase:"Q"}]},{width:.1,chars:[{lowerCase:"ς",upperCase:"ς"},{lowerCase:"w",upperCase:"W"}]},{width:.1,chars:[{lowerCase:"ε",upperCase:"Ε"},{lowerCase:"e",upperCase:"E"}]},{width:.1,chars:[{lowerCase:"ρ",upperCase:"Ρ"},{lowerCase:"r",upperCase:"R"}]},{width:.1,chars:[{lowerCase:"τ",upperCase:"Τ"},{lowerCase:"t",upperCase:"T"}]},{width:.1,chars:[{lowerCase:"υ",upperCase:"Υ"},{lowerCase:"y",upperCase:"Y"}]},{width:.1,chars:[{lowerCase:"θ",upperCase:"Θ"},{lowerCase:"u",upperCase:"U"}]},{width:.1,chars:[{lowerCase:"ι",upperCase:"Ι"},{lowerCase:"i",upperCase:"I"}]},{width:.1,chars:[{lowerCase:"ο",upperCase:"Ο"},{lowerCase:"o",upperCase:"O"}]},{width:.1,chars:[{lowerCase:"π",upperCase:"Π"},{lowerCase:"p",upperCase:"P"}]}],[{width:.1,chars:[{lowerCase:"α",upperCase:"Α"},{lowerCase:"a",upperCase:"A"}]},{width:.1,chars:[{lowerCase:"σ",upperCase:"Σ"},{lowerCase:"s",upperCase:"S"}]},{width:.1,chars:[{lowerCase:"δ",upperCase:"Δ"},{lowerCase:"d",upperCase:"D"}]},{width:.1,chars:[{lowerCase:"φ",upperCase:"Φ"},{lowerCase:"f",upperCase:"F"}]},{width:.1,chars:[{lowerCase:"γ",upperCase:"Γ"},{lowerCase:"g",upperCase:"G"}]},{width:.1,chars:[{lowerCase:"η",upperCase:"Η"},{lowerCase:"h",upperCase:"H"}]},{width:.1,chars:[{lowerCase:"ξ",upperCase:"Ξ"},{lowerCase:"j",upperCase:"J"}]},{width:.1,chars:[{lowerCase:"κ",upperCase:"Κ"},{lowerCase:"k",upperCase:"K"}]},{width:.1,chars:[{lowerCase:"λ",upperCase:"Λ"},{lowerCase:"l",upperCase:"L"}]}],[{width:.15,command:"shift",chars:[{icon:"shift"}]},{width:.1,chars:[{lowerCase:"ζ",upperCase:"Ζ"},{lowerCase:"z",upperCase:"Z"}]},{width:.1,chars:[{lowerCase:"χ",upperCase:"Χ"},{lowerCase:"x",upperCase:"X"}]},{width:.1,chars:[{lowerCase:"ψ",upperCase:"Ψ"},{lowerCase:"c",upperCase:"C"}]},{width:.1,chars:[{lowerCase:"ω",upperCase:"Ω"},{lowerCase:"v",upperCase:"V"}]},{width:.1,chars:[{lowerCase:"β",upperCase:"Β"},{lowerCase:"b",upperCase:"B"}]},{width:.1,chars:[{lowerCase:"ν",upperCase:"Ν"},{lowerCase:"n",upperCase:"N"}]},{width:.1,chars:[{lowerCase:"μ",upperCase:"Μ"},{lowerCase:"m",upperCase:"M"}]},{width:.15,command:"backspace",chars:[{icon:"backspace"}]}],[{width:.15,command:"switch-set",chars:[{lowerCase:"eng"}]},{width:.15,command:"switch",chars:[{lowerCase:".?12"}]},{width:.4,command:"space",chars:[{icon:"space"}]},{width:.1,chars:[{lowerCase:"?"}]},{width:.2,command:"enter",chars:[{icon:"enter"}]}]],[[{width:.1,chars:[{lowerCase:"1"}]},{width:.1,chars:[{lowerCase:"2"}]},{width:.1,chars:[{lowerCase:"3"}]},{width:.1,chars:[{lowerCase:"4"}]},{width:.1,chars:[{lowerCase:"5"}]},{width:.1,chars:[{lowerCase:"6"}]},{width:.1,chars:[{lowerCase:"7"}]},{width:.1,chars:[{lowerCase:"8"}]},{width:.1,chars:[{lowerCase:"9"}]},{width:.1,chars:[{lowerCase:"0"}]}],[{width:.1,chars:[{lowerCase:"@"}]},{width:.1,chars:[{lowerCase:"#"}]},{width:.1,chars:[{lowerCase:"|"}]},{width:.1,chars:[{lowerCase:"_"}]},{width:.1,chars:[{lowerCase:"&"}]},{width:.1,chars:[{lowerCase:"-"}]},{width:.1,chars:[{lowerCase:"+"}]},{width:.1,chars:[{lowerCase:"("}]},{width:.1,chars:[{lowerCase:")"}]},{width:.1,chars:[{lowerCase:"/"}]}],[{width:.1,chars:[{lowerCase:"="}]},{width:.1,chars:[{lowerCase:"*"}]},{width:.1,chars:[{lowerCase:'"'}]},{width:.1,chars:[{lowerCase:"'"}]},{width:.1,chars:[{lowerCase:":"}]},{width:.1,chars:[{lowerCase:";"}]},{width:.1,chars:[{lowerCase:"!"}]},{width:.1,chars:[{lowerCase:"?"}]},{width:.2,command:"backspace",chars:[{icon:"backspace"}]}],[{width:.2,command:"switch",chars:[{lowerCase:".?12"}]},{width:.1,chars:[{lowerCase:","}]},{width:.4,command:"space",chars:[{icon:"space"}]},{width:.1,chars:[{lowerCase:"."}]},{width:.2,command:"enter",chars:[{icon:"enter"}]}]]],nord:[[[{width:1/11,chars:[{lowerCase:"q",upperCase:"Q"}]},{width:1/11,chars:[{lowerCase:"w",upperCase:"W"}]},{width:1/11,chars:[{lowerCase:"e",upperCase:"E"}]},{width:1/11,chars:[{lowerCase:"r",upperCase:"R"}]},{width:1/11,chars:[{lowerCase:"t",upperCase:"T"}]},{width:1/11,chars:[{lowerCase:"y",upperCase:"Y"}]},{width:1/11,chars:[{lowerCase:"u",upperCase:"U"}]},{width:1/11,chars:[{lowerCase:"i",upperCase:"I"}]},{width:1/11,chars:[{lowerCase:"o",upperCase:"O"}]},{width:1/11,chars:[{lowerCase:"p",upperCase:"P"}]},{width:1/11,chars:[{lowerCase:"å",upperCase:"Å"}]}],[{width:1/11,chars:[{lowerCase:"a",upperCase:"A"}]},{width:1/11,chars:[{lowerCase:"s",upperCase:"S"}]},{width:1/11,chars:[{lowerCase:"d",upperCase:"D"}]},{width:1/11,chars:[{lowerCase:"f",upperCase:"F"}]},{width:1/11,chars:[{lowerCase:"g",upperCase:"G"}]},{width:1/11,chars:[{lowerCase:"h",upperCase:"H"}]},{width:1/11,chars:[{lowerCase:"j",upperCase:"J"}]},{width:1/11,chars:[{lowerCase:"k",upperCase:"K"}]},{width:1/11,chars:[{lowerCase:"l",upperCase:"L"}]},{width:1/11,chars:[{lowerCase:"æ",upperCase:"Æ"}]},{width:1/11,chars:[{lowerCase:"ø",upperCase:"Ø"}]}],[{width:2/11,command:"shift",chars:[{icon:"shift"}]},{width:1/11,chars:[{lowerCase:"z",upperCase:"Z"}]},{width:1/11,chars:[{lowerCase:"x",upperCase:"X"}]},{width:1/11,chars:[{lowerCase:"c",upperCase:"C"}]},{width:1/11,chars:[{lowerCase:"v",upperCase:"V"}]},{width:1/11,chars:[{lowerCase:"b",upperCase:"B"}]},{width:1/11,chars:[{lowerCase:"n",upperCase:"N"}]},{width:1/11,chars:[{lowerCase:"m",upperCase:"M"}]},{width:2/11,command:"backspace",chars:[{icon:"backspace"}]}],[{width:.2,command:"switch",chars:[{lowerCase:".?12"}]},{width:.1,chars:[{lowerCase:","}]},{width:.4,command:"space",chars:[{icon:"space"}]},{width:.1,chars:[{lowerCase:"."}]},{width:.2,command:"enter",chars:[{icon:"enter"}]}]],[[{width:.1,chars:[{lowerCase:"1"}]},{width:.1,chars:[{lowerCase:"2"}]},{width:.1,chars:[{lowerCase:"3"}]},{width:.1,chars:[{lowerCase:"4"}]},{width:.1,chars:[{lowerCase:"5"}]},{width:.1,chars:[{lowerCase:"6"}]},{width:.1,chars:[{lowerCase:"7"}]},{width:.1,chars:[{lowerCase:"8"}]},{width:.1,chars:[{lowerCase:"9"}]},{width:.1,chars:[{lowerCase:"0"}]}],[{width:.1,chars:[{lowerCase:"@"}]},{width:.1,chars:[{lowerCase:"#"}]},{width:.1,chars:[{lowerCase:"|"}]},{width:.1,chars:[{lowerCase:"_"}]},{width:.1,chars:[{lowerCase:"&"}]},{width:.1,chars:[{lowerCase:"-"}]},{width:.1,chars:[{lowerCase:"+"}]},{width:.1,chars:[{lowerCase:"("}]},{width:.1,chars:[{lowerCase:")"}]},{width:.1,chars:[{lowerCase:"/"}]}],[{width:.1,chars:[{lowerCase:"="}]},{width:.1,chars:[{lowerCase:"*"}]},{width:.1,chars:[{lowerCase:'"'}]},{width:.1,chars:[{lowerCase:"'"}]},{width:.1,chars:[{lowerCase:":"}]},{width:.1,chars:[{lowerCase:";"}]},{width:.1,chars:[{lowerCase:"!"}]},{width:.1,chars:[{lowerCase:"?"}]},{width:.2,command:"backspace",chars:[{icon:"backspace"}]}],[{width:.2,command:"switch",chars:[{lowerCase:".?12"}]},{width:.1,chars:[{lowerCase:","}]},{width:.4,command:"space",chars:[{icon:"space"}]},{width:.1,chars:[{lowerCase:"."}]},{width:.2,command:"enter",chars:[{icon:"enter"}]}]]]},n9=new Te.TextureLoader;class l2 extends Ga.withBase(Te.Object3D)(w1,Uh){constructor(t){t||(t={}),t.width||(t.width=1),t.height||(t.height=.4),t.margin||(t.margin=.003),t.padding||(t.padding=.01),super(t),this.currentPanel=0,this.isLowerCase=!0,this.charsetCount=1;let e;if(t.language||navigator.language)switch(t.language||navigator.language){case"fr":case"fr-CH":case"fr-CA":e=Co.fr;break;case"ru":this.charsetCount=2,e=Co.ru;break;case"de":case"de-DE":case"de-AT":case"de-LI":case"de-CH":e=Co.de;break;case"es":case"es-419":case"es-AR":case"es-CL":case"es-CO":case"es-ES":case"es-CR":case"es-US":case"es-HN":case"es-MX":case"es-PE":case"es-UY":case"es-VE":e=Co.es;break;case"el":this.charsetCount=2,e=Co.el;break;case"nord":e=Co.nord;break;default:e=Co.eng;break}else e=Co.eng;this.keys=[],this.panels=e.map(s=>{const i=t.height/s.length-t.margin*2,o=new qc({width:t.width+t.padding*2,height:t.height+t.padding*2,offset:0,padding:t.padding,fontFamily:t.fontFamily,fontTexture:t.fontTexture,backgroundColor:t.backgroundColor,backgroundOpacity:t.backgroundOpacity});return o.charset=0,o.add(...s.map(r=>{const a=new qc({width:t.width,height:i,margin:t.margin,contentDirection:"row",justifyContent:"center"});a.frame.visible=!1;const c=[];return r.forEach(u=>{const l=new qc({width:t.width*u.width-t.margin*2,height:i,margin:t.margin,justifyContent:"center",offset:0}),d=u.chars[o.charset].lowerCase||u.chars[o.charset].icon||"undif";if(d==="enter"&&t.enterTexture||d==="shift"&&t.shiftTexture||d==="backspace"&&t.backspaceTexture){const h=(()=>{switch(d){case"backspace":return t.backspaceTexture;case"enter":return t.enterTexture;case"shift":return t.shiftTexture;default:console.warn("There is no icon image for this key")}})();n9.load(h,f=>{l.add(new E1({width:l.width*.65,height:l.height*.65,backgroundSize:"contain",backgroundTexture:f}))})}else l.add(new T1({content:d,offset:0}));l.type="Key",l.info=u,l.info.input=d,l.panel=o,c.push(l),this.keys.push(l)}),a.add(...c),a})),o}),this.add(this.panels[0]),this.set(t)}setNextPanel(){this.panels.forEach(t=>{this.remove(t)}),this.currentPanel=(this.currentPanel+1)%this.panels.length,this.add(this.panels[this.currentPanel]),this.update(!0,!0,!0)}setNextCharset(){this.panels[this.currentPanel].charset=(this.panels[this.currentPanel].charset+1)%this.charsetCount,this.keys.forEach(t=>{if(!this.panels[this.currentPanel].getObjectById(t.id))return;const s=t.info.chars[t.panel.charset]||t.info.chars[0],i=this.isLowerCase||!s.upperCase?s.lowerCase:s.upperCase;if(!t.childrenTexts.length)return;const o=t.childrenTexts[0];t.info.input=i,o.set({content:i}),o.update(!0,!0,!0)})}toggleCase(){this.isLowerCase=!this.isLowerCase,this.keys.forEach(t=>{const e=t.info.chars[t.panel.charset]||t.info.chars[0],s=this.isLowerCase||!e.upperCase?e.lowerCase:e.upperCase;if(!t.childrenTexts.length)return;const i=t.childrenTexts[0];t.info.input=s,i.set({content:s}),i.update(!0,!0,!0)})}parseParams(){}updateLayout(){}updateInner(){}}const d2=()=>vr.update(),h2={Block:qc,Text:T1,InlineBlock:E1,Keyboard:l2,FontLibrary:su,update:d2,TextAlign:$h,Whitespace:Dh,JustifyContent:kh,AlignItems:Nh,ContentDirection:Ah};typeof global<"u"&&(global.ThreeMeshUI=h2);const s9=h2;Ps.g1;Ps.gO;Ps.km;Ps.zV;Ps.ol;Ps.uM;Ps.N1;Ps.xv;Ps.PH;Ps.UH;var Ea=Ps.ZP;Ps.Vx;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const i9=1e-7,o9=1e-4;class f2{constructor(t,e){this.backend=t,this.dataMover=e,this.data=new WeakMap,this.dataIdsCount=0}get(t){return this.data.has(t)||this.dataMover.moveData(this.backend,t),this.data.get(t)}set(t,e){this.dataIdsCount++,this.data.set(t,e)}has(t){return this.data.has(t)}delete(t){return this.dataIdsCount--,this.data.delete(t)}numDataIds(){return this.dataIdsCount}}class I1{refCount(t){return ws("refCount")}incRef(t){return ws("incRef")}timerAvailable(){return!0}time(t){return ws("time")}read(t){return ws("read")}readSync(t){return ws("readSync")}readToGPU(t,e){return ws("readToGPU")}numDataIds(){return ws("numDataIds")}disposeData(t,e){return ws("disposeData")}write(t,e,s){return ws("write")}move(t,e,s,i,o){return ws("move")}createTensorFromGPUData(t,e,s){return ws("createTensorFromGPUData")}memory(){return ws("memory")}floatPrecision(){return ws("floatPrecision")}epsilon(){return this.floatPrecision()===32?i9:o9}dispose(){return ws("dispose")}}function ws(n){throw new Error(`'${n}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function r9(n){let t=n.length,e=0;for(;t>0;)e=Math.random()*t|0,t--,wa(n,t,e)}function Rr(n,t,e){return Math.max(n,Math.min(t,e))}function R1(n){return n%2===0?n:n+1}function wa(n,t,e){const s=n[t];n[t]=n[e],n[e]=s}function a9(n){let t=0;for(let e=0;e<n.length;e++)t+=n[e];return t}function k(n,t){if(!n)throw new Error(typeof t=="string"?t:t())}function M1(n,t,e=""){k(Pe(n,t),()=>e+` Shapes ${n} and ${t} must match`)}function p2(n){k(n!=null,()=>"The input to the tensor constructor must be a non-null value.")}function ct(n){if(n.length===0)return 1;let t=n[0];for(let e=1;e<n.length;e++)t*=n[e];return t}function Pe(n,t){if(n===t)return!0;if(n==null||t==null||n.length!==t.length)return!1;for(let e=0;e<n.length;e++)if(n[e]!==t[e])return!1;return!0}function Ha(n){return n%1===0}function l0(n){const t=Math.ceil(Math.sqrt(n));return[t,Math.ceil(n/t)]}function Da(n,t){return t<=n.length?n:n+" ".repeat(t-n.length)}function _b(n,t=i=>0,e,s){return new Promise((i,o)=>{let r=0;const a=()=>{if(n()){i();return}r++;const c=t(r);if(e!=null&&r>=e){o();return}s!=null?s(a,c):setTimeout(a,c)};a()})}function m2(n,t){let e=1,s=-1;for(let o=0;o<n.length;++o)if(n[o]>=0)e*=n[o];else if(n[o]===-1){if(s!==-1)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${s} and dim ${o}`);s=o}else if(n[o]<0)throw Error(`Shapes can not be < 0. Found ${n[o]} at dim ${o}`);if(s===-1){if(t>0&&t!==e)throw Error(`Size(${t}) must match the product of shape ${n}`);return n}if(e===0)throw Error(`Cannot infer the missing size in [${n}] when there are 0 elements`);if(t%e!==0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${e}`);const i=n.slice();return i[s]=t/e,i}function ve(n,t){const e=t.length;return n=n==null?t.map((s,i)=>i):[].concat(n),k(n.every(s=>s>=-e&&s<e),()=>`All values in axis param must be in range [-${e}, ${e}) but got axis ${n}`),k(n.every(s=>Ha(s)),()=>`All values in axis param must be integers but got axis ${n}`),n.map(s=>s<0?e+s:s)}function Go(n,t){const e=[],s=[],i=t!=null&&Array.isArray(t)&&t.length===0,o=t==null||i?null:ve(t,n).sort();let r=0;for(let a=0;a<n.length;++a){if(o!=null){if(o[r]===a&&n[a]!==1)throw new Error(`Can't squeeze axis ${a} since its dim '${n[a]}' is not 1`);(o[r]==null||o[r]>a)&&n[a]===1&&(e.push(n[a]),s.push(a)),o[r]<=a&&r++}n[a]!==1&&(e.push(n[a]),s.push(a))}return{newShape:e,keptDims:s}}function qn(n,t){return fn(n,t)}function fn(n,t){let e=null;if(n==null||n==="float32")e=new Float32Array(t);else if(n==="int32")e=new Int32Array(t);else if(n==="bool")e=new Uint8Array(t);else if(n==="string")e=new Array(t);else throw new Error(`Unknown data type ${n}`);return e}function c9(n,t){for(let e=0;e<n.length;e++){const s=n[e];if(isNaN(s)||!isFinite(s))throw Error(`A tensor of type ${t} being uploaded contains ${s}.`)}}function u9(n){return n==="bool"||n==="complex64"||n==="float32"||n==="int32"||n==="string"}function g2(n,t){return!(t==="complex64"||t==="float32"&&n!=="complex64"||t==="int32"&&n!=="float32"&&n!=="complex64"||t==="bool"&&n==="bool")}function Jd(n){if(n==="float32"||n==="int32")return 4;if(n==="complex64")return 8;if(n==="bool")return 1;throw new Error(`Unknown dtype ${n}`)}function l9(n){if(n==null)return 0;let t=0;return n.forEach(e=>t+=e.length),t}function _u(n){return typeof n=="string"||n instanceof String}function d9(n){return typeof n=="boolean"}function d0(n){return typeof n=="number"}function ac(n){return Array.isArray(n)?ac(n[0]):n instanceof Float32Array?"float32":n instanceof Int32Array||n instanceof Uint8Array||n instanceof Uint8ClampedArray?"int32":d0(n)?"float32":_u(n)?"string":d9(n)?"bool":"float32"}function h0(n){return!!(n&&n.constructor&&n.call&&n.apply)}function f0(n,t){for(let e=t;e<n;++e)if(n%e===0)return e;return n}function Kt(n){const t=n.length;if(t<2)return[];const e=new Array(t-1);e[t-2]=n[t-1];for(let s=t-3;s>=0;--s)e[s]=e[s+1]*n[s+1];return e}function x2(n,t,e,s=!1){const i=new Array;if(t.length===1){const o=t[0]*(s?2:1);for(let r=0;r<o;r++)i[r]=e[n+r]}else{const o=t[0],r=t.slice(1),a=r.reduce((c,u)=>c*u)*(s?2:1);for(let c=0;c<o;c++)i[c]=x2(n+c*a,r,e,s)}return i}function yi(n,t,e=!1){if(n.length===0)return t[0];const s=n.reduce((i,o)=>i*o)*(e?2:1);if(s===0)return[];if(s!==t.length)throw new Error(`[${n}] does not match the input size ${t.length}${e?" for a complex tensor":""}.`);return x2(0,n,t,e)}function h9(n,t){if(Array.isArray(n))return n;if(t==="float32")return n instanceof Float32Array?n:new Float32Array(n);if(t==="int32")return n instanceof Int32Array?n:new Int32Array(n);if(t==="bool"||t==="string")return Uint8Array.from(new Int32Array(n));throw new Error(`Unknown dtype ${t}`)}function A1(n,t){const e=jn(n,t);for(let s=0;s<e.length;s++)e[s]=1;return e}function jn(n,t){if(t==null||t==="float32"||t==="complex64")return new Float32Array(n);if(t==="int32")return new Int32Array(n);if(t==="bool")return new Uint8Array(n);throw new Error(`Unknown data type ${t}`)}function y2(n,t){const e=n.reduce((s,i)=>s*i,1);if(t==null||t==="float32")return yi(n,new Float32Array(e));if(t==="int32")return yi(n,new Int32Array(e));if(t==="bool")return yi(n,new Uint8Array(e));throw new Error(`Unknown data type ${t}`)}function fo(n){n.forEach(t=>{k(Number.isInteger(t)&&t>=0,()=>`Tensor must have a shape comprised of positive integers but got shape [${n}].`)})}function Fi(n,t,e){if(t===0)return 0;if(t===1)return n[0];let s=n[n.length-1];for(let i=0;i<n.length-1;++i)s+=e[i]*n[i];return s}function cc(n,t,e){if(t===0)return[];if(t===1)return[n];const s=new Array(t);for(let i=0;i<s.length-1;++i)s[i]=Math.floor(n/e[i]),n-=s[i]*e[i];return s[s.length-1]=n,s}function N1(n){return n&&n.then&&typeof n.then=="function"}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Cb="tfjsflags";class f9{constructor(t){this.global=t,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=p9,this.populateURLFlags()}setPlatform(t,e){this.platform!=null&&(nt().getBool("IS_TEST")||nt().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${t}.`)),this.platformName=t,this.platform=e}registerFlag(t,e,s){if(this.flagRegistry[t]={evaluationFn:e,setHook:s},this.urlFlags[t]!=null){const i=this.urlFlags[t];nt().getBool("IS_TEST")||nt().getBool("PROD")||console.warn(`Setting feature override from URL ${t}: ${i}.`),this.set(t,i)}}async getAsync(t){return t in this.flags?this.flags[t]:(this.flags[t]=await this.evaluateFlag(t),this.flags[t])}get(t){if(t in this.flags)return this.flags[t];const e=this.evaluateFlag(t);if(N1(e))throw new Error(`Flag ${t} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[t]=e,this.flags[t]}getNumber(t){return this.get(t)}getBool(t){return this.get(t)}getString(t){return this.get(t)}getFlags(){return this.flags}get features(){return this.flags}set(t,e){if(this.flagRegistry[t]==null)throw new Error(`Cannot set flag ${t} as it has not been registered.`);this.flags[t]=e,this.flagRegistry[t].setHook!=null&&this.flagRegistry[t].setHook(e)}evaluateFlag(t){if(this.flagRegistry[t]==null)throw new Error(`Cannot evaluate flag '${t}': no evaluation function found.`);return this.flagRegistry[t].evaluationFn()}setFlags(t){this.flags=Object.assign({},t)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(typeof this.global>"u"||typeof this.global.location>"u"||typeof this.global.location.search>"u")return;const t=this.getQueryParams(this.global.location.search);Cb in t&&t[Cb].split(",").forEach(s=>{const[i,o]=s.split(":");this.urlFlags[i]=g9(i,o)})}}function p9(n){const t={};return n.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(e,...s)=>(m9(t,s[0],s[1]),s.join("="))),t}function m9(n,t,e){n[decodeURIComponent(t)]=decodeURIComponent(e||"")}function g9(n,t){const e=t.toLowerCase();return e==="true"||e==="false"?e==="true":`${+e}`===e?+e:t}function nt(){return b2}let b2=null;function x9(n){b2=n}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Zp;function w2(){if(Zp==null){let n;if(typeof window<"u")n=window;else if(typeof global<"u")n=global;else if(typeof process<"u")n=process;else if(typeof self<"u")n=self;else throw new Error("Could not find a global object");Zp=n}return Zp}function y9(){const n=w2();return n._tfGlobals==null&&(n._tfGlobals=new Map),n._tfGlobals}function k1(n,t){const e=y9();if(e.has(n))return e.get(n);{const s=t();return e.set(n,s),e.get(n)}}const Bh="Abs",Cu="Acos",Su="Acosh",uc="Add",D1="AddN",$1="All",F1="Any",zh="ArgMax",Vh="ArgMin",Tu="Asin",Eu="Asinh",Iu="Atan",Ru="Atanh",Mu="Atan2",Wh="AvgPool",P1="AvgPoolGrad",Gh="AvgPool3D",L1="AvgPool3DGrad",Hh="BatchMatMul",Xh="BatchToSpaceND",O1="Bincount",U1="BitwiseAnd",b9="BroadcastTo",v2="BroadcastArgs",Au="Cast",Nu="Ceil",ku="ClipByValue",B1="Complex",qh="ComplexAbs",jh="Concat",Kh="Conv2D",z1="Conv2DBackpropFilter",Yh="Conv2DBackpropInput",Zh="Conv3D",V1="Conv3DBackpropFilterV2",W1="Conv3DBackpropInputV2",Du="Cos",$u="Cosh",G1="Cumprod",Jh="Cumsum",H1="CropAndResize",X1="DenseBincount",q1="DepthToSpace",Qh="DepthwiseConv2dNative",j1="DepthwiseConv2dNativeBackpropFilter",K1="DepthwiseConv2dNativeBackpropInput",_2="Diag",tf="Dilation2D",p0="Dilation2DBackpropInput",m0="Dilation2DBackpropFilter",w9="Draw",Fu="RealDiv",Y1="Einsum",Pu="Elu",Z1="EluGrad",Lu="Erf",ef="Equal",Ou="Exp",nf="ExpandDims",Uu="Expm1",J1="FFT",Q1="Fill",tg="FlipLeftRight",Bu="Floor",zu="FloorDiv",sf="FusedBatchNorm",of="GatherV2",C2="GatherNd",rf="Greater",Vu="GreaterEqual",Wu="Identity",eg="IFFT",ng="Imag",Gu="IsFinite",Hu="IsInf",Xu="IsNan",af="LeakyRelu",cf="Less",uf="LessEqual",S2="LinSpace",qu="Log",ju="Log1p",lf="LogicalAnd",df="LogicalNot",hf="LogicalOr",v9="LogSoftmax",ff="LRN",sg="LRNGrad",pf="Max",Ku="Maximum",mf="MaxPool",ig="MaxPoolGrad",gf="MaxPool3D",og="MaxPool3DGrad",T2="MaxPoolWithArgmax",xf="Mean",yf="Min",Yu="Minimum",bf="MirrorPad",Zu="Mod",E2="Multinomial",Ju="Multiply",wf="Neg",vf="NotEqual",rg="NonMaxSuppressionV3",ag="NonMaxSuppressionV4",cg="NonMaxSuppressionV5",_f="OnesLike",Cf="OneHot",Sf="Pack",Tf="PadV2",Qu="Pow",Ef="Prelu",If="Prod",I2="RaggedGather",R2="RaggedRange",M2="RaggedTensorToTensor",ug="Range",lg="Real",tl="Reciprocal",el="Relu",Rf="Reshape",Mf="ResizeNearestNeighbor",dg="ResizeNearestNeighborGrad",Af="ResizeBilinear",hg="ResizeBilinearGrad",nl="Relu6",Nf="Reverse",sl="Round",il="Rsqrt",A2="ScatterNd",N2="TensorScatterUpdate",k2="SearchSorted",kf="Select",ol="Selu",Df="Slice",rl="Sin",al="Sinh",cl="Sign",ul="Sigmoid",ll="Softplus",dl="Sqrt",$f="Sum",Ff="SpaceToBatchND",Pf="SplitV",Lf="Softmax",D2="SparseFillEmptyRows",$2="SparseReshape",F2="SparseSegmentMean",P2="SparseSegmentSum",L2="SparseToDense",hl="SquaredDifference",fg="Square",pg="StaticRegexReplace",mg="StridedSlice",O2="StringNGrams",U2="StringSplit",B2="StringToHashBucketFast",fl="Sub",pl="Tan",ml="Tanh",gl="Tile",gg="TopK",xg="Transform",$a="Transpose",yg="Unique",Of="Unpack",Uf="UnsortedSegmentSum",Bf="ZerosLike",xl="Step",_9="FromPixels",bg="RotateWithOffset",Qd="_FusedMatMul",th="FusedConv2D",z2="FusedDepthwiseConv2D";/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ns(...n){nt().getBool("IS_TEST")||nt().getBool("PROD")||console.warn(...n)}function C9(...n){nt().getBool("IS_TEST")||nt().getBool("PROD")||console.log(...n)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eh=k1("kernelRegistry",()=>new Map),g0=k1("gradRegistry",()=>new Map);function Sb(n,t){const e=W2(n,t);return eh.get(e)}function Tb(n){return g0.get(n)}function Eb(n){const t=eh.entries(),e=[];for(;;){const{done:s,value:i}=t.next();if(s)break;const[o,r]=i,[a]=o.split("_");a===n&&e.push(r)}return e}function V2(n){const{kernelName:t,backendName:e}=n,s=W2(t,e);eh.has(s)&&Ns(`The kernel '${t}' for backend '${e}' is already registered`),eh.set(s,n)}function S9(n){const{kernelName:t}=n;g0.has(t)&&nt().getBool("DEBUG")&&Ns(`Overriding the gradient for '${t}'`),g0.set(t,n)}function W2(n,t){return`${t}_${n}`}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function G2(n){return n instanceof Float32Array||n instanceof Int32Array||n instanceof Uint8Array||n instanceof Uint8ClampedArray}function T9(n){return n&&n.__esModule&&Object.prototype.hasOwnProperty.call(n,"default")?n.default:n}function E9(n){if(Object.prototype.hasOwnProperty.call(n,"__esModule"))return n;var t=n.default;if(typeof t=="function"){var e=function s(){var i=!1;try{i=this instanceof s}catch{}return i?Reflect.construct(t,arguments,this.constructor):t.apply(this,arguments)};e.prototype=t.prototype}else e={};return Object.defineProperty(e,"__esModule",{value:!0}),Object.keys(n).forEach(function(s){var i=Object.getOwnPropertyDescriptor(n,s);Object.defineProperty(e,s,i.get?i:{enumerable:!0,get:function(){return n[s]}})}),e}var Jp,Ib;function I9(){if(Ib)return Jp;Ib=1,Jp=t;var n=null;try{n=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch{}function t(v,C,M){this.low=v|0,this.high=C|0,this.unsigned=!!M}t.prototype.__isLong__,Object.defineProperty(t.prototype,"__isLong__",{value:!0});function e(v){return(v&&v.__isLong__)===!0}t.isLong=e;var s={},i={};function o(v,C){var M,N,D;return C?(v>>>=0,(D=0<=v&&v<256)&&(N=i[v],N)?N:(M=a(v,(v|0)<0?-1:0,!0),D&&(i[v]=M),M)):(v|=0,(D=-128<=v&&v<128)&&(N=s[v],N)?N:(M=a(v,v<0?-1:0,!1),D&&(s[v]=M),M))}t.fromInt=o;function r(v,C){if(isNaN(v))return C?y:m;if(C){if(v<0)return y;if(v>=p)return E}else{if(v<=-x)return I;if(v+1>=x)return T}return v<0?r(-v,C).neg():a(v%f|0,v/f|0,C)}t.fromNumber=r;function a(v,C,M){return new t(v,C,M)}t.fromBits=a;var c=Math.pow;function u(v,C,M){if(v.length===0)throw Error("empty string");if(v==="NaN"||v==="Infinity"||v==="+Infinity"||v==="-Infinity")return m;if(typeof C=="number"?(M=C,C=!1):C=!!C,M=M||10,M<2||36<M)throw RangeError("radix");var N;if((N=v.indexOf("-"))>0)throw Error("interior hyphen");if(N===0)return u(v.substring(1),C,M).neg();for(var D=r(c(M,8)),$=m,F=0;F<v.length;F+=8){var B=Math.min(8,v.length-F),P=parseInt(v.substring(F,F+B),M);if(B<8){var V=r(c(M,B));$=$.mul(V).add(r(P))}else $=$.mul(D),$=$.add(r(P))}return $.unsigned=C,$}t.fromString=u;function l(v,C){return typeof v=="number"?r(v,C):typeof v=="string"?u(v,C):a(v.low,v.high,typeof C=="boolean"?C:v.unsigned)}t.fromValue=l;var d=65536,h=1<<24,f=d*d,p=f*f,x=p/2,g=o(h),m=o(0);t.ZERO=m;var y=o(0,!0);t.UZERO=y;var w=o(1);t.ONE=w;var b=o(1,!0);t.UONE=b;var _=o(-1);t.NEG_ONE=_;var T=a(-1,2147483647,!1);t.MAX_VALUE=T;var E=a(-1,-1,!0);t.MAX_UNSIGNED_VALUE=E;var I=a(0,-2147483648,!1);t.MIN_VALUE=I;var S=t.prototype;return S.toInt=function(){return this.unsigned?this.low>>>0:this.low},S.toNumber=function(){return this.unsigned?(this.high>>>0)*f+(this.low>>>0):this.high*f+(this.low>>>0)},S.toString=function(C){if(C=C||10,C<2||36<C)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative())if(this.eq(I)){var M=r(C),N=this.div(M),D=N.mul(M).sub(this);return N.toString(C)+D.toInt().toString(C)}else return"-"+this.neg().toString(C);for(var $=r(c(C,6),this.unsigned),F=this,B="";;){var P=F.div($),V=F.sub(P.mul($)).toInt()>>>0,q=V.toString(C);if(F=P,F.isZero())return q+B;for(;q.length<6;)q="0"+q;B=""+q+B}},S.getHighBits=function(){return this.high},S.getHighBitsUnsigned=function(){return this.high>>>0},S.getLowBits=function(){return this.low},S.getLowBitsUnsigned=function(){return this.low>>>0},S.getNumBitsAbs=function(){if(this.isNegative())return this.eq(I)?64:this.neg().getNumBitsAbs();for(var C=this.high!=0?this.high:this.low,M=31;M>0&&(C&1<<M)==0;M--);return this.high!=0?M+33:M+1},S.isZero=function(){return this.high===0&&this.low===0},S.eqz=S.isZero,S.isNegative=function(){return!this.unsigned&&this.high<0},S.isPositive=function(){return this.unsigned||this.high>=0},S.isOdd=function(){return(this.low&1)===1},S.isEven=function(){return(this.low&1)===0},S.equals=function(C){return e(C)||(C=l(C)),this.unsigned!==C.unsigned&&this.high>>>31===1&&C.high>>>31===1?!1:this.high===C.high&&this.low===C.low},S.eq=S.equals,S.notEquals=function(C){return!this.eq(C)},S.neq=S.notEquals,S.ne=S.notEquals,S.lessThan=function(C){return this.comp(C)<0},S.lt=S.lessThan,S.lessThanOrEqual=function(C){return this.comp(C)<=0},S.lte=S.lessThanOrEqual,S.le=S.lessThanOrEqual,S.greaterThan=function(C){return this.comp(C)>0},S.gt=S.greaterThan,S.greaterThanOrEqual=function(C){return this.comp(C)>=0},S.gte=S.greaterThanOrEqual,S.ge=S.greaterThanOrEqual,S.compare=function(C){if(e(C)||(C=l(C)),this.eq(C))return 0;var M=this.isNegative(),N=C.isNegative();return M&&!N?-1:!M&&N?1:this.unsigned?C.high>>>0>this.high>>>0||C.high===this.high&&C.low>>>0>this.low>>>0?-1:1:this.sub(C).isNegative()?-1:1},S.comp=S.compare,S.negate=function(){return!this.unsigned&&this.eq(I)?I:this.not().add(w)},S.neg=S.negate,S.add=function(C){e(C)||(C=l(C));var M=this.high>>>16,N=this.high&65535,D=this.low>>>16,$=this.low&65535,F=C.high>>>16,B=C.high&65535,P=C.low>>>16,V=C.low&65535,q=0,J=0,it=0,ut=0;return ut+=$+V,it+=ut>>>16,ut&=65535,it+=D+P,J+=it>>>16,it&=65535,J+=N+B,q+=J>>>16,J&=65535,q+=M+F,q&=65535,a(it<<16|ut,q<<16|J,this.unsigned)},S.subtract=function(C){return e(C)||(C=l(C)),this.add(C.neg())},S.sub=S.subtract,S.multiply=function(C){if(this.isZero())return m;if(e(C)||(C=l(C)),n){var M=n.mul(this.low,this.high,C.low,C.high);return a(M,n.get_high(),this.unsigned)}if(C.isZero())return m;if(this.eq(I))return C.isOdd()?I:m;if(C.eq(I))return this.isOdd()?I:m;if(this.isNegative())return C.isNegative()?this.neg().mul(C.neg()):this.neg().mul(C).neg();if(C.isNegative())return this.mul(C.neg()).neg();if(this.lt(g)&&C.lt(g))return r(this.toNumber()*C.toNumber(),this.unsigned);var N=this.high>>>16,D=this.high&65535,$=this.low>>>16,F=this.low&65535,B=C.high>>>16,P=C.high&65535,V=C.low>>>16,q=C.low&65535,J=0,it=0,ut=0,G=0;return G+=F*q,ut+=G>>>16,G&=65535,ut+=$*q,it+=ut>>>16,ut&=65535,ut+=F*V,it+=ut>>>16,ut&=65535,it+=D*q,J+=it>>>16,it&=65535,it+=$*V,J+=it>>>16,it&=65535,it+=F*P,J+=it>>>16,it&=65535,J+=N*q+D*V+$*P+F*B,J&=65535,a(ut<<16|G,J<<16|it,this.unsigned)},S.mul=S.multiply,S.divide=function(C){if(e(C)||(C=l(C)),C.isZero())throw Error("division by zero");if(n){if(!this.unsigned&&this.high===-2147483648&&C.low===-1&&C.high===-1)return this;var M=(this.unsigned?n.div_u:n.div_s)(this.low,this.high,C.low,C.high);return a(M,n.get_high(),this.unsigned)}if(this.isZero())return this.unsigned?y:m;var N,D,$;if(this.unsigned){if(C.unsigned||(C=C.toUnsigned()),C.gt(this))return y;if(C.gt(this.shru(1)))return b;$=y}else{if(this.eq(I)){if(C.eq(w)||C.eq(_))return I;if(C.eq(I))return w;var F=this.shr(1);return N=F.div(C).shl(1),N.eq(m)?C.isNegative()?w:_:(D=this.sub(C.mul(N)),$=N.add(D.div(C)),$)}else if(C.eq(I))return this.unsigned?y:m;if(this.isNegative())return C.isNegative()?this.neg().div(C.neg()):this.neg().div(C).neg();if(C.isNegative())return this.div(C.neg()).neg();$=m}for(D=this;D.gte(C);){N=Math.max(1,Math.floor(D.toNumber()/C.toNumber()));for(var B=Math.ceil(Math.log(N)/Math.LN2),P=B<=48?1:c(2,B-48),V=r(N),q=V.mul(C);q.isNegative()||q.gt(D);)N-=P,V=r(N,this.unsigned),q=V.mul(C);V.isZero()&&(V=w),$=$.add(V),D=D.sub(q)}return $},S.div=S.divide,S.modulo=function(C){if(e(C)||(C=l(C)),n){var M=(this.unsigned?n.rem_u:n.rem_s)(this.low,this.high,C.low,C.high);return a(M,n.get_high(),this.unsigned)}return this.sub(this.div(C).mul(C))},S.mod=S.modulo,S.rem=S.modulo,S.not=function(){return a(~this.low,~this.high,this.unsigned)},S.and=function(C){return e(C)||(C=l(C)),a(this.low&C.low,this.high&C.high,this.unsigned)},S.or=function(C){return e(C)||(C=l(C)),a(this.low|C.low,this.high|C.high,this.unsigned)},S.xor=function(C){return e(C)||(C=l(C)),a(this.low^C.low,this.high^C.high,this.unsigned)},S.shiftLeft=function(C){return e(C)&&(C=C.toInt()),(C&=63)===0?this:C<32?a(this.low<<C,this.high<<C|this.low>>>32-C,this.unsigned):a(0,this.low<<C-32,this.unsigned)},S.shl=S.shiftLeft,S.shiftRight=function(C){return e(C)&&(C=C.toInt()),(C&=63)===0?this:C<32?a(this.low>>>C|this.high<<32-C,this.high>>C,this.unsigned):a(this.high>>C-32,this.high>=0?0:-1,this.unsigned)},S.shr=S.shiftRight,S.shiftRightUnsigned=function(C){if(e(C)&&(C=C.toInt()),C&=63,C===0)return this;var M=this.high;if(C<32){var N=this.low;return a(N>>>C|M<<32-C,M>>>C,this.unsigned)}else return C===32?a(M,0,this.unsigned):a(M>>>C-32,0,this.unsigned)},S.shru=S.shiftRightUnsigned,S.shr_u=S.shiftRightUnsigned,S.toSigned=function(){return this.unsigned?a(this.low,this.high,!1):this},S.toUnsigned=function(){return this.unsigned?this:a(this.low,this.high,!0)},S.toBytes=function(C){return C?this.toBytesLE():this.toBytesBE()},S.toBytesLE=function(){var C=this.high,M=this.low;return[M&255,M>>>8&255,M>>>16&255,M>>>24,C&255,C>>>8&255,C>>>16&255,C>>>24]},S.toBytesBE=function(){var C=this.high,M=this.low;return[C>>>24,C>>>16&255,C>>>8&255,C&255,M>>>24,M>>>16&255,M>>>8&255,M&255]},t.fromBytes=function(C,M,N){return N?t.fromBytesLE(C,M):t.fromBytesBE(C,M)},t.fromBytesLE=function(C,M){return new t(C[0]|C[1]<<8|C[2]<<16|C[3]<<24,C[4]|C[5]<<8|C[6]<<16|C[7]<<24,M)},t.fromBytesBE=function(C,M){return new t(C[4]<<24|C[5]<<16|C[6]<<8|C[7],C[0]<<24|C[1]<<16|C[2]<<8|C[3],M)},Jp}var H2=I9();const X2=T9(H2),R9=a3({__proto__:null,default:X2},[H2]);/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fr=X2||R9;function zf(n){return fr.fromString(n,!0,16)}const q2=zf("c3a5c85c97cb3127"),lr=zf("b492b66fbe98f273"),is=zf("9ae16a3b2f90404f");function x0(n){return n.xor(n.shru(47))}function j2(n,t,e){const s=n.slice(t,t+e);return fr.fromBytes(Array.from(s),!0,!0)}function Ye(n,t){return j2(n,t,8)}function Rb(n,t){return j2(n,t,4)}function An(n,t){return t===0?n:n.shru(t).or(n.shl(64-t))}function No(n,t,e=zf("9ddfea08eb382d69")){let s=n.xor(t).mul(e);s=s.xor(s.shru(47));let i=t.xor(s).mul(e);return i=i.xor(i.shru(47)),i=i.mul(e),i}function M9(n,t,e,s,i,o){i=i.add(n),o=An(o.add(i).add(s),21);const r=i;return i=i.add(t),i=i.add(e),o=o.add(An(i,44)),[i.add(s),o.add(r)]}function fd(n,t,e,s){return M9(Ye(n,t),Ye(n,t+8),Ye(n,t+16),Ye(n,t+24),e,s)}function A9(n,t=n.length){if(t>=8){const e=is.add(t*2),s=Ye(n,0).add(is),i=Ye(n,t-8),o=An(i,37).mul(e).add(s),r=An(s,25).add(i).mul(e);return No(o,r,e)}if(t>=4){const e=is.add(t*2),s=Rb(n,0);return No(s.shl(3).add(t),Rb(n,t-4),e)}if(t>0){const e=n[0],s=n[t>>1],i=n[t-1],o=e+(s<<8),r=t+(i<<2);return x0(is.mul(o).xor(q2.mul(r))).mul(is)}return is}function N9(n,t=n.length){const e=is.add(t*2),s=Ye(n,0).mul(lr),i=Ye(n,8),o=Ye(n,t-8).mul(e),r=Ye(n,t-16).mul(is);return No(An(s.add(i),43).add(An(o,30)).add(r),s.add(An(i.add(is),18)).add(o),e)}function k9(n,t=n.length){const e=is.add(t*2),s=Ye(n,0).mul(is),i=Ye(n,8),o=Ye(n,t-8).mul(e),r=Ye(n,t-16).mul(is),a=An(s.add(i),43).add(An(o,30)).add(r),c=No(a,s.add(An(i.add(is),18)).add(o),e),u=Ye(n,16).mul(e),l=Ye(n,24),d=a.add(Ye(n,t-32)).mul(e),h=c.add(Ye(n,t-24)).mul(e);return No(An(u.add(l),43).add(An(d,30)).add(h),u.add(An(l.add(s),18)).add(d),e)}function D9(n,t=n.length){const e=fr.fromNumber(81,!0);if(t<=32)return t<=16?A9(n,t):N9(n,t);if(t<=64)return k9(n,t);let s=e,i=e.mul(lr).add(113),o=x0(i.mul(is).add(113)).mul(is),r=[fr.UZERO,fr.UZERO],a=[fr.UZERO,fr.UZERO];s=s.mul(is).add(Ye(n,0));let c=0;const u=(t-1>>6)*64,l=u+(t-1&63)-63;do s=An(s.add(i).add(r[0]).add(Ye(n,c+8)),37).mul(lr),i=An(i.add(r[1]).add(Ye(n,c+48)),42).mul(lr),s=s.xor(a[1]),i=i.add(r[0]).add(Ye(n,c+40)),o=An(o.add(a[0]),33).mul(lr),r=fd(n,c,r[1].mul(lr),s.add(a[0])),a=fd(n,c+32,o.add(a[1]),i.add(Ye(n,c+16))),[o,s]=[s,o],c+=64;while(c!==u);const d=lr.add(o.and(255).shl(1));return c=l,a[0]=a[0].add(t-1&63),r[0]=r[0].add(a[0]),a[0]=a[0].add(r[0]),s=An(s.add(i).add(r[0]).add(Ye(n,c+8)),37).mul(d),i=An(i.add(r[1]).add(Ye(n,c+48)),42).mul(d),s=s.xor(a[1].mul(9)),i=i.add(r[0].mul(9).add(Ye(n,c+40))),o=An(o.add(a[0]),33).mul(d),r=fd(n,c,r[1].mul(d),s.add(a[0])),a=fd(n,c+32,o.add(a[1]),i.add(Ye(n,c+16))),[o,s]=[s,o],No(No(r[0],a[0],d).add(x0(i).mul(q2)).add(o),No(r[1],a[1],d).add(s),d)}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ho(n,t){return t==="string"?ko(n):Gr([n],t)}function $9(n,t){return n instanceof Float32Array&&t==="float32"||n instanceof Int32Array&&t==="int32"||n instanceof Uint8Array&&t==="bool"}function Gr(n,t){if(t==="string")throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(n)&&(n=Mr(n)),nt().getBool("DEBUG")&&c9(n,t),$9(n,t))return n;if(t==null||t==="float32"||t==="complex64")return new Float32Array(n);if(t==="int32")return new Int32Array(n);if(t==="bool"){const e=new Uint8Array(n.length);for(let s=0;s<e.length;++s)Math.round(n[s])!==0&&(e[s]=1);return e}else throw new Error(`Unknown data type ${t}`)}function hs(){return nt().platform.now()}function ko(n,t="utf-8"){return t=t||"utf-8",nt().platform.encode(n,t)}function Lo(n,t="utf-8"){return t=t||"utf-8",nt().platform.decode(n,t)}function Qs(n){return nt().platform.isTypedArray!=null?nt().platform.isTypedArray(n):G2(n)}function Mr(n,t=[],e=!1){if(t==null&&(t=[]),typeof n=="boolean"||typeof n=="number"||typeof n=="string"||N1(n)||n==null||Qs(n)&&e)t.push(n);else if(Array.isArray(n)||Qs(n))for(let s=0;s<n.length;++s)Mr(n[s],t,e);else{let s=-1;for(const i of Object.keys(n))/^([1-9]+[0-9]*|0)$/.test(i)&&(s=Math.max(s,Number(i)));for(let i=0;i<=s;i++)Mr(n[i],t,e)}return t}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class F9{constructor(t,e){this.backendTimer=t,this.logger=e,e==null&&(this.logger=new L9)}profileKernel(t,e,s){let i;const o=()=>{i=s()};let r;const a=hs();if(this.backendTimer.timerAvailable())r=this.backendTimer.time(o);else{o();for(const u of i)u.dataSync();r=Promise.resolve({kernelMs:hs()-a})}if(nt().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let u=0;u<i.length;u++){const l=i[u];l.data().then(d=>{P9(d,l.dtype,t)})}return{kernelName:t,outputs:i,inputs:e,timeMs:r.then(u=>u.kernelMs),extraInfo:r.then(u=>u.getExtraProfileInfo!=null?u.getExtraProfileInfo():"")}}logKernelProfile(t){const{kernelName:e,outputs:s,timeMs:i,inputs:o,extraInfo:r}=t;s.forEach(a=>{Promise.all([a.data(),i,r]).then(c=>{this.logger.logKernelProfile(e,a,c[0],c[1],o,c[2])})})}}function P9(n,t,e){if(t!=="float32")return!1;for(let s=0;s<n.length;s++){const i=n[s];if(isNaN(i)||!isFinite(i))return console.warn(`Found ${i} in the result of '${e}'`),!0}return!1}class L9{logKernelProfile(t,e,s,i,o,r){const a=typeof i=="number"?Da(`${i}ms`,9):i.error,c=Da(t,25),u=e.rank,l=e.size,d=Da(e.shape.toString(),14);let h="";for(const f in o){const p=o[f];if(p!=null){const x=p.shape||e.shape,g=x.length;h+=`${f}: ${g}D ${g>0?x:""} `}}console.log(`%c${c}	%c${a}	%c${u}D ${d}	%c${l}	%c${h}	%c${r}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function O9(n,t,e){const s={},i={};for(let c=0;c<t.length;c++)s[t[c].id]=!0;for(let c=0;c<n.length;c++){const u=n[c],l=u.inputs;for(const d in l){const h=l[d];let f=!1;for(let p=0;p<t.length;p++)if(s[h.id]){u.outputs.forEach(x=>s[x.id]=!0),f=!0,i[u.id]=!0;break}if(f)break}}const o={};o[e.id]=!0;const r={};for(let c=n.length-1;c>=0;c--){const u=n[c],l=u.inputs;for(let d=0;d<u.outputs.length;d++)if(o[u.outputs[d].id]){for(const h in l)o[l[h].id]=!0,r[u.id]=!0;break}}const a=[];for(let c=0;c<n.length;c++){const u=n[c];if(i[u.id]&&r[u.id]){const l={};for(const h in u.inputs){const f=u.inputs[h];s[f.id]&&(l[h]=f)}const d=Object.assign({},u);d.inputs=l,d.outputs=u.outputs,a.push(d)}}return a}function U9(n,t,e,s){for(let i=t.length-1;i>=0;i--){const o=t[i],r=[];if(o.outputs.forEach(c=>{const u=n[c.id];u!=null?r.push(u):r.push(null)}),o.gradient==null)throw new Error(`Cannot compute gradient: gradient function not found for ${o.kernelName}.`);const a=o.gradient(r);for(const c in o.inputs){if(!(c in a))throw new Error(`Cannot backprop through input ${c}. Available gradients found: ${Object.keys(a)}.`);const u=e(()=>a[c]());if(u.dtype!=="float32")throw new Error(`Error in gradient for op ${o.kernelName}. The gradient of input ${c} must have 'float32' dtype, but has '${u.dtype}'`);const l=o.inputs[c];if(!Pe(u.shape,l.shape))throw new Error(`Error in gradient for op ${o.kernelName}. The gradient of input '${c}' has shape '${u.shape}', which does not match the shape of the input '${l.shape}'`);if(n[l.id]==null)n[l.id]=u;else{const d=n[l.id];n[l.id]=s(d,u),d.dispose()}}}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Mb=20,kc=3,Qp=7;function B9(n,t,e,s){const i=Kt(t),o=z9(n,t,e,i),r=t.length,a=Od(n,t,e,i,o),c=["Tensor"];return s&&(c.push(`  dtype: ${e}`),c.push(`  rank: ${r}`),c.push(`  shape: [${t}]`),c.push("  values:")),c.push(a.map(u=>"    "+u).join(`
`)),c.join(`
`)}function z9(n,t,e,s){const i=ct(t),o=s[s.length-1],r=new Array(o).fill(0),a=t.length,c=e==="complex64"?Oc(n):n;if(a>1)for(let u=0;u<i/o;u++){const l=u*o;for(let d=0;d<o;d++)r[d]=Math.max(r[d],Lc(c[l+d],0,e).length)}return r}function Lc(n,t,e){let s;return Array.isArray(n)?s=`${parseFloat(n[0].toFixed(Qp))} + ${parseFloat(n[1].toFixed(Qp))}j`:_u(n)?s=`'${n}'`:e==="bool"?s=K2(n):s=parseFloat(n.toFixed(Qp)).toString(),Da(s,t)}function K2(n){return n===0?"false":"true"}function Od(n,t,e,s,i,o=!0){const r=e==="complex64"?2:1,a=t[0],c=t.length;if(c===0){if(e==="complex64"){const x=Oc(n);return[Lc(x[0],0,e)]}return e==="bool"?[K2(n[0])]:[n[0].toString()]}if(c===1){if(a>Mb){const g=kc*r;let m=Array.from(n.slice(0,g)),y=Array.from(n.slice((a-kc)*r,a*r));return e==="complex64"&&(m=Oc(m),y=Oc(y)),["["+m.map((w,b)=>Lc(w,i[b],e)).join(", ")+", ..., "+y.map((w,b)=>Lc(w,i[a-kc+b],e)).join(", ")+"]"]}return["["+(e==="complex64"?Oc(n):Array.from(n)).map((g,m)=>Lc(g,i[m],e)).join(", ")+"]"]}const u=t.slice(1),l=s.slice(1),d=s[0]*r,h=[];if(a>Mb){for(let x=0;x<kc;x++){const g=x*d,m=g+d;h.push(...Od(n.slice(g,m),u,e,l,i,!1))}h.push("...");for(let x=a-kc;x<a;x++){const g=x*d,m=g+d;h.push(...Od(n.slice(g,m),u,e,l,i,x===a-1))}}else for(let x=0;x<a;x++){const g=x*d,m=g+d;h.push(...Od(n.slice(g,m),u,e,l,i,x===a-1))}const f=c===2?",":"";h[0]="["+(a>0?h[0]+f:"");for(let x=1;x<h.length-1;x++)h[x]=" "+h[x]+f;let p=`,
`;for(let x=2;x<c;x++)p+=`
`;return h[h.length-1]=" "+h[h.length-1]+"]"+(o?"":p),h}function Oc(n){const t=[];for(let e=0;e<n.length;e+=2)t.push([n[e],n[e+1]]);return t}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class On{constructor(t,e,s){if(this.dtype=e,this.shape=t.slice(),this.size=ct(t),s!=null){const i=s.length;k(i===this.size,()=>`Length of values '${i}' does not match the size inferred by the shape '${this.size}'.`)}if(e==="complex64")throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=s||fn(e,this.size),this.strides=Kt(t)}set(t,...e){e.length===0&&(e=[0]),k(e.length===this.rank,()=>`The number of provided coordinates (${e.length}) must match the rank (${this.rank})`);const s=this.locToIndex(e);this.values[s]=t}get(...t){t.length===0&&(t=[0]);let e=0;for(const i of t){if(i<0||i>=this.shape[e]){const o=`Requested out of range element at ${t}.   Buffer shape=${this.shape}`;throw new Error(o)}e++}let s=t[t.length-1];for(let i=0;i<t.length-1;++i)s+=this.strides[i]*t[i];return this.values[s]}locToIndex(t){if(this.rank===0)return 0;if(this.rank===1)return t[0];let e=t[t.length-1];for(let s=0;s<t.length-1;++s)e+=this.strides[s]*t[s];return e}indexToLoc(t){if(this.rank===0)return[];if(this.rank===1)return[t];const e=new Array(this.shape.length);for(let s=0;s<e.length-1;++s)e[s]=Math.floor(t/this.strides[s]),t-=e[s]*this.strides[s];return e[e.length-1]=t,e}get rank(){return this.shape.length}toTensor(){return hi().makeTensor(this.values,this.shape,this.dtype)}}let hi=null,va=null;function V9(n){hi=n}function W9(n){va=n}class _n{constructor(t,e,s,i){this.kept=!1,this.isDisposedInternal=!1,this.shape=t.slice(),this.dtype=e||"float32",this.size=ct(t),this.strides=Kt(t),this.dataId=s,this.id=i,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const t=await this.data();return va.buffer(this.shape,this.dtype,t)}bufferSync(){return va.buffer(this.shape,this.dtype,this.dataSync())}async array(){const t=await this.data();return yi(this.shape,t,this.dtype==="complex64")}arraySync(){return yi(this.shape,this.dataSync(),this.dtype==="complex64")}async data(){this.throwIfDisposed();const t=hi().read(this.dataId);if(this.dtype==="string"){const e=await t;try{return e.map(s=>Lo(s))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return t}dataToGPU(t){return this.throwIfDisposed(),hi().readToGPU(this.dataId,t)}dataSync(){this.throwIfDisposed();const t=hi().readSync(this.dataId);if(this.dtype==="string")try{return t.map(e=>Lo(e))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return t}async bytes(){this.throwIfDisposed();const t=await hi().read(this.dataId);return this.dtype==="string"?t:new Uint8Array(t.buffer)}dispose(){this.isDisposed||(this.kerasMask&&this.kerasMask.dispose(),hi().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(t=!1){return va.print(this,t)}clone(){return this.throwIfDisposed(),va.clone(this)}toString(t=!1){const e=this.dataSync();return B9(e,this.shape,this.dtype,t)}cast(t){return this.throwIfDisposed(),va.cast(this,t)}variable(t=!0,e,s){return this.throwIfDisposed(),hi().makeVariable(this,t,e,s)}}Object.defineProperty(_n,Symbol.hasInstance,{value:n=>!!n&&n.data!=null&&n.dataSync!=null&&n.throwIfDisposed!=null});function at(){return k1("Tensor",()=>_n)}at();class nh extends _n{constructor(t,e,s,i){super(t.shape,t.dtype,t.dataId,i),this.trainable=e,this.name=s}assign(t){if(t.dtype!==this.dtype)throw new Error(`dtype of the new value (${t.dtype}) and previous value (${this.dtype}) must match`);if(!Pe(t.shape,this.shape))throw new Error(`shape of the new value (${t.shape}) and previous value (${this.shape}) must match`);hi().disposeTensor(this),this.dataId=t.dataId,hi().incRef(this,null)}dispose(){hi().disposeVariable(this),this.isDisposedInternal=!0}}Object.defineProperty(nh,Symbol.hasInstance,{value:n=>n instanceof _n&&n.assign!=null&&n.assign instanceof Function});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Ab;(function(n){n.R0="R0",n.R1="R1",n.R2="R2",n.R3="R3",n.R4="R4",n.R5="R5",n.R6="R6"})(Ab||(Ab={}));var y0;(function(n){n.float32="float32",n.int32="int32",n.bool="int32",n.complex64="complex64"})(y0||(y0={}));var b0;(function(n){n.float32="float32",n.int32="int32",n.bool="bool",n.complex64="complex64"})(b0||(b0={}));var w0;(function(n){n.float32="float32",n.int32="float32",n.bool="float32",n.complex64="complex64"})(w0||(w0={}));var v0;(function(n){n.float32="complex64",n.int32="complex64",n.bool="complex64",n.complex64="complex64"})(v0||(v0={}));const G9={float32:w0,int32:y0,bool:b0,complex64:v0};function Ts(n,t){if(n==="string"||t==="string"){if(n==="string"&&t==="string")return"string";throw new Error(`Can not upcast ${n} with ${t}`)}return G9[n][t]}function wg(n){return Ts(n,"int32")}function Y2(n){return n!=null&&typeof n=="object"&&"texture"in n&&n.texture instanceof WebGLTexture}function Z2(n){return typeof GPUBuffer<"u"&&n!=null&&typeof n=="object"&&"buffer"in n&&n.buffer instanceof GPUBuffer}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pn(n,t){if(n.dtype===t.dtype)return[n,t];const e=Ts(n.dtype,t.dtype);return[n.cast(e),t.cast(e)]}function J2(n){const t=[];return Q2(n,t,new Set),t}function Q2(n,t,e){if(n==null)return;if(n instanceof _n){t.push(n);return}if(!H9(n))return;const s=n;for(const i in s){const o=s[i];e.has(o)||(e.add(o),Q2(o,t,e))}}function H9(n){return Array.isArray(n)||typeof n=="object"}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tm(n){return n.kernelName!=null}class Nb{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map(t=>t.name)))}}}dispose(){for(const t in this.registeredVariables)this.registeredVariables[t].dispose()}}class Xa{constructor(t){this.ENV=t,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new Nb}async ready(){if(this.pendingBackendInit!=null)return this.pendingBackendInit.then(()=>{});if(this.backendInstance!=null)return;const t=this.getSortedBackends();for(let e=0;e<t.length;e++){const s=t[e];if(await this.initializeBackend(s).success){await this.setBackend(s);return}}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(this.pendingBackendInit!=null)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(this.backendInstance==null){const{name:t,asyncInit:e}=this.initializeBackendsAndReturnBest();if(e)throw new Error(`The highest priority backend '${t}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(t)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(t){if(!(t in this.registry))if(t in this.registryFactory){const{asyncInit:e}=this.initializeBackend(t);if(e)return null}else return null;return this.registry[t]}findBackendFactory(t){return t in this.registryFactory?this.registryFactory[t].factory:null}registerBackend(t,e,s=1){return t in this.registryFactory?(Ns(`${t} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[t]={factory:e,priority:s},!0)}async setBackend(t){if(this.registryFactory[t]==null)throw new Error(`Backend name '${t}' not found in registry`);if(this.backendName=t,this.registry[t]==null){this.backendInstance=null;const{success:e,asyncInit:s}=this.initializeBackend(t);if(!(s?await e:e))return!1}return this.backendInstance=this.registry[t],this.setupRegisteredKernels(),this.profiler=new F9(this.backendInstance),!0}setupRegisteredKernels(){Eb(this.backendName).forEach(e=>{e.setupFunc!=null&&e.setupFunc(this.backendInstance)})}disposeRegisteredKernels(t){Eb(t).forEach(s=>{s.disposeFunc!=null&&s.disposeFunc(this.registry[t])})}initializeBackend(t){const e=this.registryFactory[t];if(e==null)throw new Error(`Cannot initialize backend ${t}, no registration found.`);try{const s=e.factory();if(s&&!(s instanceof I1)&&typeof s.then=="function"){const i=++this.pendingBackendInitId,o=s.then(r=>i<this.pendingBackendInitId?!1:(this.registry[t]=r,this.pendingBackendInit=null,!0)).catch(r=>(i<this.pendingBackendInitId||(this.pendingBackendInit=null,Ns(`Initialization of backend ${t} failed`),Ns(r.stack||r.message)),!1));return this.pendingBackendInit=o,{success:o,asyncInit:!0}}else return this.registry[t]=s,{success:!0,asyncInit:!1}}catch(s){return Ns(`Initialization of backend ${t} failed`),Ns(s.stack||s.message),{success:!1,asyncInit:!1}}}removeBackend(t){if(!(t in this.registryFactory))throw new Error(`${t} backend not found in registry`);this.backendName===t&&this.pendingBackendInit!=null&&this.pendingBackendInitId++,t in this.registry&&(this.disposeRegisteredKernels(t),this.registry[t].dispose(),delete this.registry[t]),delete this.registryFactory[t],this.backendName===t&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(Object.keys(this.registryFactory).length===0)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((t,e)=>this.registryFactory[e].priority-this.registryFactory[t].priority)}initializeBackendsAndReturnBest(){const t=this.getSortedBackends();for(let e=0;e<t.length;e++){const s=t[e],{success:i,asyncInit:o}=this.initializeBackend(s);if(o||i)return{name:s,asyncInit:o}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(t,e){const s=this.state.tensorInfo.get(e),i=s.backend,o=this.readSync(e),r=i.refCount(e);i.disposeData(e,!0),s.backend=t,t.move(e,o,s.shape,s.dtype,r),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(t,e){let s=null;if(e==null){if(typeof t!="function")throw new Error("Please provide a function to tidy()");e=t}else{if(typeof t!="string"&&!(t instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if(typeof e!="function")throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");s=t}let i;return this.scopedRun(()=>this.startScope(s),()=>this.endScope(i),()=>(i=e(),i instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),i))}scopedRun(t,e,s){t();try{const i=s();return e(),i}catch(i){throw e(),i}}nextTensorId(){return Xa.nextTensorId++}nextVariableId(){return Xa.nextVariableId++}clone(t){const e=X.runKernel(Wu,{x:t}),s={x:t},i=r=>({x:()=>{const a="float32",c={x:r},u={dtype:a};return X.runKernel(Au,c,u)}}),o=[];return this.addTapeNode(this.state.activeScope.name,s,[e],i,o,{}),e}runKernel(t,e,s){if(this.backendName==null&&this.backend,!(Sb(t,this.backendName)!=null))throw new Error(`Kernel '${t}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:t,inputs:e,attrs:s})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(t,e,s){const i=this.backend.numDataIds();let o=0;s.forEach(c=>{o+=c.dtype==="complex64"?3:1});const r=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],a=i-e-o-r;if(a>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${a} data ids) after running '${t}'`)}runKernelFunc(t){let e,s=[];const i=this.isTapeOn(),o=this.state.numBytes,r=this.state.numTensors;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0);let a;this.backendName==null&&this.backend;let c;const u=tm(t)?t.kernelName:this.state.activeScope!=null?this.state.activeScope.name:"";if(tm(t)){const{kernelName:p,inputs:x,attrs:g}=t;this.backendName==null&&this.backend;const m=Sb(p,this.backendName);k(m!=null,()=>`Cannot find registered kernel '${p}' for backend '${this.backendName}'`),a=()=>{const y=this.backend.numDataIds();c=m.kernelFunc({inputs:x,attrs:g,backend:this.backend});const w=Array.isArray(c)?c:[c];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(p,y,w);const b=w.map(_=>_.rank!=null?_:this.makeTensorFromTensorInfo(_));if(i){const _=this.getTensorsForGradient(p,x,b);s=this.saveTensorsForBackwardMode(_)}return b}}else{const{forwardFunc:p}=t,x=g=>{i&&(s=g.map(m=>this.keep(this.clone(m))))};a=()=>{const g=this.backend.numDataIds();c=this.tidy(()=>p(this.backend,x));const m=Array.isArray(c)?c:[c];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(u,g,m),m}}const{inputs:l,attrs:d}=t,h=tm(t)?null:t.backwardsFunc;let f;return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{!this.ENV.getBool("DEBUG")&&!this.state.profiling?e=a():(f=this.profiler.profileKernel(u,l,()=>a()),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(f),e=f.outputs)}),i&&this.addTapeNode(u,l,e,h,s,d),this.state.profiling&&this.state.activeProfile.kernels.push({name:u,bytesAdded:this.state.numBytes-o,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-r,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(l).map(p=>l[p]!=null?l[p].shape:null),outputShapes:e.map(p=>p.shape),kernelTimeMs:f.timeMs,extraInfo:f.extraInfo}),Array.isArray(c)?e:e[0]}saveTensorsForBackwardMode(t){return t.map(s=>this.keep(this.clone(s)))}getTensorsForGradient(t,e,s){const i=Tb(t);if(i!=null){const o=i.inputsToSave||[],r=i.outputsToSave||[];let a;i.saveAllInputs?(k(Array.isArray(e),()=>"saveAllInputs is true, expected inputs to be an array."),a=Object.keys(e).map(u=>e[u])):a=o.map(u=>e[u]);const c=s.filter((u,l)=>r[l]);return a.concat(c)}return[]}makeTensor(t,e,s,i){if(t==null)throw new Error("Values passed to engine.makeTensor() are null");s=s||"float32",i=i||this.backend;let o=t;s==="string"&&_u(t[0])&&(o=t.map(c=>ko(c)));const r=i.write(o,e,s),a=new _n(e,s,r,this.nextTensorId());if(this.trackTensor(a,i),s==="string"){const c=this.state.tensorInfo.get(r),u=l9(o);this.state.numBytes+=u-c.bytes,c.bytes=u}return a}makeTensorFromDataId(t,e,s,i){s=s||"float32";const o={dataId:t,shape:e,dtype:s};return this.makeTensorFromTensorInfo(o,i)}makeTensorFromTensorInfo(t,e){const{dataId:s,shape:i,dtype:o}=t,r=new _n(i,o,s,this.nextTensorId());return this.trackTensor(r,e),r}makeVariable(t,e=!0,s,i){s=s||this.nextVariableId().toString(),i!=null&&i!==t.dtype&&(t=t.cast(i));const o=new nh(t,e,s,this.nextTensorId());if(this.state.registeredVariables[o.name]!=null)throw new Error(`Variable with name ${o.name} was already registered`);return this.state.registeredVariables[o.name]=o,this.incRef(o,this.backend),o}trackTensor(t,e){this.state.numTensors++,t.dtype==="string"&&this.state.numStringTensors++;let s=0;t.dtype!=="complex64"&&t.dtype!=="string"&&(s=t.size*Jd(t.dtype)),this.state.numBytes+=s,this.state.tensorInfo.has(t.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(t.dataId,{backend:e||this.backend,dtype:t.dtype,shape:t.shape,bytes:s})),t instanceof nh||this.track(t)}incRef(t,e){this.trackTensor(t,e),this.backend.incRef(t.dataId)}removeDataId(t,e){this.state.tensorInfo.has(t)&&this.state.tensorInfo.get(t).backend===e&&(this.state.tensorInfo.delete(t),this.state.numDataBuffers--)}disposeTensor(t){if(!this.state.tensorInfo.has(t.dataId))return;const e=this.state.tensorInfo.get(t.dataId);if(this.state.numTensors--,t.dtype==="string"&&(this.state.numStringTensors--,this.state.numBytes-=e.bytes),t.dtype!=="complex64"&&t.dtype!=="string"){const s=t.size*Jd(t.dtype);this.state.numBytes-=s}e.backend.disposeData(t.dataId)&&this.removeDataId(t.dataId,e.backend)}disposeVariables(){for(const t in this.state.registeredVariables){const e=this.state.registeredVariables[t];this.disposeVariable(e)}}disposeVariable(t){this.disposeTensor(t),this.state.registeredVariables[t.name]!=null&&delete this.state.registeredVariables[t.name]}memory(){const t=this.backend.memory();return t.numTensors=this.state.numTensors,t.numDataBuffers=this.state.numDataBuffers,t.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(t.unreliable=!0,t.reasons==null&&(t.reasons=[]),t.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),t}async profile(t){this.state.profiling=!0;const e=this.state.numBytes,s=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await t(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map(i=>i.totalBytesSnapshot)),this.state.activeProfile.newBytes=this.state.numBytes-e,this.state.activeProfile.newTensors=this.state.numTensors-s;for(const i of this.state.activeProfile.kernels)i.kernelTimeMs=await i.kernelTimeMs,i.extraInfo=await i.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&this.state.kernelDepth===0}addTapeNode(t,e,s,i,o,r){const a={id:this.state.nextTapeNodeId++,kernelName:t,inputs:e,outputs:s,saved:o},c=Tb(t);c!=null&&(i=c.gradFunc),i!=null&&(a.gradient=u=>(u=u.map((l,d)=>{if(l==null){const h=s[d],f=jn(h.size,h.dtype);return this.makeTensor(f,h.shape,h.dtype)}return l}),i(u.length>1?u:u[0],o,r))),this.state.activeTape.push(a)}keep(t){return t.kept=!0,t}startTape(){this.state.gradientDepth===0&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(t){const e={track:[],name:"unnamed scope",id:this.state.nextScopeId++};t&&(e.name=t),this.state.scopeStack.push(e),this.state.activeScope=e}endScope(t){const e=J2(t),s=new Set(e.map(o=>o.id));for(let o=0;o<this.state.activeScope.track.length;o++){const r=this.state.activeScope.track[o];!r.kept&&!s.has(r.id)&&r.dispose()}const i=this.state.scopeStack.pop();this.state.activeScope=this.state.scopeStack.length===0?null:this.state.scopeStack[this.state.scopeStack.length-1],e.forEach(o=>{!o.kept&&o.scopeId===i.id&&this.track(o)})}gradients(t,e,s,i=!1){if(k(e.length>0,()=>"gradients() received an empty list of xs."),s!=null&&s.dtype!=="float32")throw new Error(`dy must have 'float32' dtype, but has '${s.dtype}'`);const o=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",t));k(o instanceof _n,()=>"The result y returned by f() must be a tensor.");const r=O9(this.state.activeTape,e,o);if(!i&&r.length===0&&e.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{const a={};a[o.id]=s??X9(o.shape),U9(a,r,u=>this.tidy(u),q9);const c=e.map(u=>a[u.id]);return this.state.gradientDepth===0&&(this.state.activeTape.forEach(u=>{for(const l of u.saved)l.dispose()}),this.state.activeTape=null),{value:o,grads:c}})}customGrad(t){return k(h0(t),()=>"The f passed in customGrad(f) must be a function."),(...e)=>{k(e.every(a=>a instanceof _n),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");let s;const i={};e.forEach((a,c)=>{i[c]=a});const o=(a,c)=>(s=t(...e,c),k(s.value instanceof _n,()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),k(h0(s.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),s.value),r=(a,c)=>{const u=s.gradFunc(a,c),l=Array.isArray(u)?u:[u];k(l.length===e.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),k(l.every(h=>h instanceof _n),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");const d={};return l.forEach((h,f)=>{d[f]=()=>h}),d};return this.runKernelFunc({forwardFunc:o,backwardsFunc:r,inputs:i})}}readSync(t){return this.state.tensorInfo.get(t).backend.readSync(t)}read(t){return this.state.tensorInfo.get(t).backend.read(t)}readToGPU(t,e){return this.state.tensorInfo.get(t).backend.readToGPU(t,e)}async time(t){const e=hs(),s=await this.backend.time(t);return s.wallMs=hs()-e,s}track(t){return this.state.activeScope!=null&&(t.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(t)),t}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new Nb;for(const t in this.registry)this.disposeRegisteredKernels(t),this.registry[t].dispose(),delete this.registry[t];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}Xa.nextTensorId=0;Xa.nextVariableId=0;function X9(n){const t=A1(ct(n),"float32");return X.makeTensor(t,n,"float32")}function t_(){const n=w2();if(n._tfengine==null){const t=new f9(n);n._tfengine=new Xa(t)}return x9(n._tfengine.ENV),V9(()=>n._tfengine),n._tfengine}const X=t_();function q9(n,t){const e={a:n,b:t};return X.runKernel(uc,e)}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function j9(){return typeof navigator<"u"&&navigator!=null}function e_(n){if(n||j9()){if(n||(n=navigator),n.product==="ReactNative")return!0;const t=n.userAgent||n.vendor||(typeof window<"u"?window.opera:"");if(!t){const e=n;return e.userAgentData&&e.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function n_(){return typeof window<"u"&&window.document!=null||typeof WorkerGlobalScope<"u"}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ms=nt();ms.registerFlag("DEBUG",()=>!1,n=>{n&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")});ms.registerFlag("IS_BROWSER",()=>n_());ms.registerFlag("IS_NODE",()=>typeof process<"u"&&typeof process.versions<"u"&&typeof process.versions.node<"u");ms.registerFlag("IS_CHROME",()=>typeof navigator<"u"&&navigator!=null&&navigator.userAgent!=null&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor));ms.registerFlag("IS_SAFARI",()=>typeof navigator<"u"&&navigator!=null&&navigator.userAgent!=null&&/Safari/.test(navigator.userAgent)&&/Apple/.test(navigator.vendor));ms.registerFlag("PROD",()=>!1);ms.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>ms.getBool("DEBUG"));ms.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0);ms.registerFlag("IS_TEST",()=>!1);ms.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",()=>ms.getBool("DEBUG"));ms.registerFlag("WRAP_TO_IMAGEBITMAP",()=>!1);ms.registerFlag("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU",()=>!1);ms.registerFlag("USE_SETTIMEOUTCUSTOM",()=>!1);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vf(n,t){let e=n;if(Qs(n))return t==="string"?[]:[n.length];if(Y2(n)){const i=n.channels||"RGBA";return[n.height,n.width*i.length]}else if(Z2(n))return[n.buffer.size/(t==null?4:Jd(t))];if(!Array.isArray(n))return[];const s=[];for(;Array.isArray(e)||Qs(e)&&t!=="string";)s.push(e.length),e=e[0];return Array.isArray(n)&&nt().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&s_(n,s,[]),s}function s_(n,t,e){if(e=e||[],!Array.isArray(n)&&!Qs(n)){k(t.length===0,()=>`Element arr[${e.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`);return}k(t.length>0,()=>`Element arr[${e.join("][")}] should be a primitive, but is an array of ${n.length} elements`),k(n.length===t[0],()=>`Element arr[${e.join("][")}] should have ${t[0]} elements, but has ${n.length} elements`);const s=t.slice(1);for(let i=0;i<n.length;++i)s_(n[i],s,e.concat(i))}function kb(n,t,e,s){if(n!=="string_or_numeric"){if(n==null)throw new Error("Expected dtype cannot be null.");if(n!=="numeric"&&n!==t||n==="numeric"&&t==="string")throw new Error(`Argument '${e}' passed to '${s}' must be ${n} tensor, but got ${t} tensor`)}}function O(n,t,e,s="numeric"){if(n instanceof at())return kb(s,n.dtype,t,e),n;let i=ac(n);if(i!=="string"&&["bool","int32","float32"].indexOf(s)>=0&&(i=s),kb(s,i,t,e),n==null||!Qs(n)&&!Array.isArray(n)&&typeof n!="number"&&typeof n!="boolean"&&typeof n!="string"){const c=n==null?"null":n.constructor.name;throw new Error(`Argument '${t}' passed to '${e}' must be a Tensor or TensorLike, but got '${c}'`)}const o=Vf(n,i);!Qs(n)&&!Array.isArray(n)&&(n=[n]);const a=i!=="string"?Gr(n,i):Mr(n,[],!0);return X.makeTensor(a,o,i)}function i_(n,t,e,s="numeric"){if(!Array.isArray(n))throw new Error(`Argument ${t} passed to ${e} must be a \`Tensor[]\` or \`TensorLike[]\``);return n.map((o,r)=>O(o,`${t}[${r}]`,e,s))}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const K9="__op";function K(n){const t=Object.keys(n);if(t.length!==1)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let e=t[0];const s=n[e];e.endsWith("_")&&(e=e.substring(0,e.length-1)),e=e+K9;const i=(...o)=>{X.startScope(e);try{const r=s(...o);return N1(r)&&console.error("Cannot return a Promise inside of tidy."),X.endScope(r),r}catch(r){throw X.endScope(null),r}};return Object.defineProperty(i,"name",{value:e,configurable:!0}),i}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Y9(n,t){const e=O(n,"real","complex"),s=O(t,"imag","complex");M1(e.shape,s.shape,`real and imag shapes, ${e.shape} and ${s.shape}, must match in call to tf.complex().`);const i={real:e,imag:s};return X.runKernel(B1,i)}const qa=K({complex_:Y9});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Wf(n,t,e,s){if(s==null)s=ac(n);else if(s==="complex64")throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(Z2(n)||Y2(n)){if(s!=="float32"&&s!=="int32")throw new Error(`Creating tensor from GPU data only supports 'float32'|'int32' dtype, while the dtype is ${s}.`);return X.backend.createTensorFromGPUData(n,t||e,s)}if(!Qs(n)&&!Array.isArray(n)&&typeof n!="number"&&typeof n!="boolean"&&typeof n!="string")throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(t!=null){fo(t);const i=ct(t),o=ct(e);k(i===o,()=>`Based on the provided shape, [${t}], the tensor should have ${i} values but has ${o}`);for(let r=0;r<e.length;++r){const a=e[r],c=r===e.length-1?a!==ct(t.slice(r)):!0;k(e[r]===t[r]||!c,()=>`Error creating a new Tensor. Inferred shape (${e}) does not match the provided shape (${t}). `)}}return!Qs(n)&&!Array.isArray(n)&&(n=[n]),t=t||e,n=s!=="string"?Gr(n,s):Mr(n,[],!0),X.makeTensor(n,t,s)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qs(n,t,e){const s=Vf(n,e);return Wf(n,t,s,e)}class lc{static join(t){return new lc(t).slice()}constructor(t){if(this.shards=[],this.previousShardIndex=0,t==null||(t instanceof Array||(t=[t]),t=t.map(s=>Qs(s)?s.buffer:s),t.length===0))return;this.bufferUniformSize=t[0].byteLength;let e=0;for(let s=0;s<t.length;s++){const i=t[s];s!==t.length-1&&i.byteLength!==this.bufferUniformSize&&(this.bufferUniformSize=void 0);const o=e+i.byteLength;this.shards.push({buffer:i,start:e,end:o}),e=o}this.shards.length===0&&(this.byteLength=0),this.byteLength=this.shards[this.shards.length-1].end}slice(t=0,e=this.byteLength){if(this.shards.length===0)return new ArrayBuffer(0);if(t=isNaN(Number(t))?0:t,e=isNaN(Number(e))?0:e,t=Math.max(0,t),e=Math.min(this.byteLength,e),e<=t)return new ArrayBuffer(0);const s=this.findShardForByte(t);if(s===-1)throw new Error(`Could not find start shard for byte ${t}`);const i=e-t,o=new ArrayBuffer(i),r=new Uint8Array(o);let a=0;for(let c=s;c<this.shards.length;c++){const u=this.shards[c],d=t+a-u.start,h=a,p=Math.min(e,u.end)-u.start,x=new Uint8Array(u.buffer,d,p-d);if(r.set(x,h),a+=x.length,e<u.end)break}return o}findShardForByte(t){if(this.shards.length===0||t<0||t>=this.byteLength)return-1;if(this.bufferUniformSize!=null)return this.previousShardIndex=Math.floor(t/this.bufferUniformSize),this.previousShardIndex;function e(i){return t<i.start?-1:t>=i.end?1:0}if(e(this.shards[this.previousShardIndex])===0)return this.previousShardIndex;const s=Z9(this.shards,e);return s===-1?-1:(this.previousShardIndex=s,this.previousShardIndex)}}function Z9(n,t){let e=0,s=n.length;for(;e<=s;){const i=Math.floor((s-e)/2)+e,o=t(n[i]);if(o===0)return i;o<0?s=i:e=i+1}return-1}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ii(){return X}function Db(){return X.memory()}function tt(n,t){return X.tidy(n,t)}function Ce(n){J2(n).forEach(e=>e.dispose())}function rn(n){return X.keep(n)}function o_(n,t,e=1){return X.registerBackend(n,t,e)}function J9(){return X.backend}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $b=4;async function Fb(n,t){const e=[],s=[],i=Array.isArray(n)?n.map(r=>r.name):Object.keys(n);for(let r=0;r<i.length;++r){const a=i[r],c=Array.isArray(n)?n[r].tensor:n[a];if(c.dtype!=="float32"&&c.dtype!=="int32"&&c.dtype!=="bool"&&c.dtype!=="string"&&c.dtype!=="complex64")throw new Error(`Unsupported dtype in weight '${a}': ${c.dtype}`);const u={name:a,shape:c.shape,dtype:c.dtype};if(c.dtype==="string"){const l=new Promise(async d=>{const h=await c.bytes(),f=h.reduce((g,m)=>g+m.length,0)+$b*h.length,p=new Uint8Array(f);let x=0;for(let g=0;g<h.length;g++){const m=h[g],y=new Uint8Array(new Uint32Array([m.length]).buffer);p.set(y,x),x+=$b,p.set(m,x),x+=m.length}d(p)});s.push(l)}else s.push(c.data());t!=null&&(u.group=t),e.push(u)}const o=await Promise.all(s);return{data:Q9(o),specs:e}}function Q9(n){if(n===null)throw new Error(`Invalid input value: ${JSON.stringify(n)}`);let t=0;const e=[];n.forEach(o=>{if(t+=o.byteLength,e.push(o.byteLength===o.buffer.byteLength?o:new o.constructor(o)),!(o instanceof Float32Array||o instanceof Int32Array||o instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${o.constructor.name}`)});const s=new Uint8Array(t);let i=0;return e.forEach(o=>{s.set(new Uint8Array(o.buffer),i),i+=o.byteLength}),s.buffer}const vg=typeof Buffer<"u"&&(typeof Blob>"u"||typeof atob>"u"||typeof btoa>"u");function Pb(n){return vg?Buffer.byteLength(n,"utf8"):new Blob([n]).size}function t4(n){if(vg)return Buffer.from(n).toString("base64");const t=new Uint8Array(n);let e="";for(let s=0,i=t.length;s<i;s++)e+=String.fromCharCode(t[s]);return btoa(e)}function e4(n){if(vg){const s=Buffer.from(n,"base64");return s.buffer.slice(s.byteOffset,s.byteOffset+s.byteLength)}const t=atob(n),e=new Uint8Array(t.length);for(let s=0;s<t.length;++s)e.set([t.charCodeAt(s)],s);return e.buffer}function n4(n){return lc.join(n)}function r_(n){if(n.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:n.modelTopology==null?0:Pb(JSON.stringify(n.modelTopology)),weightSpecsBytes:n.weightSpecs==null?0:Pb(JSON.stringify(n.weightSpecs)),weightDataBytes:n.weightData==null?0:new lc(n.weightData).byteLength}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class es{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return es.instance==null&&(es.instance=new es),es.instance}static registerSaveRouter(t){es.getInstance().saveRouters.push(t)}static registerLoadRouter(t){es.getInstance().loadRouters.push(t)}static getSaveHandlers(t){return es.getHandlers(t,"save")}static getLoadHandlers(t,e){return es.getHandlers(t,"load",e)}static getHandlers(t,e,s){const i=[];return(e==="load"?es.getInstance().loadRouters:es.getInstance().saveRouters).forEach(r=>{const a=r(t,s);a!==null&&i.push(a)}),i}}const s4=n=>es.getSaveHandlers(n);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _0="tensorflowjs",C0=1,yr="models_store",Eo="model_info_store";function a_(){if(!nt().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const n=typeof window>"u"?self:window,t=n.indexedDB||n.mozIndexedDB||n.webkitIndexedDB||n.msIndexedDB||n.shimIndexedDB;if(t==null)throw new Error("The current browser does not appear to support IndexedDB.");return t}function S0(n){const t=n.result;t.createObjectStore(yr,{keyPath:"modelPath"}),t.createObjectStore(Eo,{keyPath:"modelPath"})}class Ar{constructor(t){if(this.indexedDB=a_(),t==null||!t)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=t}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,t)}async load(){return this.databaseAction(this.modelPath)}databaseAction(t,e){return new Promise((s,i)=>{const o=this.indexedDB.open(_0,C0);o.onupgradeneeded=()=>S0(o),o.onsuccess=()=>{const r=o.result;if(e==null){const a=r.transaction(yr,"readonly"),u=a.objectStore(yr).get(this.modelPath);u.onsuccess=()=>{if(u.result==null)return r.close(),i(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));s(u.result.modelArtifacts)},u.onerror=l=>(r.close(),i(u.error)),a.oncomplete=()=>r.close()}else{e.weightData=lc.join(e.weightData);const a=r_(e),c=r.transaction(Eo,"readwrite");let u=c.objectStore(Eo),l;try{l=u.put({modelPath:this.modelPath,modelArtifactsInfo:a})}catch(h){return i(h)}let d;l.onsuccess=()=>{d=r.transaction(yr,"readwrite");const h=d.objectStore(yr);let f;try{f=h.put({modelPath:this.modelPath,modelArtifacts:e,modelArtifactsInfo:a})}catch(p){return i(p)}f.onsuccess=()=>s({modelArtifactsInfo:a}),f.onerror=p=>{u=c.objectStore(Eo);const x=u.delete(this.modelPath);x.onsuccess=()=>(r.close(),i(f.error)),x.onerror=g=>(r.close(),i(f.error))}},l.onerror=h=>(r.close(),i(l.error)),c.oncomplete=()=>{d==null?r.close():d.oncomplete=()=>r.close()}}},o.onerror=r=>i(o.error)})}}Ar.URL_SCHEME="indexeddb://";const c_=n=>nt().getBool("IS_BROWSER")&&!Array.isArray(n)&&n.startsWith(Ar.URL_SCHEME)?i4(n.slice(Ar.URL_SCHEME.length)):null;es.registerSaveRouter(c_);es.registerLoadRouter(c_);function i4(n){return new Ar(n)}function o4(n){return n.startsWith(Ar.URL_SCHEME)?n.slice(Ar.URL_SCHEME.length):n}class r4{constructor(){this.indexedDB=a_()}async listModels(){return new Promise((t,e)=>{const s=this.indexedDB.open(_0,C0);s.onupgradeneeded=()=>S0(s),s.onsuccess=()=>{const i=s.result,o=i.transaction(Eo,"readonly"),a=o.objectStore(Eo).getAll();a.onsuccess=()=>{const c={};for(const u of a.result)c[u.modelPath]=u.modelArtifactsInfo;t(c)},a.onerror=c=>(i.close(),e(a.error)),o.oncomplete=()=>i.close()},s.onerror=i=>e(s.error)})}async removeModel(t){return t=o4(t),new Promise((e,s)=>{const i=this.indexedDB.open(_0,C0);i.onupgradeneeded=()=>S0(i),i.onsuccess=()=>{const o=i.result,r=o.transaction(Eo,"readwrite"),a=r.objectStore(Eo),c=a.get(t);let u;c.onsuccess=()=>{if(c.result==null)return o.close(),s(new Error(`Cannot find model with path '${t}' in IndexedDB.`));{const l=a.delete(t),d=()=>{u=o.transaction(yr,"readwrite");const f=u.objectStore(yr).delete(t);f.onsuccess=()=>e(c.result.modelArtifactsInfo),f.onerror=p=>s(c.error)};l.onsuccess=d,l.onerror=h=>(d(),o.close(),s(c.error))}},c.onerror=l=>(o.close(),s(c.error)),r.oncomplete=()=>{u==null?o.close():u.oncomplete=()=>o.close()}},i.onerror=o=>s(i.error)})}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const no="/",_a="tensorflowjs_models",u_="info",a4="model_topology",c4="weight_specs",u4="weight_data",l4="model_metadata";function l_(n){return{info:[_a,n,u_].join(no),topology:[_a,n,a4].join(no),weightSpecs:[_a,n,c4].join(no),weightData:[_a,n,u4].join(no),modelMetadata:[_a,n,l4].join(no)}}function d_(n){for(const t of Object.values(n))window.localStorage.removeItem(t)}function d4(n){const t=n.split(no);if(t.length<3)throw new Error(`Invalid key format: ${n}`);return t.slice(1,t.length-1).join(no)}function h4(n){return n.startsWith(Nr.URL_SCHEME)?n.slice(Nr.URL_SCHEME.length):n}class Nr{constructor(t){if(!nt().getBool("IS_BROWSER")||typeof window>"u"||typeof window.localStorage>"u")throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,t==null||!t)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=t,this.keys=l_(this.modelPath)}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const e=JSON.stringify(t.modelTopology),s=JSON.stringify(t.weightSpecs),i=r_(t),o=lc.join(t.weightData);try{this.LS.setItem(this.keys.info,JSON.stringify(i)),this.LS.setItem(this.keys.topology,e),this.LS.setItem(this.keys.weightSpecs,s),this.LS.setItem(this.keys.weightData,t4(o));const r={format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy,signature:t.signature!=null?t.signature:void 0,userDefinedMetadata:t.userDefinedMetadata!=null?t.userDefinedMetadata:void 0,modelInitializer:t.modelInitializer!=null?t.modelInitializer:void 0,initializerSignature:t.initializerSignature!=null?t.initializerSignature:void 0,trainingConfig:t.trainingConfig!=null?t.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(r)),{modelArtifactsInfo:i}}catch{throw d_(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${i.modelTopologyBytes}, weightSpecsBytes=${i.weightSpecsBytes}, weightDataBytes=${i.weightDataBytes}.`)}}}async load(){const t=JSON.parse(this.LS.getItem(this.keys.info));if(t==null)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if(t.modelTopologyType!=="JSON")throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const e={},s=JSON.parse(this.LS.getItem(this.keys.topology));if(s==null)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);e.modelTopology=s;const i=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(i==null)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);e.weightSpecs=i;const o=this.LS.getItem(this.keys.modelMetadata);if(o!=null){const a=JSON.parse(o);e.format=a.format,e.generatedBy=a.generatedBy,e.convertedBy=a.convertedBy,a.signature!=null&&(e.signature=a.signature),a.userDefinedMetadata!=null&&(e.userDefinedMetadata=a.userDefinedMetadata),a.modelInitializer!=null&&(e.modelInitializer=a.modelInitializer),a.initializerSignature!=null&&(e.initializerSignature=a.initializerSignature),a.trainingConfig!=null&&(e.trainingConfig=a.trainingConfig)}const r=this.LS.getItem(this.keys.weightData);if(r==null)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return e.weightData=e4(r),e}}Nr.URL_SCHEME="localstorage://";const h_=n=>nt().getBool("IS_BROWSER")&&!Array.isArray(n)&&n.startsWith(Nr.URL_SCHEME)?f4(n.slice(Nr.URL_SCHEME.length)):null;es.registerSaveRouter(h_);es.registerLoadRouter(h_);function f4(n){return new Nr(n)}class p4{constructor(){k(nt().getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),k(typeof window>"u"||typeof window.localStorage<"u",()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}async listModels(){const t={},e=_a+no,s=no+u_;for(let i=0;i<this.LS.length;++i){const o=this.LS.key(i);if(o.startsWith(e)&&o.endsWith(s)){const r=d4(o);t[r]=JSON.parse(this.LS.getItem(o))}}return t}async removeModel(t){t=h4(t);const e=l_(t);if(this.LS.getItem(e.info)==null)throw new Error(`Cannot find model at path '${t}'`);const s=JSON.parse(this.LS.getItem(e.info));return d_(e),s}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Lb="://";class Ri{constructor(){this.managers={}}static getInstance(){return Ri.instance==null&&(Ri.instance=new Ri),Ri.instance}static registerManager(t,e){k(t!=null,()=>"scheme must not be undefined or null."),t.endsWith(Lb)&&(t=t.slice(0,t.indexOf(Lb))),k(t.length>0,()=>"scheme must not be an empty string.");const s=Ri.getInstance();k(s.managers[t]==null,()=>`A model store manager is already registered for scheme '${t}'.`),s.managers[t]=e}static getManager(t){const e=Ri.getInstance().managers[t];if(e==null)throw new Error(`Cannot find model manager for scheme '${t}'`);return e}static getSchemes(){return Object.keys(Ri.getInstance().managers)}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class m4{constructor(){this.messageName="setTimeoutCustom",this.functionRefs=[],this.handledMessageCount=0,this.hasEventListener=!1}fetch(t,e){return fetch(t,e)}now(){return performance.now()}encode(t,e){if(e!=="utf-8"&&e!=="utf8")throw new Error(`Browser's encoder only supports utf-8, but got ${e}`);return this.textEncoder==null&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(t)}decode(t,e){return new TextDecoder(e).decode(t)}setTimeoutCustom(t,e){if(typeof window>"u"||!nt().getBool("USE_SETTIMEOUTCUSTOM")){setTimeout(t,e);return}this.functionRefs.push(t),setTimeout(()=>{window.postMessage({name:this.messageName,index:this.functionRefs.length-1},"*")},e),this.hasEventListener||(this.hasEventListener=!0,window.addEventListener("message",s=>{if(s.source===window&&s.data.name===this.messageName){s.stopPropagation();const i=this.functionRefs[s.data.index];i(),this.handledMessageCount++,this.handledMessageCount===this.functionRefs.length&&(this.functionRefs=[],this.handledMessageCount=0)}},!0))}isTypedArray(t){return G2(t)}}if(nt().get("IS_BROWSER")){nt().setPlatform("browser",new m4);try{Ri.registerManager(Nr.URL_SCHEME,new p4)}catch{}try{Ri.registerManager(Ar.URL_SCHEME,new r4)}catch{}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const g4={importFetch:()=>require("node-fetch")};let em;class x4{constructor(){this.util=require("util"),this.textEncoder=new this.util.TextEncoder}fetch(t,e){return nt().global.fetch!=null?nt().global.fetch(t,e):(em==null&&(em=g4.importFetch()),em(t,e))}now(){const t=process.hrtime();return t[0]*1e3+t[1]/1e6}encode(t,e){if(e!=="utf-8"&&e!=="utf8")throw new Error(`Node built-in encoder only supports utf-8, but got ${e}`);return this.textEncoder.encode(t)}decode(t,e){return t.length===0?"":new this.util.TextDecoder(e).decode(t)}isTypedArray(t){return this.util.types.isFloat32Array(t)||this.util.types.isInt32Array(t)||this.util.types.isUint8Array(t)||this.util.types.isUint8ClampedArray(t)}}nt().get("IS_NODE")&&!nt().get("IS_BROWSER")&&nt().setPlatform("node",new x4);/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function we(n,t="float32",e){return t=t||"float32",fo(n),new On(n,t,e)}/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function y4(n,t){const e=O(n,"x","cast");if(!u9(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if(t==="string"&&e.dtype!=="string"||t!=="string"&&e.dtype==="string")throw new Error("Only strings can be casted to strings");const s={x:e},i={dtype:t};return X.runKernel(Au,s,i)}const Nt=K({cast_:y4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function b4(n){const e={x:O(n,"x","clone","string_or_numeric")};return X.runKernel(Wu,e)}const _r=K({clone_:b4});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function w4(n,t=!1){console.log(n.toString(t))}/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */t_();const v4={buffer:we,cast:Nt,clone:_r,print:w4};W9(v4);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _4(n,t){let e=O(n,"a","add"),s=O(t,"b","add");[e,s]=pn(e,s);const i={a:e,b:s};return X.runKernel(uc,i)}const yt=K({add_:_4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function C4(n,t){let e=O(n,"a","floorDiv"),s=O(t,"b","floorDiv");[e,s]=pn(e,s);const i={a:e,b:s};return X.runKernel(zu,i)}const f_=K({floorDiv_:C4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function S4(n,t){let e=O(n,"a","div"),s=O(t,"b","div");if([e,s]=pn(e,s),e.dtype==="int32"&&s.dtype==="int32")return f_(e,s);const i={a:e,b:s},o={};return X.runKernel(Fu,i,o)}const Xt=K({div_:S4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function T4(n,t){let e=O(n,"a","mul"),s=O(t,"b","mul");[e,s]=pn(e,s);const i={a:e,b:s};return X.runKernel(Ju,i)}const z=K({mul_:T4});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function E4(n){const t=O(n,"x","abs");if(t.dtype==="complex64"){const e={x:t};return X.runKernel(qh,e)}else{const e={x:t};return X.runKernel(Bh,e)}}const ns=K({abs_:E4});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function I4(n){const e={x:O(n,"x","acos")};return X.runKernel(Cu,e)}const R4=K({acos_:I4});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function M4(n){const e={x:O(n,"x","acosh")};return X.runKernel(Su,e)}const A4=K({acosh_:M4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function N4(n,t=null,e=!1){const i={x:O(n,"x","all","bool")},o={axis:t,keepDims:e};return X.runKernel($1,i,o)}const p_=K({all_:N4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function k4(n,t=null,e=!1){const i={x:O(n,"x","any","bool")},o={axis:t,keepDims:e};return X.runKernel(F1,i,o)}const T0=K({any_:k4});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function D4(n,t=0){const s={x:O(n,"x","argMax")},i={axis:t};return X.runKernel(zh,s,i)}const iu=K({argMax_:D4});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $4(n,t=0){const s={x:O(n,"x","argMin")},i={axis:t};return X.runKernel(Vh,s,i)}const F4=K({argMin_:$4});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function P4(n){const e={x:O(n,"x","asin")};return X.runKernel(Tu,e)}const L4=K({asin_:P4});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function O4(n){const e={x:O(n,"x","asinh")};return X.runKernel(Eu,e)}const U4=K({asinh_:O4});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function B4(n){const e={x:O(n,"x","atan")};return X.runKernel(Iu,e)}const z4=K({atan_:B4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function V4(n,t){let e=O(n,"a","atan2"),s=O(t,"b","atan2");[e,s]=pn(e,s);const i={a:e,b:s};return X.runKernel(Mu,i)}const W4=K({atan2_:V4});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function G4(n){const e={x:O(n,"x","atanh")};return X.runKernel(Ru,e)}const H4=K({atanh_:G4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yl(n,t,e,s,i="NHWC",o){const r=n[3],a=[...t,r],c=mo(i);return Un(n,a,e,o,s,null,null,c)}function ni(n,t,e,s,i,o,r="channelsLast"){const[a,c]=ou(t);let u;if(r==="channelsLast")u=[a,c,n[3],n[3]];else if(r==="channelsFirst")u=[a,c,n[1],n[1]];else throw new Error(`Unknown dataFormat ${r}`);return Un(n,u,e,s,i,o,!1,r)}function po(n,t,e,s,i,o,r="NDHWC"){const[a,c,u]=E0(t);let l,d;if(r==="NDHWC")d="channelsLast",l=[a,c,u,n[4],n[4]];else if(r==="NCDHW")d="channelsFirst",l=[a,c,u,n[1],n[1]];else throw new Error(`Unknown dataFormat ${r}`);return Xo(n,l,e,s,i,!1,d,o)}function Un(n,t,e,s,i,o,r=!1,a="channelsLast"){let[c,u,l,d]=[-1,-1,-1,-1];if(a==="channelsLast")[c,u,l,d]=n;else if(a==="channelsFirst")[c,d,u,l]=n;else throw new Error(`Unknown dataFormat ${a}`);const[h,f,,p]=t,[x,g]=ou(e),[m,y]=ou(s),w=Fa(h,m),b=Fa(f,y),{padInfo:_,outHeight:T,outWidth:E}=j4(i,u,l,x,g,w,b,o,a),I=r?p*d:p;let S;return a==="channelsFirst"?S=[c,I,T,E]:a==="channelsLast"&&(S=[c,T,E,I]),{batchSize:c,dataFormat:a,inHeight:u,inWidth:l,inChannels:d,outHeight:T,outWidth:E,outChannels:I,padInfo:_,strideHeight:x,strideWidth:g,filterHeight:h,filterWidth:f,effectiveFilterHeight:w,effectiveFilterWidth:b,dilationHeight:m,dilationWidth:y,inShape:n,outShape:S,filterShape:t}}function Xo(n,t,e,s,i,o=!1,r="channelsLast",a){let[c,u,l,d,h]=[-1,-1,-1,-1,-1];if(r==="channelsLast")[c,u,l,d,h]=n;else if(r==="channelsFirst")[c,h,u,l,d]=n;else throw new Error(`Unknown dataFormat ${r}`);const[f,p,x,,g]=t,[m,y,w]=E0(e),[b,_,T]=E0(s),E=Fa(f,b),I=Fa(p,_),S=Fa(x,T),{padInfo:v,outDepth:C,outHeight:M,outWidth:N}=K4(i,u,l,d,m,y,w,E,I,S,a),D=o?g*h:g;let $;return r==="channelsFirst"?$=[c,D,C,M,N]:r==="channelsLast"&&($=[c,C,M,N,D]),{batchSize:c,dataFormat:r,inDepth:u,inHeight:l,inWidth:d,inChannels:h,outDepth:C,outHeight:M,outWidth:N,outChannels:D,padInfo:v,strideDepth:m,strideHeight:y,strideWidth:w,filterDepth:f,filterHeight:p,filterWidth:x,effectiveFilterDepth:E,effectiveFilterHeight:I,effectiveFilterWidth:S,dilationDepth:b,dilationHeight:_,dilationWidth:T,inShape:n,outShape:$,filterShape:t}}function X4(n,t,e,s,i){s==null&&(s=_g(n,t,e));const o=n[0],r=n[1],a=ru((o-t+2*s)/e+1,i),c=ru((r-t+2*s)/e+1,i);return[a,c]}function q4(n,t,e,s,i,o){i==null&&(i=_g(n,t[0],s[0]));const r=[0,0,0,e];for(let a=0;a<3;a++)n[a]+2*i>=t[a]&&(r[a]=ru((n[a]-t[a]+2*i)/s[a]+1,o));return r}function _g(n,t,e,s=1){const i=Fa(t,s);return Math.floor((n[0]*(e-1)-e+i)/2)}function ou(n){return typeof n=="number"?[n,n,n]:n.length===2?[n[0],n[1],1]:n}function E0(n){return typeof n=="number"?[n,n,n]:n}function Fa(n,t){return t<=1?n:n+(n-1)*(t-1)}function j4(n,t,e,s,i,o,r,a,c){let u,l,d;if(typeof n=="number"){u={top:n,bottom:n,left:n,right:n,type:n===0?"VALID":"NUMBER"};const f=X4([t,e],o,s,n,a);l=f[0],d=f[1]}else if(n==="same"){l=Math.ceil(t/s),d=Math.ceil(e/i);const h=Math.max(0,(l-1)*s+o-t),f=Math.max(0,(d-1)*i+r-e),p=Math.floor(h/2),x=h-p,g=Math.floor(f/2),m=f-g;u={top:p,bottom:x,left:g,right:m,type:"SAME"}}else if(n==="valid")u={top:0,bottom:0,left:0,right:0,type:"VALID"},l=Math.ceil((t-o+1)/s),d=Math.ceil((e-r+1)/i);else if(typeof n=="object"){const h=c==="channelsLast"?n[1][0]:n[2][0],f=c==="channelsLast"?n[1][1]:n[2][1],p=c==="channelsLast"?n[2][0]:n[3][0],x=c==="channelsLast"?n[2][1]:n[3][1];u={top:h,bottom:f,left:p,right:x,type:h===0&&f===0&&p===0&&x===0?"VALID":"EXPLICIT"},l=ru((t-o+h+f)/s+1,a),d=ru((e-r+p+x)/i+1,a)}else throw Error(`Unknown padding parameter: ${n}`);return{padInfo:u,outHeight:l,outWidth:d}}function K4(n,t,e,s,i,o,r,a,c,u,l){let d,h,f,p;if(n==="valid"&&(n=0),typeof n=="number"){d={top:n,bottom:n,left:n,right:n,front:n,back:n,type:n===0?"VALID":"NUMBER"};const g=q4([t,e,s,1],[a,c,u],1,[i,o,r],n,l);h=g[0],f=g[1],p=g[2]}else if(n==="same"){h=Math.ceil(t/i),f=Math.ceil(e/o),p=Math.ceil(s/r);const x=(h-1)*i+a-t,g=(f-1)*o+c-e,m=(p-1)*r+u-s,y=Math.floor(x/2),w=x-y,b=Math.floor(g/2),_=g-b,T=Math.floor(m/2),E=m-T;d={top:b,bottom:_,left:T,right:E,front:y,back:w,type:"SAME"}}else throw Error(`Unknown padding parameter: ${n}`);return{padInfo:d,outDepth:h,outHeight:f,outWidth:p}}function ru(n,t){if(!t)return Math.trunc(n);switch(t){case"round":return Math.round(n);case"ceil":return Math.ceil(n);case"floor":return Math.floor(n);default:throw new Error(`Unknown roundingMode ${t}`)}}function kr(n){const[t,e,s]=ou(n);return t===1&&e===1&&s===1}function Yn(n,t){return kr(n)||kr(t)}function Dr(n){return ou(n).every(t=>t>0)}function mo(n){if(n==="NHWC")return"channelsLast";if(n==="NCHW")return"channelsFirst";throw new Error(`Unknown dataFormat ${n}`)}function xs(n,t,e){if(e!=null){if(typeof t=="string")throw Error(`Error in ${n}: pad must be an integer when using dimRoundingMode ${e} but got pad ${t}.`);if(typeof t=="number")k(Ha(t),()=>`Error in ${n}: pad must be an integer when using dimRoundingMode ${e} but got pad ${t}.`);else if(typeof t=="object")t.forEach(s=>{s.forEach(i=>{k(Ha(i),()=>`Error in ${n}: pad must be an integer when using dimRoundingMode ${e} but got pad ${i}.`)})});else throw Error(`Error in ${n}: Unknown padding parameter: ${t}`)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Y4(n,t){const s={x:O(n,"x","reshape","string_or_numeric")},i={shape:t};return X.runKernel(Rf,s,i)}const j=K({reshape_:Y4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Z4(n,t,e,s,i){const o=O(n,"x","avgPool","float32"),r=1;k(Yn(e,r),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${e} and dilations '${r}'`);let a=o,c=!1;o.rank===3&&(c=!0,a=j(o,[1,o.shape[0],o.shape[1],o.shape[2]])),k(a.rank===4,()=>`Error in avgPool: x must be rank 4 but got rank ${a.rank}.`),xs("avgPool",s,i);const u={x:a},l={filterSize:t,strides:e,pad:s,dimRoundingMode:i};let d=X.runKernel(Wh,u,l);return d=Nt(d,o.dtype),c?j(d,[d.shape[1],d.shape[2],d.shape[3]]):d}const Cg=K({avgPool_:Z4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function J4(n,t,e,s,i,o="NDHWC"){const r=O(n,"x","avgPool3d","float32");let a=r,c=!1;r.rank===4&&(c=!0,a=j(r,[1,r.shape[0],r.shape[1],r.shape[2],r.shape[3]])),k(a.rank===5,()=>`Error in avgPool3d: x must be rank 5 but got rank ${a.rank}.`),k(o==="NDHWC",()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${o}`),k(typeof e=="number"&&e>0||Array.isArray(e)&&e[0]>0&&e[1]>0&&e[2]>0,()=>`Error in avgPool3d: Stride must be > 0, but got '${e}'`),xs("avgPool3d",s,i);const u={x:a},l={filterSize:t,strides:e,pad:s,dimRoundingMode:i,dataFormat:o};let d=X.runKernel(Gh,u,l);return d=Nt(d,a.dtype),c?j(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}const Q4=K({avgPool3d_:J4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function t$(n,t=0){k(n.length>=1,()=>"Pass at least one tensor to concat");const e=i_(n,"tensors","concat","string_or_numeric");if(e[0].dtype==="complex64"&&e.forEach(o=>{if(o.dtype!=="complex64")throw new Error(`Cannot concatenate complex64 tensors with a tensor
          with dtype ${o.dtype}. `)}),e.length===1)return _r(e[0]);const s=e,i={axis:t};return X.runKernel(jh,s,i)}const Xn=K({concat_:t$});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function e$(n,t,e=!1,s=!1){let i=O(n,"a","matMul"),o=O(t,"b","matMul");[i,o]=pn(i,o);const r={a:i,b:o},a={transposeA:e,transposeB:s};return X.runKernel(Hh,r,a)}const Fe=K({matMul_:e$});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function n$(n){const e={x:O(n,"x","sigmoid","float32")};return X.runKernel(ul,e)}const dc=K({sigmoid_:n$});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function s$(n,t,e){const s=O(n,"x","slice","string_or_numeric");if(s.rank===0)throw new Error("Slicing scalar is not possible");const i={x:s},o={begin:t,size:e};return X.runKernel(Df,i,o)}const Ze=K({slice_:s$});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function i$(n){const e={x:O(n,"x","tanh","float32")};return X.runKernel(ml,e)}const Gf=K({tanh_:i$});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function o$(n,t,e){const s=O(n,"x","batchToSpaceND"),i=t.reduce((a,c)=>a*c);k(s.rank>=1+t.length,()=>`input rank is ${s.rank} but should be > than blockShape.length ${t.length}`),k(e.length===t.length,()=>`crops.length is ${e.length} but should be equal to blockShape.length  ${t.length}`),k(s.shape[0]%i===0,()=>`input tensor batch is ${s.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${i}`);const o={x:s},r={blockShape:t,crops:e};return X.runKernel(Xh,o,r)}const Sg=K({batchToSpaceND_:o$});function r$(n){let t;return n.rank===0||n.rank===1?t=j(n,[1,1,1,n.size]):n.rank===2?t=j(n,[1,1,n.shape[0],n.shape[1]]):n.rank===3?t=j(n,[1,n.shape[0],n.shape[1],n.shape[2]]):t=n,t}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a$(n,t,e,s,i,o){o==null&&(o=.001);const r=O(n,"x","batchNorm"),a=O(t,"mean","batchNorm"),c=O(e,"variance","batchNorm");let u;i!=null&&(u=O(i,"scale","batchNorm"));let l;s!=null&&(l=O(s,"offset","batchNorm")),k(a.rank===c.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),k(l==null||a.rank===l.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),k(u==null||a.rank===u.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");const h={x:r$(r),scale:u,offset:l,mean:a,variance:c},f={varianceEpsilon:o},p=X.runKernel(sf,h,f);return j(p,r.shape)}const Hf=K({batchNorm_:a$});function c$(n,t,e,s,i,o){const r=O(n,"x","batchNorm"),a=O(t,"mean","batchNorm"),c=O(e,"variance","batchNorm");let u;i!=null&&(u=O(i,"scale","batchNorm"));let l;return s!=null&&(l=O(s,"offset","batchNorm")),k(r.rank===2,()=>`Error in batchNorm2D: x must be rank 2 but got rank ${r.rank}.`),k(a.rank===2||a.rank===1,()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${a.rank}.`),k(c.rank===2||c.rank===1,()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${c.rank}.`),u!=null&&k(u.rank===2||u.rank===1,()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${u.rank}.`),l!=null&&k(l.rank===2||l.rank===1,()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${l.rank}.`),Hf(r,a,c,l,u,o)}const u$=K({batchNorm2d_:c$});function l$(n,t,e,s,i,o){const r=O(n,"x","batchNorm"),a=O(t,"mean","batchNorm"),c=O(e,"variance","batchNorm");let u;i!=null&&(u=O(i,"scale","batchNorm"));let l;return s!=null&&(l=O(s,"offset","batchNorm")),k(r.rank===3,()=>`Error in batchNorm3D: x must be rank 3 but got rank ${r.rank}.`),k(a.rank===3||a.rank===1,()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${a.rank}.`),k(c.rank===3||c.rank===1,()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${c.rank}.`),u!=null&&k(u.rank===3||u.rank===1,()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${u.rank}.`),l!=null&&k(l.rank===3||l.rank===1,()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${l.rank}.`),Hf(r,a,c,l,u,o)}const d$=K({batchNorm3d_:l$});function h$(n,t,e,s,i,o){const r=O(n,"x","batchNorm"),a=O(t,"mean","batchNorm"),c=O(e,"variance","batchNorm");let u;i!=null&&(u=O(i,"scale","batchNorm"));let l;return s!=null&&(l=O(s,"offset","batchNorm")),k(r.rank===4,()=>`Error in batchNorm4D: x must be rank 4 but got rank ${r.rank}.`),k(a.rank===4||a.rank===1,()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${a.rank}.`),k(c.rank===4||c.rank===1,()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${c.rank}.`),u!=null&&k(u.rank===4||u.rank===1,()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${u.rank}.`),l!=null&&k(l.rank===4||l.rank===1,()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${l.rank}.`),Hf(r,a,c,l,u,o)}const f$=K({batchNorm4d_:h$});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function p$(n,t,e){const s=O(n,"x","bincount"),i=O(t,"weights","bincount");k(s.dtype==="int32",()=>`Error in bincount: input dtype must be int32, but got ${s.dtype}`),k(e>=0,()=>`size must be non-negative, but got ${e}.`),k(i.size===s.size||i.size===0,()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${s.shape}, weights shape: ${i.shape}.`);const o={x:s,weights:i},r={size:e};return X.runKernel(O1,o,r)}const m$=K({bincount_:p$});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function g$(n,t){let e=O(n,"broadcastTo","x");const s=e.shape;if(fo(t),t.length<e.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${e.rank}.`);if(t.length>e.rank){const u=e.shape.slice();for(;u.length<t.length;)u.unshift(1);e=j(e,u)}const i=e.shape,o=Array.from(t);for(let u=t.length-1;u>=0;u--)if(i[u]===t[u])o[u]=1;else if(e.shape[u]!==1)throw new Error(`broadcastTo(): [${s}] cannot be broadcast to [${t}].`);if(o.map((u,l)=>u>1?l:-1).filter(u=>u>=0).length===0)return _r(e);const a={x:e},c={reps:o};return X.runKernel(gl,a,c)}const jc=K({broadcastTo_:g$});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function x$(n){const e={x:O(n,"x","ceil","float32")};return X.runKernel(Nu,e)}const y$=K({ceil_:x$});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xf(n,t,e){fo(n),e=e||ac(t);const s={shape:n,value:t,dtype:e};return X.runKernel(Q1,{},s)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function b$(n,t,e){const s=O(n,"x","clipByValue");if(k(t<=e,()=>`Error in clip: min (${t}) must be less than or equal to max (${e}).`),t===e)return Xf(s.shape,t,s.dtype);const i={x:s},o={clipValueMin:t,clipValueMax:e};return X.runKernel(ku,i,o)}const Fs=K({clipByValue_:b$});function w$(n){return Xn(n,0)}const v$=K({concat1d_:w$});function _$(n,t){return Xn(n,t)}const C$=K({concat2d_:_$});function S$(n,t){return Xn(n,t)}const T$=K({concat3d_:S$});function E$(n,t){return Xn(n,t)}const I$=K({concat4d_:E$});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function R$(n,t,e,s,i="NHWC",o=[1,1],r){const a=O(n,"x","conv2d","float32"),c=O(t,"filter","conv2d","float32");let u=a,l=!1;a.rank===3&&(l=!0,u=j(a,[1,a.shape[0],a.shape[1],a.shape[2]])),k(u.rank===4,()=>`Error in conv2d: input must be rank 4, but got rank ${u.rank}.`),k(c.rank===4,()=>`Error in conv2d: filter must be rank 4, but got rank ${c.rank}.`),xs("conv2d",s,r);const d=i==="NHWC"?u.shape[3]:u.shape[1];k(d===c.shape[2],()=>`Error in conv2d: depth of input (${d}) must match input depth for filter ${c.shape[2]}.`),k(Yn(e,o),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${e} and dilations '${o}'`),k(Dr(o),()=>"Error in conv2D: Dilated rates should be larger than 0."),k(Dr(e),()=>"Error in conv2D: Strides should be larger than 0.");const h={x:u,filter:c},f={strides:e,pad:s,dataFormat:i,dilations:o,dimRoundingMode:r},p=X.runKernel(Kh,h,f);return l?j(p,[p.shape[1],p.shape[2],p.shape[3]]):p}const $r=K({conv2d_:R$});function M$(n,t,e,s,i="NWC",o=1,r){const a=O(n,"x","conv1d"),c=O(t,"filter","conv1d");let u=a,l=!1;a.rank===2&&(l=!0,u=j(a,[1,a.shape[0],a.shape[1]])),k(u.rank===3,()=>`Error in conv1d: input must be rank 3, but got rank ${u.rank}.`),k(c.rank===3,()=>`Error in conv1d: filter must be rank 3, but got rank ${c.rank}.`),xs("conv1d",s,r),k(u.shape[2]===c.shape[1],()=>`Error in conv1d: depth of input (${u.shape[2]}) must match input depth for filter ${c.shape[1]}.`),k(Yn(e,o),()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${e} and dilation '${o}'`),k(Dr(o),()=>"Error in conv1D: Dilated rates should be larger than 0."),k(Dr(e),()=>"Error in conv1D: Stride should be larger than 0."),k(i==="NWC",()=>`Error in conv1d: got dataFormat of ${i} but only NWC is currently supported.`);const d=j(c,[1,c.shape[0],c.shape[1],c.shape[2]]),h=j(u,[u.shape[0],1,u.shape[1],u.shape[2]]),g=$r(h,d,[1,e],s,"NHWC",[1,o],r);return l?j(g,[g.shape[2],g.shape[3]]):j(g,[g.shape[0],g.shape[2],g.shape[3]])}const m_=K({conv1d_:M$});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function A$(n,t,e,s,i,o="NHWC",r){k(n.length===t.rank,()=>`Length of inShape (${n.length}) and rank of dy (${t.rank}) must match`);let a=n,c=t,u=!1;t.rank===3&&(u=!0,c=j(t,[1,t.shape[0],t.shape[1],t.shape[2]]),a=[1,n[0],n[1],n[2]]),k(a.length===4,()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${a.length}.`),k(c.rank===4,()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${c.rank}`),k(e.rank===4,()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${e.rank}`);const l=o==="NHWC"?a[3]:a[1],d=o==="NHWC"?c.shape[3]:c.shape[1];k(l===e.shape[2],()=>`Error in conv2dDerInput: depth of input (${l}) must match input depth for filter ${e.shape[2]}.`),k(d===e.shape[3],()=>`Error in conv2dDerInput: depth of output (${d}) must match output depth for filter ${e.shape[3]}.`),xs("conv2dDerInput",i,r);const h={dy:c,filter:e},f={strides:s,pad:i,dataFormat:o,dimRoundingMode:r,inputShape:a},p=X.runKernel(Yh,h,f);return u?j(p,[p.shape[1],p.shape[2],p.shape[3]]):p}const Tg=K({conv2DBackpropInput_:A$});function N$(n,t,e,s,i,o){const r=O(n,"x","conv2dTranspose"),a=O(t,"filter","conv2dTranspose");return Tg(e,r,a,s,i,"NHWC",o)}const g_=K({conv2dTranspose_:N$});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function k$(n,t,e,s,i="NDHWC",o=[1,1,1]){const r=O(n,"x","conv3d"),a=O(t,"filter","conv3d");let c=r,u=!1;r.rank===4&&(u=!0,c=j(r,[1,r.shape[0],r.shape[1],r.shape[2],r.shape[3]])),k(c.rank===5,()=>`Error in conv3d: input must be rank 5, but got rank ${c.rank}.`),k(a.rank===5,()=>`Error in conv3d: filter must be rank 5, but got rank ${a.rank}.`),k(c.shape[4]===a.shape[3],()=>`Error in conv3d: depth of input (${c.shape[4]}) must match input depth for filter ${a.shape[3]}.`),k(Yn(e,o),()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${e} and dilations '${o}'`),k(i==="NDHWC",()=>`Error in conv3d: got dataFormat of ${i} but only NDHWC is currently supported.`),k(Dr(o),()=>"Error in conv3D: Dilated rates should be larger than 0."),k(Dr(e),()=>"Error in conv3D: Strides should be larger than 0.");const l={x:c,filter:a},d={strides:e,pad:s,dataFormat:i,dilations:o},h=X.runKernel(Zh,l,d);return u?j(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}const D$=K({conv3d_:k$});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $$(n,t,e,s,i){k(n.length===t.rank,()=>`Length of inShape (${n.length}) and rank of dy (${t.rank}) must match`);let o=n,r=t,a=!1;t.rank===4&&(a=!0,r=j(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),o=[1,n[0],n[1],n[2],n[3]]);const c=o[4],u=r.shape[4];k(o.length===5,()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${o.length}.`),k(r.rank===5,()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${r.rank}`),k(e.rank===5,()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${e.rank}`),k(c===e.shape[3],()=>`Error in conv3dDerInput: depth of input (${c}) must match input depth for filter ${e.shape[3]}.`),k(u===e.shape[4],()=>`Error in conv3dDerInput: depth of output (${u}) must match output depth for filter ${e.shape[4]}.`);const l={dy:r,filter:e},d={pad:i,strides:s,inputShape:o},h=X.runKernel(W1,l,d);return a?j(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}const x_=K({conv3DBackpropInput_:$$});function F$(n,t,e,s,i){const o=O(n,"x","conv3dTranspose"),r=O(t,"filter","conv3dTranspose");return x_(e,o,r,s,i)}const P$=K({conv3dTranspose_:F$});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function L$(n){const e={x:O(n,"x","cos","float32")};return X.runKernel(Du,e)}const Eg=K({cos_:L$});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function O$(n){const e={x:O(n,"x","cosh","float32")};return X.runKernel($u,e)}const y_=K({cosh_:O$});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the 'License');
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an 'AS IS' BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function U$(n,t=0,e=!1,s=!1){const o={x:O(n,"x","cumprod")},r={axis:t,exclusive:e,reverse:s};return X.runKernel(G1,o,r)}const I0=K({cumprod_:U$});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function B$(n,t=0,e=!1,s=!1){const o={x:O(n,"x","cumsum")},r={axis:t,exclusive:e,reverse:s};return X.runKernel(Jh,o,r)}const b_=K({cumsum_:B$});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function z$(n,t,e,s=!1){const i=O(n,"x","denseBincount"),o=O(t,"weights","denseBincount");k(i.dtype==="int32",()=>`Error in denseBincount: input dtype must be int32, but got ${i.dtype}`),k(i.rank<=2,()=>`Error in denseBincount: input must be at most rank 2, but got rank ${i.rank}.`),k(e>=0,()=>`size must be non-negative, but got ${e}.`),k(o.size===i.size||o.size===0,()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${i.shape}, weights shape: ${o.shape}.`);const r={x:i,weights:o},a={size:e,binaryOutput:s};return X.runKernel(X1,r,a)}const Ob=K({denseBincount_:z$});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function V$(n,t,e="NHWC"){const s=O(n,"x","depthToSpace","float32"),i=e==="NHWC"?s.shape[1]:s.shape[2],o=e==="NHWC"?s.shape[2]:s.shape[3],r=e==="NHWC"?s.shape[3]:s.shape[1];k(t>1,()=>`blockSize should be > 1 for depthToSpace, but was: ${t}`),k(i*t>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${i} and ${t}  for depthToSpace with input shape
    ${s.shape}`),k(o*t>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${o} and ${t} for depthToSpace with input shape
        ${s.shape}`),k(r%(t*t)===0,()=>`Dimension size must be evenly divisible by ${t*t} but is ${r} for depthToSpace with input shape ${s.shape}`);const a={x:s},c={blockSize:t,dataFormat:e};return X.runKernel(q1,a,c)}const W$=K({depthToSpace_:V$});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function G$(n,t,e,s,i="NHWC",o=[1,1],r){const a=O(n,"x","depthwiseConv2d","float32"),c=O(t,"filter","depthwiseConv2d","float32");let u=a,l=!1;a.rank===3&&(l=!0,u=j(a,[1,a.shape[0],a.shape[1],a.shape[2]])),k(u.rank===4,()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${u.rank}.`),k(c.rank===4,()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${c.rank}.`);const d=i==="NHWC"?u.shape[3]:u.shape[1];k(d===c.shape[2],()=>`Error in depthwiseConv2d: number of input channels (${d}) must match the inChannels dimension in filter ${c.shape[2]}.`),xs("depthwiseConv2d",s,r);const h={x:u,filter:c},f={strides:e,pad:s,dataFormat:i,dilations:o,dimRoundingMode:r},p=X.runKernel(Qh,h,f);return l?j(p,[p.shape[1],p.shape[2],p.shape[3]]):p}const Ig=K({depthwiseConv2d_:G$});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function H$(n,t,e,s,i=[1,1],o="NHWC"){const r=O(n,"x","dilation2d"),a=O(t,"filter","dilation2d");k(r.rank===3||r.rank===4,()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${r.rank}.`),k(a.rank===3,()=>`Error in dilation2d: filter must be rank 3, but got rank ${a.rank}.`),k(o==="NHWC",()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${o}`);let c=r,u=!1;r.rank===3&&(c=j(r,[1,r.shape[0],r.shape[1],r.shape[2]]),u=!0),k(c.shape[3]===a.shape[2],()=>`Error in dilation2d:  input and filter must have the same depth: ${c.shape[3]} vs ${a.shape[2]}`);const l={x:c,filter:a},d={strides:e,pad:s,dilations:i},h=X.runKernel(tf,l,d);return u?j(h,[h.shape[1],h.shape[2],h.shape[3]]):h}const X$=K({dilation2d_:H$});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ja(n,t){const e=n.length,s=[];for(let i=0;i<e;i++){const o=e-1-i,r=n[o]||1;(t[t.length-1-i]||1)>1&&r===1&&s.unshift(o)}return s}function In(n,t){const e=[];for(let s=0;s<t.length;s++){const i=n[n.length-s-1],o=t.length-s-1,r=t[o];(i==null||i===1&&r>1)&&e.unshift(o)}return e}function de(n,t){const e=Math.max(n.length,t.length),s=new Array(e);for(let i=0;i<e;i++){let o=n[n.length-i-1];o==null&&(o=1);let r=t[t.length-i-1];if(r==null&&(r=1),o===1)s[e-i-1]=r;else if(r===1)s[e-i-1]=o;else if(o!==r){const a=`Operands could not be broadcast together with shapes ${n} and ${t}.`;throw Error(a)}else s[e-i-1]=o}return s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function q$(n,t){let e=O(n,"a","equal","string_or_numeric"),s=O(t,"b","equal","string_or_numeric");[e,s]=pn(e,s),de(e.shape,s.shape);const i={a:e,b:s};return X.runKernel(ef,i)}const _i=K({equal_:q$});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function j$(n,t,e){const s=O(t,"a","where"),i=O(e,"b","where"),o=O(n,"condition","where","bool"),r=de(de(o.shape,s.shape),i.shape),a=jc(o,r),c=jc(s,r),u=jc(i,r),l={condition:a,t:c,e:u};return X.runKernel(kf,l)}const rs=K({where_:j$});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function K$(n){const e={x:O(n,"x","zerosLike")};return X.runKernel(Bf,e)}const Me=K({zerosLike_:K$});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Y$(n,t){let e=O(n,"a","div"),s=O(t,"b","div");[e,s]=pn(e,s);const i=Xt(e,s),o=Me(i),r=_i(s,o);return rs(r,o,i)}const Z$=K({divNoNan_:Y$});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function J$(n,t){const e=O(n,"t1","dot"),s=O(t,"t2","dot");k((e.rank===1||e.rank===2)&&(s.rank===1||s.rank===2),()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${e.rank} and ${s.rank}.`);const i=e.rank===1?e.size:e.shape[1],o=s.rank===1?s.size:s.shape[0];if(k(i===o,()=>`Error in dot: inner dimensions of inputs must match, but got ${i} and ${o}.`),e.rank===1&&s.rank===1){const r=j(e,[1,-1]),a=j(s,[-1,1]),c=Fe(r,a);return j(c,[])}else if(e.rank===1&&s.rank===2){const r=j(e,[1,-1]),a=j(s,[s.shape[0],s.shape[1]]),c=Fe(r,a);return j(c,[c.size])}else if(e.rank===2&&s.rank===1){const r=j(s,[-1,1]),a=Fe(e,r);return j(a,[a.size])}else{const r=j(s,[s.shape[0],s.shape[1]]);return Fe(e,r)}}const Q$=K({dot_:J$});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tF(n,...t){const e=t.map((i,o)=>O(i,`tensors${o}`,"einsum")),s={equation:n};return X.runKernel(Y1,e,s)}const Dc=K({einsum_:tF});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eF(n){const e={x:O(n,"x","elu","float32")};return X.runKernel(Pu,e)}const qf=K({elu_:eF});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nF(n){let t=O(n,"x","erf");k(t.dtype==="int32"||t.dtype==="float32",()=>"Input dtype must be `int32` or `float32`."),t.dtype==="int32"&&(t=Nt(t,"float32"));const e={x:t};return X.runKernel(Lu,e)}const w_=K({erf_:nF});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Rg(n,t){for(let e=0;e<n.length;++e)if(n[n.length-e-1]!==t-1-e)return!1;return!0}function v_(n,t,e){const s=n.length+t.length,i=[];let o=0,r=0;for(let a=0;a<s;a++)e.indexOf(a)===-1?i.push(n[o++]):i.push(t[r++]);return i}function $n(n,t){const e=[],s=n.length;for(let o=0;o<s;o++)t.indexOf(o)===-1&&e.push(n[o]);const i=t.map(o=>n[o]);return[e,i]}function wn(n,t){const e=t.map(s=>1);return v_(n,e,t)}function Bn(n,t,e){k(Rg(t,e),()=>`${n} supports only inner-most axes for now. Got axes ${t} and rank-${e} input.`)}function un(n,t){if(Rg(n,t))return null;const e=[];for(let s=0;s<t;++s)n.indexOf(s)===-1&&e.push(s);return n.forEach(s=>e.push(s)),e}function qo(n){return n.map((t,e)=>[e,t]).sort((t,e)=>t[1]-e[1]).map(t=>t[0])}function mn(n,t){const e=[];for(let s=t-n;s<t;++s)e.push(s);return e}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sF(n,t=null,e=!1){const i={x:O(n,"x","max")},o={reductionIndices:t,keepDims:e};return X.runKernel(pf,i,o)}const bi=K({max_:sF});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iF(n,t=null,e=!1){const i={x:O(n,"x","min")},o={axis:t,keepDims:e};return X.runKernel(yf,i,o)}const sh=K({min_:iF});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oF(n,t){let e=O(n,"base","pow"),s=O(t,"exp","pow");[e,s]=pn(e,s);const i={a:e,b:s};return X.runKernel(Qu,i)}const Fr=K({pow_:oF});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ee(n,t){if((Qs(n)&&t!=="string"||Array.isArray(n))&&t!=="complex64")throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if(t==="string"&&Qs(n)&&!(n instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return Wf(n,[],[],t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rF(n){const e={x:O(n,"x","sqrt","float32")};return X.runKernel(dl,e)}const Kn=K({sqrt_:rF});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aF(n){const t=O(n,"x","square"),e={};return X.runKernel("Square",{x:t},e)}const Qe=K({square_:aF});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cF(n,t=null,e=!1){let s=O(n,"x","sum");s.dtype==="bool"&&(s=Nt(s,"int32"));const i={x:s},o={axis:t,keepDims:e};return X.runKernel($f,i,o)}const Yt=K({sum_:cF});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uF(n,t="euclidean",e=null,s=!1){n=O(n,"x","norm");const i=__(n,t,e);let o=i.shape;if(s){const r=ve(e,n.shape);o=wn(i.shape,r)}return j(i,o)}function __(n,t,e=null){if(n.rank===0)return ns(n);if(n.rank!==1&&e===null)return __(j(n,[-1]),t,e);if(n.rank===1||typeof e=="number"||Array.isArray(e)&&e.length===1){if(t===1)return Yt(ns(n),e);if(t===1/0)return bi(ns(n),e);if(t===-1/0)return sh(ns(n),e);if(t==="euclidean"||t===2)return Kn(Yt(Fr(ns(n),Ee(2,"int32")),e));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(e)&&e.length===2){if(t===1)return bi(Yt(ns(n),e[0]),e[1]-1);if(t===1/0)return bi(Yt(ns(n),e[1]),e[0]);if(t===-1/0)return sh(Yt(ns(n),e[1]),e[0]);if(t==="fro"||t==="euclidean")return Kn(Yt(Qe(n),e));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${e}`)}const jf=K({norm_:uF});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lF(n,t=null,e=!1){return jf(n,"euclidean",t,e)}const dF=K({euclideanNorm_:lF});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hF(n){const e={x:O(n,"x","exp")};return X.runKernel(Ou,e)}const ti=K({exp_:hF});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fF(n,t=0){const e=O(n,"x","expandDims","string_or_numeric");k(t<=e.rank,()=>"Axis must be <= rank of the tensor");const s={input:e},i={dim:t};return X.runKernel(nf,s,i)}const fs=K({expandDims_:fF});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pF(n){const e={x:O(n,"x","expm1")};return X.runKernel(Uu,e)}const mF=K({expm1_:pF});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gF(n,t){const e=O(n,"x","tile","string_or_numeric");k(e.rank===t.length,()=>`Error in transpose: rank of input ${e.rank} must match length of reps ${t}.`);const s={x:e},i={reps:t};return X.runKernel(gl,s,i)}const xi=K({tile_:gF});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xF(n,t,e,s="float32"){t==null&&(t=n);const i=we([n,t],s),o=n<=t?n:t;for(let a=0;a<o;++a)i.set(1,a,a);const r=j(i.toTensor(),[n,t]);if(e==null)return r;if(e.length===1)return xi(fs(r,0),[e[0],1,1]);if(e.length===2)return xi(fs(fs(r,0),0),[e[0],e[1],1,1]);if(e.length===3)return xi(fs(fs(fs(r,0),0),0),[e[0],e[1],e[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${e.length}D.`)}const C_=K({eye_:xF});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yF(n){const e={x:O(n,"x","floor","float32")};return X.runKernel(Bu,e)}const Kf=K({floor_:yF});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bF(n,t,e=0,s=0){const i=O(n,"x","gather"),o=O(t,"indices","gather","int32"),r={x:i,indices:o},a={axis:e,batchDims:s};return X.runKernel(of,r,a)}const Mg=K({gather_:bF});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wF(n,t){let e=O(n,"a","greater","string_or_numeric"),s=O(t,"b","greater","string_or_numeric");[e,s]=pn(e,s),de(e.shape,s.shape);const i={a:e,b:s};return X.runKernel(rf,i)}const as=K({greater_:wF});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vF(n,t){let e=O(n,"a","greaterEqual","string_or_numeric"),s=O(t,"b","greaterEqual","string_or_numeric");[e,s]=pn(e,s),de(e.shape,s.shape);const i={a:e,b:s};return X.runKernel(Vu,i)}const Hr=K({greaterEqual_:vF});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _F(n){const e={input:O(n,"input","imag")};return X.runKernel(ng,e)}const Ag=K({imag_:_F});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CF(n){const e={x:O(n,"x","isFinite")};return X.runKernel(Gu,e)}const SF=K({isFinite_:CF});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TF(n){const e={x:O(n,"x","isInf")};return X.runKernel(Hu,e)}const EF=K({isInf_:TF});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IF(n){const e={x:O(n,"x","isNaN")};return X.runKernel(Xu,e)}const RF=K({isNaN_:IF});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MF(n,t=.2){const s={x:O(n,"x","leakyRelu")},i={alpha:t};return X.runKernel(af,s,i)}const Ng=K({leakyRelu_:MF});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AF(n,t){let e=O(n,"a","less","string_or_numeric"),s=O(t,"b","less","string_or_numeric");[e,s]=pn(e,s),de(e.shape,s.shape);const i={a:e,b:s};return X.runKernel(cf,i)}const Ka=K({less_:AF});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NF(n,t){let e=O(n,"a","lessEqual","string_or_numeric"),s=O(t,"b","lessEqual","string_or_numeric");[e,s]=pn(e,s),de(e.shape,s.shape);const i={a:e,b:s};return X.runKernel(uf,i)}const hc=K({lessEqual_:NF});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kF(n,t=5,e=1,s=1,i=.5){const o=O(n,"x","localResponseNormalization");k(o.rank===4||o.rank===3,()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got
               rank ${o.rank}.`),k(Ha(t),()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`);let r=o,a=!1;o.rank===3&&(a=!0,r=j(o,[1,o.shape[0],o.shape[1],o.shape[2]]));const c={x:r},u={depthRadius:t,bias:e,alpha:s,beta:i},l=X.runKernel(ff,c,u);return a?j(l,[l.shape[1],l.shape[2],l.shape[3]]):l}const DF=K({localResponseNormalization_:kF});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $F(n){const e={x:O(n,"x","log","float32")};return X.runKernel(qu,e)}const Bi=K({log_:$F});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FF(n){const e={x:O(n,"x","log1p")};return X.runKernel(ju,e)}const S_=K({log1p_:FF});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PF(n,t){k(h0(n),()=>"The f passed in variableGrads(f) must be a function"),k(t==null||Array.isArray(t)&&t.every(u=>u instanceof nh),()=>"The varList passed in variableGrads(f, varList) must be an array of variables");const e=t!=null;if(!e){t=[];for(const u in X.registeredVariables)t.push(X.registeredVariables[u])}const s=e?t.filter(u=>!u.trainable):null,i=t.length;t=t.filter(u=>u.trainable),k(t.length>0,()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${i} variables is trainable.`);const o=!0,{value:r,grads:a}=X.gradients(n,t,null,o);k(a.some(u=>u!=null),()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."),k(r.rank===0,()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${r.rank} tensor`);const c={};return t.forEach((u,l)=>{a[l]!=null&&(c[u.name]=a[l])}),s?.forEach(u=>c[u.name]=null),{value:r,grads:c}}function Ya(n){return X.customGrad(n)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LF(n){const e={x:O(n,"x","neg")};return X.runKernel(wf,e)}const qe=K({neg_:LF});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OF(n){const e={x:O(n,"x","softplus")};return X.runKernel(ll,e)}const bl=K({softplus_:OF});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UF(n){const t=O(n,"x","logSigmoid");return Ya(s=>({value:qe(bl(qe(s))),gradFunc:r=>z(r,dc(qe(s)))}))(t)}const BF=K({logSigmoid_:UF});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zF(n,t){let e=O(n,"a","sub"),s=O(t,"b","sub");[e,s]=pn(e,s);const i={a:e,b:s};return X.runKernel(fl,i)}const ee=K({sub_:zF});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VF(n,t=-1){const e=O(n,"logits","logSoftmax");if(t===-1&&(t=e.rank-1),t!==e.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${e.rank} and axis was ${t}`);return Ya((i,o)=>{const a=bi(i,t,!0),c=ee(i,a),u=ee(Nt(c,"float32"),Bi(Yt(ti(c),t,!0)));return o([u]),{value:u,gradFunc:(d,h)=>{const[f]=h,p=!0,x=ti(f);return ee(d,z(Yt(d,t,p),x))}}})(e)}const T_=K({logSoftmax_:VF});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WF(n,t=null,e=!1){const s=O(n,"x","logSumExp"),i=ve(t,s.shape),o=bi(s,i,!0),r=ee(s,o),a=ti(r),c=Yt(a,i),u=Bi(c),l=yt(j(o,u.shape),u);if(e){const d=wn(l.shape,i);return j(l,d)}return l}const E_=K({logSumExp_:WF});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GF(n,t){const e=O(n,"a","logicalAnd","bool"),s=O(t,"b","logicalAnd","bool");de(e.shape,s.shape);const i={a:e,b:s};return X.runKernel(lf,i)}const uo=K({logicalAnd_:GF});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HF(n){const e={x:O(n,"x","logicalNot","bool")};return X.runKernel(df,e)}const kg=K({logicalNot_:HF});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XF(n,t){const e=O(n,"a","logicalOr","bool"),s=O(t,"b","logicalOr","bool");de(e.shape,s.shape);const i={a:e,b:s};return X.runKernel(hf,i)}const I_=K({logicalOr_:XF});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qF(n,t){const e=O(n,"a","logicalXor","bool"),s=O(t,"b","logicalXor","bool");return de(e.shape,s.shape),uo(I_(n,t),kg(uo(n,t)))}const jF=K({logicalXor_:qF});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KF(n,t,e,s,i){const o=O(n,"x","maxPool"),r=1;let a=o,c=!1;o.rank===3&&(c=!0,a=j(o,[1,o.shape[0],o.shape[1],o.shape[2]])),k(a.rank===4,()=>`Error in maxPool: input must be rank 4 but got rank ${a.rank}.`),k(Yn(e,r),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${e} and dilations '${r}'`),xs("maxPool",s,i);const u={x:a},l={filterSize:t,strides:e,pad:s,dimRoundingMode:i},d=X.runKernel(mf,u,l);return c?j(d,[d.shape[1],d.shape[2],d.shape[3]]):d}const Dg=K({maxPool_:KF});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YF(n,t=[1,1,1],e,s,i,o="NDHWC"){const r=O(n,"x","maxPool3d");let a=r,c=!1;r.rank===4&&(c=!0,a=j(r,[1,r.shape[0],r.shape[1],r.shape[2],r.shape[3]])),k(a.rank===5,()=>`Error in maxPool3d: x must be rank 5 but got rank ${a.rank}.`),k(o==="NDHWC",()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${o}`),xs("maxPool3d",s,i);const u={x:a},l={filterSize:t,strides:e,pad:s,dimRoundingMode:i,dataFormat:o},d=X.runKernel(gf,u,l);return c?j(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}const ZF=K({maxPool3d_:YF});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JF(n,t){let e=O(n,"a","maximum"),s=O(t,"b","maximum");[e,s]=pn(e,s),e.dtype==="bool"&&(e=Nt(e,"int32"),s=Nt(s,"int32")),de(e.shape,s.shape);const i={a:e,b:s};return X.runKernel(Ku,i)}const dn=K({maximum_:JF});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QF(n,t=null,e=!1){const i={x:O(n,"x","mean")},o={axis:t,keepDims:e};return X.runKernel(xf,i,o)}const bn=K({mean_:QF});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function en(n,t="float32"){if(fo(n),t==="complex64"){const s=en(n,"float32"),i=en(n,"float32");return qa(s,i)}const e=jn(ct(n),t);return X.makeTensor(e,n,t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jo(n,t="float32"){if(fo(n),t==="complex64"){const s=jo(n,"float32"),i=en(n,"float32");return qa(s,i)}const e=A1(ct(n),t);return X.makeTensor(e,n,t)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tP(n,t){let e=O(n,"a","minimum"),s=O(t,"b","minimum");[e,s]=pn(e,s),e.dtype==="bool"&&(e=Nt(e,"int32"),s=Nt(s,"int32")),de(e.shape,s.shape);const i={a:e,b:s};return X.runKernel(Yu,i)}const Do=K({minimum_:tP});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eP(n,t,e){k(e==="reflect"||e==="symmetric",()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${e}.`);const s=O(n,"x","mirrorPad");if(s.rank===0)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");k(t.length===s.rank,()=>`Padding doesn't match input. Must be ${s.rank}. Got ${t.length}.`);const i=e==="reflect"?1:0;for(let a=0;a<s.rank;a++)k(t[a].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),k(t[a][0]>=0&&t[a][0]<=s.shape[a]-i&&t[a][1]>=0&&t[a][1]<=s.shape[a]-i,()=>`Padding in dimension ${a} cannot be greater than or equal to ${s.shape[a]-i} or less than 0 for input of shape ${s.shape}`);const o={paddings:t,mode:e},r={x:s};return X.runKernel(bf,r,o)}const nP=K({mirrorPad_:eP});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sP(n,t){let e=O(n,"a","mod"),s=O(t,"b","mod");[e,s]=pn(e,s);const i={a:e,b:s};return X.runKernel(Zu,i)}const iP=K({mod_:sP});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oP(n,t=null,e=!1){n=O(n,"x","moments");const s=ve(t,n.shape),i=bn(n,s,e);let o=i.shape;e||(o=wn(i.shape,s));const r=Qe(ee(Nt(n,"float32"),j(i,o))),a=bn(r,s,e);return{mean:i,variance:a}}const $g=K({moments_:oP});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rP(n,t){let e=O(n,"a","notEqual","string_or_numeric"),s=O(t,"b","notEqual","string_or_numeric");[e,s]=pn(e,s),de(e.shape,s.shape);const i={a:e,b:s};return X.runKernel(vf,i)}const ih=K({notEqual_:rP});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aP(n,t,e=1,s=0,i="int32"){if(t<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${t}`);const r={indices:O(n,"indices","oneHot","int32")},a={dtype:i,depth:t,onValue:e,offValue:s};return X.runKernel(Cf,r,a)}const R_=K({oneHot_:aP});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cP(n){const e={x:O(n,"x","onesLike")};return X.runKernel(_f,e)}const ei=K({onesLike_:cP});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uP(n,t,e=0){const s=O(n,"x","pad");if(s.rank===0)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const i={paddings:t,constantValue:e},o={x:s};return X.runKernel(Tf,o,i)}const Fg=K({pad_:uP});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lP(n,t,e){const s=O(n,"x","spaceToBatchND");k(s.rank>=1+t.length,()=>`input rank ${s.rank} should be > than [blockShape] ${t.length}`),k(e.length===t.length,()=>`paddings.shape[0] ${e.length} must be equal to [blockShape] ${t.length}`),k(s.shape.reduce((r,a,c)=>c>0&&c<=t.length?r&&(a+e[c-1][0]+e[c-1][1])%t[c-1]===0:r,!0),()=>`input spatial dimensions ${s.shape.slice(1)} with paddings ${e.toString()} must be divisible by blockShapes ${t.toString()}`);const i={x:s},o={blockShape:t,paddings:e};return X.runKernel(Ff,i,o)}const Pg=K({spaceToBatchND_:lP});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dP(n,t,e,s,i,o,r){i==null&&(i=[1,1]),o==null&&(o=1),s===0&&(s="valid");const a=O(n,"x","maxPool");let c=a,u=!1;a.rank===3&&(u=!0,c=j(a,[1,a.shape[0],a.shape[1],a.shape[2]])),k(Yn(o,i),()=>`Error in pool: Either strides or dilations must be 1. Got strides ${o} and dilations '${i}'`);const l=ni(c.shape,t,o,i,s),d=[l.dilationHeight,l.dilationWidth];let h;s==="same"?h=fP([l.filterHeight,l.filterWidth],d):h=[[0,0],[0,0]];const f=d[0]===1&&d[1]===1,[p,x]=hP([l.inHeight,l.inWidth],d,h),g=f?s:"valid",m=f?c:Pg(c,d,p),w=(e==="avg"?()=>Cg(m,t,o,g,r):()=>Dg(m,t,o,g,r))(),b=f?w:Sg(w,d,x);return u?j(b,[b.shape[1],b.shape[2],b.shape[3]]):b}function hP(n,t,e){const s=e.map(l=>l[0]),i=e.map(l=>l[1]),o=n.concat(s,i),r=t.map((l,d)=>(l-o[d]%l)%l),a=i.map((l,d)=>l+r[d]),c=t.map((l,d)=>[s[d],a[d]]),u=t.map((l,d)=>[0,r[d]]);return[c,u]}function fP(n,t){const s=n.map((r,a)=>r+(r-1)*(t[a]-1)).map(r=>r-1),i=s.map(r=>Math.floor(r/2)),o=s.map((r,a)=>r-i[a]);return s.map((r,a)=>[i[a],o[a]])}const pP=K({pool_:dP});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mP(n,t){const e=O(n,"x","prelu"),s=O(t,"alpha","prelu"),i={x:e,alpha:s};return X.runKernel(Ef,i)}const Lg=K({prelu_:mP});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gP(n,t=null,e=!1){let s=O(n,"x","prod");s.dtype==="bool"&&(s=Nt(s,"int32"));const i={x:s},o={axis:t,keepDims:e};return X.runKernel(If,i,o)}const xP=K({prod_:gP});var Ud={exports:{}},yP=Ud.exports,Ub;function bP(){return Ub||(Ub=1,function(n){(function(t,e,s){function i(c){var u=this,l=a();u.next=function(){var d=2091639*u.s0+u.c*23283064365386963e-26;return u.s0=u.s1,u.s1=u.s2,u.s2=d-(u.c=d|0)},u.c=1,u.s0=l(" "),u.s1=l(" "),u.s2=l(" "),u.s0-=l(c),u.s0<0&&(u.s0+=1),u.s1-=l(c),u.s1<0&&(u.s1+=1),u.s2-=l(c),u.s2<0&&(u.s2+=1),l=null}function o(c,u){return u.c=c.c,u.s0=c.s0,u.s1=c.s1,u.s2=c.s2,u}function r(c,u){var l=new i(c),d=u&&u.state,h=l.next;return h.int32=function(){return l.next()*4294967296|0},h.double=function(){return h()+(h()*2097152|0)*11102230246251565e-32},h.quick=h,d&&(typeof d=="object"&&o(d,l),h.state=function(){return o(l,{})}),h}function a(){var c=4022871197,u=function(l){l=String(l);for(var d=0;d<l.length;d++){c+=l.charCodeAt(d);var h=.02519603282416938*c;c=h>>>0,h-=c,h*=c,c=h>>>0,h-=c,c+=h*4294967296}return(c>>>0)*23283064365386963e-26};return u}e&&e.exports?e.exports=r:this.alea=r})(yP,n)}(Ud)),Ud.exports}var Bd={exports:{}},wP=Bd.exports,Bb;function vP(){return Bb||(Bb=1,function(n){(function(t,e,s){function i(a){var c=this,u="";c.x=0,c.y=0,c.z=0,c.w=0,c.next=function(){var d=c.x^c.x<<11;return c.x=c.y,c.y=c.z,c.z=c.w,c.w^=c.w>>>19^d^d>>>8},a===(a|0)?c.x=a:u+=a;for(var l=0;l<u.length+64;l++)c.x^=u.charCodeAt(l)|0,c.next()}function o(a,c){return c.x=a.x,c.y=a.y,c.z=a.z,c.w=a.w,c}function r(a,c){var u=new i(a),l=c&&c.state,d=function(){return(u.next()>>>0)/4294967296};return d.double=function(){do var h=u.next()>>>11,f=(u.next()>>>0)/4294967296,p=(h+f)/(1<<21);while(p===0);return p},d.int32=u.next,d.quick=d,l&&(typeof l=="object"&&o(l,u),d.state=function(){return o(u,{})}),d}e&&e.exports?e.exports=r:this.xor128=r})(wP,n)}(Bd)),Bd.exports}var zd={exports:{}},_P=zd.exports,zb;function CP(){return zb||(zb=1,function(n){(function(t,e,s){function i(a){var c=this,u="";c.next=function(){var d=c.x^c.x>>>2;return c.x=c.y,c.y=c.z,c.z=c.w,c.w=c.v,(c.d=c.d+362437|0)+(c.v=c.v^c.v<<4^(d^d<<1))|0},c.x=0,c.y=0,c.z=0,c.w=0,c.v=0,a===(a|0)?c.x=a:u+=a;for(var l=0;l<u.length+64;l++)c.x^=u.charCodeAt(l)|0,l==u.length&&(c.d=c.x<<10^c.x>>>4),c.next()}function o(a,c){return c.x=a.x,c.y=a.y,c.z=a.z,c.w=a.w,c.v=a.v,c.d=a.d,c}function r(a,c){var u=new i(a),l=c&&c.state,d=function(){return(u.next()>>>0)/4294967296};return d.double=function(){do var h=u.next()>>>11,f=(u.next()>>>0)/4294967296,p=(h+f)/(1<<21);while(p===0);return p},d.int32=u.next,d.quick=d,l&&(typeof l=="object"&&o(l,u),d.state=function(){return o(u,{})}),d}e&&e.exports?e.exports=r:this.xorwow=r})(_P,n)}(zd)),zd.exports}var Vd={exports:{}},SP=Vd.exports,Vb;function TP(){return Vb||(Vb=1,function(n){(function(t,e,s){function i(a){var c=this;c.next=function(){var l=c.x,d=c.i,h,f;return h=l[d],h^=h>>>7,f=h^h<<24,h=l[d+1&7],f^=h^h>>>10,h=l[d+3&7],f^=h^h>>>3,h=l[d+4&7],f^=h^h<<7,h=l[d+7&7],h=h^h<<13,f^=h^h<<9,l[d]=f,c.i=d+1&7,f};function u(l,d){var h,f=[];if(d===(d|0))f[0]=d;else for(d=""+d,h=0;h<d.length;++h)f[h&7]=f[h&7]<<15^d.charCodeAt(h)+f[h+1&7]<<13;for(;f.length<8;)f.push(0);for(h=0;h<8&&f[h]===0;++h);for(h==8?f[7]=-1:f[h],l.x=f,l.i=0,h=256;h>0;--h)l.next()}u(c,a)}function o(a,c){return c.x=a.x.slice(),c.i=a.i,c}function r(a,c){a==null&&(a=+new Date);var u=new i(a),l=c&&c.state,d=function(){return(u.next()>>>0)/4294967296};return d.double=function(){do var h=u.next()>>>11,f=(u.next()>>>0)/4294967296,p=(h+f)/(1<<21);while(p===0);return p},d.int32=u.next,d.quick=d,l&&(l.x&&o(l,u),d.state=function(){return o(u,{})}),d}e&&e.exports?e.exports=r:this.xorshift7=r})(SP,n)}(Vd)),Vd.exports}var Wd={exports:{}},EP=Wd.exports,Wb;function IP(){return Wb||(Wb=1,function(n){(function(t,e,s){function i(a){var c=this;c.next=function(){var l=c.w,d=c.X,h=c.i,f,p;return c.w=l=l+1640531527|0,p=d[h+34&127],f=d[h=h+1&127],p^=p<<13,f^=f<<17,p^=p>>>15,f^=f>>>12,p=d[h]=p^f,c.i=h,p+(l^l>>>16)|0};function u(l,d){var h,f,p,x,g,m=[],y=128;for(d===(d|0)?(f=d,d=null):(d=d+"\0",f=0,y=Math.max(y,d.length)),p=0,x=-32;x<y;++x)d&&(f^=d.charCodeAt((x+32)%d.length)),x===0&&(g=f),f^=f<<10,f^=f>>>15,f^=f<<4,f^=f>>>13,x>=0&&(g=g+1640531527|0,h=m[x&127]^=f+g,p=h==0?p+1:0);for(p>=128&&(m[(d&&d.length||0)&127]=-1),p=127,x=4*128;x>0;--x)f=m[p+34&127],h=m[p=p+1&127],f^=f<<13,h^=h<<17,f^=f>>>15,h^=h>>>12,m[p]=f^h;l.w=g,l.X=m,l.i=p}u(c,a)}function o(a,c){return c.i=a.i,c.w=a.w,c.X=a.X.slice(),c}function r(a,c){a==null&&(a=+new Date);var u=new i(a),l=c&&c.state,d=function(){return(u.next()>>>0)/4294967296};return d.double=function(){do var h=u.next()>>>11,f=(u.next()>>>0)/4294967296,p=(h+f)/(1<<21);while(p===0);return p},d.int32=u.next,d.quick=d,l&&(l.X&&o(l,u),d.state=function(){return o(u,{})}),d}e&&e.exports?e.exports=r:this.xor4096=r})(EP,n)}(Wd)),Wd.exports}var Gd={exports:{}},RP=Gd.exports,Gb;function MP(){return Gb||(Gb=1,function(n){(function(t,e,s){function i(a){var c=this,u="";c.next=function(){var d=c.b,h=c.c,f=c.d,p=c.a;return d=d<<25^d>>>7^h,h=h-f|0,f=f<<24^f>>>8^p,p=p-d|0,c.b=d=d<<20^d>>>12^h,c.c=h=h-f|0,c.d=f<<16^h>>>16^p,c.a=p-d|0},c.a=0,c.b=0,c.c=-1640531527,c.d=1367130551,a===Math.floor(a)?(c.a=a/4294967296|0,c.b=a|0):u+=a;for(var l=0;l<u.length+20;l++)c.b^=u.charCodeAt(l)|0,c.next()}function o(a,c){return c.a=a.a,c.b=a.b,c.c=a.c,c.d=a.d,c}function r(a,c){var u=new i(a),l=c&&c.state,d=function(){return(u.next()>>>0)/4294967296};return d.double=function(){do var h=u.next()>>>11,f=(u.next()>>>0)/4294967296,p=(h+f)/(1<<21);while(p===0);return p},d.int32=u.next,d.quick=d,l&&(typeof l=="object"&&o(l,u),d.state=function(){return o(u,{})}),d}e&&e.exports?e.exports=r:this.tychei=r})(RP,n)}(Gd)),Gd.exports}var Hd={exports:{}};const AP={},NP=Object.freeze(Object.defineProperty({__proto__:null,default:AP},Symbol.toStringTag,{value:"Module"})),kP=E9(NP);var DP=Hd.exports,Hb;function $P(){return Hb||(Hb=1,function(n){(function(t,e,s){var i=256,o=6,r=52,a="random",c=s.pow(i,o),u=s.pow(2,r),l=u*2,d=i-1,h;function f(b,_,T){var E=[];_=_==!0?{entropy:!0}:_||{};var I=m(g(_.entropy?[b,w(e)]:b??y(),3),E),S=new p(E),v=function(){for(var C=S.g(o),M=c,N=0;C<u;)C=(C+N)*i,M*=i,N=S.g(1);for(;C>=l;)C/=2,M/=2,N>>>=1;return(C+N)/M};return v.int32=function(){return S.g(4)|0},v.quick=function(){return S.g(4)/4294967296},v.double=v,m(w(S.S),e),(_.pass||T||function(C,M,N,D){return D&&(D.S&&x(D,S),C.state=function(){return x(S,{})}),N?(s[a]=C,M):C})(v,I,"global"in _?_.global:this==s,_.state)}function p(b){var _,T=b.length,E=this,I=0,S=E.i=E.j=0,v=E.S=[];for(T||(b=[T++]);I<i;)v[I]=I++;for(I=0;I<i;I++)v[I]=v[S=d&S+b[I%T]+(_=v[I])],v[S]=_;(E.g=function(C){for(var M,N=0,D=E.i,$=E.j,F=E.S;C--;)M=F[D=d&D+1],N=N*i+F[d&(F[D]=F[$=d&$+M])+(F[$]=M)];return E.i=D,E.j=$,N})(i)}function x(b,_){return _.i=b.i,_.j=b.j,_.S=b.S.slice(),_}function g(b,_){var T=[],E=typeof b,I;if(_&&E=="object")for(I in b)try{T.push(g(b[I],_-1))}catch{}return T.length?T:E=="string"?b:b+"\0"}function m(b,_){for(var T=b+"",E,I=0;I<T.length;)_[d&I]=d&(E^=_[d&I]*19)+T.charCodeAt(I++);return w(_)}function y(){try{var b;return h&&(b=h.randomBytes)?b=b(i):(b=new Uint8Array(i),(t.crypto||t.msCrypto).getRandomValues(b)),w(b)}catch{var _=t.navigator,T=_&&_.plugins;return[+new Date,t,T,t.screen,w(e)]}}function w(b){return String.fromCharCode.apply(0,b)}if(m(s.random(),e),n.exports){n.exports=f;try{h=kP}catch{}}else s["seed"+a]=f})(typeof self<"u"?self:DP,[],Math)}(Hd)),Hd.exports}var nm,Xb;function FP(){if(Xb)return nm;Xb=1;var n=bP(),t=vP(),e=CP(),s=TP(),i=IP(),o=MP(),r=$P();return r.alea=n,r.xor128=t,r.xorwow=e,r.xorshift7=s,r.xor4096=i,r.tychei=o,nm=r,nm}var Og=FP();/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class M_{constructor(t,e,s,i,o){this.mean=t,this.stdDev=e,this.dtype=s,this.nextVal=NaN,this.truncated=i,this.truncated&&(this.upper=this.mean+this.stdDev*2,this.lower=this.mean-this.stdDev*2);const r=o||Math.random();this.random=Og.alea(r.toString())}nextValue(){if(!isNaN(this.nextVal)){const i=this.nextVal;return this.nextVal=NaN,i}let t,e,s=!1;for(;!s;){let i,o,r;do i=2*this.random()-1,o=2*this.random()-1,r=i*i+o*o;while(r>=1||r===0);const a=Math.sqrt(-2*Math.log(r)/r);t=this.mean+this.stdDev*i*a,e=this.mean+this.stdDev*o*a,(!this.truncated||this.isValidTruncated(t))&&(s=!0)}return(!this.truncated||this.isValidTruncated(e))&&(this.nextVal=this.convertValue(e)),this.convertValue(t)}convertValue(t){return this.dtype==null||this.dtype==="float32"?t:Math.round(t)}isValidTruncated(t){return t<=this.upper&&t>=this.lower}}class PP{constructor(t=0,e=1,s,i){if(this.canReturnFloat=()=>this.dtype==null||this.dtype==="float32",this.min=t,this.range=e-t,this.dtype=s,i==null&&(i=Math.random()),typeof i=="number"&&(i=i.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${t} - ${e} <= 1 and dtype is not float`);this.random=Og.alea(i)}convertValue(t){return this.canReturnFloat()?t:Math.round(t)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LP(n,t=0,e=1,s,i){if(fo(n),s!=null&&s==="bool")throw new Error(`Unsupported data type ${s}`);const o=new M_(t,e,s,!1,i),r=we(n,s);for(let a=0;a<r.values.length;a++)r.values[a]=o.nextValue();return r.toTensor()}const OP=K({randomNormal_:LP});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UP(n,t=0,e=1,s="float32",i){fo(n);const o=we(n,s),r=new PP(t,e,null,i);for(let a=0;a<o.values.length;a++)o.values[a]=r.nextValue();return o.toTensor()}const wl=K({randomUniform_:UP});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function au(n,t,e=1,s="float32"){if(e===0)throw new Error("Cannot have a step of zero");const i={start:n,stop:t,step:e,dtype:s};return X.runKernel(ug,{},i)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BP(n){const e={input:O(n,"input","real")};return X.runKernel(lg,e)}const oh=K({real_:BP});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zP(n){const e={x:O(n,"x","reciprocal")};return X.runKernel(tl,e)}const VP=K({reciprocal_:zP});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WP(n){const e={x:O(n,"x","relu")};return X.runKernel(el,e)}const Xr=K({relu_:WP});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GP(n){const e={x:O(n,"x","relu6")};return X.runKernel(nl,e)}const A_=K({relu6_:GP});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HP(n,t){const s={x:O(n,"x","reverse")},i={dims:t};return X.runKernel(Nf,s,i)}const Pr=K({reverse_:HP});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XP(n){const e={x:O(n,"x","round")};return X.runKernel(sl,e)}const N_=K({round_:XP});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qP(n){const e={x:O(n,"x","rsqrt","float32")};return X.runKernel(il,e)}const k_=K({rsqrt_:qP});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jP(n){const e={x:O(n,"x","selu")};return X.runKernel(ol,e)}const D_=K({selu_:jP});function KP(n,t,e,s,i,o=[1,1],r="NHWC"){const a=O(n,"x","separableConv2d"),c=O(t,"depthwiseFilter","separableConv2d"),u=O(e,"pointwiseFilter","separableConv2d");let l=a,d=!1;if(a.rank===3&&(d=!0,l=j(a,[1,a.shape[0],a.shape[1],a.shape[2]])),r==="NCHW")throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");k(l.rank===4,()=>`Error in separableConv2d: input must be rank 4, but got rank ${l.rank}.`),k(c.rank===4,()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${c.rank}.`),k(u.rank===4,()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${c.rank}.`),k(u.shape[0]===1,()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${u.shape[0]}.`),k(u.shape[1]===1,()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${u.shape[1]}.`);const h=c.shape[2],f=c.shape[3];k(u.shape[2]===h*f,()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${h*f}, but got ${u.shape[2]}.`);const p=Ig(l,c,s,i,r,o),g=$r(p,u,1,"valid",r);return d?j(g,[g.shape[1],g.shape[2],g.shape[3]]):g}const $_=K({separableConv2d_:KP});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YP(n){const e={x:O(n,"x","sign")};return X.runKernel(cl,e)}const Uc=K({sign_:YP});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZP(n){const e={x:O(n,"x","sin","float32")};return X.runKernel(rl,e)}const F_=K({sin_:ZP});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JP(n){const e={x:O(n,"x","sinh")};return X.runKernel(al,e)}const P_=K({sinh_:JP});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QP(n,t,e){const s=O(n,"x","slice1d");return k(s.rank===1,()=>`slice1d expects a rank-1 tensor, but got a rank-${s.rank} tensor`),Ze(s,[t],[e])}const Ug=K({slice1d_:QP});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tL(n,t,e){const s=O(n,"x","slice2d");return k(s.rank===2,()=>`slice2d expects a rank-2 tensor, but got a rank-${s.rank} tensor`),Ze(s,t,e)}const L_=K({slice2d_:tL});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eL(n,t,e){const s=O(n,"x","slice3d");return k(s.rank===3,()=>`slice3d expects a rank-3 tensor, but got a rank-${s.rank} tensor`),Ze(s,t,e)}const Bg=K({slice3d_:eL});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nL(n,t,e){const s=O(n,"x","slice4d");return k(s.rank===4,()=>`slice4d expects a rank-4 tensor, but got a rank-${s.rank} tensor`),Ze(s,t,e)}const rh=K({slice4d_:nL});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sL(n,t=-1){const e=O(n,"logits","softmax","float32");if(t===-1&&(t=e.rank-1),t!==e.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${e.rank} and dim was ${t}`);const s={logits:e},i={dim:t};return X.runKernel(Lf,s,i)}const zg=K({softmax_:sL});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iL(n){k(n.dtype==="complex64",()=>`The dtype for tf.spectral.fft() must be complex64 but got ${n.dtype}.`);const t={input:n};return X.runKernel(J1,t)}const O_=K({fft_:iL});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oL(n){k(n.dtype==="complex64",()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${n.dtype}.`);const t={input:n};return X.runKernel(eg,t)}const R0=K({ifft_:oL});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rL(n){const t=n.shape[n.shape.length-1],e=n.size/t;let s;if(t<=2){const i=j(n,[e,t]);s=R0(i)}else{const i=[e,2*(t-1)],o=j(oh(n),[e,t]),r=j(Ag(n),[e,t]),a=Pr(Ze(o,[0,1],[e,t-2]),1),c=z(Pr(Ze(r,[0,1],[e,t-2]),1),Ee(-1)),u=Xn([o,a],1),l=Xn([r,c],1),d=j(qa(u,l),[i[0],i[1]]);s=R0(d)}if(s=oh(s),n.rank===3&&n.shape[0]!==0){const i=s,o=n.shape[0];s=j(s,[o,s.shape[0]/o,s.shape[1]]),i.dispose()}return s}const aL=K({irfft_:rL});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cL(n,t,e=0){const i={x:O(n,"x","split")},o={numOrSizeSplits:t,axis:e};return X.runKernel(Pf,i,o)}const $s=K({split_:cL});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uL(n,t){k(n.dtype==="float32",()=>`The dtype for rfft() must be real value but got ${n.dtype}`);let e=n.shape[n.shape.length-1];const s=n.size/e;let i;if(t!=null&&t<e){const p=n.shape.map(g=>0),x=n.shape.map(g=>g);x[n.shape.length-1]=t,i=Ze(n,p,x),e=t}else if(t!=null&&t>e){const p=n.shape.map(x=>x);p[n.shape.length-1]=t-e,i=Xn([n,en(p)],n.shape.length-1),e=t}else i=n;const o=Me(i),r=j(qa(i,o),[s,e]),a=O_(r),c=Math.floor(e/2)+1,u=oh(a),l=Ag(a),d=$s(u,[c,e-c],u.shape.length-1),h=$s(l,[c,e-c],l.shape.length-1),f=i.shape.slice();return f[i.shape.length-1]=c,j(qa(d[0],h[0]),f)}const lL=K({rfft_:uL});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dL(n,t){let e=O(n,"a","squaredDifference"),s=O(t,"b","squaredDifference");[e,s]=pn(e,s),de(e.shape,s.shape);const i={a:e,b:s},o={};return X.runKernel(hl,i,o)}const hL=K({squaredDifference_:dL});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fL(n,t){const e=O(n,"x","squeeze","string_or_numeric");return j(e,Go(e.shape,t).newShape)}const vl=K({squeeze_:fL});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pL(n,t=0){const e=i_(n,"tensors","stack","string_or_numeric");k(e.length>=1,()=>"Pass at least one tensor to tf.stack"),e.length>0&&k(t<=e[0].rank,()=>"Axis must be <= rank of the tensor");const s=e,i={axis:t};return X.runKernel(Sf,s,i)}const zi=K({stack_:pL});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mL(n,t=0){const s={x:O(n,"x","step")},i={alpha:t};return X.runKernel(xl,s,i)}const _l=K({step_:mL});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gL(n,t,e,s,i=0,o=0,r=0,a=0,c=0){const l={x:O(n,"x","stridedSlice","string_or_numeric")},d={begin:t,end:e,strides:s,beginMask:i,endMask:o,ellipsisMask:r,newAxisMask:a,shrinkAxisMask:c};return X.runKernel(mg,l,d)}const xL=K({stridedSlice_:gL});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yL(n){const e={x:O(n,"x","tan","float32")};return X.runKernel(pl,e)}const bL=K({tan_:yL});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Cs(n,t){p2(n);const e=Vf(n,t);if(e.length!==1)throw new Error("tensor1d() requires values to be a flat/TypedArray");return Wf(n,null,e,t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sm(n,t,e){if(p2(n),t!=null&&t.length!==2)throw new Error("tensor2d() requires shape to have two numbers");const s=Vf(n,e);if(s.length!==2&&s.length!==1)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(s.length===1&&t==null)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return Wf(n,t,s,e)}function U_(n,t,e){const s=t.rank>1?t.shape[t.rank-1]:1,i=t.rank>1?t.rank-1:1,o=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${e.shape}, indices.shape: ${t.shape}, shape: ${n}, sliceDim: ${s}, and batchDim: ${i}.`;if(e.rank<i)throw new Error(o+` update.rank < ${i}. `);if(n.length<s+(e.rank-i))throw new Error(o+` Output shape length < ${s+(e.rank-i)}`);if(e.rank!==i+n.length-s)throw new Error(o+` update.rank != ${i+n.length-s}`);for(let r=0;r<i;++r)if(e.shape[r]!==t.shape[r])throw new Error(o+` updates.shape[${r}] (${e.shape[r]}) != indices.shape[${r}] (${t.shape[r]}).`);for(let r=0;r<e.rank-i;++r)if(e.shape[r+i]!==n[r+s])throw new Error(o+` updates.shape[${r+i}] (${e.shape[r+i]}) != shape[${r+i}] (${n[r+i]})`)}function wL(n,t,e){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(n.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${n.rank}.`);if(t.dtype!=="int32")throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(e.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${e}`);if(e.length===0){if(t.size===0)throw new Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(n.size===0)throw new Error(`Updates specified for empty output. updates shape: ${n.shape}`)}U_(e,t,n)}function qr(n,t,e){const s=t.shape.length,i=s>1?t.shape[s-1]:1,o=e.length;let r=1;for(let d=i;d<o;++d)r*=e[d];const a=i<1?1:i,c=ct(t.shape)/a,u=[...Kt(e.slice(0,i)),1],l=ct(e);return{sliceRank:i,numUpdates:c,sliceSize:r,strides:u,outputSize:l}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vL(n,t=1,e=!0){const s=O(n,"x","topk");if(s.rank===0)throw new Error("topk() expects the input to be of rank 1 or higher");const i=s.shape[s.shape.length-1];if(t<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${t}`);if(t>i)throw new Error(`'k' passed to topk() must be <= the last dimension (${i}) but got ${t}`);const o={x:s},r={k:t,sorted:e},[a,c]=X.runKernel(gg,o,r);return{values:a,indices:c}}const _L=K({topk_:vL});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CL(n,t=0,e=1,s,i){if(fo(n),s!=null&&s==="bool")throw new Error("Unsupported data type $ { dtype }");const o=new M_(t,e,s,!0,i),r=we(n,s);for(let a=0;a<r.values.length;a++)r.values[a]=o.nextValue();return r.toTensor()}const B_=K({truncatedNormal_:CL});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SL(n,t=0){const e=O(n,"x","unique","string_or_numeric");k(e.rank>0,()=>"The input tensor must be at least 1D");const s={x:e},i={axis:t},[o,r]=X.runKernel(yg,s,i);return{values:o,indices:r}}const TL=K({unique_:SL});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EL(n,t,e){const s=O(n,"x","unsortedSegmentSum"),i=O(t,"segmentIds","unsortedSegmentSum","int32");k(Ha(e),()=>"numSegments must be of dtype int");const o={x:s,segmentIds:i},r={numSegments:e};return X.runKernel(Uf,o,r)}const z_=K({unsortedSegmentSum_:EL});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IL(n,t=0){const e=O(n,"x","unstack","string_or_numeric");k(t>=-e.shape.length&&t<e.shape.length,()=>`Axis = ${t} is not in [-${e.shape.length}, ${e.shape.length})`);const s={value:e},i={axis:t};return X.runKernel(Of,s,i)}const Lr=K({unstack_:IL});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RL(n,t=!0,e,s){return X.makeVariable(n,t,e,s)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function V_(n,t){const e=[];for(let o=0;o<t.length;o++)t[o]&&e.push(o);const s=we(n,"int32"),i=we([e.length,n.length],"int32");for(let o=0;o<e.length;o++){const r=s.indexToLoc(e[o]),a=o*n.length;i.values.set(r,a)}return i.toTensor()}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ML(n,t,e){const s=O(n,"x","transpose");if(t==null&&(t=s.shape.map((r,a)=>a).reverse()),k(s.rank===t.length,()=>`Error in transpose: rank of input ${s.rank} must match length of perm ${t}.`),t.forEach(r=>{k(r>=0&&r<s.rank,()=>`All entries in 'perm' must be between 0 and ${s.rank-1} but got ${t}`)}),s.rank<=1)return s.clone();const i={x:s},o={perm:t};return s.dtype==="complex64"?tt(()=>{let r=oh(s),a=Ag(s);return r=X.runKernel($a,{x:r},o),a=X.runKernel($a,{x:a},o),e&&(a=qe(a)),qa(r,a)}):X.runKernel($a,i,o)}const Re=K({transpose_:ML});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AL(n,t){if(t==null)return n.shape.slice();if(Pe(n.shape,t))return t;if(n.shape.length===t.length){const e=[];for(let s=0;s<n.shape.length;s++)t[s]==null&&n.shape[s]!=null?e.push(n.shape[s]):e.push(t[s]);return e}return t}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NL(n,t,e,s){const i=O(n,"x","dropout");if(k(i.dtype==="float32",()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${i.dtype} tensor instead.`),k(t>=0&&t<1,()=>`rate must be a float in the range [0, 1), but got ${t}.`),t===0)return n instanceof _n?i.clone():i;const o=AL(i,e),r=1-t,a=Xt(Kf(yt(wl(o,0,1,"float32",s),r)),r);return z(i,a)}const kL=K({dropout_:NL});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DL(n,t,e,s,i,o="NHWC",r){let a=n;n.rank===3&&(a=j(n,[1,n.shape[0],n.shape[1],n.shape[2]]));let c=t;c.rank===3&&(c=j(t,[1,t.shape[0],t.shape[1],t.shape[2]])),k(a.rank===4,()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${a.shape}.`),k(c.rank===4,()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${c.shape}.`),k(e.length===4,()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${e}.`);const u=o==="NHWC"?a.shape[3]:a.shape[1],l=o==="NHWC"?c.shape[3]:c.shape[1];k(u===e[2],()=>`Error in conv2dDerFilter: depth of input ${u}) must match input depth in filter (${e[2]}.`),k(l===e[3],()=>`Error in conv2dDerFilter: depth of dy (${l}) must match output depth for filter (${e[3]}).`),xs("conv2dDerFilter",i,r);const d={x:a,dy:c},h={strides:s,pad:i,dataFormat:o,dimRoundingMode:r,filterShape:e};return X.runKernel(z1,d,h)}const Vg=K({conv2DBackpropFilter_:DL});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Wg(n,t,e){if(e==null||e==="linear")return n;if(e==="relu")return z(n,_l(t));throw new Error(`Cannot compute gradient for fused activation ${e}.`)}function Gg(n,t){let e=t;const s=In(n.shape,t.shape);return s.length>0&&(e=Yt(e,s)),j(e,n.shape)}function Hg(n,t,e,s){if(t==="linear")return n;if(t==="relu")return Xr(n);if(t==="elu")return qf(n);if(t==="relu6")return A_(n);if(t==="prelu")return Lg(n,e);if(t==="leakyrelu")return Ng(n,s);if(t==="sigmoid")return dc(n);throw new Error(`Unknown fused activation ${t}.`)}const Xg=(n,t)=>!(n>0)||t==="linear";/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $L({x:n,filter:t,strides:e,pad:s,dataFormat:i="NHWC",dilations:o=[1,1],dimRoundingMode:r,bias:a,activation:c="linear",preluActivationWeights:u,leakyreluAlpha:l}){if(c=c||"linear",Xg(X.state.gradientDepth,c)===!1){k(i==="NHWC",()=>`Error in fused conv2d: got dataFormat of ${i} but only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear.`);let T=$r(n,t,e,s,i,o,r);return a!=null&&(T=yt(T,a)),Hg(T,c,u,l)}const d=O(n,"x","conv2d","float32"),h=O(t,"filter","conv2d","float32");let f=d,p=!1;d.rank===3&&(p=!0,f=j(d,[1,d.shape[0],d.shape[1],d.shape[2]])),k(f.rank===4,()=>`Error in fused conv2d: input must be rank 4, but got rank ${f.rank}.`),k(h.rank===4,()=>`Error in fused conv2d: filter must be rank 4, but got rank ${h.rank}.`),xs("fused conv2d",s,r);const x=i==="NHWC"?f.shape[3]:f.shape[1];k(h.shape[2]===x,()=>`Error in conv2d: depth of input (${x}) must match input depth for filter ${h.shape[2]}.`),k(Yn(e,o),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${e} and dilations '${o}'`);const g=Un(f.shape,h.shape,e,o,s,r);let m;a!=null&&(m=O(a,"bias","fused conv2d"),[m]=pn(m,d),i==="NHWC"?de(g.outShape,m.shape):(k(m.shape.length<=1,()=>`Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of rank-${m.shape.length}.`),k(m.shape.length===0||m.shape[0]===g.outChannels||m.shape[0]===1,()=>`Error in fused conv2d: bias shape (${m.shape}) is not compatible with the number of output channels (${g.outChannels})`)));let y;if(u!=null){const T=u.shape;if(k(T.length<=1||T.length===3,()=>`Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of rank-${T.length}.`),T.length===1)k(T[0]===1||T[0]===g.outChannels,()=>`Error in fused conv2d: PReLU activation weights (${T}) is not compatible with the number of output channels (${g.outChannels}).`);else if(T.length===3)try{de(T,g.outShape)}catch{const I=`Error in fused conv2d: PReLU activation weights (${T}) is not compatible with the output shape of the conv2d (${g.outShape}).`;throw Error(I)}y=O(u,"prelu weights","fused conv2d")}const w=(T,E)=>{k(i==="NHWC",()=>`Error in gradient of fused conv2D: got dataFormat of ${i} but only NHWC is currently supported.`);const[I,S,v,C]=E,M=Wg(T,v,c);k(kr(o),()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${o}'`);const N=Tg(S.shape,M,I,e,s),D=Vg(S,M,I.shape,e,s),$=[N,D];if(C!=null){const F=Gg(C,M);$.push(F)}return $},b={x:f,filter:h,bias:m,preluActivationWeights:y},_={strides:e,pad:s,dataFormat:i,dilations:o,dimRoundingMode:r,activation:c,leakyreluAlpha:l};return a==null?Ya((E,I,S)=>{let v=X.runKernel(th,b,_);return S([I,E,v]),p&&(v=j(v,[v.shape[1],v.shape[2],v.shape[3]])),{value:v,gradFunc:w}})(f,h):Ya((E,I,S,v)=>{let C=X.runKernel(th,b,_);return v([I,E,C,S]),p&&(C=j(C,[C.shape[1],C.shape[2],C.shape[3]])),{value:C,gradFunc:w}})(f,h,m)}const FL=K({fusedConv2d_:$L});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PL(n,t,e,s,i,o=[1,1],r){let a=n;n.rank===3&&(a=j(n,[1,n.shape[0],n.shape[1],n.shape[2]]));let c=t;c.rank===3&&(c=j(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const u={x:a,dy:c},l={strides:s,pad:i,dimRoundingMode:r,dilations:o,filterShape:e};return X.runKernel(j1,u,l)}const LL=K({depthwiseConv2dNativeBackpropFilter_:PL});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OL(n,t,e,s,i,o=[1,1],r){let a=t,c=!1;t.rank===3&&(c=!0,a=j(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const u={dy:a,filter:e},l={strides:s,pad:i,dimRoundingMode:r,dilations:o,inputShape:n},d=X.runKernel(K1,u,l);return c?j(d,[d.shape[1],d.shape[2],d.shape[3]]):d}const UL=K({depthwiseConv2dNativeBackpropInput_:OL});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BL({a:n,b:t,transposeA:e=!1,transposeB:s=!1,bias:i,activation:o="linear",preluActivationWeights:r,leakyreluAlpha:a=.2}){if(Xg(X.state.gradientDepth,o)===!1){let C=Fe(n,t,e,s);return i!=null&&(C=yt(C,i)),Hg(C,o,r,a)}let c=O(n,"a","fused matMul"),u=O(t,"b","fused matMul");[c,u]=pn(c,u);const l=e?c.shape[c.rank-2]:c.shape[c.rank-1],d=s?u.shape[u.rank-1]:u.shape[u.rank-2],h=e?c.shape[c.rank-1]:c.shape[c.rank-2],f=s?u.shape[u.rank-2]:u.shape[u.rank-1],p=c.shape.slice(0,-2),x=u.shape.slice(0,-2),g=ct(p),m=ct(x);k(l===d,()=>`Error in fused matMul: inner shapes (${l}) and (${d}) of Tensors with shapes ${c.shape} and ${u.shape} and transposeA=${e} and transposeB=${s} must match.`);const w=de(c.shape.slice(0,-2),u.shape.slice(0,-2)).concat([h,f]),b=e?j(c,[g,l,h]):j(c,[g,h,l]),_=s?j(u,[m,f,d]):j(u,[m,d,f]);let T;i!=null&&(T=O(i,"bias","fused matMul"),[T]=pn(T,c),de(w,T.shape));let E;r!=null&&(E=O(r,"prelu weights","fused matMul"));const I=(C,M)=>{const[N,D,$,F]=M,B=Wg(j(C,$.shape),$,o);let P,V;if(!e&&!s?(P=Fe(B,D,!1,!0),V=Fe(N,B,!0,!1)):!e&&s?(P=Fe(B,D,!1,!1),V=Fe(B,N,!0,!1)):e&&!s?(P=Fe(D,B,!1,!0),V=Fe(N,B,!1,!1)):(P=Fe(D,B,!0,!0),V=Fe(B,N,!0,!0)),i!=null){const q=Gg(F,B);return[P,V,q]}else return[P,V]},S={a:b,b:_,bias:T,preluActivationWeights:E},v={transposeA:e,transposeB:s,activation:o,leakyreluAlpha:a};return i==null?Ya((M,N,D)=>{const $=X.runKernel(Qd,S,v);return D([M,N,$]),{value:j($,w),gradFunc:I}})(b,_):Ya((M,N,D,$)=>{const F=X.runKernel(Qd,S,v);return $([M,N,F,D]),{value:j(F,w),gradFunc:I}})(b,_,T)}const qb=K({fusedMatMul_:BL});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zL(n,t,e,s,i="bilinear",o=0){const r=O(n,"image","cropAndResize"),a=O(t,"boxes","cropAndResize","float32"),c=O(e,"boxInd","cropAndResize","int32"),u=a.shape[0];k(r.rank===4,()=>`Error in cropAndResize: image must be rank 4,but got rank ${r.rank}.`),k(a.rank===2&&a.shape[1]===4,()=>`Error in cropAndResize: boxes must be have size [${u},4] but had shape ${a.shape}.`),k(c.rank===1&&c.shape[0]===u,()=>`Error in cropAndResize: boxInd must be have size [${u}] but had shape ${a.shape}.`),k(s.length===2,()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${s.length}.`),k(s[0]>=1&&s[1]>=1,()=>`cropSize must be atleast [1,1], but was ${s}`),k(i==="bilinear"||i==="nearest",()=>`method must be bilinear or nearest, but was ${i}`);const l={image:r,boxes:a,boxInd:c},d={method:i,extrapolationValue:o,cropSize:s};return X.runKernel(H1,l,d)}const VL=K({cropAndResize_:zL});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WL(n){const t=O(n,"image","flipLeftRight","float32");k(t.rank===4,()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`);const e={image:t};return X.runKernel(tg,e,{})}const GL=K({flipLeftRight_:WL});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HL(n){const t=O(n,"image","grayscaleToRGB"),e=t.rank-1,s=t.shape[e];k(t.rank>=2,()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${t.rank}.`),k(s===1,()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${s}.`);const i=new Array(t.rank);return i.fill(1,0,e),i[e]=3,xi(t,i)}const XL=K({grayscaleToRGB_:HL});/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qL(n){const t=O(n,"image","RGBToGrayscale"),e=t.rank-1,s=t.shape[e];k(t.rank>=2,()=>`Error in RGBToGrayscale: images must be at least rank 2, but got rank ${t.rank}.`),k(s===3,()=>`Error in RGBToGrayscale: last dimension of an RGB image should be size 3, but got size ${s}.`);const i=t.dtype,o=Nt(t,"float32"),r=Cs([.2989,.587,.114]);let a;switch(t.rank){case 2:a=Dc("ij,j->i",o,r);break;case 3:a=Dc("ijk,k->ij",o,r);break;case 4:a=Dc("ijkl,l->ijk",o,r);break;case 5:a=Dc("ijklm,m->ijkl",o,r);break;case 6:a=Dc("ijklmn,n->ijklm",o,r);break;default:throw new Error("Not a valid tensor rank.")}return a=fs(a,-1),Nt(a,i)}const jL=K({rgbToGrayscale_:qL});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KL(n,t,e=0,s=.5){const i=O(n,"image","rotateWithOffset","float32");k(i.rank===4,()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${i.rank}.`);const o={image:i},r={radians:t,fillValue:e,center:s};return X.runKernel(bg,o,r)}const YL=K({rotateWithOffset_:KL});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fc(n,t,e,s,i,o){s==null&&(s=.5),i==null&&(i=Number.NEGATIVE_INFINITY),o==null&&(o=0);const r=n.shape[0];return e=Math.min(e,r),k(0<=s&&s<=1,()=>`iouThreshold must be in [0, 1], but was '${s}'`),k(n.rank===2,()=>`boxes must be a 2D tensor, but was of rank '${n.rank}'`),k(n.shape[1]===4,()=>`boxes must have 4 columns, but 2nd dimension was ${n.shape[1]}`),k(t.rank===1,()=>"scores must be a 1D tensor"),k(t.shape[0]===r,()=>`scores has incompatible shape with boxes. Expected ${r}, but was ${t.shape[0]}`),k(0<=o&&o<=1,()=>`softNmsSigma must be in [0, 1], but was '${o}'`),{maxOutputSize:e,iouThreshold:s,scoreThreshold:i,softNmsSigma:o}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZL(n,t,e,s=.5,i=Number.NEGATIVE_INFINITY){const o=O(n,"boxes","nonMaxSuppression","float32"),r=O(t,"scores","nonMaxSuppression","float32"),a=fc(o,r,e,s,i);e=a.maxOutputSize,s=a.iouThreshold,i=a.scoreThreshold;const c={maxOutputSize:e,iouThreshold:s,scoreThreshold:i};return X.runKernel(rg,{boxes:o,scores:r},c)}const JL=K({nonMaxSuppression_:ZL});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QL(n,t,e){const s=tO(n,t,e),i=s<0?-(s+1):s;n.splice(i,0,t)}function tO(n,t,e){return nO(n,t,e||eO)}function eO(n,t){return n>t?1:n<t?-1:0}function nO(n,t,e){let s=0,i=n.length,o=0,r=!1;for(;s<i;){o=s+(i-s>>>1);const a=e(t,n[o]);a>0?s=o+1:(i=o,r=!a)}return r?s:-s-1}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qg(n,t,e,s,i){return Yg(n,t,e,s,i,0)}function jg(n,t,e,s,i,o){return Yg(n,t,e,s,i,0,!1,o,!0)}function Kg(n,t,e,s,i,o){return Yg(n,t,e,s,i,o,!0)}function Yg(n,t,e,s,i,o,r=!1,a=!1,c=!1){const u=[];for(let g=0;g<t.length;g++)t[g]>i&&u.push({score:t[g],boxIndex:g,suppressBeginIndex:0});u.sort(jb);const l=o>0?-.5/o:0,d=[],h=[];for(;d.length<e&&u.length>0;){const g=u.pop(),{score:m,boxIndex:y,suppressBeginIndex:w}=g;if(m<i)break;let b=!1;for(let _=d.length-1;_>=w;--_){const T=sO(n,y,d[_]);if(T>=s){b=!0;break}if(g.score=g.score*iO(s,l,T),g.score<=i)break}g.suppressBeginIndex=d.length,b||(g.score===m?(d.push(y),h.push(g.score)):g.score>i&&QL(u,g,jb))}const f=d.length,p=e-f;a&&p>0&&(d.push(...new Array(p).fill(0)),h.push(...new Array(p).fill(0)));const x={selectedIndices:d};return r&&(x.selectedScores=h),c&&(x.validOutputs=f),x}function sO(n,t,e){const s=n.subarray(t*4,t*4+4),i=n.subarray(e*4,e*4+4),o=Math.min(s[0],s[2]),r=Math.min(s[1],s[3]),a=Math.max(s[0],s[2]),c=Math.max(s[1],s[3]),u=Math.min(i[0],i[2]),l=Math.min(i[1],i[3]),d=Math.max(i[0],i[2]),h=Math.max(i[1],i[3]),f=(a-o)*(c-r),p=(d-u)*(h-l);if(f<=0||p<=0)return 0;const x=Math.max(o,u),g=Math.max(r,l),m=Math.min(a,d),y=Math.min(c,h),w=Math.max(m-x,0)*Math.max(y-g,0);return w/(f+p-w)}function iO(n,t,e){const s=Math.exp(t*e*e);return e<=n?s:0}function jb(n,t){return n.score-t.score||n.score===t.score&&t.boxIndex-n.boxIndex}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function oO(n,t,e,s=.5,i=Number.NEGATIVE_INFINITY){const o=O(n,"boxes","nonMaxSuppressionAsync"),r=O(t,"scores","nonMaxSuppressionAsync"),a=fc(o,r,e,s,i);e=a.maxOutputSize,s=a.iouThreshold,i=a.scoreThreshold;const c=await Promise.all([o.data(),r.data()]),u=c[0],l=c[1],{selectedIndices:d}=qg(u,l,e,s,i);return o!==n&&o.dispose(),r!==t&&r.dispose(),Cs(d,"int32")}const rO=oO;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aO(n,t,e,s=.5,i=Number.NEGATIVE_INFINITY,o=0){const r=O(n,"boxes","nonMaxSuppression"),a=O(t,"scores","nonMaxSuppression"),c=fc(r,a,e,s,i,o);e=c.maxOutputSize,s=c.iouThreshold,i=c.scoreThreshold,o=c.softNmsSigma;const u={boxes:r,scores:a},l={maxOutputSize:e,iouThreshold:s,scoreThreshold:i,softNmsSigma:o},d=X.runKernel(cg,u,l);return{selectedIndices:d[0],selectedScores:d[1]}}const cO=K({nonMaxSuppressionWithScore_:aO});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function uO(n,t,e,s=.5,i=Number.NEGATIVE_INFINITY,o=0){const r=O(n,"boxes","nonMaxSuppressionAsync"),a=O(t,"scores","nonMaxSuppressionAsync"),c=fc(r,a,e,s,i,o);e=c.maxOutputSize,s=c.iouThreshold,i=c.scoreThreshold,o=c.softNmsSigma;const u=await Promise.all([r.data(),a.data()]),l=u[0],d=u[1],{selectedIndices:h,selectedScores:f}=Kg(l,d,e,s,i,o);return r!==n&&r.dispose(),a!==t&&a.dispose(),{selectedIndices:Cs(h,"int32"),selectedScores:Cs(f)}}const lO=uO;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dO(n,t,e,s=.5,i=Number.NEGATIVE_INFINITY,o=!1){const r=O(n,"boxes","nonMaxSuppression"),a=O(t,"scores","nonMaxSuppression"),c=fc(r,a,e,s,i,null),u=c.maxOutputSize,l=c.iouThreshold,d=c.scoreThreshold,h={boxes:r,scores:a},f={maxOutputSize:u,iouThreshold:l,scoreThreshold:d,padToMaxOutputSize:o},p=X.runKernel(ag,h,f);return{selectedIndices:p[0],validOutputs:p[1]}}const hO=K({nonMaxSuppressionPadded_:dO});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function fO(n,t,e,s=.5,i=Number.NEGATIVE_INFINITY,o=!1){const r=O(n,"boxes","nonMaxSuppressionAsync"),a=O(t,"scores","nonMaxSuppressionAsync"),c=fc(r,a,e,s,i,null),u=c.maxOutputSize,l=c.iouThreshold,d=c.scoreThreshold,[h,f]=await Promise.all([r.data(),a.data()]),{selectedIndices:p,validOutputs:x}=jg(h,f,u,l,d,o);return r!==n&&r.dispose(),a!==t&&a.dispose(),{selectedIndices:Cs(p,"int32"),validOutputs:Ee(x,"int32")}}const pO=fO;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mO(n,t,e=!1,s=!1){const i=O(n,"images","resizeBilinear");k(i.rank===3||i.rank===4,()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${i.rank}.`),k(t.length===2,()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`),k(s===!1||e===!1,()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false.");let o=i,r=!1;i.rank===3&&(r=!0,o=j(i,[1,i.shape[0],i.shape[1],i.shape[2]]));const a={images:o},c={alignCorners:e,halfPixelCenters:s,size:t},u=X.runKernel(Af,a,c);return r?j(u,[u.shape[1],u.shape[2],u.shape[3]]):u}const W_=K({resizeBilinear_:mO});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gO(n,t,e=!1,s=!1){const i=O(n,"images","resizeNearestNeighbor");k(i.rank===3||i.rank===4,()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${i.rank}.`),k(t.length===2,()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`),k(i.dtype==="float32"||i.dtype==="int32",()=>"`images` must have `int32` or `float32` as dtype"),k(s===!1||e===!1,()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false.");let o=i,r=!1;i.rank===3&&(r=!0,o=j(i,[1,i.shape[0],i.shape[1],i.shape[2]]));const a={images:o},c={alignCorners:e,halfPixelCenters:s,size:t},u=X.runKernel(Mf,a,c);return r?j(u,[u.shape[1],u.shape[2],u.shape[3]]):u}const G_=K({resizeNearestNeighbor_:gO});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xO(n,t="binary",e=!1,s=.5){const i=O(n,"image","threshold"),o=.2989,r=.587,a=.114,c=i.shape[0]*i.shape[1];let u=z(Cs([s]),255),l,d,h,f;if(k(i.rank===3,()=>`Error in threshold: image must be rank 3,but got rank ${i.rank}.`),k(i.shape[2]===3||i.shape[2]===1,()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${i.shape[2]}.`),k(i.dtype==="int32"||i.dtype==="float32",()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${i.dtype}.`),k(t==="otsu"||t==="binary",()=>`Method must be binary or otsu, but was ${t}`),i.shape[2]===3){[l,d,h]=$s(i,[1,1,1],-1);const g=z(l,o),m=z(d,r),y=z(h,a);f=yt(yt(g,m),y)}else f=n;if(t==="otsu"){const g=m$(Nt(N_(f),"int32"),qs([]),256);u=yO(g,c)}const p=e?hc(f,u):as(f,u);return Nt(z(p,255),"int32")}function yO(n,t){let e=Cs([-1]),s=Cs([0]),i=Cs([0]),o,r,a,c,u,l;for(let d=0;d<n.size-1;d++){o=Ze(n,0,d+1),r=Ze(n,d+1),u=Xt(Yt(o),t),l=Xt(Yt(r),t);const h=Yt(z(o,au(0,o.size)));a=Xt(h,Yt(o));const f=Xf(r.shape,o.size),p=yt(au(0,r.size),f),x=z(r,p);c=Xt(Yt(x),Yt(r));const g=ee(a,c),m=ee(a,c),y=z(u,l);i=z(z(y,g),m);const w=as(i,s);s=rs(w,i,s),e=rs(w,Cs([d]),e)}return e}const bO=K({threshold_:xO});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wO(n,t,e="nearest",s="constant",i=0,o){const r=O(n,"image","transform","float32"),a=O(t,"transforms","transform","float32");k(r.rank===4,()=>`Error in transform: image must be rank 4,but got rank ${r.rank}.`),k(a.rank===2&&(a.shape[0]===r.shape[0]||a.shape[0]===1)&&a.shape[1]===8,()=>"Error in transform: Input transform should be batch x 8 or 1 x 8"),k(o==null||o.length===2,()=>`Error in transform: outputShape must be [height, width] or null, but got ${o}.`);const c={image:r,transforms:a},u={interpolation:e,fillMode:s,fillValue:i,outputShape:o};return X.runKernel(xg,c,u)}const vO=K({transform_:wO});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _O(n,t,e){const s=O(n,"a","bandPart");k(s.rank>=2,()=>`bandPart(): Rank must be at least 2, got ${s.rank}.`);const i=s.shape,[o,r]=s.shape.slice(-2);let a,c;typeof t=="number"?(k(t%1===0,()=>`bandPart(): numLower must be an integer, got ${t}.`),k(t<=o,()=>`bandPart(): numLower (${t}) must not be greater than the number of rows (${o}).`),a=O(t<0?o:t,"numLower","bandPart")):(k(t.dtype==="int32",()=>"bandPart(): numLower's dtype must be an int32."),a=rs(Ka(t,0),o,Do(t,o))),typeof e=="number"?(k(e%1===0,()=>`bandPart(): numUpper must be an integer, got ${e}.`),k(e<=r,()=>`bandPart(): numUpper (${e}) must not be greater than the number of columns (${r}).`),c=O(e<0?r:e,"numUpper","bandPart")):(k(e.dtype==="int32",()=>"bandPart(): numUpper's dtype must be an int32."),c=rs(Ka(e,0),r,Do(e,r)));const u=j(au(0,o,1,"int32"),[-1,1]),l=au(0,r,1,"int32"),d=ee(u,l),h=uo(hc(d,a),Hr(d,qe(c))),f=en([o,r],s.dtype);return j(zi(Lr(j(s,[-1,o,r])).map(p=>rs(h,p,f))),i)}const CO=K({bandPart_:_O});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SO(n){let t;if(Array.isArray(n)){t=!1,k(n!=null&&n.length>0,()=>"Gram-Schmidt process: input must not be null, undefined, or empty");const i=n[0].shape[0];for(let o=1;o<n.length;++o)k(n[o].shape[0]===i,()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${n[o].shape[0]} vs. ${i})`)}else t=!0,n=$s(n,n.shape[0],0).map(i=>vl(i,[0]));k(n.length<=n[0].shape[0],()=>`Gram-Schmidt: Number of vectors (${n.length}) exceeds number of dimensions (${n[0].shape[0]}).`);const e=[],s=n;for(let i=0;i<n.length;++i)e.push(X.tidy(()=>{let o=s[i];if(i>0)for(let r=0;r<i;++r){const a=z(Yt(z(e[r],o)),e[r]);o=ee(o,a)}return Xt(o,jf(o,"euclidean"))}));return t?zi(e,0):e}const TO=K({gramSchmidt_:SO});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EO(n,t=!1){if(k(n.rank>=2,()=>`qr() requires input tensor to have a rank >= 2, but got rank ${n.rank}`),n.rank===2)return Kb(n,t);{const e=n.shape.slice(0,n.shape.length-2).reduce((c,u)=>c*u),s=Lr(j(n,[e,n.shape[n.shape.length-2],n.shape[n.shape.length-1]]),0),i=[],o=[];s.forEach(c=>{const[u,l]=Kb(c,t);i.push(u),o.push(l)});const r=j(zi(i,0),n.shape),a=j(zi(o,0),n.shape);return[r,a]}}function Kb(n,t=!1){return X.tidy(()=>{k(n.shape.length===2,()=>`qr2d() requires a 2D Tensor, but got a ${n.shape.length}D Tensor.`);const e=n.shape[0],s=n.shape[1];let i=C_(e),o=_r(n);const r=sm([[1]],[1,1]);let a=_r(r);const c=e>=s?s:e;for(let u=0;u<c;++u){const l=o,d=a,h=i;[a,o,i]=X.tidy(()=>{const f=Ze(o,[u,u],[e-u,1]),p=jf(f),x=Ze(o,[u,u],[1,1]),g=rs(as(x,0),sm([[-1]]),sm([[1]])),m=ee(x,z(g,p)),y=Xt(f,m);y.shape[0]===1?a=_r(r):a=Xn([r,Ze(y,[1,0],[y.shape[0]-1,y.shape[1]])],0);const w=qe(Xt(Fe(g,m),p)),b=Ze(o,[u,0],[e-u,s]),_=z(w,a),T=Re(a);if(u===0)o=ee(b,Fe(_,Fe(T,b)));else{const S=ee(b,Fe(_,Fe(T,b)));o=Xn([Ze(o,[0,0],[u,s]),S],0)}const E=Re(_),I=Ze(i,[0,u],[e,i.shape[1]-u]);if(u===0)i=ee(I,Fe(Fe(I,a),E));else{const S=ee(I,Fe(Fe(I,a),E));i=Xn([Ze(i,[0,0],[e,u]),S],1)}return[a,o,i]}),Ce([l,d,h])}return!t&&e>s&&(i=Ze(i,[0,0],[e,s]),o=Ze(o,[0,0],[s,s])),[i,o]})}const IO=K({qr_:EO});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const io={flipLeftRight:GL,grayscaleToRGB:XL,resizeNearestNeighbor:G_,resizeBilinear:W_,rgbToGrayscale:jL,rotateWithOffset:YL,cropAndResize:VL,nonMaxSuppression:JL,nonMaxSuppressionAsync:rO,nonMaxSuppressionWithScore:cO,nonMaxSuppressionWithScoreAsync:lO,nonMaxSuppressionPadded:hO,nonMaxSuppressionPaddedAsync:pO,threshold:bO,transform:vO},RO={bandPart:CO,gramSchmidt:TO,qr:IO};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const MO=new Map,AO=new Map;class pc{getClassName(){return this.constructor.className}static fromConfig(t,e){return new t(e)}}class js{constructor(){this.classNameMap={}}static getMap(){return js.instance==null&&(js.instance=new js),js.instance}static register(t){js.getMap().classNameMap[t.className]=[t,t.fromConfig]}}function xt(n,t,e){k(n.className!=null,()=>"Class being registered does not have the static className property defined."),k(typeof n.className=="string",()=>"className is required to be a string, but got type "+typeof n.className),k(n.className.length>0,()=>"Class being registered has an empty-string as its className, which is disallowed."),typeof t>"u"&&(t="Custom"),typeof e>"u"&&(e=n.className);const s=e,i=t+">"+s;return js.register(n),MO.set(i,n),AO.set(n,i),n}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ko extends pc{minimize(t,e=!1,s){const{value:i,grads:o}=this.computeGradients(t,s);if(s!=null){const r=s.map(a=>({name:a.name,tensor:o[a.name]}));this.applyGradients(r)}else this.applyGradients(o);return Ce(o),e?i:(i.dispose(),null)}get iterations(){return this.iterations_==null&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(t,e){return PF(t,e)}dispose(){this.iterations_!=null&&Ce(this.iterations_)}async saveIterations(){return this.iterations_==null&&(this.iterations_=0),{name:"iter",tensor:Ee(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(t){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(t){return this.iterations_=(await t[0].tensor.data())[0],t.slice(1)}}Object.defineProperty(Ko,Symbol.hasInstance,{value:n=>n.minimize!=null&&n.computeGradients!=null&&n.applyGradients!=null});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class H_ extends Ko{static get className(){return"Adadelta"}constructor(t,e,s=null){super(),this.learningRate=t,this.rho=e,this.epsilon=s,this.accumulatedGrads=[],this.accumulatedUpdates=[],s==null&&(this.epsilon=X.backend.epsilon())}applyGradients(t){(Array.isArray(t)?t.map(s=>s.name):Object.keys(t)).forEach((s,i)=>{const o=X.registeredVariables[s],r=!1;this.accumulatedGrads[i]==null&&(this.accumulatedGrads[i]={originalName:`${s}/accum_grad`,variable:tt(()=>Me(o).variable(r))}),this.accumulatedUpdates[i]==null&&(this.accumulatedUpdates[i]={originalName:`${s}/accum_var`,variable:tt(()=>Me(o).variable(r))});const a=Array.isArray(t)?t[i].tensor:t[s];if(a==null)return;const c=this.accumulatedGrads[i].variable,u=this.accumulatedUpdates[i].variable;tt(()=>{const l=yt(z(c,this.rho),z(Qe(a),1-this.rho)),d=z(Xt(Kn(yt(u,this.epsilon)),Kn(yt(c,this.epsilon))),a),h=yt(z(u,this.rho),z(Qe(d),1-this.rho));c.assign(l),u.assign(h);const f=yt(z(d,-this.learningRate),o);o.assign(f)})}),this.incrementIterations()}dispose(){this.accumulatedUpdates!=null&&(Ce(this.accumulatedGrads.map(t=>t.variable)),Ce(this.accumulatedUpdates.map(t=>t.variable)))}async getWeights(){const t=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(t.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(t){t=await this.extractIterations(t);const e=t.length/2,s=!1;this.accumulatedGrads=t.slice(0,e).map(i=>({originalName:i.name,variable:i.tensor.variable(s)})),this.accumulatedUpdates=t.slice(e,e*2).map(i=>({originalName:i.name,variable:i.tensor.variable(s)}))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(t,e){return new t(e.learningRate,e.rho,e.epsilon)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class X_ extends Ko{static get className(){return"Adagrad"}constructor(t,e=.1){super(),this.learningRate=t,this.initialAccumulatorValue=e,this.accumulatedGrads=[]}applyGradients(t){(Array.isArray(t)?t.map(s=>s.name):Object.keys(t)).forEach((s,i)=>{const o=X.registeredVariables[s];this.accumulatedGrads[i]==null&&(this.accumulatedGrads[i]={originalName:`${s}/accumulator`,variable:tt(()=>Xf(o.shape,this.initialAccumulatorValue).variable(!1))});const r=Array.isArray(t)?t[i].tensor:t[s];if(r==null)return;const a=this.accumulatedGrads[i].variable;tt(()=>{const c=yt(a,Qe(r));a.assign(c);const u=yt(z(Xt(r,Kn(yt(c,X.backend.epsilon()))),-this.learningRate),o);o.assign(u)})}),this.incrementIterations()}dispose(){this.accumulatedGrads!=null&&Ce(this.accumulatedGrads.map(t=>t.variable))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(t){t=await this.extractIterations(t);const e=!1;this.accumulatedGrads=t.map(s=>({originalName:s.name,variable:s.tensor.variable(e)}))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(t,e){return new t(e.learningRate,e.initialAccumulatorValue)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class q_ extends Ko{static get className(){return"Adam"}constructor(t,e,s,i=null){super(),this.learningRate=t,this.beta1=e,this.beta2=s,this.epsilon=i,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],tt(()=>{this.accBeta1=Ee(e).variable(),this.accBeta2=Ee(s).variable()}),i==null&&(this.epsilon=X.backend.epsilon())}applyGradients(t){const e=Array.isArray(t)?t.map(s=>s.name):Object.keys(t);tt(()=>{const s=ee(1,this.accBeta1),i=ee(1,this.accBeta2);e.forEach((o,r)=>{const a=X.registeredVariables[o],c=!1;this.accumulatedFirstMoment[r]==null&&(this.accumulatedFirstMoment[r]={originalName:`${o}/m`,variable:tt(()=>Me(a).variable(c))}),this.accumulatedSecondMoment[r]==null&&(this.accumulatedSecondMoment[r]={originalName:`${o}/v`,variable:tt(()=>Me(a).variable(c))});const u=Array.isArray(t)?t[r].tensor:t[o];if(u==null)return;const l=this.accumulatedFirstMoment[r].variable,d=this.accumulatedSecondMoment[r].variable,h=yt(z(l,this.beta1),z(u,1-this.beta1)),f=yt(z(d,this.beta2),z(Qe(u),1-this.beta2)),p=Xt(h,s),x=Xt(f,i);l.assign(h),d.assign(f);const g=yt(z(Xt(p,yt(Kn(x),this.epsilon)),-this.learningRate),a);a.assign(g)}),this.accBeta1.assign(z(this.accBeta1,this.beta1)),this.accBeta2.assign(z(this.accBeta2,this.beta2))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),this.accumulatedFirstMoment!=null&&Ce(this.accumulatedFirstMoment.map(t=>t.variable)),this.accumulatedSecondMoment!=null&&Ce(this.accumulatedSecondMoment.map(t=>t.variable))}async getWeights(){const t=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(t.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(t){t=await this.extractIterations(t),tt(()=>{this.accBeta1.assign(Fr(this.beta1,this.iterations_+1)),this.accBeta2.assign(Fr(this.beta2,this.iterations_+1))});const e=t.length/2,s=!1;this.accumulatedFirstMoment=t.slice(0,e).map(i=>({originalName:i.name,variable:i.tensor.variable(s)})),this.accumulatedSecondMoment=t.slice(e,e*2).map(i=>({originalName:i.name,variable:i.tensor.variable(s)}))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(t,e){return new t(e.learningRate,e.beta1,e.beta2,e.epsilon)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class j_ extends Ko{static get className(){return"Adamax"}constructor(t,e,s,i=null,o=0){super(),this.learningRate=t,this.beta1=e,this.beta2=s,this.epsilon=i,this.decay=o,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],tt(()=>{this.iteration=Ee(0).variable(),this.accBeta1=Ee(e).variable()}),i==null&&(this.epsilon=X.backend.epsilon())}applyGradients(t){const e=Array.isArray(t)?t.map(s=>s.name):Object.keys(t);tt(()=>{const s=ee(1,this.accBeta1),i=Xt(-this.learningRate,yt(z(this.iteration,this.decay),1));e.forEach((o,r)=>{const a=X.registeredVariables[o],c=!1;this.accumulatedFirstMoment[r]==null&&(this.accumulatedFirstMoment[r]={originalName:`${o}/m`,variable:Me(a).variable(c)}),this.accumulatedWeightedInfNorm[r]==null&&(this.accumulatedWeightedInfNorm[r]={originalName:`${o}/v`,variable:Me(a).variable(c)});const u=Array.isArray(t)?t[r].tensor:t[o];if(u==null)return;const l=this.accumulatedFirstMoment[r].variable,d=this.accumulatedWeightedInfNorm[r].variable,h=yt(z(l,this.beta1),z(u,1-this.beta1)),f=z(d,this.beta2),p=ns(u),x=dn(f,p);l.assign(h),d.assign(x);const g=yt(z(Xt(i,s),Xt(h,yt(x,this.epsilon))),a);a.assign(g)}),this.iteration.assign(yt(this.iteration,1)),this.accBeta1.assign(z(this.accBeta1,this.beta1))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),this.accumulatedFirstMoment!=null&&Ce(this.accumulatedFirstMoment.map(t=>t.variable)),this.accumulatedWeightedInfNorm!=null&&Ce(this.accumulatedWeightedInfNorm.map(t=>t.variable))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(t){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(t,e){return new t(e.learningRate,e.beta1,e.beta2,e.epsilon,e.decay)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Zg extends Ko{static get className(){return"SGD"}constructor(t){super(),this.learningRate=t,this.setLearningRate(t)}applyGradients(t){(Array.isArray(t)?t.map(s=>s.name):Object.keys(t)).forEach((s,i)=>{const o=Array.isArray(t)?t[i].tensor:t[s];if(o==null)return;const r=X.registeredVariables[s];tt(()=>{const a=yt(z(this.c,o),r);r.assign(a)})}),this.incrementIterations()}setLearningRate(t){this.learningRate=t,this.c!=null&&this.c.dispose(),this.c=rn(Ee(-t))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(t){if(t=await this.extractIterations(t),t.length!==0)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(t,e){return new t(e.learningRate)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class K_ extends Zg{static get className(){return"Momentum"}constructor(t,e,s=!1){super(t),this.learningRate=t,this.momentum=e,this.useNesterov=s,this.accumulations=[],this.m=Ee(this.momentum)}applyGradients(t){(Array.isArray(t)?t.map(s=>s.name):Object.keys(t)).forEach((s,i)=>{const o=X.registeredVariables[s];this.accumulations[i]==null&&(this.accumulations[i]={originalName:`${s}/momentum`,variable:tt(()=>Me(o).variable(!1))});const r=this.accumulations[i].variable,a=Array.isArray(t)?t[i].tensor:t[s];a!=null&&tt(()=>{let c;const u=yt(z(this.m,r),a);this.useNesterov?c=yt(z(this.c,yt(a,z(u,this.m))),o):c=yt(z(this.c,u),o),r.assign(u),o.assign(c)})}),this.incrementIterations()}dispose(){this.m.dispose(),this.accumulations!=null&&Ce(this.accumulations.map(t=>t.variable))}setMomentum(t){this.momentum=t}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(t){t=await this.extractIterations(t);const e=!1;this.accumulations=t.map(s=>({originalName:s.name,variable:s.tensor.variable(e)}))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(t,e){return new t(e.learningRate,e.momentum,e.useNesterov)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Y_ extends Ko{static get className(){return"RMSProp"}constructor(t,e=.9,s=0,i=null,o=!1){if(super(),this.learningRate=t,this.decay=e,this.momentum=s,this.epsilon=i,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=o,i==null&&(this.epsilon=X.backend.epsilon()),t==null)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(t){(Array.isArray(t)?t.map(s=>s.name):Object.keys(t)).forEach((s,i)=>{const o=X.registeredVariables[s],r=!1;this.accumulatedMeanSquares[i]==null&&(this.accumulatedMeanSquares[i]={originalName:`${s}/rms`,variable:tt(()=>Me(o).variable(r))}),this.accumulatedMoments[i]==null&&(this.accumulatedMoments[i]={originalName:`${s}/momentum`,variable:tt(()=>Me(o).variable(r))}),this.accumulatedMeanGrads[i]==null&&this.centered&&(this.accumulatedMeanGrads[i]={originalName:`${s}/mg`,variable:tt(()=>Me(o).variable(r))});const a=Array.isArray(t)?t[i].tensor:t[s];if(a==null)return;const c=this.accumulatedMeanSquares[i].variable,u=this.accumulatedMoments[i].variable;tt(()=>{const l=yt(z(c,this.decay),z(Qe(a),1-this.decay));if(this.centered){const d=this.accumulatedMeanGrads[i].variable,h=yt(z(d,this.decay),z(a,1-this.decay)),f=Xt(z(a,this.learningRate),Kn(ee(l,yt(Qe(h),this.epsilon)))),p=yt(z(u,this.momentum),f);c.assign(l),d.assign(h),u.assign(p);const x=ee(o,p);o.assign(x)}else{const d=yt(z(c,this.decay),z(Qe(a),1-this.decay)),h=yt(z(u,this.momentum),Xt(z(a,this.learningRate),Kn(yt(d,this.epsilon))));c.assign(d),u.assign(h);const f=ee(o,h);o.assign(f)}})}),this.incrementIterations()}dispose(){this.accumulatedMeanSquares!=null&&Ce(this.accumulatedMeanSquares.map(t=>t.variable)),this.accumulatedMeanGrads!=null&&this.centered&&Ce(this.accumulatedMeanGrads.map(t=>t.variable)),this.accumulatedMoments!=null&&Ce(this.accumulatedMoments.map(t=>t.variable))}async getWeights(){const t=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&t.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(t.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(t){t=await this.extractIterations(t);const e=this.centered?t.length/3:t.length/2,s=!1;this.accumulatedMeanSquares=t.slice(0,e).map(i=>({originalName:i.name,variable:i.tensor.variable(s)})),this.accumulatedMoments=t.slice(e,e*2).map(i=>({originalName:i.name,variable:i.tensor.variable(s)})),this.centered&&(this.accumulatedMeanGrads=t.slice(e*2,e*3).map(i=>({originalName:i.name,variable:i.tensor.variable(s)})))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(t,e){return new t(e.learningRate,e.decay,e.momentum,e.epsilon,e.centered)}}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const NO=[H_,X_,q_,j_,K_,Y_,Zg];function kO(){for(const n of NO)xt(n)}function Jg(n,t){const e=n.shape.length,s=t.shape.length;if(e<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${e}.`);if(s<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${s}.`);if(t.dtype!=="int32")throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[s-1]>e)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[s-1]} vs. ${e}`);if(ct(n.shape)===0)throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${n.shape}.`);const i=t.shape,o=i[i.length-1];let r=1;for(let d=0;d<i.length-1;++d)r*=i[d];const a=n.shape,c=i.slice();c.pop();let u=1;for(let d=o;d<e;++d)u*=a[d],c.push(a[d]);const l=[...Kt(n.shape).map(d=>d/u),1].slice(0,o);return[c,r,u,l]}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const M0=-2,DO=-1;function Qg(n,t,e){const s=n.shape.length;k(s===t.length,()=>`Error in slice${s}D: Length of begin ${t} must match the rank of the array (${s}).`),k(s===e.length,()=>`Error in slice${s}D: Length of size ${e} must match the rank of the array (${s}).`);for(let i=0;i<s;++i)k(t[i]+e[i]<=n.shape[i],()=>`Error in slice${s}D: begin[${i}] + size[${i}] (${t[i]+e[i]}) would overflow input.shape[${i}] (${n.shape[i]})`)}function $O(n){const t=[];let e=0;for(;n>0;)n&1&&t.push(e),n/=2,e++;return t}function tx(n,t,e){const s=[];for(let i=0;i<n.length;i++)s[i]=Math.ceil((t[i]-n[i])/e[i]);return s}function Z_(n,t,e,s){const i=[...n];for(let o=i.length;o<s.length;o++)i.push(1);for(let o=0;o<e;o++)o===0?i[t]=1:(i.splice(t,0,1),i.pop());return i}function J_(n,t,e){return e<=n?e:e-(t-1)}function Q_(n,t){const e=[];for(let s=0;s<n;s++)e.push(t+s);return e}function FO(n,t,e,s,i,o,r,a,c){const u=n.length;let l=new Array(u),d=new Array(u),h=new Array(u);if(t.length&&e>0){const f=t[0],p=e+1;l=tC(r,f,p,s,n),d=eC(a,f,p,i,n),h=Z_(o,f,p,n)}else for(let f=0;f<u;f++)l[f]=sC(r,s,o,n,f,c),d[f]=iC(a,i,o,n,f,c),h[f]=nC(o,f,c);return{begin:l,end:d,strides:h}}function tC(n,t,e,s,i){const o=[...i],r=Q_(e,t);for(let a=0;a<o.length;a++)if(r.indexOf(a)>-1)o[a]=0;else{const c=J_(t,e,a);let u=s[c];n&1<<c&&(u=0),o[a]=u}return o}function eC(n,t,e,s,i){const o=[...i],r=Q_(e,t);for(let a=0;a<o.length;a++)if(r.indexOf(a)>-1)o[a]=Number.MAX_SAFE_INTEGER;else{const c=J_(t,e,a);let u=s[c];n&1<<c&&(u=Number.MAX_SAFE_INTEGER),o[a]=u}for(let a=0;a<o.length;a++){const c=i[a];o[a]<0&&(o[a]+=c),o[a]=Rr(0,o[a],i[a])}return o}function nC(n,t,e){let s=n[t];return(e&1<<t||s==null)&&(s=1),s}function sC(n,t,e,s,i,o){let r=t[i];const a=e[i]||1;(n&1<<i||o&1<<i||r==null)&&(a>0?r=Number.MIN_SAFE_INTEGER:r=Number.MAX_SAFE_INTEGER);const c=s[i];return r<0&&(r+=c),r=Rr(0,r,c-1),r}function iC(n,t,e,s,i,o){let r=t[i];const a=e[i]||1;(n&1<<i||o&1<<i||r==null)&&(a>0?r=Number.MAX_SAFE_INTEGER:r=Number.MIN_SAFE_INTEGER);const c=s[i];return r<0&&(r+=c),a>0?r=Rr(0,r,c):r=Rr(-1,r,c-1),r}function ex(n,t,e){let s=e.length;for(let i=0;i<e.length;i++)if(e[i]>1){s=i;break}for(let i=s+1;i<e.length;i++)if(t[i]>0||e[i]!==n[i])return!1;return!0}function nx(n,t){let e=n.length>0?n[n.length-1]:1;for(let s=0;s<n.length-1;s++)e+=n[s]*t[s];return e}function Yf(n,t,e){let s;const i=n.shape.length;typeof t=="number"?s=[t,...new Array(i-1).fill(0)]:t.length<i?s=t.concat(new Array(i-t.length).fill(0)):s=t.slice(),s.forEach(r=>{k(r!==-1,()=>"slice() does not support negative begin indexing.")});let o;return e==null?o=new Array(i).fill(-1):typeof e=="number"?o=[e,...new Array(i-1).fill(-1)]:e.length<i?o=e.concat(new Array(i-e.length).fill(-1)):o=e,o=o.map((r,a)=>r>=0?r:(k(r===-1,()=>`Negative size values should be exactly -1 but got ${r} for the slice() size at index ${a}.`),n.shape[a]-s[a])),[s,o]}function sx(n,t,e,s,i,o,r,a,c){let u;if(s==null?(u=new Array(t.length),u.fill(1)):u=s,r!=null&&(r&r-1)!==0)throw new Error("Multiple ellipses in slice is not allowed.");let l=!1;const d={dims:u.length,numAddAxisAfterEllipsis:0,begin:t.slice(),end:e.slice(),strides:u.slice(),beginMask:i,endMask:o,ellipsisMask:r,newAxisMask:a,shrinkAxisMask:c};for(let w=0;w<d.dims;w++)l&&(1<<w&a)!==0&&d.numAddAxisAfterEllipsis++,1<<w&r&&(l=!0);l||(d.ellipsisMask|=1<<d.dims,d.dims++);const h={dims:n.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};PO(d,h);let f=!0,p=!0,x=!0;const g=[],m=[];for(let w=0;w<n.length;++w){if(h.strides[w]===0)throw Error(`strides[${w}] must be non-zero`);const b=!!(h.shrinkAxisMask&1<<w),_=n[w];if(_===-1){g.push(b?1:-1);continue}const T=[h.beginMask&1<<w,h.endMask&1<<w],E=[h.strides[w]>0?0:-1,h.strides[w]>0?_:_-1];if(b&&h.strides[w]<=0)throw Error("only stride 1 allowed on non-range indexing.");x=x&&h.strides[w]===1;const I=!!(h.beginMask&1<<w&&h.endMask&1<<w);if(h.beginValid&&h.endValid){if(b){const M=h.begin[w]<0?_+h.begin[w]:h.begin[w];if(h.begin[w]=M,h.end[w]=h.begin[w]+1,M<0||M>=_)throw Error(`slice index ${h.begin[w]} of dimension ${w} out of bounds.`)}else h.begin[w]=Yb(h.begin[w],0,h.strides[w],_,T,E),h.end[w]=Yb(h.end[w],1,h.strides[w],_,T,E);const C=h.strides[w]===1&&h.begin[w]===0&&h.end[w]===_;f=f&&C,p=p&&(w===0&&h.strides[w]===1||C)}else f=f&&h.strides[w]===1&&I,p=p&&(w===0&&h.strides[w]===1||I);let S,v=!1;if(h.beginValid&&h.endValid?(S=h.end[w]-h.begin[w],v=!0):b?(S=1,v=!0):I&&_>=0&&(h.strides[w]<0?S=-_:S=_,v=!0),v){let C;S===0||S<0!=h.strides[w]<0?C=0:C=Math.trunc(S/h.strides[w])+(S%h.strides[w]!==0?1:0),g.push(C)}else g.push(-1)}for(let w=0;w<h.finalShapeGatherIndices.length;++w){const b=h.finalShapeGatherIndices[w];b>=0?m.push(g[b]):b===M0&&m.push(1)}return{finalShapeSparse:m.filter((w,b)=>h.finalShapeGatherIndices[b]!==M0),finalShape:m,isIdentity:f,sliceDim0:p,isSimpleSlice:x,begin:h.begin,end:h.end,strides:h.strides}}function PO(n,t){t.beginMask=0,t.endMask=0,t.shrinkAxisMask=0;let e=0;t.beginValid=n.begin!=null,t.endValid=n.end!=null,t.begin=new Array(t.dims),t.end=new Array(t.dims),t.strides=new Array(t.dims),t.finalShapeGatherIndices=[],t.finalShapeGatherIndicesSparse=[],t.inputShapeGatherIndicesSparse=new Array(t.dims);for(let s=0;s<n.dims;s++)if(1<<s&n.ellipsisMask){const i=Math.min(t.dims-(n.dims-s)+1+n.numAddAxisAfterEllipsis,t.dims);for(;e<i;e++)t.begin[e]=0,t.end[e]=0,t.strides[e]=1,t.beginMask|=1<<e,t.endMask|=1<<e,t.finalShapeGatherIndices.push(e),t.finalShapeGatherIndicesSparse.push(-1),t.inputShapeGatherIndicesSparse[e]=s}else if(1<<s&n.newAxisMask)t.finalShapeGatherIndices.push(M0),t.finalShapeGatherIndicesSparse.push(-1);else{if(e===t.begin.length)throw Error(`Index out of range using input dim ${e}; input has only ${t.dims} dims, ${t.begin.length}.`);n.begin!=null&&(t.begin[e]=n.begin[s]),n.end!=null&&(t.end[e]=n.end[s]),t.strides[e]=n.strides[s],n.beginMask&1<<s&&(t.beginMask|=1<<e),n.endMask&1<<s&&(t.endMask|=1<<e),n.shrinkAxisMask&1<<s?(t.finalShapeGatherIndices.push(DO),t.finalShapeGatherIndicesSparse.push(-1),t.shrinkAxisMask|=1<<e):(t.finalShapeGatherIndices.push(e),t.finalShapeGatherIndicesSparse.push(s)),t.inputShapeGatherIndicesSparse[e]=s,e++}}function Yb(n,t,e,s,i,o){if(i[t])return e>0?o[t]:o[t+1&1];{const r=n<0?s+n:n;return r<o[0]?o[0]:r>o[1]?o[1]:r}}const LO=Object.freeze(Object.defineProperty({__proto__:null,assertParamsValid:Qg,computeFlatOffset:nx,computeOutShape:tx,getNormalizedAxes:FO,isSliceContinous:ex,maskToAxes:$O,parseSliceParams:Yf,sliceInfo:sx,startForAxis:sC,startIndicesWithElidedDims:tC,stopForAxis:iC,stopIndicesWithElidedDims:eC,stridesForAxis:nC,stridesWithElidedDims:Z_},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class OO{static sgd(t){return new Zg(t)}static momentum(t,e,s=!1){return new K_(t,e,s)}static rmsprop(t,e=.9,s=0,i=null,o=!1){return new Y_(t,e,s,i,o)}static adam(t=.001,e=.9,s=.999,i=null){return new q_(t,e,s,i)}static adadelta(t=.001,e=.95,s=null){return new H_(t,e,s)}static adamax(t=.002,e=.9,s=.999,i=null,o=0){return new j_(t,e,s,i,o)}static adagrad(t,e=.1){return new X_(t,e)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xa=OO;/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const UO=typeof requestAnimationFrame<"u"?requestAnimationFrame:typeof setImmediate<"u"?setImmediate:n=>n();function oC(){return new Promise(n=>UO(()=>n()))}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ix(n,t){const e=n[0].length;n.forEach((i,o)=>{k(i.length===e,()=>`Error in concat${e}D: rank of tensors[${o}] must be the same as the rank of the rest (${e})`)}),k(t>=0&&t<e,()=>`Error in concat${e}D: axis must be between 0 and ${e-1}.`);const s=n[0];n.forEach((i,o)=>{for(let r=0;r<e;r++)k(r===t||i[r]===s[r],()=>`Error in concat${e}D: Shape of tensors[${o}] (${i}) does not match the shape of the rest (${s}) along the non-concatenated axis ${o}.`)})}function Pi(n,t){const e=n[0].slice();for(let s=1;s<n.length;s++)e[t]+=n[s][t];return e}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var fi;(function(n){n[n.FIRST_DIM_SIZE=0]="FIRST_DIM_SIZE",n[n.VALUE_ROWIDS=1]="VALUE_ROWIDS",n[n.ROW_LENGTHS=2]="ROW_LENGTHS",n[n.ROW_SPLITS=3]="ROW_SPLITS",n[n.ROW_LIMITS=4]="ROW_LIMITS",n[n.ROW_STARTS=5]="ROW_STARTS"})(fi||(fi={}));function rC(n,t,e){let s=new Array;if(e==null&&t==null)return s;if(t==null)for(;s.length<n+e.length;)s.push(-1);else s=t.slice();if(e==null)return s;if(n+e.length!==s.length)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.rank = ${n+e.length}, but shape.rank = ${s.length}`);for(let i=1;i<e.length;++i){const o=e[i],r=s[s.length-e.length+i],a=s[r];if(o>=0)if(a>=0){if(a!==o)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.shape[${i+n}] = ${o} but shape[${i+n}] = ${a}`)}else s[r]=o}return s}function aC(n){const t={FIRST_DIM_SIZE:fi.FIRST_DIM_SIZE,VALUE_ROWIDS:fi.VALUE_ROWIDS,ROW_LENGTHS:fi.ROW_LENGTHS,ROW_SPLITS:fi.ROW_SPLITS,ROW_LIMITS:fi.ROW_LIMITS,ROW_STARTS:fi.ROW_STARTS},e=[];for(const s of n)if(s in t)e.push(t[s]);else break;return e}function cC(n){return n.length===0?0:n[0]===fi.FIRST_DIM_SIZE?n.length-1:n.length}function uC(n,t){if(n==null||t==null)return;const e=n.length,s=t.length;if(e>=s)throw new Error(`defaultValue.shape=${n} and ragged tensor flatValues.shape=${t}, are incompatible: defaultValue.rank = ${e} must be less than ragged tensor input flatValues.rank = ${s})`);for(let i=0;i<Math.min(e,s-1);++i){const o=n[i],r=t[i+1];if(o>=0&&r>=0&&o!==1&&o!==r)throw new Error(`defaultValue.shape=${n}, and ragged tensor input flatValues.shape=${t} are incompatible: defaultValue.shape[${i-n.length}] = ${o} but ragged tensor input.flatValues.shape[${i-n.length}] = ${r}`)}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ox=30;function Zf(n){return n<=ox?n:f0(n,Math.floor(Math.sqrt(n)))}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rx(n,t,e){const s=e*(typeof n=="number"?n:n[0]),i=t*(typeof n=="number"?n:n[1]);return[s,i]}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Cl(n,t,e,s=!0){let i=[];if(s)i=i.concat(t.slice(0)),i.push(n[0]/e),i=i.concat(n.slice(1));else{i=i.concat(n[0]);const o=t.length;for(let r=0;r<o;++r)i=i.concat([n[r+1]/t[r],t[r]]);i=i.concat(n.slice(o+1))}return i}function Sl(n,t,e=!0){const s=[];if(e){s.push(t);for(let i=t+1;i<n;++i)i<=2*t?(s.push(i),s.push(i-(t+1))):s.push(i)}else{const i=[],o=[];for(let r=1;r<n;++r)r>=t*2+1||r%2===1?o.push(r):i.push(r);s.push(...i),s.push(0),s.push(...o)}return s}function Tl(n,t,e,s=!0){const i=[];s?i.push(n[0]/e):i.push(n[0]*e);for(let o=1;o<n.length;++o)o<=t.length?s?i.push(t[o-1]*n[o]):i.push(n[o]/t[o-1]):i.push(n[o]);return i}function ax(n,t){const e=[0];for(let s=0;s<t;++s)e.push(n[s][0]);return e}function cx(n,t,e){const s=n.slice(0,1);for(let i=0;i<e;++i)s.push(n[i+1]-t[i][0]-t[i][1]);return s}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Jf=1.7580993408473768,Qf=1.0507009873554805;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ux=.3275911,lx=.254829592,dx=-.284496736,hx=1.421413741,fx=-1.453152027,px=1.061405429;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lo(n,t){if(n.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${n.length}, imag: ${t.length}.`);const e=new Float32Array(n.length*2);for(let s=0;s<e.length;s+=2)e[s]=n[s/2],e[s+1]=t[s/2];return e}function lC(n){const t=new Float32Array(n.length/2),e=new Float32Array(n.length/2);for(let s=0;s<n.length;s+=2)t[s/2]=n[s],e[s/2]=n[s+1];return{real:t,imag:e}}function dC(n){const t=Math.ceil(n.length/4),e=new Float32Array(t),s=new Float32Array(t);for(let i=0;i<n.length;i+=4)e[Math.floor(i/4)]=n[i],s[Math.floor(i/4)]=n[i+1];return{real:e,imag:s}}function hC(n){const t=Math.floor(n.length/4),e=new Float32Array(t),s=new Float32Array(t);for(let i=2;i<n.length;i+=4)e[Math.floor(i/4)]=n[i],s[Math.floor(i/4)]=n[i+1];return{real:e,imag:s}}function mx(n,t){const e=n[t*2],s=n[t*2+1];return{real:e,imag:s}}function fC(n,t,e,s){n[s*2]=t,n[s*2+1]=e}function pC(n,t){const e=new Float32Array(n/2),s=new Float32Array(n/2);for(let i=0;i<Math.ceil(n/2);i++){const o=(t?2:-2)*Math.PI*(i/n);e[i]=Math.cos(o),s[i]=Math.sin(o)}return{real:e,imag:s}}function mC(n,t,e){const s=(e?2:-2)*Math.PI*(n/t),i=Math.cos(s),o=Math.sin(s);return{real:i,imag:o}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const im="->",BO=/->/g,Zb=",",Jb="...";function gx(n,t){n=n.replace(/\s/g,"");const e=(n.length-n.replace(BO,"").length)/im.length;if(e<1)throw new Error("Equations without an arrow are not supported.");if(e>1)throw new Error(`Equation must contain exactly one arrow ("${im}").`);const[s,i]=n.split(im);k(s.indexOf(Jb)===-1,()=>`The ellipsis notation ("${Jb}") is not supported yet.`);const o=s.split(Zb),r=o.length;if(t!==r)throw new Error(`Expected ${r} input tensors, received ${t}`);if(r>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const a=[];for(let h=0;h<i.length;++h){const f=i[h];if(!o.some(p=>p.indexOf(f)!==-1))throw new Error(`Output subscripts contain the label ${f} not present in the input subscripts.`);a.indexOf(f)===-1&&a.push(f)}for(let h=0;h<s.length;++h){const f=s[h];a.indexOf(f)===-1&&f!==Zb&&a.push(f)}const c=new Array(o.length);for(let h=0;h<r;++h){if(new Set(o[h].split("")).size!==o[h].length)throw new Error(`Found duplicate axes in input component ${o[h]}. Support for duplicate axes in input is not implemented yet.`);c[h]=[];for(let f=0;f<o[h].length;++f)c[h].push(a.indexOf(o[h][f]))}const u=a.length,l=i.length,d=[];for(let h=l;h<u;++h)d.push(h);return{allDims:a,summedDims:d,idDims:c}}function xx(n,t){let e=new Array(n);e.fill(-1);for(let i=0;i<t.length;++i)e[t[i]]=i;const s=[];for(let i=0;i<n;++i)e[i]===-1&&s.push(i);return e=e.filter(i=>i!==-1),{permutationIndices:e,expandDims:s}}function yx(n,t,e){const s=new Array(n);for(let i=0;i<e.length;++i){const o=e[i].shape;for(let r=0;r<t[i].length;++r)s[t[i][r]]===void 0?s[t[i][r]]=o[r]:k(s[t[i][r]]===o[r],()=>`Expected dimension ${s[t[i][r]]} at axis ${r} of input shaped ${JSON.stringify(o)}, but got dimension ${o[r]}`)}}function bx(n,t){const e=n,s=[];let i=0;n.length===0&&e.push(-1),i=n.length+1;for(let r=0;r<i;++r)s.push([]);const o=[];for(let r=0;r<e.length;++r){const a=e[r],c=zO(t,a);for(const u of c)o.indexOf(u)===-1&&(s[r].push(u),o.push(u))}return{path:e,steps:s}}function wx(n){return n.every((t,e)=>t===e)}function zO(n,t){const e=[];for(let s=0;s<n.length;++s)(n[s].length===0||n[s].indexOf(t)!==-1||t===-1)&&e.push(s);return e}function vx(n,t,e=0){let s=[];if(typeof t=="number")k(n.shape[e]%t===0,()=>"Number of splits must evenly divide the axis."),s=new Array(t).fill(n.shape[e]/t);else{const i=t.reduce((r,a)=>(a===-1&&(r+=1),r),0);k(i<=1,()=>"There should be only one negative value in split array.");const o=t.indexOf(-1);if(o!==-1){const r=t.reduce((a,c)=>c>0?a+c:a);t[o]=n.shape[e]-r}k(n.shape[e]===t.reduce((r,a)=>r+a),()=>"The sum of sizes must match the size of the axis dimension."),s=t}return s}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gC(n){return`Received SparseTensor with denseShape[0] = 0 but
  indices.shape[0] = ${n}`}function xC(n,t){return`indices(${n}, 0) is invalid: ${t} < 0`}function yC(n,t,e){return`indices(${n}, 0) is invalid: ${t} >= ${e}`}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bC(n,t){return`only one output dimension may be -1, not both ${n} and ${t}`}function wC(n,t){return`size ${n} must be non-negative, not ${t}`}function vC(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function _C(n,t){const e=ct(n),s=ct(t);return`Input to reshape is a SparseTensor with ${e}
  dense values, but the requested shape requires a multiple of ${s}. inputShape=${n} outputShape= ${t}`}function CC(n,t){const e=ct(n),s=ct(t);return`Input to reshape is a tensor with ${e} dense values, but the requested shape has ${s}. inputShape=${n} outputShape=${t}`}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function A0(){return"segment ids must be >= 0"}function SC(){return"segment ids are not increasing"}function TC(n,t){return`Segment id ${n} out of range [0, ${t}), possibly because segmentIds input is not sorted.`}function EC(n,t,e){return`Bad: indices[${n}] == ${t} out of range [0, ${e})`}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IC(n,t){let e=!1,s;for(n<=ox?(s=n,e=!0):s=f0(n,Math.floor(Math.sqrt(n)));!e;)s>t||s===n?e=!0:s=f0(n,s+1);return s}function RC(n,t,e){const s=[],i=n.length;for(let o=0;o<i;o++)o!==t?s.push(n[o]):s.push(e);return s}function _x(n,t,e,s){const i=t.shape.length,o=n.shape.length;if(s!==0&&(s<-i||s>i))throw new Error(`Expect batchDims in the range of [-${i}, ${i}], but got ${s}`);if(s<0&&(s+=i),s>o)throw new Error(`batchDims (${s}) must be less than rank(x) (
    ${o}).`);if(e<s)throw new Error(`batchDims (${s}) must be less than or equal to axis (${e}).`);for(let d=0;d<s;++d)if(n.shape[d]!==t.shape[d])throw new Error(`x.shape[${d}]: ${n.shape[d]} should be equal to indices.shape[${d}]: ${t.shape[d]}.`);const r=n.shape[e],a=[];let c=1,u=1,l=1;for(let d=0;d<s;++d)a.push(n.shape[d]),c*=n.shape[d];for(let d=s;d<e;d++)a.push(n.shape[d]),u*=n.shape[d];for(let d=s;d<i;d++)a.push(t.shape[d]);for(let d=e+1;d<o;d++)a.push(n.shape[d]),l*=n.shape[d];return{batchSize:c,sliceSize:l,outerSize:u,dimSize:r,outputShape:a}}const VO=Object.freeze(Object.defineProperty({__proto__:null,collectGatherOpShapeInfo:_x,computeOutShape:RC,segOpComputeOptimalWindowSize:IC},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ho(n){try{return n.map(t=>Lo(t))}catch(t){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${t}`)}}function MC(n){return n.map(t=>ko(t))}const WO=Object.freeze(Object.defineProperty({__proto__:null,ERF_A1:lx,ERF_A2:dx,ERF_A3:hx,ERF_A4:fx,ERF_A5:px,ERF_P:ux,PARALLELIZE_THRESHOLD:ox,get RowPartitionType(){return fi},SELU_SCALE:Qf,SELU_SCALEALPHA:Jf,applyActivation:Hg,assertAndGetBroadcastShape:de,assertAxesAreInnerMostDims:Bn,assertParamsConsistent:ix,assignToTypedArray:fC,axesAreInnerMostDims:Rg,calculateShapes:qr,checkEinsumDimSizes:yx,checkPadOnDimRoundingMode:xs,combineLocations:v_,combineRaggedTensorToTensorShapes:rC,complexWithEvenIndex:dC,complexWithOddIndex:hC,computeConv2DInfo:Un,computeConv3DInfo:Xo,computeDefaultPad:_g,computeDilation2DInfo:yl,computeOptimalWindowSize:Zf,computeOutAndReduceShapes:$n,computeOutShape:Pi,computePool2DInfo:ni,computePool3DInfo:po,convertConv2DDataFormat:mo,decodeEinsumEquation:gx,eitherStridesOrDilationsAreOne:Yn,expandShapeToKeepDim:wn,exponent:mC,exponents:pC,fromStringArrayToUint8:MC,fromUint8ToStringArray:ho,getAxesPermutation:un,getBroadcastDims:ja,getComplexWithIndex:mx,getEinsumComputePath:bx,getEinsumPermutation:xx,getFusedBiasGradient:Gg,getFusedDyActivation:Wg,getImageCenter:rx,getInnerMostAxes:mn,getPermuted:Sl,getRaggedRank:cC,getReductionAxes:In,getReshaped:Cl,getReshapedPermuted:Tl,getRowPartitionTypesHelper:aC,getSliceBeginCoords:ax,getSliceSize:cx,getSparseFillEmptyRowsIndicesDenseShapeMismatch:gC,getSparseFillEmptyRowsNegativeIndexErrorMessage:xC,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:yC,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:vC,getSparseReshapeInputOutputMismatchErrorMessage:CC,getSparseReshapeInputOutputMultipleErrorMessage:_C,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:bC,getSparseReshapeNegativeOutputDimErrorMessage:wC,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:EC,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:A0,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:SC,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:TC,getUndoAxesPermutation:qo,isIdentityPermutation:wx,log:C9,mergeRealAndImagArrays:lo,prepareAndValidate:Jg,prepareSplitSize:vx,segment_util:VO,shouldFuse:Xg,slice_util:LO,splitRealAndImagArrays:lC,stridesOrDilationsArePositive:Dr,tupleValuesAreOne:kr,upcastType:Ts,validateDefaultValueShape:uC,validateInput:wL,validateUpdateShape:U_,warn:Ns},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */kO();/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const AC={kernelName:Bh,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>z(n,_l(Nt(e,"float32"),-1))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const GO={kernelName:Cu,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>{const s=Qe(Nt(e,"float32")),i=Kn(ee(Ee(1),s));return qe(Xt(n,i))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const HO={kernelName:Su,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>{const s=Kn(ee(Qe(Nt(e,"float32")),1));return Xt(n,s)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const XO={kernelName:uc,inputsToSave:["a","b"],gradFunc:(n,t)=>{const[e,s]=t,i=de(e.shape,s.shape);return{a:()=>{let a=n;const c=In(e.shape,i);return c.length>0&&(a=Yt(a,c)),j(a,e.shape)},b:()=>{let a=n;const c=In(s.shape,i);return c.length>0&&(a=Yt(a,c)),j(a,s.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qO={kernelName:D1,saveAllInputs:!0,gradFunc:(n,t)=>{const e={};return t.forEach((s,i)=>{e[i]=()=>n.clone()}),e}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jO={kernelName:zh,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>Me(e)}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const KO={kernelName:Vh,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>Me(e)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const YO={kernelName:Tu,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>Xt(n,Kn(ee(Ee(1),Qe(Nt(e,"float32")))))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ZO={kernelName:Eu,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>{const s=Kn(yt(Ee(1),Qe(Nt(e,"float32"))));return Xt(n,s)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const JO={kernelName:Mu,inputsToSave:["a","b"],gradFunc:(n,t)=>{const[e,s]=t,i=de(e.shape,s.shape);return{a:()=>{const a=yt(Qe(e),Qe(s));let c=z(n,Xt(s,a));const u=In(e.shape,i);return u.length>0&&(c=Yt(c,u)),j(c,e.shape)},b:()=>{const a=yt(Qe(e),Qe(s));let c=qe(z(n,Xt(e,a)));const u=In(s.shape,i);return u.length>0&&(c=Yt(c,u)),j(c,s.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const QO={kernelName:Iu,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>Xt(n,yt(Qe(Nt(e,"float32")),1))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const t5={kernelName:Ru,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>Xt(n,ee(Ee(1),Qe(Nt(e,"float32"))))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function e5(n,t,e,s,i,o){const r=O(n,"dy","avgPool3dGrad"),a=O(t,"input","avgPool3dGrad");let c=r,u=a,l=!1;a.rank===4&&(l=!0,c=j(r,[1,r.shape[0],r.shape[1],r.shape[2],r.shape[3]]),u=j(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),k(c.rank===5,()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${c.rank}.`),k(u.rank===5,()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${u.rank}.`),xs("avgPool3dGrad",i,o);const d={dy:c,input:u},h={filterSize:e,strides:s,pad:i,dimRoundingMode:o},f=X.runKernel(L1,d,h);return l?j(f,[f.shape[1],f.shape[2],f.shape[3],f.shape[4]]):f}const n5=K({avgPool3dGrad_:e5});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const s5={kernelName:Gh,inputsToSave:["x"],gradFunc:(n,t,e)=>{const[s]=t,{filterSize:i,strides:o,pad:r,dimRoundingMode:a}=e;return{x:()=>n5(n,s,i,o,r,a)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function i5(n,t,e,s,i){const o=O(n,"dy","avgPoolGrad"),r=O(t,"input","avgPoolGrad");k(r.rank===o.rank,()=>`Rank of input (${r.rank}) does not match rank of dy (${o.rank})`);let a=r,c=o,u=!1;r.rank===3&&(u=!0,a=j(r,[1,r.shape[0],r.shape[1],r.shape[2]]),c=j(o,[1,o.shape[0],o.shape[1],o.shape[2]])),k(c.rank===4,()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${c.rank}.`),k(a.rank===4,()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${a.rank}.`);const l={dy:c,input:a},d={filterSize:e,strides:s,pad:i},h=X.runKernel(P1,l,d);return u?j(h,[h.shape[1],h.shape[2],h.shape[3]]):h}const o5=K({avgPoolGrad_:i5});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const r5={kernelName:Wh,inputsToSave:["x"],gradFunc:(n,t,e)=>{const[s]=t,{filterSize:i,strides:o,pad:r}=e;return{x:()=>o5(n,s,i,o,r)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const a5={kernelName:Hh,inputsToSave:["a","b"],gradFunc:(n,t,e)=>{const[s,i]=t,{transposeA:o,transposeB:r}=e;return!o&&!r?{a:()=>Fe(n,i,!1,!0),b:()=>Fe(s,n,!0,!1)}:!o&&r?{a:()=>Fe(n,i,!1,!1),b:()=>Fe(n,s,!0,!1)}:o&&!r?{a:()=>Fe(i,n,!1,!0),b:()=>Fe(s,n,!1,!1)}:{a:()=>Fe(i,n,!0,!0),b:()=>Fe(n,s,!0,!0)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const c5={kernelName:Xh,gradFunc:(n,t,e)=>{const{blockShape:s,crops:i}=e;return{x:()=>Pg(n,s,i)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const u5={kernelName:b9,gradFunc:(n,t,e)=>{const s=e,i=s.inputShape,o=s.shape,r=Array.from(o);for(let c=i.length-1;c>=0;c--)if(i[c]===o[c])r[c]=1;else if(i[c]!==1)throw new Error(`broadcastTo(): [${i}] cannot be broadcast to [${o}].`);const a=[];for(let c=0;c<r.length;c++)r[c]>1&&a.push(c);return{x:()=>Yt(n,a,!0)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const l5={kernelName:Au,gradFunc:n=>({x:()=>n.clone()})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const d5={kernelName:Nu,gradFunc:n=>({x:()=>Me(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const h5={kernelName:ku,inputsToSave:["x"],gradFunc:(n,t,e)=>{const[s]=t,{clipValueMin:i,clipValueMax:o}=e;return{x:()=>rs(uo(Hr(s,i),hc(s,o)),n,Me(n))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const f5={kernelName:qh,inputsToSave:["x"],gradFunc:AC.gradFunc};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const p5={kernelName:jh,saveAllInputs:!0,gradFunc:(n,t,e)=>{const s=t.map(c=>c.shape),{axis:i}=e,o=ve(i,t[0].shape)[0],r=s.map(c=>c[o]);return $s(n,r,o).map(c=>()=>c)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const m5={kernelName:Kh,inputsToSave:["x","filter"],gradFunc:(n,t,e)=>{const[s,i]=t,{dilations:o,strides:r,pad:a,dataFormat:c}=e;return k(kr(o),()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${o}'`),{x:()=>Tg(s.shape,n,i,r,a,c),filter:()=>Vg(s,n,i.shape,r,a,c)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const g5={kernelName:Yh,inputsToSave:["dy","filter"],gradFunc:(n,t,e)=>{const[s,i]=t,{strides:o,pad:r,dataFormat:a,dimRoundingMode:c}=e;return{dy:()=>$r(n,i,o,r,a,1,c),filter:()=>Vg(n,s,i.shape,o,r,a,c)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function x5(n,t,e,s,i){let o=n;n.rank===4&&(o=j(n,[1,n.shape[0],n.shape[1],n.shape[2],n.shape[3]]));let r=t;r.rank===4&&(r=j(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),k(o.rank===5,()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${o.shape}.`),k(r.rank===5,()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${r.shape}.`),k(e.length===5,()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${e}.`),k(o.shape[4]===e[3],()=>`Error in conv3dDerFilter: depth of input ${o.shape[4]}) must match input depth in filter (${e[3]}.`),k(r.shape[4]===e[4],()=>`Error in conv3dDerFilter: depth of dy (${r.shape[4]}) must match output depth for filter (${e[4]}).`);const a={x:o,dy:r},c={strides:s,pad:i,filterShape:e};return X.runKernel(V1,a,c)}const y5=K({conv3DBackpropFilter_:x5});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const b5={kernelName:Zh,inputsToSave:["x","filter"],gradFunc:(n,t,e)=>{const{dilations:s,strides:i,pad:o}=e;k(kr(s),()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`);const[r,a]=t;return{x:()=>x_(r.shape,n,a,i,o),filter:()=>y5(r,n,a.shape,i,o)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const w5={kernelName:Du,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>z(qe(F_(Nt(e,"float32"))),n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const v5={kernelName:$u,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>z(P_(Nt(e,"float32")),n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _5={kernelName:Jh,inputsToSave:["x"],gradFunc:(n,t,e)=>{const[s]=t,{axis:i,exclusive:o,reverse:r}=e;return{x:()=>{const a=un([i],s.rank);let c=b_(n,i,o,!r);return a!=null&&(c=Re(c,a)),c}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const C5={kernelName:Qh,inputsToSave:["x","filter"],gradFunc:(n,t,e)=>{const{dilations:s,strides:i,pad:o,dimRoundingMode:r}=e,a=s??[1,1];k(kr(a),()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${a}'`);const[c,u]=t;return k(c.rank===4,()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${c.rank}.`),k(u.rank===4,()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${u.rank}.`),k(c.shape[3]===u.shape[2],()=>`Error in gradient of depthwiseConv2d: number of input channels (${c.shape[3]}) must match the inChannels dimension in filter ${u.shape[2]}.`),k(Yn(i,a),()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${i} and dilations '${a}'.`),xs("depthwiseConv2d",o,r),{x:()=>UL(c.shape,n,u,i,o,a,r),filter:()=>LL(c,n,u.shape,i,o,a,r)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const S5={kernelName:tf,inputsToSave:["x","filter"],gradFunc:(n,t,e)=>{const[s,i]=t,o={x:s,filter:i,dy:n},r={x:s,filter:i,dy:n};return{x:()=>X.runKernel(p0,o,e),filter:()=>X.runKernel(m0,r,e)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const T5={kernelName:Pu,outputsToSave:[!0],gradFunc:(n,t)=>{const[e]=t,s={dy:n,y:e};return{x:()=>X.runKernel(Z1,s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const E5={kernelName:Lu,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t,s=z(ti(qe(Qe(e))),2/Math.sqrt(Math.PI));return{x:()=>z(n,s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const I5={kernelName:Ou,outputsToSave:[!0],gradFunc:(n,t)=>{const[e]=t;return{x:()=>z(n,e)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const R5={kernelName:nf,inputsToSave:["input"],gradFunc:(n,t)=>{const[e]=t;return{input:()=>j(n,e.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const M5={kernelName:Uu,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>z(n,ti(e))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const A5={kernelName:Bu,gradFunc:n=>({x:()=>Me(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const N5={kernelName:zu,inputsToSave:["a","b"],gradFunc:(n,t)=>{const[e,s]=t,i=de(e.shape,s.shape);return{a:()=>{const a=Xt(n,Nt(s,"float32")),c=In(e.shape,i);return c.length>0?j(Yt(a,c),e.shape):a},b:()=>{let a=z(n,Nt(e,"float32"));const c=In(s.shape,i);c.length>0&&(a=j(Yt(a,c),s.shape));const u=Qe(s);return qe(Xt(a,Nt(u,"float32")))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const k5={kernelName:sf,inputsToSave:["x","mean","variance","scale"],gradFunc:(n,t,e)=>{const{varianceEpsilon:s}=e,[i,o,r,a]=t,c=a??Ee(1),u=In(o.shape,i.shape),l=[];if(o.rank===1){for(let b=0;b<i.shape.length-1;++b)l.push(i.shape[b]);l.push(1)}const d=ee(i,o),h=z(n,c),f=k_(yt(r,Ee(s))),p=z(z(z(f,f),f),Ee(-.5));return{x:()=>o.rank===1?j(z(z(n,xi(j(f,[1,1,1,o.shape[0]]),l)),c),i.shape):j(z(z(n,f),c),i.shape),mean:()=>{let b=z(z(f,Ee(-1)),h);return o.rank===1&&(b=Yt(b,u)),j(b,o.shape)},variance:()=>{let b=z(z(p,d),h);return o.rank===1&&(b=Yt(b,u)),j(b,o.shape)},scale:()=>{const b=z(d,f);let _=z(n,b);return o.rank===1&&(_=Yt(_,u)),j(_,o.shape)},offset:()=>{let b=n;return o.rank===1&&(b=Yt(b,u)),j(b,o.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const D5={kernelName:of,inputsToSave:["x","indices"],gradFunc:(n,t,e)=>{const[s,i]=t,{axis:o,batchDims:r}=e,a=ve(o,s.shape)[0],c=(u,l,d)=>()=>{const h=u.shape,f=l.size,p=h.slice(0,a),x=p.length,g=h.slice(o,h.length).slice(1),m=g.length,y=Qb(0,x),w=Qb(x+1,x+1+m),b=tw([p,[f],g]),_=j(d,b),T=j(l,[f]),E=tw([[x],y,w]),I=Re(_,E);let S=z_(I,T,u.shape[a]);const v=qo(E);return S=Re(S,v),S};if(r===1){const u=s.shape[0],l=s.split(u,0);return{x:()=>zi(l.map((f,p)=>c(f,i.slice(p,1),n.slice(p,1))())).reshape(s.shape),indices:()=>i}}else return{x:c(s,i,n),indices:()=>i}}};function Qb(n,t){const e=[];for(let s=n;s<t;++s)e.push(s);return e}function tw(n){const t=[];for(let e=0;e<n.length;++e)for(let s=0;s<n[e].length;++s)t.push(n[e][s]);return t}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $5={kernelName:Vu,inputsToSave:["a","b"],gradFunc:(n,t)=>{const[e,s]=t;return{a:()=>Me(e),b:()=>Me(s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const F5={kernelName:Wu,gradFunc:n=>({x:()=>Nt(n,"float32")})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const P5={kernelName:Gu,gradFunc:n=>({x:()=>Me(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const L5={kernelName:Hu,gradFunc:n=>({x:()=>Me(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const O5={kernelName:Xu,gradFunc:n=>({x:()=>Me(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const U5={kernelName:af,inputsToSave:["x"],gradFunc:(n,t,e)=>{const[s]=t,{alpha:i}=e,o=as(s,0);return{x:()=>rs(o,n,z(n,i))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const B5={kernelName:ju,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>Xt(n,yt(e,1))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const z5={kernelName:qu,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>Xt(n,Nt(e,"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const V5={kernelName:v9,inputsToSave:[],outputsToSave:[!0],gradFunc:(n,t,e)=>{const[s]=t,{axis:i}=e;return{logits:()=>{const r=ti(s);return ee(n,z(Yt(n,i,!0),r))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function W5(n,t,e,s=5,i=1,o=1,r=.5){const a={x:n,y:t,dy:e},c={depthRadius:s,bias:i,alpha:o,beta:r};return X.runKernel(sg,a,c)}const G5=K({localResponseNormalizationBackprop_:W5});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const H5={kernelName:ff,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,t,e)=>{const[s,i]=t,{depthRadius:o,bias:r,alpha:a,beta:c}=e;return{x:()=>G5(s,i,n,o,r,a,c)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NC(n,t,e,s){return t.rank<e.rank&&(t=j(t,wn(t.shape,s))),n.rank<e.rank&&(n=j(n,wn(n.shape,s))),{x:()=>z(n,Nt(_i(e,t),n.dtype))}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ew={kernelName:pf,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,t,e)=>{const s=e,{reductionIndices:i}=s,o=t[0],r=t[1],a=ve(i,o.shape),c=NC(n,r,o,a);return{x:()=>c.x()}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const X5={kernelName:Ku,inputsToSave:["a","b"],gradFunc:(n,t)=>{const[e,s]=t;return{a:()=>z(n,Nt(Hr(e,s),"float32")),b:()=>z(n,Nt(Ka(e,s),"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function q5(n,t,e,s,i,o,r){const a=O(n,"dy","maxPool3dGrad"),c=O(t,"input","maxPool3dGrad"),u=O(e,"output","maxPool3dGrad");let l=a,d=c,h=u,f=!1;c.rank===4&&(f=!0,l=j(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]]),d=j(c,[1,c.shape[0],c.shape[1],c.shape[2],c.shape[3]]),h=j(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]])),k(l.rank===5,()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${l.rank}.`),k(d.rank===5,()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${d.rank}.`),k(h.rank===5,()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${h.rank}.`),xs("maxPool3dGrad",o,r);const p={dy:l,input:d,output:h},x={filterSize:s,strides:i,pad:o,dimRoundingMode:r},g=X.runKernel(og,p,x);return f?j(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}const j5=K({maxPool3dGrad_:q5});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const K5={kernelName:gf,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,t,e)=>{const[s,i]=t,{filterSize:o,strides:r,pad:a,dimRoundingMode:c}=e;return{x:()=>j5(n,s,i,o,r,a,c)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Y5(n,t,e,s,i,o,r){const a=O(n,"dy","maxPoolGrad"),c=O(t,"input","maxPoolGrad"),u=O(e,"output","maxPoolGrad");k(c.rank===a.rank,()=>`Rank of input (${c.rank}) does not match rank of dy (${a.rank})`),k(a.rank===4,()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${a.rank}.`),k(c.rank===4,()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${c.rank}.`),xs("maxPoolGrad",o,r);const l={dy:a,input:c,output:u},d={filterSize:s,strides:i,pad:o,dimRoundingMode:r};return X.runKernel(ig,l,d)}const Z5=K({maxPoolGrad_:Y5});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const J5={kernelName:mf,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,t,e)=>{const[s,i]=t,{filterSize:o,strides:r,pad:a}=e;return{x:()=>Z5(n,s,i,o,r,a)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Q5={kernelName:xf,inputsToSave:["x"],gradFunc:(n,t,e)=>{const[s]=t,{axis:i}=e,o=ve(i,s.shape),a=$n(s.shape,o)[1],c=ct(a);return{x:()=>{const l=s.shape.slice();o.forEach(f=>{l[f]=1});const d=j(n,l);return Xt(z(d,jo(s.shape,"float32")),c)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tU={kernelName:yf,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,t,e)=>{const s=e,{axis:i}=s,[o,r]=t,a=ve(i,o.shape),c=NC(n,r,o,a);return{x:()=>c.x()}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eU={kernelName:Yu,inputsToSave:["a","b"],gradFunc:(n,t)=>{const[e,s]=t;return{a:()=>z(n,Nt(hc(e,s),"float32")),b:()=>z(n,Nt(as(e,s),"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nU={kernelName:bf,inputsToSave:["x"],gradFunc:(n,t,e)=>{const s=t[0],{paddings:i}=e,o=i.map(r=>r[0]);return{x:()=>Ze(n,o,s.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sU={kernelName:Zu,inputsToSave:["a","b"],gradFunc:(n,t)=>{const[e,s]=t,i=de(e.shape,s.shape);return{a:()=>{const a=In(e.shape,i);return a.length>0?j(Yt(n,a),e.shape):n},b:()=>{const a=z(n,qe(Kf(Xt(e,s)))),c=In(s.shape,i);return c.length>0?j(Yt(a,c),s.shape):a}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iU={kernelName:Ju,inputsToSave:["a","b"],gradFunc:(n,t)=>{const[e,s]=t,i=de(e.shape,s.shape);return{a:()=>{const a=z(n,Nt(s,"float32")),c=In(e.shape,i);return c.length>0?j(Yt(a,c),e.shape):a},b:()=>{const a=z(n,Nt(e,"float32")),c=In(s.shape,i);return c.length>0?j(Yt(a,c),s.shape):a}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oU={kernelName:wf,gradFunc:n=>({x:()=>qe(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rU={kernelName:Cf,inputsToSave:["indices"],gradFunc:(n,t)=>{const e=t[0];return{indices:()=>en(e.shape,"float32")}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aU={kernelName:_f,gradFunc:n=>({x:()=>Me(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cU={kernelName:Sf,saveAllInputs:!0,gradFunc:(n,t,e)=>{const{axis:s}=e;return Lr(n,s).map(o=>()=>o)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nw={kernelName:Tf,inputsToSave:["x"],gradFunc:(n,t,e)=>{const s=t[0],{paddings:i}=e,o=i.map(r=>r[0]);return{x:()=>Ze(n,o,s.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uU={kernelName:Qu,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(n,t)=>{const[e,s,i]=t,o=e,r=s,a=de(o.shape,r.shape);return{a:()=>{const l=Nt(r,"float32");let d=z(n,z(l,Fr(o,ee(l,Ee(1)))));const h=In(o.shape,a);return h.length>0&&(d=Yt(d,h)),j(d,o.shape)},b:()=>{const l=as(o,0),d=rs(l,Bi(o),Me(o));let h=z(n,z(i,d));const f=In(r.shape,a);return f.length>0&&(h=Yt(h,f)),j(h,r.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lU={kernelName:Ef,inputsToSave:["x","alpha"],gradFunc:(n,t)=>{const[e,s]=t,i=as(e,0);return{x:()=>rs(i,n,z(n,s)),alpha:()=>{let o=rs(i,Me(n),z(n,e));const r=In(s.shape,n.shape);return r.length>0&&(o=Yt(o,r)),j(o,s.shape)}}}};/**
 * @license
 * Copyright 2022 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dU(n,t,e){const s=n.shape.slice();s[e]=1;const i=j(t,s),o=I0(n,e,!0,!1),r=I0(n,e,!0,!0),a=z(o,r);return z(i,a)}function hU(n,t,e){const s=n.shape.length,i=s-e.length,o=un(e,s);let r=n;o!=null&&(r=Re(n,o));const a=r.shape.slice(),u=a.splice(s-e.length,e.length).reduce((h,f)=>h*f,1);a.push(u);const l=r.reshape(a);let d=dU(l,t,i);if(d=d.reshape(r.shape),o!=null){const h=qo(o);d=Re(d,h)}return d}const fU={kernelName:If,inputsToSave:["x"],gradFunc:(n,t,e)=>{const[s]=t,{axis:i}=e;let o=[];return i==null?o=s.shape.map((r,a)=>a):typeof i=="number"?o=[i]:o=i,{x:()=>hU(s,n,o)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pU={kernelName:Fu,inputsToSave:["a","b"],gradFunc:(n,t)=>{const[e,s]=t,i=de(e.shape,s.shape);return{a:()=>{const a=Xt(n,Nt(s,"float32")),c=In(e.shape,i);return c.length>0?j(Yt(a,c),e.shape):a},b:()=>{let a=z(n,Nt(e,"float32"));const c=In(s.shape,i);c.length>0&&(a=j(Yt(a,c),s.shape));const u=Qe(s);return qe(Xt(a,Nt(u,"float32")))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mU={kernelName:tl,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>Xt(n,qe(Qe(e)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gU={kernelName:nl,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t,s=z(hc(e,6),_l(e));return{x:()=>z(n,Nt(s,"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xU={kernelName:el,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>z(n,Nt(_l(e),"float32"))}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yU={kernelName:Rf,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>j(n,e.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bU={kernelName:Af,inputsToSave:["images"],gradFunc:(n,t,e)=>{const[s]=t,i={dy:n,images:s};return{images:()=>X.runKernel(hg,i,e)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wU={kernelName:Mf,inputsToSave:["images"],gradFunc:(n,t,e)=>{const[s]=t,i={dy:n,images:s};return{images:()=>X.runKernel(dg,i,e)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vU={kernelName:Nf,gradFunc:(n,t,e)=>{const{dims:s}=e,i=ve(s,n.shape);return{x:()=>Pr(n,i)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _U={kernelName:sl,gradFunc:n=>({x:()=>Me(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CU={kernelName:il,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>qe(Xt(n,z(Fr(e,1.5),2)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SU={kernelName:kf,inputsToSave:["condition"],gradFunc:(n,t)=>{const[e]=t;return{condition:()=>Nt(Me(e),"float32"),t:()=>z(n,Nt(e,n.dtype)),e:()=>z(n,Nt(kg(e),n.dtype))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const TU={kernelName:ol,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>{const s=as(e,Ee(0)),i=Ee(Jf),o=Ee(Qf),r=z(n,o),a=z(z(n,i),ti(Nt(e,"float32")));return rs(s,r,a)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const EU={kernelName:ul,outputsToSave:[!0],gradFunc:(n,t)=>{const[e]=t;return{x:()=>z(n,z(e,ee(Ee(1),e)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const IU={kernelName:cl,gradFunc:n=>({x:()=>Me(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const RU={kernelName:rl,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>z(Eg(Nt(e,"float32")),n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const MU={kernelName:al,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>z(y_(Nt(e,"float32")),n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const AU={kernelName:Df,inputsToSave:["x"],gradFunc:(n,t,e)=>{const[s]=t,{begin:i,size:o}=e,r=s.shape,[a,c]=Yf(s,i,o),u=[];for(let l=0;l<n.rank;l++)u.push([a[l],r[l]-a[l]-c[l]]);return{x:()=>Fg(n,u)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const NU={kernelName:Lf,outputsToSave:[!0],gradFunc:(n,t,e)=>{const[s]=t,{dim:i}=e,o=!0,r=z(n,s);return{logits:()=>ee(r,z(Yt(r,[i],o),s))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kU={kernelName:ll,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>z(n,dc(e))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sw={kernelName:Ff,gradFunc:(n,t,e)=>{const{blockShape:s,paddings:i}=e;return{x:()=>Sg(n,s,i)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iw={kernelName:Pf,gradFunc:(n,t,e)=>{const{axis:s}=e;return{x:()=>Xn(n,s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const DU={kernelName:dl,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>Xt(n,z(Kn(Nt(e,"float32")),2))}}};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $U={kernelName:fg,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>z(n,z(Nt(e,"float32"),2))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const FU={kernelName:hl,inputsToSave:["a","b"],gradFunc:(n,t)=>{const[e,s]=t,i=Ee(2);return{a:()=>z(n,z(i,ee(e,s))),b:()=>z(n,z(i,ee(s,e)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PU={kernelName:xl,gradFunc:n=>({x:()=>Me(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LU={kernelName:fl,inputsToSave:["a","b"],gradFunc:(n,t)=>{const[e,s]=t,i=de(e.shape,s.shape);return{a:()=>{let a=n;const c=In(e.shape,i);return c.length>0&&(a=Yt(a,c)),j(a,e.shape)},b:()=>{let a=n;const c=In(s.shape,i);return c.length>0&&(a=Yt(a,c)),j(qe(a),s.shape)}}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const OU={kernelName:$f,inputsToSave:["x"],gradFunc:(n,t,e)=>{const[s]=t,i=s.shape.slice(),{axis:o}=e;ve(o,s.shape).forEach(u=>{i[u]=1});const a=j(n,i),c=z(a,jo(s.shape,"float32"));return{x:()=>c}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const UU={kernelName:pl,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>Xt(n,Qe(Eg(e)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const BU={kernelName:ml,outputsToSave:[!0],gradFunc:(n,t)=>{const[e]=t;return{x:()=>z(ee(Ee(1),Qe(e)),n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zU={kernelName:gl,inputsToSave:["x"],gradFunc:(n,t,e)=>{const[s]=t,{reps:i}=e;return{x:()=>{let r=Me(s);if(s.rank===1)for(let a=0;a<i[0];++a)r=yt(r,Ze(n,[a*s.shape[0]],[s.shape[0]]));else if(s.rank===2)for(let a=0;a<i[0];++a)for(let c=0;c<i[1];++c)r=yt(r,Ze(n,[a*s.shape[0],c*s.shape[1]],[s.shape[0],s.shape[1]]));else if(s.rank===3)for(let a=0;a<i[0];++a)for(let c=0;c<i[1];++c)for(let u=0;u<i[2];++u)r=yt(r,Ze(n,[a*s.shape[0],c*s.shape[1],u*s.shape[2]],[s.shape[0],s.shape[1],s.shape[2]]));else if(s.rank===4)for(let a=0;a<i[0];++a)for(let c=0;c<i[1];++c)for(let u=0;u<i[2];++u)for(let l=0;l<i[3];++l)r=yt(r,Ze(n,[a*s.shape[0],c*s.shape[1],u*s.shape[2],l*s.shape[3]],[s.shape[0],s.shape[1],s.shape[2],s.shape[3]]));else throw new Error(`Gradient for tile operation is not implemented for rank-${s.rank} tensors yet.`);return r}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const VU={kernelName:$a,gradFunc:(n,t,e)=>{const s=e,{perm:i}=s,o=qo(i);return{x:()=>Re(n,o)}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const WU={kernelName:Of,gradFunc:(n,t,e)=>{const s=e,{axis:i}=s;return{value:()=>zi(n,i)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const GU={kernelName:Uf,inputsToSave:["segmentIds"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>HU(n,e)}}};function HU(n,t){const e=dn(t,Me(t)),s=Mg(n,e);let i=Hr(t,Ee(0,"int32"));const o=s.rank-i.rank;for(let a=0;a<o;++a)i=fs(i,a+1);i=uo(i,jo(s.shape,"bool"));const r=Me(s);return rs(i,s,r)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const XU={kernelName:Bf,gradFunc:n=>({x:()=>Me(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qU=[AC,GO,HO,XO,qO,jO,KO,YO,ZO,JO,QO,t5,s5,r5,a5,c5,u5,l5,d5,h5,f5,p5,g5,m5,b5,w5,v5,_5,C5,S5,pU,T5,E5,I5,R5,M5,N5,A5,k5,D5,$5,F5,P5,L5,O5,U5,B5,z5,V5,H5,ew,ew,X5,K5,J5,Q5,tU,eU,nU,sU,iU,oU,rU,aU,cU,nw,nw,uU,lU,fU,mU,gU,xU,yU,bU,wU,vU,_U,CU,SU,TU,EU,IU,RU,MU,AU,NU,kU,sw,sw,iw,iw,DU,FU,$U,PU,LU,OU,UU,BU,zU,VU,WU,GU,XU];for(const n of qU)S9(n);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */at().prototype.abs=function(){return this.throwIfDisposed(),ns(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */at().prototype.acos=function(){return this.throwIfDisposed(),R4(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */at().prototype.acosh=function(){return this.throwIfDisposed(),A4(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */at().prototype.add=function(n){return this.throwIfDisposed(),yt(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */at().prototype.all=function(n,t){return this.throwIfDisposed(),p_(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */at().prototype.any=function(n,t){return this.throwIfDisposed(),T0(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */at().prototype.argMax=function(n){return this.throwIfDisposed(),iu(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */at().prototype.argMin=function(n){return this.throwIfDisposed(),F4(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */at().prototype.asScalar=function(){return this.throwIfDisposed(),k(this.size===1,()=>"The array must have only 1 element."),j(this,[])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */at().prototype.asType=function(n){return this.throwIfDisposed(),Nt(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */at().prototype.as1D=function(){return this.throwIfDisposed(),j(this,[this.size])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */at().prototype.as2D=function(n,t){return this.throwIfDisposed(),j(this,[n,t])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */at().prototype.as3D=function(n,t,e){return this.throwIfDisposed(),j(this,[n,t,e])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */at().prototype.as4D=function(n,t,e,s){return this.throwIfDisposed(),j(this,[n,t,e,s])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */at().prototype.as5D=function(n,t,e,s,i){return this.throwIfDisposed(),j(this,[n,t,e,s,i])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */at().prototype.asin=function(){return this.throwIfDisposed(),L4(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */at().prototype.asinh=function(){return this.throwIfDisposed(),U4(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */at().prototype.atan=function(){return this.throwIfDisposed(),z4(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */at().prototype.atan2=function(n){return this.throwIfDisposed(),W4(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */at().prototype.atanh=function(){return this.throwIfDisposed(),H4(this)};at().prototype.avgPool=function(n,t,e,s){return this.throwIfDisposed(),Cg(this,n,t,e,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */at().prototype.batchToSpaceND=function(n,t){return this.throwIfDisposed(),Sg(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */at().prototype.batchNorm=function(n,t,e,s,i){return this.throwIfDisposed(),Hf(this,n,t,e,s,i)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */at().prototype.broadcastTo=function(n){return this.throwIfDisposed(),jc(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */at().prototype.cast=function(n){return this.throwIfDisposed(),Nt(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */at().prototype.ceil=function(){return this.throwIfDisposed(),y$(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */at().prototype.clipByValue=function(n,t){return this.throwIfDisposed(),Fs(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */at().prototype.concat=function(n,t){return this.throwIfDisposed(),n instanceof _n&&(n=[n]),Xn([this,...n],t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */at().prototype.conv1d=function(n,t,e,s,i,o){return this.throwIfDisposed(),m_(this,n,t,e,s,i,o)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */at().prototype.conv2dTranspose=function(n,t,e,s,i){return this.throwIfDisposed(),g_(this,n,t,e,s,i)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */at().prototype.conv2d=function(n,t,e,s,i,o){return this.throwIfDisposed(),$r(this,n,t,e,s,i,o)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */at().prototype.cos=function(){return this.throwIfDisposed(),Eg(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */at().prototype.cosh=function(){return this.throwIfDisposed(),y_(this)};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the 'License');
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an 'AS IS' BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */at().prototype.cumprod=function(n,t,e){return this.throwIfDisposed(),I0(this,n,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */at().prototype.cumsum=function(n,t,e){return this.throwIfDisposed(),b_(this,n,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */at().prototype.depthToSpace=function(n,t){return this.throwIfDisposed(),W$(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */at().prototype.depthwiseConv2d=function(n,t,e,s,i,o){return this.throwIfDisposed(),Ig(this,n,t,e,s,i,o)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */at().prototype.dilation2d=function(n,t,e,s,i){return this.throwIfDisposed(),X$(this,n,t,e,s,i)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */at().prototype.divNoNan=function(n){return this.throwIfDisposed(),Z$(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */at().prototype.div=function(n){return this.throwIfDisposed(),Xt(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */at().prototype.dot=function(n){return this.throwIfDisposed(),Q$(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */at().prototype.elu=function(){return this.throwIfDisposed(),qf(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */at().prototype.equal=function(n){return this.throwIfDisposed(),_i(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */at().prototype.erf=function(){return this.throwIfDisposed(),w_(this)};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */at().prototype.euclideanNorm=function(n,t){return this.throwIfDisposed(),dF(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */at().prototype.exp=function(){return this.throwIfDisposed(),ti(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */at().prototype.expandDims=function(n){return this.throwIfDisposed(),fs(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */at().prototype.expm1=function(){return this.throwIfDisposed(),mF(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */at().prototype.fft=function(){return this.throwIfDisposed(),O_(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */at().prototype.flatten=function(){return this.throwIfDisposed(),j(this,[this.size])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */at().prototype.floor=function(){return this.throwIfDisposed(),Kf(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */at().prototype.floorDiv=function(n){return this.throwIfDisposed(),f_(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */at().prototype.gather=function(n,t,e){return this.throwIfDisposed(),Mg(this,n,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */at().prototype.greaterEqual=function(n){return this.throwIfDisposed(),Hr(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */at().prototype.greater=function(n){return this.throwIfDisposed(),as(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */at().prototype.ifft=function(){return this.throwIfDisposed(),R0(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */at().prototype.irfft=function(){return this.throwIfDisposed(),aL(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */at().prototype.isFinite=function(){return this.throwIfDisposed(),SF(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */at().prototype.isInf=function(){return this.throwIfDisposed(),EF(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */at().prototype.isNaN=function(){return this.throwIfDisposed(),RF(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */at().prototype.leakyRelu=function(n){return this.throwIfDisposed(),Ng(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */at().prototype.lessEqual=function(n){return this.throwIfDisposed(),hc(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */at().prototype.less=function(n){return this.throwIfDisposed(),Ka(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */at().prototype.localResponseNormalization=function(n,t,e,s){return this.throwIfDisposed(),DF(this,n,t,e,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */at().prototype.logSigmoid=function(){return this.throwIfDisposed(),BF(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */at().prototype.logSoftmax=function(n){return this.throwIfDisposed(),T_(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */at().prototype.logSumExp=function(n,t){return this.throwIfDisposed(),E_(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */at().prototype.log=function(){return this.throwIfDisposed(),Bi(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */at().prototype.log1p=function(){return this.throwIfDisposed(),S_(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */at().prototype.logicalAnd=function(n){return this.throwIfDisposed(),uo(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */at().prototype.logicalNot=function(){return this.throwIfDisposed(),kg(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */at().prototype.logicalOr=function(n){return this.throwIfDisposed(),I_(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */at().prototype.logicalXor=function(n){return this.throwIfDisposed(),jF(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */at().prototype.matMul=function(n,t,e){return this.throwIfDisposed(),Fe(this,n,t,e)};at().prototype.maxPool=function(n,t,e,s){return this.throwIfDisposed(),Dg(this,n,t,e,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */at().prototype.max=function(n,t){return this.throwIfDisposed(),bi(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */at().prototype.maximum=function(n){return this.throwIfDisposed(),dn(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */at().prototype.mean=function(n,t){return this.throwIfDisposed(),bn(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */at().prototype.min=function(n,t){return this.throwIfDisposed(),sh(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */at().prototype.minimum=function(n){return this.throwIfDisposed(),Do(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */at().prototype.mirrorPad=function(n,t){return this.throwIfDisposed(),nP(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */at().prototype.mod=function(n){return this.throwIfDisposed(),iP(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */at().prototype.mul=function(n){return this.throwIfDisposed(),z(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */at().prototype.neg=function(){return this.throwIfDisposed(),qe(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */at().prototype.norm=function(n,t,e){return this.throwIfDisposed(),jf(this,n,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */at().prototype.notEqual=function(n){return this.throwIfDisposed(),ih(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */at().prototype.oneHot=function(n,t=1,e=0){return this.throwIfDisposed(),R_(this,n,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */at().prototype.onesLike=function(){return this.throwIfDisposed(),ei(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */at().prototype.pad=function(n,t){return this.throwIfDisposed(),Fg(this,n,t)};at().prototype.pool=function(n,t,e,s,i,o){return this.throwIfDisposed(),pP(this,n,t,e,s,i,o)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */at().prototype.pow=function(n){return this.throwIfDisposed(),Fr(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */at().prototype.prelu=function(n){return this.throwIfDisposed(),Lg(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */at().prototype.prod=function(n,t){return this.throwIfDisposed(),xP(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */at().prototype.reciprocal=function(){return this.throwIfDisposed(),VP(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */at().prototype.relu=function(){return this.throwIfDisposed(),Xr(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */at().prototype.relu6=function(){return this.throwIfDisposed(),A_(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */at().prototype.reshapeAs=function(n){return this.throwIfDisposed(),j(this,n.shape)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */at().prototype.reshape=function(n){return this.throwIfDisposed(),j(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */at().prototype.resizeBilinear=function(n,t,e){return this.throwIfDisposed(),W_(this,n,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */at().prototype.resizeNearestNeighbor=function(n,t,e){return this.throwIfDisposed(),G_(this,n,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */at().prototype.reverse=function(n){return this.throwIfDisposed(),Pr(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */at().prototype.rfft=function(){return this.throwIfDisposed(),lL(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */at().prototype.round=function(){return this.throwIfDisposed(),N_(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */at().prototype.rsqrt=function(){return this.throwIfDisposed(),k_(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */at().prototype.selu=function(){return this.throwIfDisposed(),D_(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */at().prototype.separableConv2d=function(n,t,e,s,i,o){return this.throwIfDisposed(),$_(this,n,t,e,s,i,o)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */at().prototype.sigmoid=function(){return this.throwIfDisposed(),dc(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */at().prototype.sign=function(){return this.throwIfDisposed(),Uc(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */at().prototype.sin=function(){return this.throwIfDisposed(),F_(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */at().prototype.sinh=function(){return this.throwIfDisposed(),P_(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */at().prototype.slice=function(n,t){return this.throwIfDisposed(),Ze(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */at().prototype.softmax=function(n){return this.throwIfDisposed(),zg(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */at().prototype.softplus=function(){return this.throwIfDisposed(),bl(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */at().prototype.spaceToBatchND=function(n,t){return this.throwIfDisposed(),Pg(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */at().prototype.split=function(n,t){return this.throwIfDisposed(),$s(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */at().prototype.sqrt=function(){return this.throwIfDisposed(),Kn(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */at().prototype.square=function(){return this.throwIfDisposed(),Qe(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */at().prototype.squaredDifference=function(n){return this.throwIfDisposed(),hL(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */at().prototype.squeeze=function(n){return this.throwIfDisposed(),vl(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */at().prototype.stack=function(n,t){this.throwIfDisposed();const e=n instanceof _n?[this,n]:[this,...n];return zi(e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */at().prototype.step=function(n){return this.throwIfDisposed(),_l(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */at().prototype.stridedSlice=function(n,t,e,s,i,o,r,a){return this.throwIfDisposed(),xL(this,n,t,e,s,i,o,r,a)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */at().prototype.sub=function(n){return this.throwIfDisposed(),ee(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */at().prototype.sum=function(n,t){return this.throwIfDisposed(),Yt(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */at().prototype.tan=function(){return this.throwIfDisposed(),bL(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */at().prototype.tanh=function(){return this.throwIfDisposed(),Gf(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */at().prototype.tile=function(n){return this.throwIfDisposed(),xi(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */at().prototype.toBool=function(){return this.throwIfDisposed(),Nt(this,"bool")};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */at().prototype.toFloat=function(){return this.throwIfDisposed(),Nt(this,"float32")};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */at().prototype.toInt=function(){return this.throwIfDisposed(),Nt(this,"int32")};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */at().prototype.topk=function(n,t){return this.throwIfDisposed(),_L(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */at().prototype.transpose=function(n){return this.throwIfDisposed(),Re(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */at().prototype.unique=function(n){return this.throwIfDisposed(),TL(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */at().prototype.unsortedSegmentSum=function(n,t){return this.throwIfDisposed(),z_(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */at().prototype.unstack=function(n){return this.throwIfDisposed(),Lr(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */at().prototype.where=function(n,t){return this.throwIfDisposed(),rs(n,this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */at().prototype.zerosLike=function(){return this.throwIfDisposed(),Me(this)};/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Ai extends Error{constructor(t){super(t),Object.setPrototypeOf(this,Ai.prototype)}}class Ys extends Error{constructor(t){super(t),Object.setPrototypeOf(this,Ys.prototype)}}class W extends Error{constructor(t){super(t),Object.setPrototypeOf(this,W.prototype)}}class me extends Error{constructor(t){super(t),Object.setPrototypeOf(this,me.prototype)}}class Cx extends Error{constructor(t){super(t),Object.setPrototypeOf(this,Cx.prototype)}}/**
 * @license
 * Copyright 2022 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class kC{constructor(t){this.maxEntries=t||100,this.cache=new Map}get(t){let e;return this.cache.has(t)&&(e=this.cache.get(t),this.cache.delete(t),this.cache.set(t,e)),e}put(t,e){if(this.cache.has(t))this.cache.delete(t);else if(this.cache.size>=this.maxEntries){const s=this.cache.keys().next().value;this.cache.delete(s)}this.cache.set(t,e)}getMaxEntries(){return this.maxEntries}setMaxEntries(t){if(t<0)throw new Error(`The maxEntries of LRU caches must be at least 0, but got ${t}.`);if(this.maxEntries>t)for(let e=0;e<this.maxEntries-t;e++){const s=this.cache.keys().next().value;this.cache.delete(s)}this.maxEntries=t}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Or(n,t){if(Array.isArray(n)){let e=[];for(let s=0;s<t;s++)e=e.concat(n);return e}else{const e=new Array(t);return e.fill(n),e}}function Ni(n,t){if(!n)throw new Cx(t)}function ow(n,t){let e=0;for(const s of n)s===t&&e++;return e}function ps(n){return n.length===1?n[0]:n}function Oe(n){return Array.isArray(n)?n:[n]}function to(n){const e=n.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return e[0]!=="_"?e:"private"+e}function pr(n){return n.length<=1||n.indexOf("_")===-1?n:n.replace(/[_]+(\w|$)/g,(t,e)=>e.toUpperCase())}let zs={};function Sx(n){if(n==null)return null;const t={};return t.className=n.getClassName(),t.config=n.getConfig(),t}function N0(n){if(!(n==null||typeof n!="object"))if(Array.isArray(n))n.forEach(t=>N0(t));else{const t=Object.keys(n);for(const e of t){const s=n[e];s!=null&&typeof s=="object"&&(!Array.isArray(s)&&s.type==="ndarray"&&typeof s.value=="number"?n[e]=s.value:N0(s))}}}function El(n,t={},e={},s="object",i=!1){if(typeof n=="string"){const o=n;let r;if(o in e)r=e[o];else if(o in zs)r=zs[o];else if(r=t[o],r==null)throw new W(`Unknown ${s}: ${n}. This may be due to one of the following reasons:
1. The ${s} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${s} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return r}else{const o=n;if(o.className==null||o.config==null)throw new W(`${s}: Improper config format: ${JSON.stringify(o)}.
'className' and 'config' must set.`);const r=o.className;let a,c;if(r in e?[a,c]=e[r]:r in zs?[a,c]=zs.className:r in t&&([a,c]=t[r]),a==null)throw new W(`Unknown ${s}: ${r}. This may be due to one of the following reasons:
1. The ${s} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${s} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(c!=null){const u={};for(const f of Object.keys(zs))u[f]=zs[f];for(const f of Object.keys(e))u[f]=e[f];const l=o.config;l.customObjects=u;const d=Object.assign({},zs);for(const f of Object.keys(e))zs[f]=e[f];N0(o.config);const h=c(a,o.config,e,i);return zs=Object.assign({},d),h}else{const u=Object.assign({},zs);for(const d of Object.keys(e))zs[d]=e[d];const l=new a(o.config);return zs=Object.assign({},u),l}}}function jU(n,t){return n<t?-1:n>t?1:0}function pd(n,t){return-1*jU(n,t)}function $o(n){if(n==null)return n;const t=[];for(const e of n)t.indexOf(e)===-1&&t.push(e);return t}function KU(n){if(n==null)throw new W(`Invalid value in obj: ${JSON.stringify(n)}`);for(const t in n)if(n.hasOwnProperty(t))return!1;return!0}function jr(n,t,e){if(e!=null&&n.indexOf(e)<0)throw new W(`${e} is not a valid ${t}.  Valid values are ${n} or null/undefined.`)}function Tx(n,t,e=0,s=1/0){return Ni(e>=0),Ni(s>=e),Array.isArray(n)&&n.length>=e&&n.length<=s&&n.every(i=>typeof i===t)}function Nn(n,t){Array.isArray(n)?(k(n.length>0,()=>`${t} is unexpectedly an empty array.`),n.forEach((e,s)=>Nn(e,`element ${s+1} of ${t}`))):k(Number.isInteger(n)&&n>0,()=>`Expected ${t} to be a positive integer, but got ${DC(n)}.`)}function DC(n){return n===null?"null":Array.isArray(n)?"["+n.map(t=>DC(t)).join(",")+"]":typeof n=="string"?`"${n}"`:`${n}`}function YU(n,t,e){let s=e!=null?e():hs(),i;return(...r)=>{const a=e!=null?e():hs();return a-s<t||(s=a,i=n(...r)),i}}function $C(n){return n==="relu"?"relu":n==="linear"?"linear":n==="elu"?"elu":null}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */let ZU=0;function FC(){return ZU++}const md={};function tp(n=""){return n in md||(md[n]=0),md[n]+=1,n+md[n].toString()}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const JU=["channelsFirst","channelsLast"],QU=["nearest","bilinear"],tB=["valid","same","causal"],eB=["max","avg"],nB=["sum","mul","concat","ave"];/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const ya=new Map;function gn(n){jr(JU,"DataFormat",n)}function sB(n){jr(QU,"InterpolationFormat",n)}function Ls(n){jr(tB,"PaddingMode",n)}function PC(n){jr(eB,"PoolMode",n)}const Kc=[],rw="/";function Cr(n,t){Kc.push(n);try{const e=t();return Kc.pop(),e}catch(e){throw Kc.pop(),e}}function iB(){return Kc.length===0?"":Kc.join(rw)+rw}function LC(n){if(!UC(n))throw new Error("Not a valid tensor name: '"+n+"'");return iB()+n}function OC(n){if(!UC(n))throw new Error("Not a valid tensor name: '"+n+"'");ya.has(n)||ya.set(n,0);const t=ya.get(n);if(ya.set(n,ya.get(n)+1),t>0){const e=`${n}_${t}`;return ya.set(e,1),e}else return n}const oB=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function UC(n){return!!n.match(oB)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function rB(n){return n===parseInt(n.toString(),10)}function Fo(n,t,e){t==null&&(t=0),e==null&&(e=n.length);let s=1;for(let i=t;i<e;++i)s*=n[i];return s}function Za(n){if(n.length===0)return Number.NaN;let t=Number.POSITIVE_INFINITY;for(let e=0;e<n.length;e++){const s=n[e];s<t&&(t=s)}return t}function Oo(n){if(n.length===0)return Number.NaN;let t=Number.NEGATIVE_INFINITY;for(let e=0;e<n.length;e++){const s=n[e];s>t&&(t=s)}return t}function Ci(n,t){if(t<n)throw new W(`end (${t}) < begin (${n}) is forbidden.`);const e=[];for(let s=n;s<t;++s)e.push(s);return e}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */let om;function Cn(){return om==null&&(om=J9().epsilon()),om}function Si(){return"channelsLast"}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Li(n,t){return Nt(n,t)}function Il(n,t=-1){const e=n.shape.slice();return t<0&&(t=e.length+t+1),e.splice(t,0,1),j(n,e)}function aB(n,t){return tt(()=>{if(n.shape.length!==2)throw new W(`repeat() expects a rank-2 tensor, but received a rank-${n.shape.length} tensor.`);const e=Il(n,1);return k0(e,[1,t,1])})}function cB(n){const t=[Fo(n.shape)];return j(n,t)}function uB(n){if(n.rank<=1)throw new W(`batchFlatten requires a minimum rank of 2. Got rank: ${n.rank}.`);const t=[n.shape[0],Fo(n.shape,1)];return j(n,t)}function Sr(n,t,e){return tt(()=>{switch(n.rank){case 1:return Ug(n,t,e);case 2:return L_(n,[t,0],[e,n.shape[1]]);case 3:return Bg(n,[t,0,0],[e,n.shape[1],n.shape[2]]);case 4:return rh(n,[t,0,0,0],[e,n.shape[1],n.shape[2],n.shape[3]]);case 5:return Ze(n,[t,0,0,0,0],[e,n.shape[1],n.shape[2],n.shape[3],n.shape[4]]);case 6:return Ze(n,[t,0,0,0,0,0],[e,n.shape[1],n.shape[2],n.shape[3],n.shape[4],n.shape[5]]);default:throw new W(`sliceAlongFirstAxis() received an unsupported tensor rank: ${n.rank}`)}})}function rm(n,t,e){return tt(()=>{switch(n.rank){case 1:return Ug(n,t,e);case 2:return L_(n,[0,t],[n.shape[0],e]);case 3:return Bg(n,[0,0,t],[n.shape[0],n.shape[1],e]);case 4:return rh(n,[0,0,0,t],[n.shape[0],n.shape[1],n.shape[2],e]);default:throw new W(`sliceAlongLastAxis() received an unsupported tensor rank: ${n.rank}`)}})}function gd(n,t,e,s){return tt(()=>{switch(n.rank){case 1:return Ug(n,t,e);case 2:switch(s){case 1:return Sr(n,t,e);case 2:return rm(n,t,e);default:throw new W(`The axis is not within the rank of the tensor ${s}`)}case 3:switch(s){case 1:return Sr(n,t,e);case 2:return Bg(n,[0,t,0],[n.shape[0],e,n.shape[2]]);case 3:return rm(n,t,e);default:throw new W(`The axis is not within the rank of the tensor ${s}`)}case 4:switch(s){case 1:return Sr(n,t,e);case 2:return rh(n,[0,t,0,0],[n.shape[0],e,n.shape[2],n.shape[3]]);case 3:return rh(n,[0,0,t,0],[n.shape[0],n.shape[1],e,n.shape[3]]);case 4:return rm(n,t,e);default:throw new W(`The axis is not within the rank of the tensor ${s}`)}default:throw new W(`sliceAlongLastAxis() received an unsupported tensor rank: ${n.rank}`)}})}function Ex(n,t=-1){let e;return t<0&&(e=n[0].rank,e!==0?t=e:t=0),t===n[0].rank&&(t=-1),Xn(n,t)}function aw(n,t){switch(n.rank){case 1:return v$([n,t]);case 2:return C$([n,t],0);case 3:return T$([n,t],0);case 4:return I$([n,t],0);default:throw new W(`concatAlongFirstAxis() received an unsupported tensor rank: ${n.rank}`)}}function k0(n,t){if(Array.isArray(t)||(t=[t]),n.rank!==t.length)throw new W(`The length of input n (${t.length}) does not match the number of dimensions in input x (${n.rank})`);return xi(n,t)}function ep(n,t=0,e=1,s,i){return OP(n,t,e,s,i)}function Oi(n,t,e,s){if(n.rank<2||t.rank<2)throw new me(`dot requires both inputs to be rank >= 2 but got x shape = ${n.shape} and y shape = ${t.shape}`);if(t.rank>=3){const i=n.shape.slice(-1)[0],o=t.shape.slice(-2)[0];if(i!==o)throw new me(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${n.shape} and  y shape = ${t.shape}`)}if(n.rank===2&&t.rank===2)return qb({a:n,b:t,transposeA:!1,transposeB:!1,bias:s?D0(n.rank,s,Si()):null,activation:e});{const i=n.shape.slice(),o=i.pop();n=j(n,[-1,o]);const r=t.shape.slice(),a=r.pop(),c=r.pop(),u=[...r,a],l=Array.from({length:t.rank},(p,x)=>x===0?t.rank-2:x<=t.rank-2?x-1:x);t=j(Re(t,l),[c,-1]);const d=[...i,...u];return j(qb({a:n,b:t,transposeA:!1,transposeB:!1,bias:s?D0(n.rank,s,Si()):null,activation:e}),d)}}function BC(n,t,e){return tt(()=>(Array.isArray(t)?t=Cs(t,"int32"):t=Nt(t,"int32"),Mg(n,t,e)))}function Rl(n){return z(n,n)}function D0(n,t,e){const s=t.shape;if(t.rank!==1&&t.rank!==n)throw new W(`Unexpected bias dimensions: ${t.rank}; expected it to be 1 or ${n}`);if(n===5){if(e==="channelsFirst")return s.length===1?j(t,[1,s[0],1,1,1]):j(t,[1,s[3],s[0],s[1],s[2]]);if(e==="channelsLast")return s.length===1?j(t,[1,1,1,1,s[0]]):j(t,[1].concat(s))}else if(n===4){if(e==="channelsFirst")return s.length===1?j(t,[1,s[0],1,1]):j(t,[1,s[2],s[0],s[1]]);if(e==="channelsLast")return s.length===1?j(t,[1,1,1,s[0]]):j(t,[1].concat(s))}else if(n===3){if(e==="channelsFirst")return s.length===1?j(t,[1,s[0],1]):j(t,[1,s[1],s[0]]);if(e==="channelsLast")return s.length===1?j(t,[1,1,s[0]]):j(t,[1].concat(s))}else if(n<3)return t;throw new W(`Unsupported input rank by biasAdd: ${t.rank}`)}function Ei(n,t,e){return tt(()=>(e==null&&(e=Si()),gn(e),yt(n,D0(n.rank,t,e))))}function lB(n,t=1){if(t!==1)throw new me(`Support for alpha values other than 1 (${t}) is not implemented yet.`);return qf(n)}function dB(n){return tt(()=>Xt(n,yt(ns(n),1)))}function zC(n,t,e,s){return tt(()=>kL(n,t,e,s))}function hB(n){return tt(()=>{const t=yt(.5,z(.2,n));return Fs(t,0,1)})}function Ml(n,t,e=!1){return e?n():t()}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const fB=["fanIn","fanOut","fanAvg"],pB=["normal","uniform","truncatedNormal"];/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function mB(n){jr(fB,"FanMode",n)}function gB(n){jr(pB,"Distribution",n)}class si extends pc{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class VC extends si{apply(t,e){return en(t,e)}}VC.className="Zeros";xt(VC);class Ix extends si{apply(t,e){return jo(t,e)}}Ix.className="Ones";xt(Ix);class WC extends si{constructor(t){if(super(),typeof t!="object")throw new W(`Expected argument of type ConstantConfig but got ${t}`);if(t.value===void 0)throw new W(`config must have value set but got ${t}`);this.value=t.value}apply(t,e){return tt(()=>z(Ee(this.value),jo(t,e)))}getConfig(){return{value:this.value}}}WC.className="Constant";xt(WC);class GC extends si{constructor(t){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=t.minval||this.DEFAULT_MINVAL,this.maxval=t.maxval||this.DEFAULT_MAXVAL,this.seed=t.seed}apply(t,e){return wl(t,this.minval,this.maxval,e,this.seed)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}GC.className="RandomUniform";xt(GC);class HC extends si{constructor(t){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=t.mean||this.DEFAULT_MEAN,this.stddev=t.stddev||this.DEFAULT_STDDEV,this.seed=t.seed}apply(t,e){if(e=e||"float32",e!=="float32"&&e!=="int32")throw new me(`randomNormal does not support dType ${e}.`);return ep(t,this.mean,this.stddev,e,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}HC.className="RandomNormal";xt(HC);class XC extends si{constructor(t){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=t.mean||this.DEFAULT_MEAN,this.stddev=t.stddev||this.DEFAULT_STDDEV,this.seed=t.seed}apply(t,e){if(e=e||"float32",e!=="float32"&&e!=="int32")throw new me(`truncatedNormal does not support dType ${e}.`);return B_(t,this.mean,this.stddev,e,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}XC.className="TruncatedNormal";xt(XC);class qC extends si{constructor(t){super(),this.gain=t.gain!=null?t.gain:1}apply(t,e){return tt(()=>{if(t.length!==2||t[0]!==t[1])throw new W("Identity matrix initializer can only be used for 2D square matrices.");return z(this.gain,C_(t[0]))})}getConfig(){return{gain:this.gain}}}qC.className="Identity";xt(qC);function xB(n,t="channelsLast"){let e,s;if(gn(t),n.length===2)e=n[0],s=n[1];else if([3,4,5].indexOf(n.length)!==-1){if(t==="channelsFirst"){const i=Fo(n,2);e=n[1]*i,s=n[0]*i}else if(t==="channelsLast"){const i=Fo(n,0,n.length-2);e=n[n.length-2]*i,s=n[n.length-1]*i}}else{const i=Fo(n);e=Math.sqrt(i),s=Math.sqrt(i)}return[e,s]}class Es extends si{constructor(t){if(super(),t.scale<0)throw new W(`scale must be a positive float. Got: ${t.scale}`);this.scale=t.scale==null?1:t.scale,this.mode=t.mode==null?"fanIn":t.mode,mB(this.mode),this.distribution=t.distribution==null?"normal":t.distribution,gB(this.distribution),this.seed=t.seed}apply(t,e){const s=xB(t),i=s[0],o=s[1];let r=this.scale;if(this.mode==="fanIn"?r/=Math.max(1,i):this.mode==="fanOut"?r/=Math.max(1,o):r/=Math.max(1,(i+o)/2),this.distribution==="normal"){const a=Math.sqrt(r);if(e=e||"float32",e!=="float32"&&e!=="int32")throw new me(`${this.getClassName()} does not support dType ${e}.`);return B_(t,0,a,e,this.seed)}else{const a=Math.sqrt(3*r);return wl(t,-a,a,e,this.seed)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}Es.className="VarianceScaling";xt(Es);class Rx extends Es{constructor(t){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:t==null?null:t.seed})}getClassName(){return Es.className}}Rx.className="GlorotUniform";xt(Rx);class Mx extends Es{constructor(t){super({scale:1,mode:"fanAvg",distribution:"normal",seed:t==null?null:t.seed})}getClassName(){return Es.className}}Mx.className="GlorotNormal";xt(Mx);class Ax extends Es{constructor(t){super({scale:2,mode:"fanIn",distribution:"normal",seed:t==null?null:t.seed})}getClassName(){return Es.className}}Ax.className="HeNormal";xt(Ax);class Nx extends Es{constructor(t){super({scale:2,mode:"fanIn",distribution:"uniform",seed:t==null?null:t.seed})}getClassName(){return Es.className}}Nx.className="HeUniform";xt(Nx);class kx extends Es{constructor(t){super({scale:1,mode:"fanIn",distribution:"normal",seed:t==null?null:t.seed})}getClassName(){return Es.className}}kx.className="LeCunNormal";xt(kx);class Dx extends Es{constructor(t){super({scale:1,mode:"fanIn",distribution:"uniform",seed:t==null?null:t.seed})}getClassName(){return Es.className}}Dx.className="LeCunUniform";xt(Dx);class jC extends si{constructor(t){super(),this.DEFAULT_GAIN=1,this.ELEMENTS_WARN_SLOW=2e3,this.gain=t.gain==null?this.DEFAULT_GAIN:t.gain,this.seed=t.seed}apply(t,e){return tt(()=>{if(t.length<2)throw new me("Shape must be at least 2D.");if(e!=="int32"&&e!=="float32"&&e!==void 0)throw new TypeError(`Unsupported data type ${e}.`);e=e;const s=ct(t.slice(0,-1)),i=t[t.length-1],o=s*i;o>this.ELEMENTS_WARN_SLOW&&console.warn(`Orthogonal initializer is being called on a matrix with more than ${this.ELEMENTS_WARN_SLOW} (${o}) elements: Slowness may result.`);const r=[Math.max(i,s),Math.min(i,s)],a=ep(r,0,1,e,this.seed),c=RO.qr(a,!1);let u=c[0];const d=c[1].flatten().stridedSlice([0],[Math.min(i,s)*Math.min(i,s)],[Math.min(i,s)+1]);return u=z(u,d.sign()),s<i&&(u=u.transpose()),z(Ee(this.gain),u.reshape(t))})}getConfig(){return{gain:this.gain,seed:this.seed}}}jC.className="Orthogonal";xt(jC);const cw={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function uw(n,t={}){return El(n,js.getMap().classNameMap,t,"initializer")}function an(n){return Sx(n)}function nn(n){if(typeof n=="string"){const t=n in cw?cw[n]:n;if(t==="GlorotNormal")return new Mx;if(t==="GlorotUniform")return new Rx;if(t==="HeNormal")return new Ax;if(t==="HeUniform")return new Nx;if(t==="LeCunNormal")return new kx;if(t==="LeCunUniform")return new Dx;{const e={};return e.className=t,e.config={},uw(e)}}else return n instanceof si?n:uw(n)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function $0(n){return Array.isArray(n)&&Array.isArray(n[0])}function ah(n){return n.length===0?[]:Array.isArray(n[0])?n:[n]}function ie(n){let t;if(Array.isArray(n)){if(n.length!==1)throw new W(`Expected Tensor length to be 1; got ${n.length}`);t=n[0]}else t=n;return t}function Ne(n){if(Array.isArray(n)&&Array.isArray(n[0])){if(n.length===1)return n=n,n[0];throw new W(`Expected exactly 1 Shape; got ${n.length}`)}else return n}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function ch(n){let t=0;for(const e of n)e.shape.length===0?t+=1:t+=e.shape.reduce((s,i)=>s*i);return t}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const lw="Variable";class yB{constructor(t,e="float32",s=lw,i=!0,o=null){this.dtype=e??"float32",this.shape=t.shape,this.id=FC(),s=s??lw,this.originalName=LC(s),this.name=OC(this.originalName),this.trainable_=i,this.constraint=o,this.val=RL(t,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(t){return this.assertNotDisposed(),bB(this.val,t),this.val.id!==t.id&&(this.val.assign(t),this.constraint!=null&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(t){this.trainable_=t,this.val.trainable=t}}function bB(n,t){if(n.shape.toString()!==t.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(n.shape)+" vs. "+JSON.stringify(t.shape))}function F0(n){return n.map(t=>t.read())}function $x(n){n.forEach(t=>{t[0].write(t[1])})}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Sn{constructor(t){this.dtype=t.dtype,this.shape=t.shape,t.shape!=null?this.ndim=t.shape.length:this.ndim=t.ndim,this.maxNDim=t.maxNDim,this.minNDim=t.minNDim,this.axes=t.axes||{}}}class Vi{constructor(t,e,s,i,o,r,a){this.dtype=t,this.shape=e,this.sourceLayer=s,this.inputs=i,this.callArgs=o,this.outputTensorIndex=a,this.id=FC(),r!=null&&(this.originalName=LC(r),this.name=OC(this.originalName)),this.rank=e.length}}let wB=0;class np{constructor(t,e){this.callArgs=e,this.id=wB++,this.outboundLayer=t.outboundLayer,this.inboundLayers=t.inboundLayers,this.nodeIndices=t.nodeIndices,this.tensorIndices=t.tensorIndices,this.inputTensors=t.inputTensors,this.outputTensors=t.outputTensors,this.inputMasks=t.inputMasks,this.outputMasks=t.outputMasks,this.inputShapes=t.inputShapes,this.outputShapes=t.outputShapes;for(const s of t.inboundLayers)s?.outboundNodes.push(this);t.outboundLayer.inboundNodes.push(this)}getConfig(){const t=[];for(const e of this.inboundLayers)e!=null?t.push(e.name):t.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:t,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let vB=0;class _e extends pc{constructor(t={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=vB++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let e=t.name;if(!e){const s=this.getClassName();e=to(s)+"_"+tp(s)}if(this.name=e,this.trainable_=t.trainable==null?!0:t.trainable,t.inputShape!=null||t.batchInputShape!=null){let s;if(t.batchInputShape!=null)s=t.batchInputShape;else if(t.inputShape!=null){let o=null;t.batchSize!=null&&(o=t.batchSize),s=[o].concat(t.inputShape)}this.batchInputShape=s;let i=t.dtype;i==null&&(i=t.inputDType),i==null&&(i="float32"),this.dtype=i}t.weights!=null?this.initialWeights=t.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(t,e){return t.name+"_ib-"+e.toString()}getNodeAtIndex(t,e){if(this.inboundNodes.length===0)throw new Ys(`The layer has never been called and thus has no defined ${e}.`);if(this.inboundNodes.length<=t)throw new W(`Asked to get ${e} at node ${t}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[t]}getInputAt(t){return ps(this.getNodeAtIndex(t,"input").inputTensors)}getOutputAt(t){return ps(this.getNodeAtIndex(t,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new Ai(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(this.inboundNodes.length===0)throw new Ai(`Layer ${this.name} is not connected, no input to return.`);return ps(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(this.inboundNodes.length===0)throw new Ai(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new Ai(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return ps(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map(t=>t())}get updates(){return this._updates}get built(){return this._built}set built(t){this._built=t}get trainable(){return this.trainable_}set trainable(t){this._trainableWeights.forEach(e=>e.trainable=t),this.trainable_=t}get trainableWeights(){return this.trainable_?this._trainableWeights.filter(t=>t.trainable):[]}set trainableWeights(t){this._trainableWeights=t}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter(t=>!t.trainable).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(t){this._nonTrainableWeights=t}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(t){const e=Oe(t);if(this.inputSpec==null||this.inputSpec.length===0)return;const s=Oe(this.inputSpec);if(e.length!==s.length)throw new W(`Layer ${this.name} expects ${s.length} inputs, but it received ${e.length} input tensors. Input received: ${t}`);for(let i=0;i<e.length;i++){const o=e[i],r=s[i];if(r==null)continue;const a=o.rank;if(r.ndim!=null&&a!==r.ndim)throw new W(`Input ${i} is incompatible with layer ${this.name}: expected ndim=${r.ndim}, found ndim=${a}`);if(r.maxNDim!=null&&a>r.maxNDim)throw new W(`Input ${i} is incompatible with layer ${this.name}: expected max_ndim=${r.maxNDim}, found ndim=${a}`);if(r.minNDim!=null&&a<r.minNDim)throw new W(`Input ${i} is incompatible with layer ${this.name}: expected min_ndim=${r.minNDim}, found ndim=${a}.`);if(r.dtype!=null&&o.dtype!==r.dtype)throw new W(`Input ${i} is incompatible with layer ${this.name} : expected dtype=${r.dtype}, found dtype=${o.dtype}.`);if(r.axes){const c=o.shape;for(const u in r.axes){const l=Number(u),d=r.axes[u],h=l>=0?c[l]:c[c.length+l];if(d!=null&&[d,null].indexOf(h)===-1)throw new W(`Input ${i} is incompatible with layer ${this.name}: expected axis ${l} of input shape to have value ${d} but got shape ${c}.`)}}if(r.shape!=null)for(let c=0;c<r.shape.length;++c){const u=r.shape[c],l=o.shape[c];if(u!=null&&l!=null&&u!==l)throw new W(`Input ${i} is incompatible with layer ${this.name}: expected shape=${r.shape}, found shape=${o.shape}.`)}}}call(t,e){return t}invokeCallHook(t,e){this._callHook!=null&&this._callHook(t,e)}setCallHook(t){this._callHook=t}clearCallHook(){this._callHook=null}apply(t,e){e=e||{},this.assertNotDisposed();const s=Oe(t),i=SB(t),o=TB(t);if(i===o)throw new W("Arguments to apply() must be all SymbolicTensors or all Tensors");return Cr(this.name,()=>{if(!this.built){this.assertInputCompatibility(t);const r=[];for(const a of Oe(t))r.push(a.shape);this.build(ps(r)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),this._refCount===null&&o&&(this._refCount=1)}if(this.assertInputCompatibility(t),o){let r=this.call(t,e);this.supportsMasking&&this.setMaskMetadata(t,r);const a=Oe(r),c=[];for(let u of a)s.indexOf(u)!==-1&&(u=u.clone()),c.push(u);if(r=ps(c),this.activityRegularizer!=null)throw new me("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return r}else{const r=_B(t),a=this.computeOutputShape(r);let c;const u=CB(t);if(this.warnOnIncompatibleInputShape(Array.isArray(t)?r[0]:r),a!=null&&a.length>0&&Array.isArray(a[0])?c=a.map((l,d)=>new Vi(u,l,this,Oe(t),e,this.name,d)):c=new Vi(u,a,this,Oe(t),e,this.name),this.addInboundNode(t,c,null,null,r,a,e),this._refCount++,this.activityRegularizer!=null)throw new me("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return c}})}warnOnIncompatibleInputShape(t){if(this.batchInputShape!=null)if(t.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(t)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let e=!1;this.batchInputShape.forEach((s,i)=>{s!=null&&t[i]!=null&&t[i]!==s&&(e=!0)}),e&&console.warn(`The shape of the input tensor (${JSON.stringify(t)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(this.inboundNodes==null||this.inboundNodes.length===0)throw new Ai(`The layer ${this.name} has never been called and thus has no defined output shape.`);const t=[];for(const e of this.inboundNodes){const s=JSON.stringify(e.outputShapes);t.indexOf(s)===-1&&t.push(s)}if(t.length===1){const e=this.inboundNodes[0].outputShapes;return Array.isArray(e)&&Array.isArray(e[0])&&e.length===1?e[0]:e}else throw new Ai(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new Ys(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return ch(this.weights)}build(t){this.built=!0}getWeights(t=!1){return F0(t?this.trainableWeights:this.weights)}setWeights(t){tt(()=>{const e=this.weights;if(e.length!==t.length)throw new W(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${t.length}, but the layer was expecting ${e.length} weights. Provided weights: ${t}...`);if(e.length===0)return;const s=[],i=F0(e);for(let o=0;o<i.length;++o){const r=i[o],a=e[o],c=t[o];if(!Pe(r.shape,c.shape))throw new W(`Layer weight shape ${r.shape} not compatible with provided weight shape ${c.shape}`);s.push([a,c])}$x(s)})}addWeight(t,e,s,i,o,r,a,c){if(this._addedWeightNames.indexOf(t)!==-1)throw new W(`Duplicate weight name ${t} for layer ${this.name}`);this._addedWeightNames.push(t),s==null&&(s="float32"),this.fastWeightInitDuringBuild&&(i=c!=null?c():nn("zeros"));const u=i.apply(e,s),l=new yB(u,s,t,r,a);return u.dispose(),o!=null&&this.addLoss(()=>o.apply(l.read())),r==null&&(r=!0),r?this._trainableWeights.push(l):this._nonTrainableWeights.push(l),l}setFastWeightInitDuringBuild(t){this.fastWeightInitDuringBuild=t}addLoss(t){t==null||Array.isArray(t)&&t.length===0||(t=Oe(t),this._losses!==void 0&&this._losses!==null&&this.losses.push(...t))}computeOutputShape(t){return t}computeMask(t,e){if(!this.supportsMasking){if(e!=null)if(Array.isArray(e))e.forEach(s=>{if(s!=null)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)});else throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);return null}return e}setMaskMetadata(t,e,s){if(!this.supportsMasking)return;const i=this.computeMask(t,s),o=Oe(e),r=Oe(i);if(o.length!==r.length)throw new Error(`${this.name} outputs ${o.length} tensors but ${o.length} masks for those tensors`);for(let a=0;a<o.length;a++)o[a].kerasMask=r[a]}addInboundNode(t,e,s,i,o,r,a=null){const c=Oe(t);e=Oe(e),s=Oe(s),i=Oe(i),o=ah(o),r=ah(r);const u=[],l=[],d=[];for(const h of c)u.push(h.sourceLayer),l.push(h.nodeIndex),d.push(h.tensorIndex);new np({outboundLayer:this,inboundLayers:u,nodeIndices:l,tensorIndices:d,inputTensors:c,outputTensors:e,inputMasks:s,outputMasks:i,inputShapes:o,outputShapes:r},a);for(let h=0;h<e.length;h++)e[h].sourceLayer=this,e[h].nodeIndex=this.inboundNodes.length-1,e[h].tensorIndex=h}getConfig(){const t={name:this.name,trainable:this.trainable};return this.batchInputShape!=null&&(t.batchInputShape=this.batchInputShape),this.dtype!=null&&(t.dtype=this.dtype),t}disposeWeights(){return this.weights.forEach(t=>t.dispose()),this.weights.length}assertNotDisposed(){if(this._refCount===0)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(this._refCount===null)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let t=0;return--this._refCount===0&&(t=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:t}}}function _B(n){n=Oe(n);const t=[];for(const e of n)t.push(e.shape);return ps(t)}function CB(n){return"float32"}function KC(n,t,e){if((t==null||e!=null&&e>0)&&(t=n.sourceLayer,e=n.nodeIndex),t.inboundNodes.length===0)return[n];{const s=t.inboundNodes[e];if(s.inboundLayers.length===0)return s.inputTensors;{const i=[];for(let o=0;o<s.inboundLayers.length;o++){const r=s.inputTensors[o],a=s.inboundLayers[o],c=s.nodeIndices[o],u=KC(r,a,c);for(const l of u)i.indexOf(l)===-1&&i.push(l)}return i}}}function SB(n){let t=!0;for(const e of Oe(n))if(!(e instanceof Vi)){t=!1;break}return t}function TB(n){let t=!0;for(const e of Oe(n))if(e instanceof Vi){t=!1;break}return t}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Al extends _e{constructor(t){if(super({dtype:t.dtype,name:t.name!=null?t.name:tp("input").toString()}),t.batchSize==null&&(t.batchSize=null),t.sparse==null&&(t.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=t.sparse,t.inputShape!=null&&t.batchInputShape!=null)throw new W("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let e=t.batchInputShape;if(e==null){if(t.inputShape==null)throw new W("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");e=[t.batchSize].concat(t.inputShape)}else if(t.batchSize!=null)throw new W("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const s=t.dtype||"float32";this.batchInputShape=e,this.dtype=s,this.inputSpec=[{shape:e}];const i=new Vi(this.dtype,this.batchInputShape,this,[],{},this.name);i.nodeIndex=0,i.tensorIndex=0,new np({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[i],outputTensors:[i],inputMasks:[null],outputMasks:[null],inputShapes:[e],outputShapes:[e]})}apply(t,e){throw new W(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}Al.className="InputLayer";xt(Al);function EB(n){if(n.batchShape==null&&n.shape==null)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(n.batchShape!=null&&n.shape!=null)throw new W("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let t=n.batchShape;n.shape!=null&&t==null&&(t=[null].concat(n.shape));let e=n.dtype;return e==null&&(e="float32"),new Al({batchInputShape:t,name:n.name,dtype:e,sparse:n.sparse}).inboundNodes[0].outputTensors[0]}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function IB(n,t){if(n.dtype==null||n.dtype===t.dtype)return t;try{return Nt(t,n.dtype)}catch{throw new W(`The dtype of the feed (${t.dtype}) can not be cast to the dtype of the key '${n.name}' (${n.dtype}).`)}}class Io{constructor(t){if(this.id2Value={},this.id2Mask={},this.name2Id={},t instanceof Io)for(const e in t.id2Value)this.id2Value[e]=t.id2Value[e],e in t.id2Mask&&(this.id2Mask[e]=t.id2Mask[e]);else{if(t==null)return;for(const e of t)this.add(e.key,e.value)}}add(t,e,s){if(this.id2Value[t.id]==null)this.id2Value[t.id]=IB(t,e),this.name2Id[t.name]=t.id,s!=null&&(this.id2Mask[t.id]=s);else throw new W(`Duplicate key: name=${t.name}, id=${t.id}`);return this}addFeed(t){this.add(t.key,t.value)}hasKey(t){return this.id2Value[t.id]!=null}names(){return Object.keys(this.name2Id)}getValue(t){if(t instanceof Vi){if(this.id2Value[t.id]==null)throw new W(`Nonexistent key: ${t.name}`);return this.id2Value[t.id]}else{const e=this.name2Id[t];if(e==null)throw new W(`Feed dict has no SymbolicTensor name: ${t}`);return this.id2Value[e]}}getMask(t){if(t instanceof Vi){if(this.id2Value[t.id]==null)throw new W(`Nonexistent key: ${t.name}`);return this.id2Mask[t.id]}else{const e=this.name2Id[t];if(e==null)throw new W(`Feed dict has no SymbolicTensor name: ${t}`);return this.id2Mask[e]}}disposeMasks(){this.id2Mask!=null&&Ce(this.id2Mask)}}const uh=new kC,lh=new kC;function RB(n){uh?.setMaxEntries(n),lh?.setMaxEntries(n)}function Bc(n,t,e,s){const i=e==null?!1:e.training,o=Array.isArray(n),r=o?n:[n],a=r.map(p=>p.name),c=[],u=t.names();for(const p of a)u.indexOf(p)!==-1?c.push(t.getValue(p)):c.push(null);const l=a.join(",")+"|"+t.names().sort().join(",");let d=uh.get(l),h;if(d==null){const p=MB(r,t);d=p.sorted,h=p.recipientCounts,uh.put(l,d),lh.put(l,h)}h={},i||Object.assign(h,lh.get(l));const f=new Io(t);for(let p=0;p<d.length;++p){const x=d[p],g=x.sourceLayer;if(g instanceof Al)continue;const m=[],y=[],w=[];let b=!1;for(const S of x.inputs){const v=f.getValue(S),C=f.getMask(S);m.push(v),y.push(C),C!=null&&(b=!0),i||(h[S.name]--,h[S.name]===0&&!t.hasKey(S)&&a.indexOf(S.name)===-1&&!v.isDisposed&&S.sourceLayer.stateful!==!0&&w.push(v))}b&&(e=e||{},e.mask=y[0]);const _=Oe(g.apply(m,e));let T=null;g.supportsMasking&&(T=g.computeMask(m,y));const E=NB(x),I=Array.isArray(E)?E:[E];for(let S=0;S<I.length;++S){f.hasKey(I[S])||f.add(I[S],_[S],Array.isArray(T)?T[0]:T);const v=a.indexOf(I[S].name);v!==-1&&(c[v]=_[S])}i||Ce(w)}return f.disposeMasks(),o?c:c[0]}function MB(n,t){k(n!=null&&n.length>0,()=>"Expected at least one fetch, got none");let e=[],s={};if(n.length===1){const i=dw(n[0],t);e=i.sorted,s=i.recipientMap}else{const i=new Set;for(const o of n){const{sorted:r,recipientMap:a}=dw(o,t);for(const c of r)i.has(c.name)||(e.push(c),i.add(c.name));for(const c in a)s[c]==null&&(s[c]=new Set),a[c].forEach(u=>s[c].add(u))}}return{sorted:e,recipientCounts:AB(s)}}function AB(n){const t={};for(const e in n)t[e]=n[e].size;return t}function dw(n,t){const e=new Set,s=[],i={};for(const a of t.names())e.add(a);const o=[],r=[];for(o.push(n);o.length>0;){const a=o[o.length-1];if(e.has(a.name)){o.pop();continue}const c=r[r.length-1]===o.length-1;if(a.inputs.length===0||c)o.pop(),s.push(a),e.add(a.name),c&&r.pop();else{r.push(o.length-1);for(const u of a.inputs)i[u.name]==null&&(i[u.name]=new Set),i[u.name].add(a.name),!e.has(u.name)&&o.push(u)}}return{sorted:s,recipientMap:i}}function NB(n){let t;if(n.sourceLayer.inboundNodes.length===1)t=n.sourceLayer.output;else{let e=null;for(let s=0;s<n.sourceLayer.inboundNodes.length;++s)for(const i of n.sourceLayer.inboundNodes[s].outputTensors)if(i.id===n.id){e=s;break}t=n.sourceLayer.getOutputAt(e)}return t}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kB=nt();kB.registerFlag("TOPOLOGICAL_SORT_CACHE_MAX_ENTRIES",()=>100,RB);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Fx(n,t){return tt(()=>Kn(Yt(z(n,n),t,!0)))}class Nl extends pc{getConfig(){return{}}}class YC extends Nl{constructor(t){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=t.maxValue!=null?t.maxValue:this.defaultMaxValue,this.axis=t.axis!=null?t.axis:this.defaultAxis}apply(t){return tt(()=>{const e=Fx(t,this.axis),s=Fs(e,0,this.maxValue);return z(t,Xt(s,yt(Cn(),e)))})}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}YC.className="MaxNorm";xt(YC);class ZC extends Nl{constructor(t){super(),this.defaultAxis=0,this.axis=t.axis!=null?t.axis:this.defaultAxis}apply(t){return tt(()=>Xt(t,yt(Cn(),Fx(t,this.axis))))}getConfig(){return{axis:this.axis}}}ZC.className="UnitNorm";xt(ZC);class JC extends Nl{apply(t){return Xr(t)}}JC.className="NonNeg";xt(JC);class QC extends Nl{constructor(t){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=t.minValue!=null?t.minValue:this.defaultMinValue,this.maxValue=t.maxValue!=null?t.maxValue:this.defaultMaxValue,this.rate=t.rate!=null?t.rate:this.defaultRate,this.axis=t.axis!=null?t.axis:this.defaultAxis}apply(t){return tt(()=>{const e=Fx(t,this.axis),s=yt(z(this.rate,Fs(e,this.minValue,this.maxValue)),z(1-this.rate,e));return z(t,Xt(s,yt(Cn(),e)))})}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}QC.className="MinMaxNorm";xt(QC);const hw={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function Tn(n){return Sx(n)}function fw(n,t={}){return El(n,js.getMap().classNameMap,t,"constraint")}function En(n){if(n==null)return null;if(typeof n=="string"){const e={className:n in hw?hw[n]:n,config:{}};return fw(e)}else return n instanceof Nl?n:fw(n)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */async function ar(n){if(n==null)return;const t=[],e=[],s=[];for(const i in n){const o=n[i];if(typeof o!="number"){const r=o;t.push(r.data()),e.push(i),s.push(r)}}if(t.length>0){const i=await Promise.all(t);for(let o=0;o<i.length;++o)n[e[o]]=i[o][0];Ce(s)}}function tS(n){if(n!=null)for(const t in n){const e=n[t];typeof e!="number"&&e.dispose()}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */var pw;(function(n){n[n.SILENT=0]="SILENT",n[n.VERBOSE=1]="VERBOSE"})(pw||(pw={}));const DB=125;class cu{constructor(){this.validationData=null}setParams(t){this.params=t}async onEpochBegin(t,e){}async onEpochEnd(t,e){}async onBatchBegin(t,e){}async onBatchEnd(t,e){}async onTrainBegin(t){}async onTrainEnd(t){}setModel(t){}}class $B{constructor(t,e=10){t==null&&(t=[]),this.callbacks=t,this.queueLength=e}append(t){this.callbacks.push(t)}setParams(t){for(const e of this.callbacks)e.setParams(t)}setModel(t){for(const e of this.callbacks)e.setModel(t)}async onEpochBegin(t,e){e==null&&(e={});for(const s of this.callbacks)await s.onEpochBegin(t,e)}async onEpochEnd(t,e){e==null&&(e={});for(const s of this.callbacks)await s.onEpochEnd(t,e)}async onBatchBegin(t,e){e==null&&(e={});for(const s of this.callbacks)await s.onBatchBegin(t,e)}async onBatchEnd(t,e){e==null&&(e={});for(const s of this.callbacks)await s.onBatchEnd(t,e)}async onTrainBegin(t){t==null&&(t={});for(const e of this.callbacks)await e.onTrainBegin(t)}async onTrainEnd(t){t==null&&(t={});for(const e of this.callbacks)await e.onTrainEnd(t)}}class FB extends cu{constructor(){super()}async onEpochBegin(t){this.seen=0,this.totals={}}async onBatchEnd(t,e){e==null&&(e={});const s=e.size==null?0:e.size;this.seen+=s;for(const i in e){const o=e[i];if(typeof o=="number")this.totals.hasOwnProperty(i)||(this.totals[i]=0),this.totals[i]=this.totals[i]+o*s;else{let r;i in this.totals?r=this.totals[i]:this.totals[i]=0;const a=tt(()=>yt(this.totals[i],z(o,s)));this.totals[i]=a,r?.dispose()}}}async onEpochEnd(t,e){if(e!=null)for(const s of this.params.metrics)this.totals[s]!=null&&(typeof this.totals[s]=="number"?e[s]=this.totals[s]/this.seen:tt(()=>{const i=z(Xt(1,this.seen),this.totals[s]);e[s]=i,this.totals[s].dispose(),rn(e[s])}))}}class PB extends cu{async onTrainBegin(t){this.epoch=[],this.history={}}async onEpochEnd(t,e){e==null&&(e={}),this.epoch.push(t);for(const s in e)this.history[s]==null&&(this.history[s]=[]),this.history[s].push(e[s])}async syncData(){const t=[],e=[],s=[];for(const o in this.history){const r=this.history[o];for(let a=0;a<r.length;++a)if(typeof r[a]!="number"){const c=r[a];t.push(c.data()),e.push(o),s.push(a)}}const i=await Promise.all(t);for(let o=0;o<i.length;++o)this.history[e[o]][s[o]].dispose(),this.history[e[o]][s[o]]=i[o][0]}}class LB extends cu{constructor(t,e){if(super(),this.currentEpoch=0,this.nowFunc=t.nowFunc,this.nextFrameFunc=t.nextFrameFunc||oC,this.yieldEvery=e||"auto",this.yieldEvery==="auto"&&(this.yieldEvery=DB),this.yieldEvery==="never"&&t.onYield!=null)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");d0(this.yieldEvery)&&(this.maybeWait=YU(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=t.onTrainBegin,this.trainEnd=t.onTrainEnd,this.epochBegin=t.onEpochBegin,this.epochEnd=t.onEpochEnd,this.batchBegin=t.onBatchBegin,this.batchEnd=t.onBatchEnd,this.yield=t.onYield}async maybeWait(t,e,s){const i=[];this.yield!=null&&(await ar(s),i.push(this.yield(t,e,s))),i.push(this.nextFrameFunc()),await Promise.all(i)}async onEpochBegin(t,e){this.currentEpoch=t,this.epochBegin!=null&&(await ar(e),await this.epochBegin(t,e))}async onEpochEnd(t,e){const s=[];this.epochEnd!=null&&(await ar(e),s.push(this.epochEnd(t,e))),this.yieldEvery==="epoch"&&s.push(this.nextFrameFunc()),await Promise.all(s)}async onBatchBegin(t,e){this.batchBegin!=null&&(await ar(e),await this.batchBegin(t,e))}async onBatchEnd(t,e){const s=[];this.batchEnd!=null&&(await ar(e),s.push(this.batchEnd(t,e))),this.yieldEvery==="batch"?s.push(this.nextFrameFunc()):d0(this.yieldEvery)&&s.push(this.maybeWait(this.currentEpoch,t,e)),await Promise.all(s)}async onTrainBegin(t){this.trainBegin!=null&&(await ar(t),await this.trainBegin(t))}async onTrainEnd(t){this.trainEnd!=null&&(await ar(t),await this.trainEnd(t))}}function eS(n,t){return n==null&&(n={}),n instanceof cu?[n]:Array.isArray(n)&&n[0]instanceof cu?n:Oe(n).map(s=>new LB(s,t))}class Gs{constructor(){}static registerCallbackConstructor(t,e){k(t>=0&&Number.isInteger(t),()=>`Verbosity level is expected to be an integer >= 0, but got ${t}`),Gs.checkForDuplicate(e),Gs.constructors[t]==null&&(Gs.constructors[t]=[]),Gs.constructors[t].push(e)}static checkForDuplicate(t){for(const e in Gs.constructors)Gs.constructors[+e].forEach(i=>{if(i===t)throw new W("Duplicate callback constructor.")})}static clear(){Gs.constructors={}}static createCallbacks(t){const e=[];for(const s in Gs.constructors){const i=+s;t>=i&&e.push(...Gs.constructors[i])}return e.map(s=>new s)}}Gs.constructors={};function nS(n,t,e,s,i,o,r,a,c){const u=new PB,l=[new FB,...Gs.createCallbacks(t)];n!=null&&l.push(...n),l.push(u);const d=new $B(l);return d.setParams({epochs:e,initialEpoch:s,samples:i,steps:o,batchSize:r,verbose:t,doValidation:a,metrics:c}),{callbackList:d,history:u}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function ro(n,t={},e=!1){return El(n,js.getMap().classNameMap,t,"layer",e)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function dh(n,t){return tt(()=>{n.dtype!=="float32"&&(n=Nt(n,"float32"));const e=Yt(Rl(n),t,!0),s=Xf(e.shape,Cn()),i=Kn(dn(e,s));return Xt(n,i)})}function sp(n,t){return tt(()=>bn(Rl(ee(t,n)),-1))}function Px(n,t){return tt(()=>bn(ns(ee(t,n)),-1))}function Lx(n,t){return tt(()=>{const e=ee(n,t),s=Fs(ns(n),Cn(),Number.MAX_VALUE),i=ns(Xt(e,s));return z(100,bn(i,-1))})}function OB(n,t){return tt(()=>{const e=Fs(t,Cn(),Number.MAX_VALUE),s=Bi(yt(1,e)),i=Fs(n,Cn(),Number.MAX_VALUE),o=Bi(yt(1,i));return bn(Rl(ee(s,o)),-1)})}function UB(n,t){return tt(()=>{const e=dn(0,ee(1,z(n,t)));return bn(Rl(e),-1)})}function BB(n,t){return tt(()=>{const e=dn(0,ee(1,z(n,t)));return bn(e,-1)})}function zB(n,t){return tt(()=>{const e=Yt(z(n,t),-1),s=bi(z(ee(1,n),t),-1);return dn(0,yt(1,ee(s,e)))})}function VB(n,t){return tt(()=>{const e=Math.log(2),s=ee(t,n),i=ee(yt(s,bl(z(-2,s))),e);return bn(i,-1)})}function uu(n,t,e=!1){return tt(()=>{if(e)t=zg(t);else{const s=Yt(t,t.shape.length-1,!0);t=Xt(t,s)}return t=Fs(t,Cn(),1-Cn()),qe(Yt(z(Nt(n,"float32"),Bi(t)),t.shape.length-1))})}function hh(n,t,e=!1){return tt(()=>{const s=Nt(Kf(cB(n)),"int32");t=Fs(t,Cn(),1-Cn());const i=t.shape,o=j(R_(s,i[i.length-1]),i);return uu(o,t,e)})}function WB(n,t){if(!Pe(n.shape,t.shape))throw new W(`logits and labels must have the same shape, but got shapes ${JSON.stringify(n.shape)} and ${JSON.stringify(t.shape)}`);return tt(()=>{const e=Xr(t),s=qe(ns(t));return yt(ee(e,z(t,n)),S_(ti(s)))})}function ip(n,t){return tt(()=>{let e;return e=Fs(t,Cn(),1-Cn()),e=Bi(Xt(e,ee(1,e))),bn(WB(n,e),-1)})}function GB(n,t){return tt(()=>{const e=Fs(n,Cn(),1),s=Fs(t,Cn(),1);return Yt(z(n,Bi(Xt(e,s))),-1)})}function HB(n,t){return tt(()=>{const e=Bi(yt(Cn(),t));return bn(ee(t,z(n,e)),-1)})}function sS(n,t){return tt(()=>{const e=dh(n,-1),s=dh(t,-1),i=z(e,s);return qe(Yt(i,-1))})}const fh={meanSquaredError:sp,meanAbsoluteError:Px,meanAbsolutePercentageError:Lx,meanSquaredLogarithmicError:OB,squaredHinge:UB,hinge:BB,categoricalHinge:zB,logcosh:VB,categoricalCrossentropy:uu,sparseCategoricalCrossentropy:hh,binaryCrossentropy:ip,kullbackLeiblerDivergence:GB,poisson:HB,cosineProximity:sS};function am(n){if(typeof n=="string"){if(n in fh)return fh[n];let t=`Unknown loss ${n}`;throw n.toLowerCase().includes("softmaxcrossentropy")&&(t=`Unknown loss ${n}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new W(t)}else return n}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function iS(n,t){return tt(()=>{const e=z(.5,ei(t)),s=Li(as(t,e),n.dtype);return bn(_i(n,s),-1)})}function oS(n,t){return tt(()=>Li(_i(iu(n,-1),iu(t,-1)),"float32"))}function XB(n,t){return tt(()=>Nt(Yt(uo(_i(n,1),_i(t,1))),"float32"))}function qB(n,t){return tt(()=>Nt(Yt(uo(_i(n,0),_i(t,1))),"float32"))}function jB(n,t){return tt(()=>{const e=XB(n,t),s=qB(n,t),i=yt(e,s);return Nt(rs(as(i,0),Xt(e,i),0),"float32")})}function KB(n,t){return ip(n,t)}function YB(n,t){return n.rank===t.rank&&(n=vl(n,[n.rank-1])),t=iu(t,-1),t.dtype!==n.dtype&&(t=Nt(t,n.dtype)),Nt(_i(n,t),"float32")}const ZB=sp,JB=sp,QB=Px,t6=Px,e6=Lx,n6=Lx,rS=uu,s6=sS,aS=hh,ph={binaryAccuracy:iS,categoricalAccuracy:oS,precision:jB,categoricalCrossentropy:rS,sparseCategoricalCrossentropy:aS,mse:ZB,MSE:JB,mae:QB,MAE:t6,mape:e6,MAPE:n6,cosine:s6};function i6(n){if(typeof n=="string"&&n in ph)return ph[n];if(typeof n!="string"&&n!=null)return n;throw new W(`Unknown metric ${n}`)}function xd(n){if(Ni(n!==null,`Unknown LossOrMetricFn ${n}`),typeof n=="string")return n;{let t;for(const e of Object.keys(fh))if(fh[e]===n){t=e;break}if(t!==void 0)return t;for(const e of Object.keys(ph))if(ph[e]===n){t=e;break}return t!==void 0?t:n.name}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function o6(n){const t={Adagrad:()=>xa.adagrad(.01),Adadelta:()=>xa.adadelta(1,.95,Cn()),Adam:()=>xa.adam(.001,.9,.999,Cn()),Adamax:()=>xa.adamax(.002,.9,.999,Cn(),0),RMSProp:()=>xa.rmsprop(.001,.9,0,Cn()),SGD:()=>xa.sgd(.01)};if(t.adagrad=t.Adagrad,t.adadelta=t.Adadelta,t.adam=t.Adam,t.adamax=t.Adamax,t.rmsprop=t.RMSProp,t.sgd=t.SGD,n in t)return t[n]();throw new W(`Unknown Optimizer ${n}`)}/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const mw=1*1024*1024;function gw(n,t,e=!1){if(n==null||typeof n!="object"||Object.getPrototypeOf(n)!==Object.prototype||!P0(n))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(e){const s=JSON.stringify(n);s.length>mw&&console.warn(`User-defined metadata of model "${t}" is too large in size (length=${s.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= ${mw}.`)}}function P0(n){if(n===null)return!0;if(typeof n=="object")if(Object.getPrototypeOf(n)===Object.prototype){const t=Object.keys(n);for(const e of t)if(typeof e!="string"||!P0(n[e]))return!1;return!0}else if(Array.isArray(n)){for(const t of n)if(!P0(t))return!1;return!0}else return!1;else{const t=typeof n;return t==="string"||t==="number"||t==="boolean"}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function r6(n,t,e,s=console.log){const i=c6(n),o=["Layer (type)","Input Shape","Output shape","Param #"];i?(t=t||90,e=e||[.32,.61,.89,1]):(t=t||115,e=e||[.24,.48,.7,.8,1]),e[e.length-1]<=1&&(e=e.map(l=>Math.floor(t*l)));let r;if(!i){o.push("Receives inputs"),r=[];for(const l in n.nodesByDepth)r.push(...n.nodesByDepth[l])}s("_".repeat(t)),mh(o,e,s),s("=".repeat(t));const a=n.layers;for(let l=0;l<a.length;++l)i?u6(a[l],e,s):l6(a[l],e,r,s),s((l===a.length-1?"=":"_").repeat(t));n.checkTrainableWeightsConsistency();const c=a6(n),u=ch(n.nonTrainableWeights);s(`Total params: ${c+u}`),s(`Trainable params: ${c}`),s(`Non-trainable params: ${u}`),s("_".repeat(t))}function a6(n){let t;return n.collectedTrainableWeights!=null?t=ch(n.collectedTrainableWeights):t=ch(n.trainableWeights),t}function c6(n){let t=!0;const e=[],s=[];for(const i in n.nodesByDepth)e.push(n.nodesByDepth[i]);for(const i of e){if(i.length>1||i.length===1&&i[0].inboundLayers.length>1){t=!1;break}s.push(...i)}if(t)for(const i of n.layers){let o=!1;for(const r of i.inboundNodes)if(s.indexOf(r)!==-1)if(o){t=!1;break}else o=!0;if(!t)break}return t}function mh(n,t,e=console.log){let s="";for(let i=0;i<n.length;++i)i>0&&(s=s.slice(0,s.length-1)+" "),s+=n[i],s=s.slice(0,t[i]),s+=" ".repeat(t[i]-s.length);e(s)}function u6(n,t,e){let s,i;try{i=n.inboundNodes.map(c=>JSON.stringify(c.inputShapes)).join(",")}catch{i="multiple"}try{s=JSON.stringify(n.outputShape)}catch{s="multiple"}const o=n.name,r=n.getClassName(),a=[`${o} (${r})`,i,s,n.countParams().toString()];mh(a,t,e)}function l6(n,t,e,s){let i,o;try{o=n.inboundNodes.map(d=>JSON.stringify(d.inputShapes)).join(",")}catch{o="multiple"}try{i=JSON.stringify(n.outputShape)}catch{i="multiple"}const r=[];for(const d of n.inboundNodes)if(!(e!=null&&e.length>0&&e.indexOf(d)===-1))for(let h=0;h<d.inboundLayers.length;++h){const f=d.inboundLayers[h].name,p=d.nodeIndices[h],x=d.tensorIndices[h];r.push(`${f}[${p}][${x}]`)}const a=n.name,c=n.getClassName(),u=r.length===0?"":r[0],l=[`${a} (${c})`,o,i,n.countParams().toString(),u];mh(l,t,s);for(let d=1;d<r.length;++d)mh(["","","","",r[d]],t,s)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function cS(n,t,e){return(n==="inboundNodes"||n==="outputLayers"||n==="inputLayers")&&t===0&&typeof e=="string"}function L0(n,t){if(n===null)return null;if(typeof n=="string")return pr(n);if(typeof n=="number"||typeof n=="boolean")return n;if(n instanceof Array){const e=[],s=n.length;for(let i=0;i<s;++i){const o=n[i];cS(t,i,o)?e.push(o):e.push(L0(o,t))}return e}else{const e={};for(const s of Object.keys(n)){const i=n[s];if(s==="name"&&typeof i=="string")e[s]=i;else{const o=pr(s);e[o]=L0(i,o)}}return e}}function O0(n,t){if(n==null)return null;if(typeof n=="string")return to(n);if(typeof n=="number"||typeof n=="boolean")return n;if(n instanceof Array){const e=[],s=n.length;for(let i=0;i<s;++i){const o=n[i];cS(t,i,o)?e.push(o):e.push(O0(o,t))}return e}else{const e={};for(const s of Object.keys(n)){const i=n[s],o=to(s);(s==="name"||s==="className")&&typeof i=="string"?e[o]=i:e[o]=O0(i,s)}return e}}/** @license See the LICENSE file. */const uS="4.22.0";/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const d6=n=>{const t=Object.keys(n);if(t.length===0)return!1;const e=t[0].split("/");return!isNaN(parseInt(e[e.length-1],10))};class di extends _e{constructor(t){if(super({}),this.containerNodes=new Set,this.name=t.name,this.name==null){const y=this.getClassName().toLowerCase();this.name=tp(y)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(t.inputs)?this.inputs=t.inputs.slice():this.inputs=[t.inputs],Array.isArray(t.outputs)?this.outputs=t.outputs.slice():this.outputs=[t.outputs],$o(this.inputs).length!==this.inputs.length)throw new W(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map(y=>y.name)}`);$o(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map(y=>y.name)}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const y of this.outputs){const w=y.sourceLayer,b=y.nodeIndex,_=y.tensorIndex;this.outputLayers.push(w),this.outputLayersNodeIndices.push(b),this.outputLayersTensorIndices.push(_)}for(const y of this.inputs){const w=y.sourceLayer,b=y.nodeIndex,_=y.tensorIndex;Ni(b===0,"input layer has >1 nodes"),Ni(_===0,"input layer has >1 tensors"),this.inputLayers.push(w),this.inputLayersNodeIndices.push(b),this.inputLayersTensorIndices.push(_)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let y=0;y<this.inputLayers.length;y++){const w=this.inputLayers[y];if(!(w instanceof Al))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${t.inputs}. Input ${y} (0-based) originates from layer type ${w.getClassName()}.`);this.inputNames.push(w.name),this.feedInputShapes.push(w.batchInputShape),this.feedInputNames.push(w.name)}for(const y of this.outputLayers)this.outputNames.push(y.name);this.internalInputShapes=this.inputs.map(y=>y.shape),this.internalOutputShapes=this.outputs.map(y=>y.shape);const e={},s={},i={},o={},r={},a=[],c=(y,w,b,_,T,E)=>{(_==null||T==null||E==null)&&(_=y.sourceLayer,T=y.nodeIndex,E=y.tensorIndex);const I=_.inboundNodes[T];if(b.indexOf(I)!==-1)throw new Ys(`The tensor ${y.name} at layer "${_.name}" is part of a cycle.`);if(w.indexOf(I)!==-1)return;this.containerNodes.add(di.nodeKey(_,T)),_.id in r||(r[_.id]=Object.keys(r).length),b.indexOf(I)===-1&&b.push(I);const S=I.inboundLayers.length;for(let v=0;v<S;v++){const C=I.inputTensors[v],M=I.inboundLayers[v],N=I.nodeIndices[v],D=I.tensorIndices[v];c(C,w,b,M,N,D)}for(w.push(I);b.indexOf(I)>=0;)b.splice(b.indexOf(I),1);a.push(I)},u=[],l=[];for(const y of this.outputs)c(y,u,l);const d=a.slice().reverse();for(const y of d){s[y.id]=y,y.id in e||(e[y.id]=0);let w=e[y.id];const b=i[y.outboundLayer.id]==null?0:i[y.outboundLayer.id];w=Math.max(w,b),i[y.outboundLayer.id]=w,o[y.outboundLayer.id]=y.outboundLayer,e[y.id]=w;for(let _=0;_<y.inboundLayers.length;_++){const T=y.inboundLayers[_],E=y.nodeIndices[_],I=T.inboundNodes[E],S=e[I.id]==null?0:e[I.id];e[I.id]=Math.max(w+1,S),s[I.id]=I}}const h={};for(const y in e){const w=e[y];w in h||(h[w]=[]),h[w].push(s[y])}const f={};for(const y in i){const w=i[y];w in f||(f[w]=[]),f[w].push(o[y])}let p=Object.keys(f).map(y=>parseInt(y,10)).sort(pd);this.layers=[];for(const y of p){const w=f[y];w.sort((b,_)=>{const T=r[b.id],E=r[_.id];return T<E?-1:T>E?1:0});for(const b of w)b instanceof di&&this.internalContainerRefs.push(b),this.layers.push(b)}this.layersByDepth=f,p=Object.keys(h).map(y=>parseInt(y,10)).sort(pd);const x=this.inputs.slice(),g=[];for(const y of p)for(const w of h[y]){const b=w.outboundLayer;if(b!=null){for(const _ of w.inputTensors)if(x.indexOf(_)===-1)throw new Ys(`Graph disconnected: cannot obtain value for tensor ${_} at layer "${b.name}". The following previous layers were accessed without issue: ${g}`);for(const _ of w.outputTensors)x.push(_);g.push(b.name)}}this.nodesByDepth=h;const m=this.layers.map(y=>y.name);for(const y of m){const w=m.filter(b=>b===y).length;if(w!==1)throw new Ys(`The name "${y}" is used ${w} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(m))}this.outboundNodes=[],this.inboundNodes=[],new np({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map(y=>null),outputMasks:this.outputs.map(y=>null),inputShapes:this.inputs.map(y=>y.shape),outputShapes:this.outputs.map(y=>y.shape)}),this.built=!0,this._refCount=1}assertNotDisposed(){if(this._refCount===0)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();const t={refCountAfterDispose:null,numDisposedVariables:0};if(--this._refCount===0){for(const e of this.layers)t.numDisposedVariables+=e.dispose().numDisposedVariables;for(const e of this.internalContainerRefs)t.numDisposedVariables+=e.dispose().numDisposedVariables}return t.refCountAfterDispose=this._refCount,t}get trainable(){return this.trainable_}set trainable(t){this.layers.forEach(e=>{e._trainableWeights.forEach(s=>s.trainable=t)}),this.trainable_=t}get trainableWeights(){if(this._trainableWeights.length>0)throw new W("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let t=[];for(const e of this.layers)t=t.concat(e.trainableWeights);return t}get nonTrainableWeights(){const t=[];for(const e of this.layers)t.push(...e.nonTrainableWeights);if(!this.trainable){const e=[];for(const s of this.layers)e.push(...s.trainableWeights);return e.concat(t)}return t}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(t,e=!0){const s={};let i=0;const o=d6(t);o&&this.parseWeights(t);for(const a of this.layers)for(const[c,u]of a.weights.entries()){const l=o?`${u.name.split("/").slice(0,-1).join("/")+"/"}${c}`:u.originalName;if(s[l]!=null)throw new W(`Duplicate weight name: ${l}`);s[l]=u,i++}const r=[];for(const a in t){let c=a;if(s[a]==null){const u=a.split("/");c=u.slice(0,-2).concat([u[u.length-1]]).join("/")}if(s[c]!=null)r.push([s[c],t[a]]);else if(e)throw new W(`Provided weight data has no target variable: ${a}`);delete s[c]}if(e){const a=[];for(const c in s)a.push(c);if(a.length>0)throw new W(`${a.length} of ${i} weights are not set: ${a}`)}$x(r)}parseWeights(t){for(const e in Object.keys(t)){const s=e.split("/"),i=["vars","layer_checkpoint_dependencies"],o=s.map(r=>r.startsWith("_")?r.slice(1):r).filter(r=>!i.includes(r)).join("/");o!==e&&(t[o]=t[e],delete t[e])}}updatedConfig(){const t=this.getConfig(),e={};return e.className=this.getClassName(),e.config=t,e.kerasVersion=`tfjs-layers ${uS}`,e.backend="TensorFlow.js",e}toJSON(t,e=!0){const s=O0(this.updatedConfig());return e?JSON.stringify(s):s}call(t,e){return tt(()=>{t=Oe(t);const s=new Io;for(let i=0;i<this.inputs.length;++i)s.add(this.inputs[i],t[i]);return Bc(this.outputs,s,e)})}computeMask(t,e){return tt(()=>{t=Oe(t);let s;return e==null?s=Or(null,t.length):s=Oe(e),this.runInternalGraph(t,s)[1]})}computeOutputShape(t){const e=ah(t);if(e.length!==this.inputLayers.length)throw new W(`Invalid inputShape argument ${t}: model has ${this.inputLayers.length} tensor inputs.`);const s={};for(let a=0;a<e.length;a++){const c=this.inputLayers[a],u=e[a],l=c.name+"_0_0";s[l]=u}const i=Object.keys(this.nodesByDepth).map(a=>parseInt(a,10)).sort(pd);if(i.length>1)for(const a of i){const c=this.nodesByDepth[a];for(const u of c){const l=u.outboundLayer;if(this.inputLayers.map(x=>x.id).indexOf(l.id)!==-1)continue;const d=[];for(let x=0;x<u.inboundLayers.length;x++){const g=u.inboundLayers[x],m=u.nodeIndices[x],y=u.tensorIndices[x],w=`${g.name}_${m}_${y}`,b=s[w];d.push(b)}const h=l.computeOutputShape(ps(d)),f=ah(h),p=l.inboundNodes.indexOf(u);for(let x=0;x<f.length;x++){const g=`${l.name}_${p}_${x}`;s[g]=f[x]}}}const o=[],r=[];for(let a=0;a<this.outputLayers.length;a++){const c=this.outputLayers[a],u=this.outputLayersNodeIndices[a],l=this.outputLayersTensorIndices[a],d=`${c.name}_${u}_${l}`;r.push(d)}for(let a=0;a<r.length;a++){const c=r[a];Ni(c in s),o.push(s[c])}return ps(o)}runInternalGraph(t,e){e==null&&(e=Or(null,t.length));const s={};for(let c=0;c<this.inputs.length;++c){const u=this.inputs[c],l=t[c],d=e[c];s[u.id]=[l,d]}const i=Object.keys(this.nodesByDepth).map(c=>parseInt(c,10)).sort(pd);for(const c of i){const u=this.nodesByDepth[c];for(const l of u){const d=l.outboundLayer,h=l.inputTensors,f=l.outputTensors,p=new Array;for(const x of h)x.id in s&&p.push(s[x.id]);if(p.length===h.length){let x={},g,m,y,w;if(l.callArgs!=null&&(x=l.callArgs),p.length===1){const[b,_]=p[0];x.mask==null&&(x.mask=_),y=Oe(d.call(b,x)),w=Oe(d.computeMask(b,_)),g=[b],m=[_]}else g=p.map(b=>b[0]),m=p.map(b=>b[1]),x.mask==null&&(x.mask=m),y=Oe(d.call(g,x)),w=Oe(d.computeMask(g,m));if(d.activityRegularizer)throw new me("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let b=0;b<f.length;++b){const _=f[b],T=y[b],E=w[b];s[_.id]=[T,E]}}}}const o=[],r=[],a=[];for(const c of this.outputs){Ni(c.id in s,`Could not compute output ${c.name} : ${c.id}`);const[u,l]=s[c.id];a.push(u.shape),o.push(u),r.push(l)}return[o,r,a]}buildNodeConversionMap(t){const e={};let s;for(const i of this.layers){s=i instanceof di?1:0;for(let o=0;o<i.inboundNodes.length;o++){const r=di.nodeKey(i,o);this.containerNodes.has(r)&&(e[r]=s,s+=1)}}return e}getLayer(t,e){if(e!=null)return this.findLayer(e);if(t==null)throw new W("Provide either a layer name or layer index");if(typeof t=="number")return this.findLayer(t);for(const s of this.layers)if(s.name===t)return s;throw new W(`No such layer: ${t}`)}findLayer(t){if(this.layers.length<=t)throw new W(`Was asked to retrieve layer at index ${t}, but model only has ${this.layers.length} layer(s).`);return this.layers[t]}calculateLosses(){return tt(()=>{const t=[];for(const e of this.layers)for(let s=0;s<e.inboundNodes.length;++s){const i=di.nodeKey(e,s);this.containerNodes.has(i)&&t.push(...e.calculateLosses())}return t})}getConfig(){const t={name:this.name},e=this.buildNodeConversionMap(this.layers),s=[];for(const r of this.layers){const a=r.getClassName(),c=r.getConfig(),u=[];for(let d=0;d<r.inboundNodes.length;d++){const h=r.inboundNodes[d],f=di.nodeKey(r,d);let p={};if(this.containerNodes.has(f)){if(h.callArgs)try{JSON.stringify(h.callArgs),p=h.callArgs}catch{console.warn(`Layer ${r.name} was passed non-serializable keyword arguments: ${h.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),p={}}if(h.inboundLayers.length>0){const x=[];for(let g=0;g<h.inboundLayers.length;g++){const m=h.inboundLayers[g],y=h.nodeIndices[g],w=h.tensorIndices[g],b=di.nodeKey(m,y);let _=e[b];_==null&&(_=0),x.push([m.name,_,w,p])}u.push(x)}}}const l={};l.name=r.name,l.className=a,l.config=c,l.inboundNodes=u,s.push(l)}t.layers=s;const i=[];for(let r=0;r<this.inputLayers.length;r++){const a=this.inputLayers[r],c=this.inputLayersNodeIndices[r],u=di.nodeKey(a,c);if(!this.containerNodes.has(u))continue;let l=e[u];l==null&&(l=0);const d=this.inputLayersTensorIndices[r];i.push([a.name,l,d])}t.inputLayers=i;const o=[];for(let r=0;r<this.outputLayers.length;r++){const a=this.outputLayers[r],c=this.outputLayersNodeIndices[r],u=di.nodeKey(a,c);if(!this.containerNodes.has(u))continue;let l=e[u];l==null&&(l=0);const d=this.outputLayersTensorIndices[r];o.push([a.name,l,d])}return t.outputLayers=o,t}static fromConfig(t,e,s={},i=!1){const o={},r={};function a(g,m){g.name in r?r[g.name].push(m):r[g.name]=[m]}function c(g,m){const y=[];let w;for(const b of m){const _=b[0],T=b[1],E=b[2];if(w=b[3]==null?{}:b[3],!(_ in o)){a(g,m);return}const I=o[_];if(I.inboundNodes.length<=T){a(g,m);return}const S=I.inboundNodes[T];y.push(S.outputTensors[E])}y.length>0&&g.apply(ps(y),w)}function u(g){const m=g.name,y=ro(g,e.customObjects!=null?e.customObjects:{});y.setFastWeightInitDuringBuild(i),o[m]=y,g.inboundNodes.forEach(b=>{if(!(b instanceof Array))throw new W(`Corrupted configuration, expected array for nodeData: ${b}`);a(y,b)})}const l=e.name,d=e.layers;for(const g of d)u(g);for(;!KU(r);)for(const g of d){const m=o[g.name];if(m.name in r){const y=r[m.name];delete r[m.name];for(const w of y)c(m,w)}}const h=[],f=[],p=e.inputLayers;for(const g of p){const m=g[0],y=g[1],w=g[2];Ni(m in o);const _=o[m].inboundNodes[y].outputTensors;h.push(_[w])}const x=e.outputLayers;for(const g of x){const m=g[0],y=g[1],w=g[2];Ni(m in o);const _=o[m].inboundNodes[y].outputTensors;f.push(_[w])}return new t({inputs:h,outputs:f,name:l})}get stateful(){if(this._stateful)throw new W("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const t of this.layers)if(t.stateful)return!0;return!1}resetStates(){tt(()=>{this.layers.forEach(t=>{t.stateful&&t.resetStates()})})}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function h6(n,t,e){const s=t.length;if(n==null||Array.isArray(n)&&n.length===0)return t.map(i=>null);if(s===1)return Array.isArray(n)&&n.length===1?n:typeof n=="object"&&t[0]in n?[n[t[0]]]:[n];if(Array.isArray(n)){if(n.length!==s)throw new Error(`Provided ${e} is an array of ${n.length} element(s), but the model has ${s} outputs. Make sure a set of weights is provided for each model output.`);return n}else if(typeof n=="object"&&Object.keys(n).length>0&&typeof n[Object.keys(n)[0]]=="object"){const i=[];return t.forEach(o=>{o in n?i.push(n[o]):i.push(null)}),i}else throw new Error(`The model has multiple (${s}) outputs, so ${e} must be either an array with ${s} elements or an object with ${t} keys. Provided ${e} not understood: ${JSON.stringify(n)}`)}function lS(n,t){return h6(n,t,"classWeight")}async function dS(n,t,e,s){if(e!=null){const i=tt(()=>{if(n.shape.length===1)return _r(n);if(n.shape.length===2){if(n.shape[1]>1)return iu(n,1);if(n.shape[1]===1)return j(n,[n.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${n.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}else throw new Error(`Unexpected rank of target (y) tensor (${n.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)}),o=Array.from(await i.data());Ce(i);const r=[];return o.forEach(a=>{if(e[a]==null)throw new Error(`classWeight must contain all classes in the training data. The class ${a} exists in the data but not in classWeight`);r.push(e[a])}),Cs(r,"float32")}else return null}function f6(n,t){return z(n,t)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const p6=32;function hS(n,t){let e,s;const i=t;e=i.xs,s=i.ys,k(e!=null&&s!=null,()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${t}`);const o=xw("input",n.inputNames,e),r=xw("output",n.outputNames,s),a=o[0].shape[0];k(o.length===n.inputs.length,()=>`LayersModel has ${n.inputs.length} inputs, but the dataset provides ${o.length} inputs.  (Expected input keys: ${JSON.stringify(n.inputNames)})`),k(r.length===n.outputs.length,()=>`LayersModel has ${n.outputs.length} outputs, but the dataset provides ${r.length} outputs.  (Expected output keys: ${JSON.stringify(n.outputNames)})`);for(let c=0;c<o.length;c++)k(o[c].shape[0]===a,()=>`Batch size mismatch: input ${n.inputNames[c]} has ${o[c].shape[0]}; expected  ${a} based on input ${n.inputNames[0]}.`);for(let c=0;c<r.length;c++)k(r[c].shape[0]===a,()=>`Batch size mismatch: output ${n.outputNames[c]} has ${r[c].shape[0]}; expected  ${a} based on input ${n.inputNames[0]}.`);return{xs:o,ys:r}}function xw(n,t,e){if(e instanceof _n)return[e];if(Array.isArray(e))return k(e.length===t.length,()=>`Received an array of ${e.length} Tensors, but expected ${t.length} to match the ${n} keys ${t}.`),e;{const s=[];for(const i of t){if(e[i]==null)throw new W(`The feature data generated by the dataset lacks the required ${n} key '${i}'.`);s.push(e[i])}return s}}function m6(n){if(n.length===3)throw new me("Validation with sample weights is not implemented yet.");return{xs:n[0],ys:n[1]}}async function g6(n,t,e){const s=e.batchesPerEpoch!=null;if(k(n.optimizer!=null,()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig)."),k(e!=null,()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call."),k(e.epochs!=null&&e.epochs>0&&Number.isInteger(e.epochs),()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${e.epochs}`),k(!s||e.batchesPerEpoch>0&&Number.isInteger(e.batchesPerEpoch),()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${e.batchesPerEpoch}`),k(e.validationSplit==null,()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead."),n.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");n.isTraining=!0;try{const i=e.validationData!=null;let o,r;if(i)if(yw(e.validationData))k(e.validationBatches==null||e.validationBatches>0&&Number.isInteger(e.validationBatches),()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${e.validationBatches}`);else{const g=m6(e.validationData);o=g.xs,r=g.ys}const a=n.makeTrainFunction(),c=n.getDedupedMetricsNames();let u;i?u=c.slice().concat(c.map(g=>"val_"+g)):u=c.slice();const l=eS(e.callbacks,e.yieldEvery),d=e.verbose==null?1:e.verbose,{callbackList:h,history:f}=nS(l,d,e.epochs,null,null,x6(t,e),null,i,u);h.setModel(n),n.history=f,await h.onTrainBegin(),n.stopTraining_=!1;let p=e.initialEpoch==null?0:e.initialEpoch,x=await t.iterator();for(;p<e.epochs;){const g={};await h.onEpochBegin(p);let m=0,y=0;for(s||(x=await t.iterator());!s||m<e.batchesPerEpoch;){const w=await x.next();if(s&&w.done){console.warn(`You provided \`batchesPerEpoch\` as ${e.batchesPerEpoch}, but your dataset iterator ran out of data after ${m} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, ${e.batchesPerEpoch*e.epochs} batches). You may need to use the repeat() function when building your dataset.`);break}if(w.value!=null){const{xs:b,ys:_}=hS(n,w.value),T={};T.batch=y,T.size=b[0].shape[0],await h.onBatchBegin(y,T);const E=[];if(e.classWeight!=null){const v=lS(e.classWeight,n.outputNames);for(let C=0;C<v.length;++C)E.push(await dS(_[C],null,v[C]))}const I=b.concat(_).concat(E),S=a(I);Ce(I);for(let v=0;v<c.length;++v){const C=c[v],M=S[v];T[C]=M,rn(M)}await h.onBatchEnd(y,T),tS(T),y++,m++}if(s?m>=e.batchesPerEpoch:w.done){if(i){let b;yw(e.validationData)?b=Oe(await n.evaluateDataset(e.validationData,{batches:e.validationBatches})):b=Oe(n.evaluate(o,r,{batchSize:e.validationBatchSize==null?p6:e.validationBatchSize,verbose:0}));for(let _=0;_<n.metricsNames.length;++_)g[`val_${n.metricsNames[_]}`]=b[_]}break}if(n.stopTraining_)break}if(await h.onEpochEnd(p,g),p++,n.stopTraining_)break}return await h.onTrainEnd(),await n.history.syncData(),n.history}finally{n.isTraining=!1}}function x6(n,t){let e=null;return t.batchesPerEpoch!=null?e=t.batchesPerEpoch:Number.isFinite(n.size)&&(e=n.size),e}function yw(n){return typeof n.iterator=="function"}function y6(n){return typeof n.next=="function"}async function b6(n,t,e){e=e||{};const s=e.batches!=null,i=n.testFunction;let o=[];if(e.verbose>0)throw new me("Verbose mode is not implemented yet.");k(!s||e.batches>0&&Number.isInteger(e.batches),()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(e.batches)}`);const r=y6(t)?t:await t.iterator();let a=0,c=0;for(;!s||c<e.batches;){const u=await r.next();if(o=tt(()=>{if(u.value){const{xs:l,ys:d}=hS(n,u.value),h=l.concat(d),f=tt(()=>i(h));if(Ce(h),c===0)for(let x=0;x<f.length;++x)o.push(Ee(0));const p=h[0].shape[0];for(let x=0;x<f.length;++x){const g=f[x],m=o[x];o[x]=tt(()=>yt(o[x],z(p,g))),c>0&&Ce(m)}Ce(f),a+=p,++c}return o}),u.done){s&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${e.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let u=0;u<o.length;++u){const l=o[u];o[u]=Xt(o[u],a),Ce(l)}return ps(o)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function cm(n){k(n>0&&Number.isInteger(n),()=>`batchSize is required to be a positive integer, but got ${n}`)}function $c(n,t,e){return n==null?[null]:Array.isArray(n)?n.map(s=>Sr(s,t,e-t)):Sr(n,t,e-t)}function U0(n,t){return tt(()=>n==null?null:Array.isArray(n)?n.map(e=>U0(e,t)):BC(n,t.dtype==="int32"?t:Nt(t,"int32")))}function um(n,t){const e=[];let s=0,i=null;for(;s<n;)i=s+t,i>=n&&(i=n),e.push([s,i]),s=i;return e}function fS(n){const t=[];n instanceof _n&&(n=[n]);for(let e=0;e<n.length;++e){const s=n[e];if(s.rank===1)t.push(Il(s,1));else{if(s.rank===0)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");t.push(s)}}return t}function li(n,t){if(n==null)return;const e=[];if(t instanceof _n)e.push(t.id);else if(Array.isArray(t))t.forEach(i=>e.push(i.id));else if(t!=null)for(const i in t){const o=t[i];e.push(o.id)}const s=[];if(n instanceof _n)e.indexOf(n.id)===-1&&s.push(n);else if(Array.isArray(n))n.forEach(i=>{e.indexOf(i.id)===-1&&s.push(i)});else if(n!=null)for(const i in n){const o=n[i];e.indexOf(o.id)===-1&&s.push(o)}s.forEach(i=>{i.isDisposed||i.dispose()})}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function w6(n){return n instanceof _n}function B0(n){return Array.isArray(n)}function bw(n){return!w6(n)&&!B0(n)}function ww(n,t,e,s=!0,i=""){if(t==null||t.length===0){if(n!=null){let r=!1;if(B0(n)&&n.length>0)r=!0;else if(bw(n)){for(const a in n)if(n.hasOwnProperty(a)){r=!0;break}}else r=!0;if(r)throw new W(`Error when checking model ${i} expected no data, but got ${n}`)}return[]}if(n==null)return t.map(r=>null);let o;if(bw(n)){n=n,o=[];for(const r of t){if(n[r]==null)throw new W(`No data provided for "${r}". Need data for each key in: ${t}`);o.push(n[r])}}else if(B0(n)){if(n=n,n.length!==t.length)throw new W(`Error when checking model ${i}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${t.length} Tensor(s), but instead got the following list of Tensor(s): ${n}`);o=n}else{if(n=n,t.length>1)throw new W(`The model ${i} expects ${t.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${n.shape}`);o=[n]}if(o=fS(o),e!=null)for(let r=0;r<t.length;++r){if(e[r]==null)continue;const a=o[r];if(a.shape.length!==e[r].length)throw new W(`Error when checking ${i}: expected ${t[r]} to have ${e[r].length} dimension(s). but got array with shape ${a.shape}`);for(let c=0;c<e[r].length;++c){if(c===0&&!s)continue;const u=a.shape[c],l=e[r][c];if(l!=null&&l>=0&&u!==l)throw new W(`${i} expected a batch of elements where each example has shape [${e[r].slice(1,e[r].length)}] (i.e.,tensor shape [*,${e[r].slice(1,e[r].length)}]) but the ${i} received an input with ${a.shape[0]} examples, each with shape [${a.shape.slice(1,a.shape.length)}] (tensor shape [${a.shape}])`)}}return o}function v6(n,t,e){const s=$o(n.map(o=>o.shape[0]));s.sort();const i=$o(t.map(o=>o.shape[0]));if(i.sort(),s.length>1)throw new W(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(n.map(o=>o.shape))}`);if(i.length>1)throw new W(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(t.map(o=>o.shape))}`);if(s.length>0&&i.length>0&&!Pe(s,i))throw new W(`Input Tensors should have the same number of samples as target Tensors. Found ${s[0]} input sample(s) and ${i[0]} target sample(s).`)}function _6(n,t,e){const s=[sp,ip,uu];for(let i=0;i<n.length;++i){const o=n[i],r=t[i],a=e[i];if(r!=null){if(r===uu&&o.shape[o.shape.length-1]===1)throw new W(`You are passing a target array of shape ${o.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(s.indexOf(r)!==-1){const c=o.shape.slice(1),u=a.slice(1);for(let l=0;l<c.length;++l){const d=c[l],h=u[l];if(h!=null&&d!==h)throw new W(`A target Tensor with shape ${o.shape} was passed for an output of shape ${a}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}function vw(n,t,e,s=!0,i=""){let o;if(Array.isArray(n)){if(n.length!==t.length)throw new W(`Error when checking model ${i}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${t.length} Tensor(s), but instead got ${n.length} Tensors(s).`);o=n}else{if(t.length>1)throw new W(`The model expects ${t.length} ${i} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(n.shape)}.`);o=[n]}if(e!=null)for(let r=0;r<t.length;++r){if(e[r]==null)continue;const a=o[r];if(a.shape.length!==e[r].length)throw new W(`Error when checking ${i}: expected ${t[r]} to have ${e[r].length} dimension(s), but got array with shape ${JSON.stringify(a.shape)}`);for(let c=0;c<e[r].length;++c){if(c===0&&!s)continue;const u=a.shape[c],l=e[r][c];if(l!=null&&l!==u)throw new W(`Error when checking ${i}: expected ${t[r]} to have shape ${JSON.stringify(e[r])} but got array with shape ${JSON.stringify(a.shape)}.`)}}}function C6(n,t){if(n==null||Array.isArray(n)&&n.length===0)return t.map(s=>[]);let e;if(typeof n=="string"||typeof n=="function")e=[n];else if(Array.isArray(n)||typeof n=="object")e=n;else throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${n}`);if(Array.isArray(e))return t.map(s=>e);{const s=[];for(const i of t){let o=e.hasOwnProperty(i)?e[i]:[];Array.isArray(o)||(o=[o]),s.push(o)}return s}}const S6="layers-model";class Pa extends di{constructor(t){super(t),this.isTraining=!1}summary(t,e,s=console.log){if(!this.built)throw new W("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");r6(this,t,e,s)}compile(t){if(t.loss==null&&(t.loss=[]),this.loss=t.loss,typeof t.optimizer=="string")this.optimizer_=o6(t.optimizer),this.isOptimizerOwned=!0;else{if(!(t.optimizer instanceof Ko))throw new W("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=t.optimizer,this.isOptimizerOwned=!1}let e=[];if(!Array.isArray(t.loss)&&typeof t.loss!="string"&&typeof t.loss!="function"){t.loss=t.loss;for(const r in t.loss)if(this.outputNames.indexOf(r)===-1)throw new W(`Unknown entry in loss dictionary: "${r}". Only expected the following keys: ${this.outputNames}`);for(const r of this.outputNames)t.loss[r]==null&&console.warn(`Output "${r}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${r} during training`),e.push(am(t.loss[r]))}else if(Array.isArray(t.loss)){if(t.loss.length!==this.outputs.length)throw new W(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${t.loss}.`);e=t.loss.map(a=>am(a))}else{const r=am(t.loss);this.outputs.forEach(a=>{e.push(r)})}this.lossFunctions=e,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let r=0;r<this.outputs.length;++r){const a=this.internalOutputShapes[r],c=this.outputNames[r];this.feedOutputNames.push(c),this.feedOutputShapes.push(a),this.feedLossFns.push(this.lossFunctions[r])}const s=[];this.metrics=t.metrics,this.metricsNames=["loss"],this.metricsTensors=[],Cr("loss",()=>{for(let r=0;r<this.outputs.length;++r){if(s.indexOf(r)!==-1)continue;const a=this.lossFunctions[r];this.outputs.length>1&&(this.metricsTensors.push([a,r]),this.metricsNames.push(this.outputNames[r]+"_loss"))}});const i=C6(t.metrics,this.outputNames),o=(r,a,c)=>{this.outputNames.length>1&&(a=this.outputNames[r]+"_"+a),this.metricsNames.push(a),this.metricsTensors.push([c,r])};Cr("metric",()=>{for(let r=0;r<this.outputs.length;++r){if(s.indexOf(r)!==-1)continue;const a=i[r];(u=>{const l="";let d,h,f;for(const p of u){if(typeof p=="string"&&["accuracy","acc","crossentropy","ce"].indexOf(p)!==-1){const g=this.internalOutputShapes[r];g[g.length-1]===1||this.lossFunctions[r]===ip?["accuracy","acc"].indexOf(p)!==-1?h=iS:["crossentropy","ce"].indexOf(p)!==-1&&(h=KB):this.lossFunctions[r]===hh?["accuracy","acc"].indexOf(p)!==-1?h=YB:["crossentropy","ce"].indexOf(p)!==-1&&(h=aS):["accuracy","acc"].indexOf(p)!==-1?h=oS:["crossentropy","ce"].indexOf(p)!==-1&&(h=rS);let m;["accuracy","acc"].indexOf(p)!==-1?m="acc":["crossentropy","ce"].indexOf(p)!==-1&&(m="ce"),f=h,d=l+m}else f=i6(p),d=l+xd(p);let x;Cr(d,()=>{x=f}),o(r,d,x)}})(a)}}),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){this.collectedTrainableWeights!=null&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(t,e,s={}){const i=s.batchSize==null?32:s.batchSize;cm(i);const r=this.standardizeUserDataXY(t,e,!0,i);try{const a=r[0].concat(r[1]);this.makeTestFunction();const c=this.testFunction,u=this.testLoop(c,a,i,s.verbose,s.steps);return ps(u)}finally{li(r[0],t),li(r[1],e)}}async evaluateDataset(t,e){return this.makeTestFunction(),b6(this,t,e)}checkNumSamples(t,e,s,i="steps"){let o;if(s!=null){if(o=null,e!=null)throw new W(`If ${i} is set, batchSize must be null or undefined.Got batchSize = ${e}`)}else if(t!=null)Array.isArray(t)?o=t[0].shape[0]:o=t.shape[0];else throw new W(`Either the input data should have a defined shape, or ${i} shoud be specified.`);return o}execute(t,e){if(Array.isArray(e)&&e.length===0)throw new W("`outputs` is an empty Array, which is not allowed.");const s=Array.isArray(e),i=s?e:[e],o=this.retrieveSymbolicTensors(i),r=new Io;if(t instanceof _n&&(t=[t]),Array.isArray(t)){if(t.length!==this.inputs.length)throw new W(`The number of inputs provided (${t.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let c=0;c<this.inputs.length;++c)r.add(this.inputs[c],t[c])}else for(const c of this.inputs){const u=t[c.name];if(u==null)throw new W(`No value is provided for the model's input ${c.name}`);r.add(c,u)}const a=Bc(o,r);return s?a:a[0]}retrieveSymbolicTensors(t){const e=Or(null,t.length);let s=t.length;for(const i of this.layers){const o=Array.isArray(i.output)?i.output:[i.output],r=o.map(a=>a.name);for(let a=0;a<t.length;++a){const c=r.indexOf(t[a]);if(c!==-1&&(e[a]=o[c],s--),s===0)break}if(s===0)break}if(s>0){const i=[];throw e.forEach((o,r)=>{o==null&&i.push(t[r])}),new W(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(i)}`)}return e}predictLoop(t,e=32,s=!1){return tt(()=>{const i=this.checkNumSamples(t);if(s)throw new me("Verbose predictLoop() is not implemented yet.");const o=um(i,e),r=this.outputs.map(a=>[]);for(let a=0;a<o.length;++a)tt(()=>{const u=o[a][0],l=o[a][1],d=$c(t,u,l),h=[];if(Array.isArray(d))for(let p=0;p<d.length;++p)h.push({key:this.inputs[p],value:d[p]});else h.push({key:this.inputs[0],value:d});const f=new Io(h);return Bc(this.outputs,f)}).forEach((u,l)=>r[l].push(u));return ps(r.map(a=>Xn(a,0)))})}predict(t,e={}){const s=fS(t);vw(s,this.inputNames,this.feedInputShapes,!1);try{const i=e.batchSize==null?32:e.batchSize;return cm(i),this.predictLoop(s,i)}finally{li(s,t)}}predictOnBatch(t){vw(t,this.inputNames,this.feedInputShapes,!0);const e=(Array.isArray(t)?t[0]:t).shape[0];return this.predictLoop(t,e)}standardizeUserDataXY(t,e,s=!0,i){if(this.optimizer_==null)throw new Ys("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const o=[];for(let r=0;r<this.feedOutputShapes.length;++r){const a=this.feedOutputShapes[r];this.feedLossFns[r]===hh?o.push(a.slice(0,a.length-1).concat([1])):o.push(a)}if(t=ww(t,this.feedInputNames,this.feedInputShapes,!1,"input"),e=ww(e,this.feedOutputNames,o,!1,"target"),v6(t,e),_6(e,this.feedLossFns,this.feedOutputShapes),this.stateful&&i!=null&&i>0&&t[0].shape[0]%i!==0)throw new W(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${i}. Found: ${t[0].shape[0]} sample(s).`);return[t,e]}async standardizeUserData(t,e,s,i,o=!0,r){const[a,c]=this.standardizeUserDataXY(t,e,o,r);if(s!=null)throw new Error("sample weight is not supported yet.");let u=null;if(i!=null){const l=lS(i,this.outputNames);u=[];for(let d=0;d<l.length;++d)u.push(await dS(c[d],null,l[d]))}return[a,c,u]}testLoop(t,e,s,i=0,o){return tt(()=>{const r=this.checkNumSamples(e,s,o,"steps"),a=[];if(i>0)throw new me("Verbose mode is not implemented yet.");if(o!=null)throw new me("steps mode in testLoop() is not implemented yet");{const c=um(r,s),u=Cs(Ci(0,r));for(let l=0;l<c.length;++l){const d=c[l][0],h=c[l][1],f=Sr(u,d,h-d),p=U0(e,f),x=t(p);if(l===0)for(let g=0;g<x.length;++g)a.push(Ee(0));for(let g=0;g<x.length;++g){const m=x[g];a[g]=yt(a[g],z(h-d,m))}}for(let l=0;l<a.length;++l)a[l]=Xt(a[l],r)}return a})}getDedupedMetricsNames(){const t=this.metricsNames,e=[];for(let s=0;s<t.length;++s){const i=t[s];let o=i;if(ow(t,i)>1){const r=ow(t.slice(0,s),i);o+=`_${r}`}e.push(o)}return e}makeTrainFunction(){return t=>{const e=[],s=t.slice(0,this.inputs.length),i=t.slice(this.inputs.length,this.inputs.length+this.outputs.length),o=t.slice(this.inputs.length+this.outputs.length,this.inputs.length+this.outputs.length*2),r=[],a=()=>{const d=[];for(let x=0;x<this.inputs.length;++x)d.push({key:this.inputs[x],value:s[x]});const h=new Io(d),f=Bc(this.outputs,h,{training:!0});let p;for(let x=0;x<this.lossFunctions.length;++x){const g=this.lossFunctions[x];let m=g(i[x],f[x]);o[x]!=null&&(m=f6(m,o[x]));const y=bn(m);e.push(y),x===0?p=m:p=yt(p,m)}for(let x=0;x<this.metricsTensors.length;++x){let g;if(this.outputs.length>1&&x<this.outputs.length)g=e[x];else{const m=this.metricsTensors[x][0],y=this.metricsTensors[x][1];g=bn(m(i[y],f[y]))}rn(g),r.push(g)}return p=bn(p),this.calculateLosses().forEach(x=>{p=yt(p,x)}),p},c=this.collectedTrainableWeights.map(d=>d.read());return[this.optimizer_.minimize(a,!0,c)].concat(r)}}makeTestFunction(){this.testFunction=t=>tt(()=>{const e=[];let s;const i=t.slice(0,this.inputs.length),o=t.slice(this.inputs.length,this.inputs.length+this.outputs.length),r=[];for(let u=0;u<this.inputs.length;++u)r.push({key:this.inputs[u],value:i[u]});const a=new Io(r),c=Bc(this.outputs,a);for(let u=0;u<this.lossFunctions.length;++u){const l=this.lossFunctions[u],d=bn(l(o[u],c[u]));u===0?s=d:s=yt(s,d),e.push(s)}for(let u=0;u<this.metricsTensors.length;++u){const l=this.metricsTensors[u][0],d=this.metricsTensors[u][1],h=bn(l(o[d],c[d]));e.push(h)}return e})}async fit(t,e,s={}){if(this.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");this.isTraining=!0;let i,o,r,a,c,u,l,d,h;try{const f=s.batchSize==null?32:s.batchSize;cm(f);const x=await this.standardizeUserData(t,e,s.sampleWeight,s.classWeight,!1,f);i=x[0],o=x[1],h=x[2];let g=!1,m;if(s.validationData!=null&&s.validationData.length>0){if(g=!0,s.validationData.length===2)c=s.validationData[0],u=s.validationData[1];else throw s.validationData.length===3?new me("validationData including sample weights is not supported yet."):new W(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${s.validationData} is invalid.`);const v=await this.standardizeUserData(c,u,null,null,!0,f);l=v[0],d=v[1],m=l.concat(d)}else if(s.validationSplit!=null&&s.validationSplit>0&&s.validationSplit<1){g=!0;const S=Math.floor(i[0].shape[0]*(1-s.validationSplit)),v=i[0].shape[0];l=$c(i,S,v),r=i,i=$c(i,0,S),d=$c(o,S,v),a=o,o=$c(o,0,S),m=l.concat(d)}else s.validationSteps!=null&&(g=!0);const y=i.concat(o).concat(h);this.checkTrainableWeightsConsistency();const w=this.makeTrainFunction(),b=this.getDedupedMetricsNames();let _,T;g?(this.makeTestFunction(),_=this.testFunction,T=b.slice().concat(b.map(S=>"val_"+S))):(_=null,m=[],T=b.slice());const E=eS(s.callbacks,s.yieldEvery);return await this.fitLoop(w,y,b,f,s.epochs,s.verbose,E,_,m,s.shuffle,T,s.initialEpoch,null,null)}finally{this.isTraining=!1,li(i,t),li(o,e),li(r,t),li(a,e),li(l,c),li(d,u),h!=null&&Ce(h)}}async fitLoop(t,e,s,i,o,r,a,c,u,l,d,h,f,p){i==null&&(i=32),o==null&&(o=1),l==null&&(l=!0),h==null&&(h=0);let x=!1;if(c!=null&&u!=null&&(x=!0),p!=null&&(x=!0,f==null))throw new W("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");const g=this.checkNumSamples(e,i,f,"steps_per_epoch");let m;g!=null&&(m=Ci(0,g)),r==null&&(r=1);const{callbackList:y,history:w}=nS(a,r,o,h,g,f,i,x,d);y.setModel(this),this.history=w,await y.onTrainBegin(),this.stopTraining_=!1;for(let b=h;b<o;++b){await y.onEpochBegin(b);const _={};if(f!=null)throw new me("stepsPerEpoch mode is not implemented yet.");{if(l==="batch")throw new me("batch shuffling is not implemneted yet");l&&r9(m);const T=Cs(m),E=um(g,i);for(let I=0;I<E.length;++I){const S={};if(await y.onBatchBegin(I,S),tt(()=>{const v=E[I][0],C=E[I][1],M=Sr(T,v,C-v);S.batch=I,S.size=C-v;const N=U0(e,M),D=t(N);for(let $=0;$<s.length;++$){const F=s[$],B=D[$];S[F]=B,rn(B)}if(I===E.length-1&&x){const $=this.testLoop(c,u,i);for(let F=0;F<s.length;++F){const B=s[F],P=$[F];rn(P),_["val_"+B]=P}}}),await y.onBatchEnd(I,S),tS(S),this.stopTraining_)break}T.dispose()}if(await y.onEpochEnd(b,_),this.stopTraining_)break}return await y.onTrainEnd(),await this.history.syncData(),this.history}async fitDataset(t,e){return g6(this,t,e)}async trainOnBatch(t,e){const s=await this.standardizeUserData(t,e),i=s[0],o=s[1],a=this.makeTrainFunction()(i.concat(o)),c=[];for(const u of a){const l=await u.data();c.push(l[0])}return Ce(a),li(s[0],t),li(s[1],e),ps(c)}getNamedWeights(t){const e=[],s=t!=null&&t.trainableOnly,i=s?this.trainableWeights:this.weights,o=this.getWeights(s);for(let r=0;r<i.length;++r)s&&!i[r].trainable||e.push({name:i[r].originalName,tensor:o[r]});return e}set stopTraining(t){this.stopTraining_=t}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(t){this.optimizer_!==t&&(this.optimizer_=t,this.isOptimizerOwned=!1)}dispose(){const t=super.dispose();if(t.refCountAfterDispose===0&&this.optimizer!=null&&this.isOptimizerOwned){const e=Db().numTensors;this.optimizer_.dispose(),t.numDisposedVariables+=e-Db().numTensors}return t}getLossIdentifiers(){let t;if(typeof this.loss=="string")t=to(this.loss);else if(Array.isArray(this.loss)){for(const e of this.loss)if(typeof e!="string")throw new Error("Serialization of non-string loss is not supported.");t=this.loss.map(e=>to(e))}else{const e=Object.keys(this.loss);t={};const s=this.loss;for(const i of e)if(typeof s[i]=="string")t[i]=to(s[i]);else throw new Error("Serialization of non-string loss is not supported.")}return t}getMetricIdentifiers(){if(typeof this.metrics=="string"||typeof this.metrics=="function")return[to(xd(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map(t=>to(xd(t)));{const t={};for(const e in this.metrics)t[e]=to(xd(this.metrics[e]));return t}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(t){if(t.weighted_metrics!=null)throw new Error("Loading weight_metrics is not supported yet.");if(t.loss_weights!=null)throw new Error("Loading loss_weights is not supported yet.");if(t.sample_weight_mode!=null)throw new Error("Loading sample_weight_mode is not supported yet.");const e=L0(t.optimizer_config),s=ro(e);let i;if(typeof t.loss=="string")i=pr(t.loss);else if(Array.isArray(t.loss))i=t.loss.map(r=>pr(r));else if(t.loss!=null){i={};for(const r in t.loss)i[r]=pr(t.loss[r])}let o;if(Array.isArray(t.metrics))o=t.metrics.map(r=>pr(r));else if(t.metrics!=null){o={};for(const r in t.metrics)o[r]=pr(t.metrics[r])}this.compile({loss:i,metrics:o,optimizer:s})}async save(t,e){if(typeof t=="string"){const u=s4(t);if(u.length===0)throw new W(`Cannot find any save handlers for URL '${t}'`);if(u.length>1)throw new W(`Found more than one (${u.length}) save handlers for URL '${t}'`);t=u[0]}if(t.save==null)throw new W("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const s=await Fb(this.getNamedWeights(e)),a={modelTopology:this.toJSON(null,!1),format:S6,generatedBy:`TensorFlow.js tfjs-layers v${uS}`,convertedBy:null};if((e==null?!1:e.includeOptimizer)&&this.optimizer!=null){a.trainingConfig=this.getTrainingConfig();const u="optimizer",{data:l,specs:d}=await Fb(await this.optimizer.getWeights(),u);s.specs.push(...d),s.data=n4([s.data,l])}return this.userDefinedMetadata!=null&&(gw(this.userDefinedMetadata,this.name,!0),a.userDefinedMetadata=this.userDefinedMetadata),a.weightData=s.data,a.weightSpecs=s.specs,t.save(a)}setUserDefinedMetadata(t){gw(t,this.name),this.userDefinedMetadata=t}getUserDefinedMetadata(){return this.userDefinedMetadata}}Pa.className="Model";xt(Pa);class pS extends Pa{}pS.className="Functional";xt(pS);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class lu extends Pa{constructor(t){if(super({inputs:[],outputs:[]}),t=t||{},this.trainable=!0,this.built=!1,this.name=t.name!=null?t.name:tp("sequential_"),t.layers!=null)for(const e of t.layers)this.add(e)}checkShape(t){if(t.inboundNodes[0].outputTensors[0].shape.some(s=>s<0))throw new W(`Negative dimension size caused by adding layer ${t.name} with input shape [${t.inboundNodes[0].inputTensors[0].shape}]`)}add(t){const e=t instanceof lu||t instanceof Pa;let s;if(e){if(s=t,s.outputs.length!==1)throw new W("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(s.inputs.length!==1)throw new W("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(this.outputs.length===0){if(t.inboundNodes.length===0){if(t.batchInputShape==null)throw new W("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const i=EB({batchShape:t.batchInputShape,dtype:t.dtype,name:t.name+"_input"});t.apply(i)}if(e)this.outputs=s.outputs,this.inputs=s.inputs;else{if(t.inboundNodes.length!==1)throw new W(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${t.name} which has ${t.inboundNodes.length} pre-existing inbound connections.`);if(t.inboundNodes[0].outputTensors.length!==1)throw new W("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(t),this.outputs=[t.inboundNodes[0].outputTensors[0]],this.inputs=KC(this.outputs[0])}this.inboundNodes=[],new np({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:Or(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map(i=>i.shape),outputShapes:this.outputs[0].shape})}else{const i=t.apply(this.outputs[0]);if(Array.isArray(i))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(t),this.outputs=[i],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(t),this.built=!1}pop(){if(this.layers.length===0)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),this.layers.length===0)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const t=this.layers.length-1;this.layers[t].outboundNodes=[],this.outputs=[this.layers[t].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(t,e){return this.model==null&&this.build(),this.model.call(t,e)}build(t){if(Ne(t),this.inputs.length===0||this.outputs.length===0)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new Pa({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(t,e,s=console.log){this.built||this.build(),super.summary(t,e,s)}setWeights(t){this.model==null&&this.build(),this.model.setWeights(t)}evaluate(t,e,s={}){if(!this.built)throw new Ys("The model needs to be compiled before being used.");return this.model.evaluate(t,e,s)}async evaluateDataset(t,e){if(!this.built)throw new Ys("The model needs to be compiled before being used.");return this.model.evaluateDataset(t,e)}predict(t,e={}){return this.model==null&&this.build(),this.model.predict(t,e)}predictOnBatch(t){return this.model==null&&this.build(),this.model.predictOnBatch(t)}compile(t){this.build(),this.model.compile(t),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return this.model==null?void 0:this.model.optimizer}set optimizer(t){this.model.optimizer=t}async fit(t,e,s={}){if(!this.built)throw new Ys("The model needs to be compiled before being used.");return this.model.fit(t,e,s)}async fitDataset(t,e){if(!this.built)throw new Ys("The model needs to be compiled before being used.");return this.model.fitDataset(t,e)}async trainOnBatch(t,e){return this.model.trainOnBatch(t,e)}static fromConfig(t,e,s={},i=!1){let o,r={};if(e instanceof Array){if(e[0].className==null||e[0].className==="Merge")throw new W("Legacy serialization format not supported yet.");o=e}else k(e.layers!=null,()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field."),o=e.layers,delete e.layers,r=e;const a=new t(r);if(!(a instanceof lu))throw new me(`Sequential.fromConfig called on non-Sequential input: ${a}`);for(const c of o){const l=ro(c,void 0,i);i&&l.setFastWeightInitDuringBuild(!0),a.add(l)}return a}set stopTraining(t){if(this.model==null)throw new W("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=t}get stopTraining(){if(this.model==null)throw new W("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const t=[];for(const e of this.layers){const s={};s.className=e.getClassName(),s.config=e.getConfig(),t.push(s)}return{name:this.name,layers:t}}}lu.className="Sequential";xt(lu);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */let Zn=class extends pc{getConfig(){return{}}};class mS extends Zn{apply(t,e=1){return lB(t,e)}}mS.className="elu";xt(mS);class gS extends Zn{apply(t){return D_(t)}}gS.className="selu";xt(gS);class xS extends Zn{apply(t){return Xr(t)}}xS.className="relu";xt(xS);class yS extends Zn{apply(t){return tt(()=>Do(6,Xr(t)))}}yS.className="relu6";xt(yS);class bS extends Zn{apply(t){return t}}bS.className="linear";xt(bS);class wS extends Zn{apply(t){return dc(t)}}wS.className="sigmoid";xt(wS);class vS extends Zn{apply(t){return hB(t)}}vS.className="hardSigmoid";xt(vS);class _S extends Zn{apply(t){return bl(t)}}_S.className="softplus";xt(_S);class CS extends Zn{apply(t){return dB(t)}}CS.className="softsign";xt(CS);class SS extends Zn{apply(t){return Gf(t)}}SS.className="tanh";xt(SS);let Ox=class extends Zn{apply(t,e=-1){return zg(t,e)}};Ox.className="softmax";xt(Ox);class TS extends Zn{apply(t,e=-1){return T_(t,e)}}TS.className="logSoftmax";xt(TS);class ES extends Zn{apply(t){return tt(()=>tt(()=>{const e=Math.sqrt(2),s=z(.5,yt(1,w_(Xt(t,e))));return z(t,s)}))}}ES.className="gelu";xt(ES);class IS extends Zn{apply(t){return tt(()=>z(.5,z(t,yt(1,Gf(z(Kn(Xt(2,Math.PI)),yt(t,z(.044715,Fr(t,3)))))))))}}IS.className="gelu_new";xt(IS);class RS extends Zn{apply(t){return tt(()=>z(t,Gf(bl(t))))}}RS.className="mish";xt(RS);class MS extends Zn{apply(t,e=1){return tt(()=>z(dc(z(t,e)),t))}}MS.className="swish";xt(MS);function Uo(n){return n.getClassName()}function lm(n,t={}){return El(n,js.getMap().classNameMap,t,"activation")}function Bo(n){if(n==null){const t={};return t.className="linear",t.config={},lm(t)}if(typeof n=="string"){const t={};return t.className=n,t.config={},lm(t)}else return n instanceof Zn?n:lm(n)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function T6(n){if(n!=null&&typeof n!="object")throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${n}`)}class AS extends pc{}class NS extends AS{constructor(t){super(),T6(t),this.l1=t==null||t.l1==null?.01:t.l1,this.l2=t==null||t.l2==null?.01:t.l2,this.hasL1=this.l1!==0,this.hasL2=this.l2!==0}apply(t){return tt(()=>{let e=en([1]);return this.hasL1&&(e=yt(e,Yt(z(this.l1,ns(t))))),this.hasL2&&(e=yt(e,Yt(z(this.l2,Rl(t))))),j(e,[])})}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(t,e){return new t({l1:e.l1,l2:e.l2})}}NS.className="L1L2";xt(NS);const _w={l1l2:"L1L2"};function je(n){return Sx(n)}function Cw(n,t={}){return El(n,js.getMap().classNameMap,t,"regularizer")}function sn(n){if(n==null)return null;if(typeof n=="string"){const e={className:n in _w?_w[n]:n,config:{}};return Cw(e)}else return n instanceof AS?n:Cw(n)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class kS extends _e{constructor(t){super(t??{}),this.supportsMasking=!0,t!=null&&(this.maxValue=t.maxValue)}call(t,e){t=ie(t);let s=Xr(t);return this.maxValue!=null&&(s=Fs(s,0,this.maxValue)),s}computeOutputShape(t){return t}getConfig(){const t={maxValue:this.maxValue},e=super.getConfig();return Object.assign(t,e),t}}kS.className="ReLU";xt(kS);class DS extends _e{constructor(t){super(t??{}),this.DEFAULT_ALPHA=.3,t==null&&(t={}),this.alpha=t.alpha==null?this.DEFAULT_ALPHA:t.alpha}call(t,e){const s=ie(t);return Ng(s,this.alpha)}computeOutputShape(t){return t}getConfig(){const t={alpha:this.alpha},e=super.getConfig();return Object.assign(t,e),t}}DS.className="LeakyReLU";xt(DS);class $S extends _e{constructor(t){if(super(t??{}),this.DEFAULT_ALPHA_INITIALIZER="zeros",t==null&&(t={}),this.supportsMasking=!0,this.alphaInitializer=nn(t.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=sn(t.alphaRegularizer),this.alphaConstraint=En(t.alphaConstraint),t.sharedAxes==null)this.sharedAxes=null;else if(Array.isArray(t.sharedAxes))this.sharedAxes=t.sharedAxes;else if(typeof t.sharedAxes=="number")this.sharedAxes=[t.sharedAxes];else throw new W(`Expected sharedAxes to be a number or an array of numbers, but got ${t.sharedAxes}`)}build(t){t=Ne(t);const e=t.slice(1);if(this.sharedAxes!=null)for(const i of this.sharedAxes)e[i-1]=1;this.alpha=this.addWeight("alpha",e,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const s={};if(this.sharedAxes!=null)for(let i=1;i<t.length;++i)s[i]=t[i];this.inputSpec=[new Sn({ndim:t.length,axes:s})],this.built=!0}call(t,e){return t=ie(t),Lg(t,this.alpha.read())}getConfig(){const t={alphaInitializer:an(this.alphaInitializer),alphaRegularizer:je(this.alphaRegularizer),alphaConstraint:Tn(this.alphaConstraint),sharedAxes:this.sharedAxes},e=super.getConfig();return Object.assign(t,e),t}}$S.className="PReLU";xt($S);let FS=class extends _e{constructor(t){if(super(t??{}),this.DEFAULT_ALPHA=1,t==null&&(t={}),t.alpha!=null&&t.alpha!==this.DEFAULT_ALPHA)throw new me(`Non-default alpha value (${t.alpha}) is not supported by the ELU layer yet.`);this.alpha=t.alpha==null?this.DEFAULT_ALPHA:t.alpha}call(t,e){const s=ie(t);return qf(s)}computeOutputShape(t){return t}getConfig(){const t={alpha:this.alpha},e=super.getConfig();return Object.assign(t,e),t}};FS.className="ELU";xt(FS);class PS extends _e{constructor(t){super(t??{}),this.DEFAULT_THETA=1,t==null&&(t={}),this.theta=t.theta==null?this.DEFAULT_THETA:t.theta}call(t,e){const s=ie(t);return z(s,Nt(as(s,this.theta),"float32"))}computeOutputShape(t){return t}getConfig(){const t={theta:this.theta},e=super.getConfig();return Object.assign(t,e),t}}PS.className="ThresholdedReLU";xt(PS);class LS extends _e{constructor(t){super(t??{}),this.DEFAULT_AXIS=1,t==null&&(t={}),this.softmax=new Ox().apply,this.axis=t.axis==null?this.DEFAULT_AXIS:t.axis}call(t,e){return tt(()=>{let s=ie(t);const i=e.mask;if(i!=null){const o=z(ee(jo(s.shape),Nt(i,s.dtype)),Ee(-1e9));s=yt(s,o)}return this.axis instanceof Array?this.axis.length>1?ti(ee(s,E_(s,this.axis,!0))):this.softmax(s,this.axis[0]):this.softmax(s,this.axis)})}computeOutputShape(t){return t}getConfig(){const t={axis:this.axis},e=super.getConfig();return Object.assign(t,e),t}}LS.className="Softmax";xt(LS);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function La(n,t,e){if(typeof n=="number")return Or(n,t);if(n.length!==t)throw new W(`The ${e} argument must be an integer or tuple of ${t} integers. Received: ${n.length} elements.`);for(let s=0;s<t;++s){const i=n[s];if(!rB(i))throw new W(`The ${e} argument must be an integer or tuple of ${t} integers. Received: ${JSON.stringify(n)} including a non-integer number ${i}`)}return n}function wi(n,t,e,s,i=1){if(n==null)return n;const o=t+(t-1)*(i-1);let r;return e==="same"?r=n:r=n-o+1,Math.floor((r+s-1)/s)}function ki(n,t,e,s){if(n==null)return null;if(s==="valid")n=n*t+Oo([e-t,0]);else if(s==="same")n=n*t;else throw new W(`Unsupport padding mode: ${s}.`);return n}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Ux(n,t){return tt(()=>(gn(t),t==="channelsFirst"?Re(n,[0,2,3,1]):n))}function OS(n,t){return tt(()=>(gn(t),t==="channelsFirst"?Re(n,[0,2,3,4,1]):n))}function E6(n,t,e,s=1,i="valid",o,r=1){return tt(()=>{if(o==null&&(o=Si()),gn(o),n.shape.length!==3)throw new W(`The input of a conv1dWithBias operation should be 3, but is ${n.shape.length} instead.`);if(t.shape.length!==3)throw new W(`The kernel for a conv1dWithBias operation should be 3, but is ${t.shape.length} instead`);if(e!=null&&e.shape.length!==1)throw new W(`The bias for a conv1dWithBias operation should be 1, but is ${e.shape.length} instead`);if(o==="channelsFirst"&&(n=Re(n,[0,2,1])),i==="causal")throw new me("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let a=m_(n,t,s,i==="same"?"same":"valid","NWC",r);return e!=null&&(a=Ei(a,e)),a})}function Sw(n,t,e,s=[1,1],i="valid",o,r,a=null){return tt(()=>{if(o==null&&(o=Si()),gn(o),n.rank!==3&&n.rank!==4)throw new W(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${n.rank}.`);if(t.rank!==3&&t.rank!==4)throw new W(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${n.rank}.`);let c=Ux(n,o);if(i==="causal")throw new me("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return c=FL({x:c,filter:t,strides:s,pad:i==="same"?"same":"valid",dilations:r,dataFormat:"NHWC",bias:e,activation:a}),o==="channelsFirst"&&(c=Re(c,[0,3,1,2])),c})}function I6(n,t,e,s=[1,1,1],i="valid",o,r){return tt(()=>{if(o==null&&(o=Si()),gn(o),n.rank!==4&&n.rank!==5)throw new W(`conv3dWithBias expects input to be of rank 4 or 5, but received ${n.rank}.`);if(t.rank!==4&&t.rank!==5)throw new W(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${n.rank}.`);let a=OS(n,o);if(i==="causal")throw new me("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return a=D$(a,t,s,i==="same"?"same":"valid","NDHWC",r),e!=null&&(a=Ei(a,e)),o==="channelsFirst"&&(a=Re(a,[0,4,1,2,3])),a})}class op extends _e{constructor(t,e){if(super(e),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",op.verifyArgs(e),this.rank=t,Nn(this.rank,"rank"),this.rank!==1&&this.rank!==2&&this.rank!==3)throw new me(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=La(e.kernelSize,t,"kernelSize"),this.strides=La(e.strides==null?1:e.strides,t,"strides"),this.padding=e.padding==null?"valid":e.padding,Ls(this.padding),this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,gn(this.dataFormat),this.activation=Bo(e.activation),this.useBias=e.useBias==null?!0:e.useBias,this.biasInitializer=nn(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=En(e.biasConstraint),this.biasRegularizer=sn(e.biasRegularizer),this.activityRegularizer=sn(e.activityRegularizer),this.dilationRate=La(e.dilationRate==null?1:e.dilationRate,t,"dilationRate"),this.rank===1&&Array.isArray(this.dilationRate)&&this.dilationRate.length!==1)throw new W(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(this.rank===2){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==2)throw new W(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(this.rank===3){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==3)throw new W(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}}static verifyArgs(t){if(Ni("kernelSize"in t,"required key 'kernelSize' not in config"),typeof t.kernelSize!="number"&&!Tx(t.kernelSize,"number",1,3))throw new W(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(t.kernelSize)}.`)}getConfig(){const t={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:Uo(this.activation),useBias:this.useBias,biasInitializer:an(this.biasInitializer),biasRegularizer:je(this.biasRegularizer),activityRegularizer:je(this.activityRegularizer),biasConstraint:Tn(this.biasConstraint)},e=super.getConfig();return Object.assign(t,e),t}}class mc extends op{constructor(t,e){super(t,e),this.kernel=null,mc.verifyArgs(e),this.filters=e.filters,Nn(this.filters,"filters"),this.kernelInitializer=nn(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=En(e.kernelConstraint),this.kernelRegularizer=sn(e.kernelRegularizer)}build(t){t=Ne(t);const e=this.dataFormat==="channelsFirst"?1:t.length-1;if(t[e]==null)throw new W(`The channel dimension of the input should be defined. Found ${t[e]}`);const s=t[e],i=this.kernelSize.concat([s,this.filters]);this.kernel=this.addWeight("kernel",i,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[e]:s}}],this.built=!0}call(t,e){return tt(()=>{t=ie(t);let s;const i=this.bias==null?null:this.bias.read(),o=$C(this.activation.getClassName());if(o!=null&&this.rank===2)s=Sw(t,this.kernel.read(),i,this.strides,this.padding,this.dataFormat,this.dilationRate,o);else{if(this.rank===1)s=E6(t,this.kernel.read(),i,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(this.rank===2)s=Sw(t,this.kernel.read(),i,this.strides,this.padding,this.dataFormat,this.dilationRate);else if(this.rank===3)s=I6(t,this.kernel.read(),i,this.strides,this.padding,this.dataFormat,this.dilationRate);else throw new me("convolutions greater than 3D are not implemented yet.");this.activation!=null&&(s=this.activation.apply(s))}return s})}computeOutputShape(t){t=Ne(t);const e=[],s=this.dataFormat==="channelsLast"?t.slice(1,t.length-1):t.slice(2);for(let o=0;o<s.length;++o){const r=wi(s[o],this.kernelSize[o],this.padding,this.strides[o],typeof this.dilationRate=="number"?this.dilationRate:this.dilationRate[o]);e.push(r)}let i=[t[0]];return this.dataFormat==="channelsLast"?(i=i.concat(e),i.push(this.filters)):(i.push(this.filters),i=i.concat(e)),i}getConfig(){const t={filters:this.filters,kernelInitializer:an(this.kernelInitializer),kernelRegularizer:je(this.kernelRegularizer),kernelConstraint:Tn(this.kernelConstraint)},e=super.getConfig();return Object.assign(t,e),t}static verifyArgs(t){if(!("filters"in t)||typeof t.filters!="number"||t.filters<1)throw new W(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(t.filters)}`)}}class kl extends mc{constructor(t){super(2,t),kl.verifyArgs(t)}getConfig(){const t=super.getConfig();return delete t.rank,t}static verifyArgs(t){if(typeof t.kernelSize!="number"&&!Tx(t.kernelSize,"number",1,2))throw new W(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(t.kernelSize)}.`)}}kl.className="Conv2D";xt(kl);class Dl extends mc{constructor(t){super(3,t),Dl.verifyArgs(t)}getConfig(){const t=super.getConfig();return delete t.rank,t}static verifyArgs(t){if(typeof t.kernelSize!="number"&&!(Array.isArray(t.kernelSize)&&(t.kernelSize.length===1||t.kernelSize.length===3)))throw new W(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(t.kernelSize)}.`)}}Dl.className="Conv3D";xt(Dl);class US extends kl{constructor(t){if(super(t),this.inputSpec=[new Sn({ndim:4})],this.padding!=="same"&&this.padding!=="valid")throw new W(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(t){if(t=Ne(t),t.length!==4)throw new W("Input should have rank 4; Received input shape: "+JSON.stringify(t));const e=this.dataFormat==="channelsFirst"?1:t.length-1;if(t[e]==null)throw new W("The channel dimension of the inputs should be defined. Found `None`.");const s=t[e],i=this.kernelSize.concat([this.filters,s]);this.kernel=this.addWeight("kernel",i,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Sn({ndim:4,axes:{[e]:s}})],this.built=!0}call(t,e){return tt(()=>{let s=ie(t);if(s.shape.length!==4)throw new W(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${s.shape.length}`);const i=s.shape,o=i[0];let r,a;this.dataFormat==="channelsFirst"?(r=2,a=3):(r=1,a=2);const c=i[r],u=i[a],l=this.kernelSize[0],d=this.kernelSize[1],h=this.strides[0],f=this.strides[1],p=ki(c,h,l,this.padding),x=ki(u,f,d,this.padding),g=[o,p,x,this.filters];this.dataFormat!=="channelsLast"&&(s=Re(s,[0,2,3,1]));let m=g_(s,this.kernel.read(),g,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(m=Re(m,[0,3,1,2])),this.bias!=null&&(m=Ei(m,this.bias.read(),this.dataFormat)),this.activation!=null&&(m=this.activation.apply(m)),m})}computeOutputShape(t){t=Ne(t);const e=t.slice();let s,i,o;this.dataFormat==="channelsFirst"?(s=1,i=2,o=3):(s=3,i=1,o=2);const r=this.kernelSize[0],a=this.kernelSize[1],c=this.strides[0],u=this.strides[1];return e[s]=this.filters,e[i]=ki(e[i],c,r,this.padding),e[o]=ki(e[o],u,a,this.padding),e}getConfig(){const t=super.getConfig();return delete t.dilationRate,t}}US.className="Conv2DTranspose";xt(US);class BS extends Dl{constructor(t){if(super(t),this.inputSpec=[new Sn({ndim:5})],this.padding!=="same"&&this.padding!=="valid")throw new W(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(t){if(t=Ne(t),t.length!==5)throw new W("Input should have rank 5; Received input shape: "+JSON.stringify(t));const e=this.dataFormat==="channelsFirst"?1:t.length-1;if(t[e]==null)throw new W("The channel dimension of the inputs should be defined. Found `None`.");const s=t[e],i=this.kernelSize.concat([this.filters,s]);this.kernel=this.addWeight("kernel",i,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Sn({ndim:5,axes:{[e]:s}})],this.built=!0}call(t,e){return tt(()=>{let s=ie(t);if(s.shape.length!==5)throw new W(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${s.shape.length}`);const i=s.shape,o=i[0];let r,a,c;this.dataFormat==="channelsFirst"?(c=2,r=3,a=4):(c=1,r=2,a=3);const u=i[c],l=i[r],d=i[a],h=this.kernelSize[0],f=this.kernelSize[1],p=this.kernelSize[2],x=this.strides[0],g=this.strides[1],m=this.strides[2],y=ki(u,x,h,this.padding),w=ki(l,g,f,this.padding),b=ki(d,m,p,this.padding),_=[o,y,w,b,this.filters];this.dataFormat!=="channelsLast"&&(s=Re(s,[0,2,3,4,1]));let T=P$(s,this.kernel.read(),_,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(T=Re(T,[0,4,1,2,3])),this.bias!==null&&(T=Ei(T,this.bias.read(),this.dataFormat)),this.activation!==null&&(T=this.activation.apply(T)),T})}computeOutputShape(t){t=Ne(t);const e=t.slice();let s,i,o,r;this.dataFormat==="channelsFirst"?(s=1,i=2,o=3,r=4):(s=4,i=1,o=2,r=3);const a=this.kernelSize[0],c=this.kernelSize[1],u=this.kernelSize[2],l=this.strides[0],d=this.strides[1],h=this.strides[2];return e[s]=this.filters,e[i]=ki(e[i],l,a,this.padding),e[o]=ki(e[o],d,c,this.padding),e[r]=ki(e[r],h,u,this.padding),e}getConfig(){const t=super.getConfig();return delete t.dilationRate,t}}BS.className="Conv3DTranspose";xt(BS);class zS extends mc{constructor(t,e){if(super(t,e),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,e.filters==null)throw new W("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(e.kernelInitializer!=null||e.kernelRegularizer!=null||e.kernelConstraint!=null)throw new W("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(e.padding!=null&&e.padding!=="same"&&e.padding!=="valid")throw new W(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(e.padding)}`);this.depthMultiplier=e.depthMultiplier==null?1:e.depthMultiplier,this.depthwiseInitializer=nn(e.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=sn(e.depthwiseRegularizer),this.depthwiseConstraint=En(e.depthwiseConstraint),this.pointwiseInitializer=nn(e.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=sn(e.pointwiseRegularizer),this.pointwiseConstraint=En(e.pointwiseConstraint)}build(t){if(t=Ne(t),t.length<this.rank+2)throw new W(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(t)}`);const e=this.dataFormat==="channelsFirst"?1:t.length-1;if(t[e]==null||t[e]<0)throw new W(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(t[e])}`);const s=t[e],i=this.kernelSize.concat([s,this.depthMultiplier]),o=[];for(let a=0;a<this.rank;++a)o.push(1);o.push(s*this.depthMultiplier,this.filters);const r=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",i,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,r,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",o,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,r,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,r,this.biasConstraint):this.bias=null,this.inputSpec=[new Sn({ndim:this.rank+2,axes:{[e]:s}})],this.built=!0}call(t,e){return tt(()=>{t=ie(t);let s;if(this.rank===1)throw new me("1D separable convolution is not implemented yet.");return this.rank===2&&(this.dataFormat==="channelsFirst"&&(t=Re(t,[0,2,3,1])),s=$_(t,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(s=Ei(s,this.bias.read(),this.dataFormat)),this.activation!=null&&(s=this.activation.apply(s)),this.dataFormat==="channelsFirst"&&(s=Re(s,[0,3,1,2])),s})}getConfig(){const t=super.getConfig();return delete t.rank,delete t.kernelInitializer,delete t.kernelRegularizer,delete t.kernelConstraint,t.depthwiseInitializer=an(this.depthwiseInitializer),t.pointwiseInitializer=an(this.pointwiseInitializer),t.depthwiseRegularizer=je(this.depthwiseRegularizer),t.pointwiseRegularizer=je(this.pointwiseRegularizer),t.depthwiseConstraint=Tn(this.depthwiseConstraint),t.pointwiseConstraint=Tn(this.pointwiseConstraint),t}}zS.className="SeparableConv";class VS extends zS{constructor(t){super(2,t)}}VS.className="SeparableConv2D";xt(VS);class rp extends mc{constructor(t){super(1,t),rp.verifyArgs(t),this.inputSpec=[{ndim:3}]}getConfig(){const t=super.getConfig();return delete t.rank,delete t.dataFormat,t}static verifyArgs(t){if(typeof t.kernelSize!="number"&&!Tx(t.kernelSize,"number",1,1))throw new W(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(t.kernelSize)}.`)}}rp.className="Conv1D";xt(rp);class WS extends _e{constructor(t){super(t),typeof t.cropping=="number"?this.cropping=[[t.cropping,t.cropping],[t.cropping,t.cropping]]:typeof t.cropping[0]=="number"?this.cropping=[[t.cropping[0],t.cropping[0]],[t.cropping[1],t.cropping[1]]]:this.cropping=t.cropping,this.dataFormat=t.dataFormat===void 0?"channelsLast":t.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(t){return this.dataFormat==="channelsFirst"?[t[0],t[1],t[2]-this.cropping[0][0]-this.cropping[0][1],t[3]-this.cropping[1][0]-this.cropping[1][1]]:[t[0],t[1]-this.cropping[0][0]-this.cropping[0][1],t[2]-this.cropping[1][0]-this.cropping[1][1],t[3]]}call(t,e){return tt(()=>{if(t=ie(t),this.dataFormat==="channelsLast"){const s=gd(t,this.cropping[0][0],t.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return gd(s,this.cropping[1][0],t.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}else{const s=gd(t,this.cropping[0][0],t.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return gd(s,this.cropping[1][0],t.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}})}getConfig(){const t={cropping:this.cropping,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}WS.className="Cropping2D";xt(WS);class GS extends _e{constructor(t){super(t),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=t.size==null?this.DEFAULT_SIZE:t.size,this.dataFormat=t.dataFormat==null?"channelsLast":t.dataFormat,gn(this.dataFormat),this.interpolation=t.interpolation==null?"nearest":t.interpolation,sB(this.interpolation)}computeOutputShape(t){if(this.dataFormat==="channelsFirst"){const e=t[2]==null?null:this.size[0]*t[2],s=t[3]==null?null:this.size[1]*t[3];return[t[0],t[1],e,s]}else{const e=t[1]==null?null:this.size[0]*t[1],s=t[2]==null?null:this.size[1]*t[2];return[t[0],e,s,t[3]]}}call(t,e){return tt(()=>{let s=ie(t);const i=s.shape;if(this.dataFormat==="channelsFirst"){s=Re(s,[0,2,3,1]);const o=this.size[0]*i[2],r=this.size[1]*i[3],a=this.interpolation==="nearest"?io.resizeNearestNeighbor(s,[o,r]):io.resizeBilinear(s,[o,r]);return Re(a,[0,3,1,2])}else{const o=this.size[0]*i[1],r=this.size[1]*i[2];return this.interpolation==="nearest"?io.resizeNearestNeighbor(s,[o,r]):io.resizeBilinear(s,[o,r])}})}getConfig(){const t={size:this.size,dataFormat:this.dataFormat,interpolation:this.interpolation},e=super.getConfig();return Object.assign(t,e),t}}GS.className="UpSampling2D";xt(GS);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function R6(n,t,e=[1,1],s="valid",i,o){return tt(()=>{i==null&&(i=Si()),gn(i);let r=Ux(n,i);if(n.rank!==4)throw new W(`Input for depthwiseConv2d is required to be 4-D, but is instead ${n.rank}-D`);if(t.rank!==4)throw new W(`depthwiseKernel is required to be 4-D, but is instead ${t.rank}-D`);return r=Ig(r,t,e,s==="same"?"same":"valid","NHWC",o),i==="channelsFirst"&&(r=Re(r,[0,3,1,2])),r})}class HS extends op{constructor(t){super(2,t),this.depthwiseKernel=null,this.depthMultiplier=t.depthMultiplier==null?1:t.depthMultiplier,this.depthwiseInitializer=nn(t.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=En(t.depthwiseConstraint),this.depthwiseRegularizer=sn(t.depthwiseRegularizer)}build(t){if(t=Ne(t),t.length<4)throw new W(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(t)}.`);const e=this.dataFormat==="channelsFirst"?1:3;if(t[e]==null||t[e]<0)throw new W(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${t[e]}).`);const s=t[e],i=[this.kernelSize[0],this.kernelSize[1],s,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",i,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[s*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,e){return tt(()=>{t=ie(t);let s=R6(t,this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(s=Ei(s,this.bias.read(),this.dataFormat)),this.activation!=null&&(s=this.activation.apply(s)),s})}computeOutputShape(t){t=Ne(t);const e=this.dataFormat==="channelsFirst"?t[2]:t[1],s=this.dataFormat==="channelsFirst"?t[3]:t[2],i=this.dataFormat==="channelsFirst"?t[1]*this.depthMultiplier:t[3]*this.depthMultiplier,o=wi(e,this.kernelSize[0],this.padding,this.strides[0]),r=wi(s,this.kernelSize[1],this.padding,this.strides[1]);return this.dataFormat==="channelsFirst"?[t[0],i,o,r]:[t[0],o,r,i]}getConfig(){const t=super.getConfig();return t.depthMultiplier=this.depthMultiplier,t.depthwiseInitializer=an(this.depthwiseInitializer),t.depthwiseRegularizer=je(this.depthwiseRegularizer),t.depthwiseConstraint=Tn(this.depthwiseRegularizer),t}}HS.className="DepthwiseConv2D";xt(HS);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function XS(n,t,e,s){if(Array.isArray(n)){if(t!=null||e!=null)throw new W("When inputs is an array, neither initialState or constants should be provided");s!=null&&(e=n.slice(n.length-s,n.length),n=n.slice(0,n.length-s)),n.length>1&&(t=n.slice(1,n.length)),n=n[0]}function i(o){return o==null||Array.isArray(o)?o:[o]}return t=i(t),e=i(e),{inputs:n,initialState:t,constants:e}}function qS(n,t,e,s=!1,i,o,r=!1,a=!1){return tt(()=>{const c=t.shape.length;if(c<3)throw new W(`Input should be at least 3D, but is ${c}D.`);const u=[1,0].concat(Ci(2,c));t=Re(t,u),r&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),i!=null&&(i=Nt(Nt(i,"bool"),"float32"),i.rank===c-1&&(i=fs(i,-1)),i=Re(i,u)),s&&(t=Pr(t,0),i!=null&&(i=Pr(i,0)));const l=[];let d,h=e;const f=t.shape[0],p=Lr(t);let x;i!=null&&(x=Lr(i));for(let m=0;m<f;++m){const y=p[m],w=tt(()=>n(y,h));if(i==null)d=w[0],h=w[1];else{const b=tt(()=>{const _=x[m],T=ee(ei(_),_),E=yt(z(w[0],_),z(h[0],T)),I=h.map((S,v)=>yt(z(w[1][v],_),z(S,T)));return{output:E,newStates:I}});d=b.output,h=b.newStates}a&&l.push(d)}let g;return a&&(g=zi(l,1)),[d,g,h]})}class Yo extends _e{constructor(t){super(t);let e;if(t.cell==null)throw new W("cell property is missing for the constructor of RNN.");if(Array.isArray(t.cell)?e=new Vx({cells:t.cell}):e=t.cell,e.stateSize==null)throw new W("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=e,this.returnSequences=t.returnSequences==null?!1:t.returnSequences,this.returnState=t.returnState==null?!1:t.returnState,this.goBackwards=t.goBackwards==null?!1:t.goBackwards,this._stateful=t.stateful==null?!1:t.stateful,this.unroll=t.unroll==null?!1:t.unroll,this.supportsMasking=!0,this.inputSpec=[new Sn({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){if(this.states_==null){const t=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;return Ci(0,t).map(e=>null)}else return this.states_}setStates(t){this.states_=t}computeOutputShape(t){$0(t)&&(t=t[0]),t=t;let e=this.cell.stateSize;Array.isArray(e)||(e=[e]);const s=e[0];let i;if(this.returnSequences?i=[t[0],t[1],s]:i=[t[0],s],this.returnState){const o=[];for(const r of e)o.push([t[0],r]);return[i].concat(o)}else return i}computeMask(t,e){return tt(()=>{Array.isArray(e)&&(e=e[0]);const s=this.returnSequences?e:null;if(this.returnState){const i=this.states.map(o=>null);return[s].concat(i)}else return s})}get states(){if(this.states_==null){const t=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,e=[];for(let s=0;s<t;++s)e.push(null);return e}else return this.states_}set states(t){this.states_=t}build(t){if(this.numConstants!=null)throw new me("Constants support is not implemented in RNN yet.");$0(t)&&(t=t[0]),t=t;const e=this.stateful?t[0]:null,s=t.slice(2);this.inputSpec[0]=new Sn({shape:[e,null,...s]});const i=[t[0]].concat(t.slice(2));this.cell.build(i);let o;if(Array.isArray(this.cell.stateSize)?o=this.cell.stateSize:o=[this.cell.stateSize],this.stateSpec!=null){if(!Pe(this.stateSpec.map(r=>r.shape[r.shape.length-1]),o))throw new W(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=o.map(r=>new Sn({shape:[null,r]}));this.stateful&&this.resetStates()}resetStates(t,e=!1){tt(()=>{if(!this.stateful)throw new Ai("Cannot call resetStates() on an RNN Layer that is not stateful.");const s=this.inputSpec[0].shape[0];if(s==null)throw new W("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.states_==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(i=>en([s,i])):this.states_=[en([s,this.cell.stateSize])];else if(t==null)Ce(this.states_),this.keptStates!=null&&(Ce(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(i=>en([s,i])):this.states_[0]=en([s,this.cell.stateSize]);else{if(Array.isArray(t)||(t=[t]),t.length!==this.states_.length)throw new W(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${t.length} state value(s). Input received: ${t}`);e===!0?this.keptStates.push(this.states_.slice()):Ce(this.states_);for(let i=0;i<this.states_.length;++i){const o=t[i],r=Array.isArray(this.cell.stateSize)?this.cell.stateSize[i]:this.cell.stateSize,a=[s,r];if(!Pe(o.shape,a))throw new W(`State ${i} is incompatible with layer ${this.name}: expected shape=${a}, received shape=${o.shape}`);this.states_[i]=o}}this.states_=this.states_.map(i=>rn(i.clone()))})}apply(t,e){let s=e==null?null:e.initialState,i=e==null?null:e.constants;e==null&&(e={});const o=XS(t,s,i,this.numConstants);t=o.inputs,s=o.initialState,i=o.constants;let r=[],a=[];if(s!=null){e.initialState=s,r=r.concat(s),this.stateSpec=[];for(const u of s)this.stateSpec.push(new Sn({shape:u.shape}));a=a.concat(this.stateSpec)}if(i!=null&&(e.constants=i,r=r.concat(i),this.numConstants=i.length),r[0]instanceof Vi){const u=[t].concat(r),l=this.inputSpec.concat(a),d=this.inputSpec;this.inputSpec=l;const h=super.apply(u,e);return this.inputSpec=d,h}else return super.apply(t,e)}call(t,e){return tt(()=>{const s=e==null?null:e.mask,i=e==null?null:e.training;let o=e==null?null:e.initialState;t=ie(t),o==null&&(this.stateful?o=this.states_:o=this.getInitialState(t));const r=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(o.length!==r)throw new W(`RNN Layer has ${r} state(s) but was passed ${o.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const a={training:i},u=qS((p,x)=>{const g=this.cell.call([p].concat(x),a);return[g[0],g.slice(1)]},t,o,this.goBackwards,s,null,this.unroll,this.returnSequences),l=u[0],d=u[1],h=u[2];this.stateful&&this.resetStates(h,i);const f=this.returnSequences?d:l;return this.returnState?[f].concat(h):f})}getInitialState(t){return tt(()=>{let e=en(t.shape);return e=Yt(e,[1,2]),e=Il(e),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map(s=>s>1?k0(e,[1,s]):e):this.cell.stateSize>1?[k0(e,[1,this.cell.stateSize])]:[e]})}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),this.cell!=null&&this.cell.setFastWeightInitDuringBuild(t)}getConfig(){const t=super.getConfig(),e={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};this.numConstants!=null&&(e.numConstants=this.numConstants);const s=this.cell.getConfig();return this.getClassName()===Yo.className&&(e.cell={className:this.cell.getClassName(),config:s}),Object.assign(Object.assign(Object.assign({},s),t),e)}static fromConfig(t,e,s={}){const i=e.cell,o=ro(i,s);return new t(Object.assign(e,{cell:o}))}}Yo.className="RNN";xt(Yo);class ap extends _e{}class Bx extends ap{constructor(t){super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=t.units,Nn(this.units,"units"),this.activation=Bo(t.activation==null?this.DEFAULT_ACTIVATION:t.activation),this.useBias=t.useBias==null?!0:t.useBias,this.kernelInitializer=nn(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=nn(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=nn(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=sn(t.kernelRegularizer),this.recurrentRegularizer=sn(t.recurrentRegularizer),this.biasRegularizer=sn(t.biasRegularizer),this.kernelConstraint=En(t.kernelConstraint),this.recurrentConstraint=En(t.recurrentConstraint),this.biasConstraint=En(t.biasConstraint),this.dropout=Za([1,Oo([0,t.dropout==null?0:t.dropout])]),this.recurrentDropout=Za([1,Oo([0,t.recurrentDropout==null?0:t.recurrentDropout])]),this.dropoutFunc=t.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){t=Ne(t),this.kernel=this.addWeight("kernel",[t[t.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,e){return tt(()=>{if(t=t,t.length!==2)throw new W(`SimpleRNNCell expects 2 input Tensors, got ${t.length}.`);let s=t[1];t=t[0];const i=e.training==null?!1:e.training;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=zo({ones:()=>ei(t),rate:this.dropout,training:i,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=zo({ones:()=>ei(s),rate:this.recurrentDropout,training:i,dropoutFunc:this.dropoutFunc}));let o;const r=this.dropoutMask,a=this.recurrentDropoutMask;r!=null?o=Oi(z(t,r),this.kernel.read()):o=Oi(t,this.kernel.read()),this.bias!=null&&(o=Ei(o,this.bias.read())),a!=null&&(s=z(s,a));let c=yt(o,Oi(s,this.recurrentKernel.read()));return this.activation!=null&&(c=this.activation.apply(c)),[c,c]})}getConfig(){const t=super.getConfig(),e={units:this.units,activation:Uo(this.activation),useBias:this.useBias,kernelInitializer:an(this.kernelInitializer),recurrentInitializer:an(this.recurrentInitializer),biasInitializer:an(this.biasInitializer),kernelRegularizer:je(this.kernelRegularizer),recurrentRegularizer:je(this.recurrentRegularizer),biasRegularizer:je(this.biasRegularizer),activityRegularizer:je(this.activityRegularizer),kernelConstraint:Tn(this.kernelConstraint),recurrentConstraint:Tn(this.recurrentConstraint),biasConstraint:Tn(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign(Object.assign({},t),e)}}Bx.className="SimpleRNNCell";xt(Bx);class jS extends Yo{constructor(t){t.cell=new Bx(t),super(t)}call(t,e){return tt(()=>{this.cell.dropoutMask!=null&&(Ce(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Ce(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const s=e==null?null:e.mask,i=e==null?null:e.training,o=e==null?null:e.initialState;return super.call(t,{mask:s,training:i,initialState:o})})}static fromConfig(t,e){return new t(e)}}jS.className="SimpleRNN";xt(jS);class zx extends ap{constructor(t){if(super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",t.resetAfter)throw new W("GRUCell does not support reset_after parameter set to true.");this.units=t.units,Nn(this.units,"units"),this.activation=Bo(t.activation===void 0?this.DEFAULT_ACTIVATION:t.activation),this.recurrentActivation=Bo(t.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:t.recurrentActivation),this.useBias=t.useBias==null?!0:t.useBias,this.kernelInitializer=nn(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=nn(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=nn(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=sn(t.kernelRegularizer),this.recurrentRegularizer=sn(t.recurrentRegularizer),this.biasRegularizer=sn(t.biasRegularizer),this.kernelConstraint=En(t.kernelConstraint),this.recurrentConstraint=En(t.recurrentConstraint),this.biasConstraint=En(t.biasConstraint),this.dropout=Za([1,Oo([0,t.dropout==null?0:t.dropout])]),this.recurrentDropout=Za([1,Oo([0,t.recurrentDropout==null?0:t.recurrentDropout])]),this.dropoutFunc=t.dropoutFunc,this.implementation=t.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){t=Ne(t);const e=t[t.length-1];this.kernel=this.addWeight("kernel",[e,this.units*3],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*3],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units*3],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,e){return tt(()=>{if(t=t,t.length!==2)throw new W(`GRUCell expects 2 input Tensors (inputs, h, c), got ${t.length}.`);const s=e.training==null?!1:e.training;let i=t[1];t=t[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=zo({ones:()=>ei(t),rate:this.dropout,training:s,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=zo({ones:()=>ei(i),rate:this.recurrentDropout,training:s,count:3,dropoutFunc:this.dropoutFunc}));const o=this.dropoutMask,r=this.recurrentDropoutMask;let a,c,u;0<this.dropout&&this.dropout<1&&(t=z(t,o[0]));let l=Oi(t,this.kernel.read());this.useBias&&(l=Ei(l,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(i=z(i,r[0]));const d=this.recurrentKernel.read(),[h,f]=$s(d,[2*this.units,this.units],d.rank-1),p=Oi(i,h),[x,g,m]=$s(l,3,l.rank-1),[y,w]=$s(p,2,p.rank-1);a=this.recurrentActivation.apply(yt(x,y)),c=this.recurrentActivation.apply(yt(g,w));const b=Oi(z(c,i),f);u=this.activation.apply(yt(m,b));const _=yt(z(a,i),z(yt(1,qe(a)),u));return[_,_]})}getConfig(){const t=super.getConfig(),e={units:this.units,activation:Uo(this.activation),recurrentActivation:Uo(this.recurrentActivation),useBias:this.useBias,kernelInitializer:an(this.kernelInitializer),recurrentInitializer:an(this.recurrentInitializer),biasInitializer:an(this.biasInitializer),kernelRegularizer:je(this.kernelRegularizer),recurrentRegularizer:je(this.recurrentRegularizer),biasRegularizer:je(this.biasRegularizer),activityRegularizer:je(this.activityRegularizer),kernelConstraint:Tn(this.kernelConstraint),recurrentConstraint:Tn(this.recurrentConstraint),biasConstraint:Tn(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign(Object.assign({},t),e)}}zx.className="GRUCell";xt(zx);class KS extends Yo{constructor(t){t.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),t.cell=new zx(t),super(t)}call(t,e){return tt(()=>{this.cell.dropoutMask!=null&&(Ce(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Ce(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const s=e==null?null:e.mask,i=e==null?null:e.training,o=e==null?null:e.initialState;return super.call(t,{mask:s,training:i,initialState:o})})}static fromConfig(t,e){return e.implmentation===0&&(e.implementation=1),new t(e)}}KS.className="GRU";xt(KS);class cp extends ap{constructor(t){super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=t.units,Nn(this.units,"units"),this.activation=Bo(t.activation===void 0?this.DEFAULT_ACTIVATION:t.activation),this.recurrentActivation=Bo(t.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:t.recurrentActivation),this.useBias=t.useBias==null?!0:t.useBias,this.kernelInitializer=nn(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=nn(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=nn(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=t.unitForgetBias,this.kernelRegularizer=sn(t.kernelRegularizer),this.recurrentRegularizer=sn(t.recurrentRegularizer),this.biasRegularizer=sn(t.biasRegularizer),this.kernelConstraint=En(t.kernelConstraint),this.recurrentConstraint=En(t.recurrentConstraint),this.biasConstraint=En(t.biasConstraint),this.dropout=Za([1,Oo([0,t.dropout==null?0:t.dropout])]),this.recurrentDropout=Za([1,Oo([0,t.recurrentDropout==null?0:t.recurrentDropout])]),this.dropoutFunc=t.dropoutFunc,this.implementation=t.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){var e;t=Ne(t);const s=t[t.length-1];this.kernel=this.addWeight("kernel",[s,this.units*4],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*4],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint);let i;if(this.useBias){if(this.unitForgetBias){const o=this.biasInitializer,r=this.units;i=new(e=class extends si{apply(c,u){const l=o.apply([r]),d=new Ix().apply([r]),h=o.apply([r*2]);return aw(aw(l,d),h)}},e.className="CustomInit",e)}else i=this.biasInitializer;this.bias=this.addWeight("bias",[this.units*4],null,i,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(t,e){return tt(()=>{const s=e.training==null?!1:e.training;if(t=t,t.length!==3)throw new W(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${t.length}.`);let i=t[1];const o=t[2];t=t[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=zo({ones:()=>ei(t),rate:this.dropout,training:s,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=zo({ones:()=>ei(i),rate:this.recurrentDropout,training:s,count:4,dropoutFunc:this.dropoutFunc}));const r=this.dropoutMask,a=this.recurrentDropoutMask;let c,u,l,d;0<this.dropout&&this.dropout<1&&(t=z(t,r[0]));let h=Oi(t,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(i=z(i,a[0])),h=yt(h,Oi(i,this.recurrentKernel.read())),this.useBias&&(h=Ei(h,this.bias.read()));const[f,p,x,g]=$s(h,4,h.rank-1);c=this.recurrentActivation.apply(f),u=this.recurrentActivation.apply(p),l=yt(z(u,o),z(c,this.activation.apply(x))),d=this.recurrentActivation.apply(g);const m=z(d,this.activation.apply(l));return[m,m,l]})}getConfig(){const t=super.getConfig(),e={units:this.units,activation:Uo(this.activation),recurrentActivation:Uo(this.recurrentActivation),useBias:this.useBias,kernelInitializer:an(this.kernelInitializer),recurrentInitializer:an(this.recurrentInitializer),biasInitializer:an(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:je(this.kernelRegularizer),recurrentRegularizer:je(this.recurrentRegularizer),biasRegularizer:je(this.biasRegularizer),activityRegularizer:je(this.activityRegularizer),kernelConstraint:Tn(this.kernelConstraint),recurrentConstraint:Tn(this.recurrentConstraint),biasConstraint:Tn(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign(Object.assign({},t),e)}}cp.className="LSTMCell";xt(cp);class YS extends Yo{constructor(t){t.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),t.cell=new cp(t),super(t)}call(t,e){return tt(()=>{this.cell.dropoutMask!=null&&(Ce(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Ce(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const s=e==null?null:e.mask,i=e==null?null:e.training,o=e==null?null:e.initialState;return super.call(t,{mask:s,training:i,initialState:o})})}static fromConfig(t,e){return e.implmentation===0&&(e.implementation=1),new t(e)}}YS.className="LSTM";xt(YS);class Vx extends ap{constructor(t){super(t),this.cells=t.cells}get stateSize(){const t=[];for(const e of this.cells.slice().reverse())Array.isArray(e.stateSize)?t.push(...e.stateSize):t.push(e.stateSize);return t}call(t,e){return tt(()=>{t=t;let s=t.slice(1);const i=[];for(const a of this.cells.slice().reverse())Array.isArray(a.stateSize)?i.push(s.splice(0,a.stateSize.length)):i.push(s.splice(0,1));i.reverse();const o=[];let r;for(let a=0;a<this.cells.length;++a){const c=this.cells[a];s=i[a],a===0?r=[t[0]].concat(s):r=[r[0]].concat(s),r=c.call(r,e),o.push(r.slice(1))}s=[];for(const a of o.slice().reverse())s.push(...a);return[r[0]].concat(s)})}build(t){$0(t)&&(t=t[0]),t=t;let e;this.cells.forEach((s,i)=>{Cr(`RNNCell_${i}`,()=>{s.build(t),Array.isArray(s.stateSize)?e=s.stateSize[0]:e=s.stateSize,t=[t[0],e]})}),this.built=!0}getConfig(){const t=super.getConfig(),e=o=>({className:o.getClassName(),config:o.getConfig()}),i={cells:this.cells.map(e)};return Object.assign(Object.assign({},t),i)}static fromConfig(t,e,s={}){const i=[];for(const o of e.cells)i.push(ro(o,s));return new t({cells:i})}get trainableWeights(){if(!this.trainable)return[];const t=[];for(const e of this.cells)t.push(...e.trainableWeights);return t}get nonTrainableWeights(){const t=[];for(const e of this.cells)t.push(...e.nonTrainableWeights);if(!this.trainable){const e=[];for(const s of this.cells)e.push(...s.trainableWeights);return e.concat(t)}return t}getWeights(){const t=[];for(const e of this.cells)t.push(...e.weights);return F0(t)}setWeights(t){const e=[];for(const s of this.cells){const i=s.weights.length,o=t.splice(i);for(let r=0;r<s.weights.length;++r)e.push([s.weights[r],o[r]])}$x(e)}}Vx.className="StackedRNNCells";xt(Vx);function zo(n){const{ones:t,rate:e,training:s=!1,count:i=1,dropoutFunc:o}=n,r=()=>o!=null?o(t(),e):zC(t(),e),a=()=>Ml(r,t,s);return!i||i<=1?rn(a().clone()):Array(i).fill(void 0).map(a).map(u=>rn(u.clone()))}/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */var M6=function(n,t){var e={};for(var s in n)Object.prototype.hasOwnProperty.call(n,s)&&t.indexOf(s)<0&&(e[s]=n[s]);if(n!=null&&typeof Object.getOwnPropertySymbols=="function")for(var i=0,s=Object.getOwnPropertySymbols(n);i<s.length;i++)t.indexOf(s[i])<0&&Object.prototype.propertyIsEnumerable.call(n,s[i])&&(e[s[i]]=n[s[i]]);return e};class ZS extends Yo{constructor(t){if(t.unroll)throw new me("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(t.cell))throw new me("It is not possible at the moment to stack convolutional cells.");super(t),this.inputSpec=[new Sn({ndim:5})]}call(t,e){return tt(()=>{if(this.cell.dropoutMask!=null&&(Ce(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Ce(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),e&&e.constants)throw new W("ConvRNN2D cell does not support constants");const s=e==null?null:e.mask,i=e==null?null:e.training,o=e==null?null:e.initialState;return super.call(t,{mask:s,training:i,initialState:o})})}computeOutputShape(t){let e=this.computeSingleOutputShape(t);return this.returnSequences||(e=[e[0],...e.slice(2)]),this.returnState&&(e=[e,...Array(2).fill([t[0],...e.slice(-3)])]),e}getInitialState(t){return tt(()=>{const{stateSize:e}=this.cell,s=t.shape,i=this.computeSingleOutputShape(s),o=[i[0],...i.slice(2)],r=en(o);return Array.isArray(e)?Array(e.length).fill(r):[r]})}resetStates(t,e=!1){tt(()=>{if(!this.stateful)throw new Ai("Cannot call resetStates() on an RNN Layer that is not stateful.");const s=this.inputSpec[0].shape,i=this.computeSingleOutputShape(s),o=[i[0],...i.slice(2)];if(s[0]==null)throw new W("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.getStates()==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>en(o)):this.states_=[en(o)];else if(t==null)Ce(this.states_),this.keptStates!=null&&(Ce(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>en(o)):this.states_[0]=en(o);else{if(Array.isArray(t)||(t=[t]),t.length!==this.states_.length)throw new W(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${t.length} state value(s). Input received: ${t}`);e?this.keptStates.push(this.states_.slice()):Ce(this.states_);for(let a=0;a<this.states_.length;++a){const c=t[a],u=o;if(!Pe(c.shape,u))throw new W(`State ${a} is incompatible with layer ${this.name}: expected shape=${u}, received shape=${c.shape}`);this.states_[a]=c}}this.states_=this.states_.map(a=>rn(a.clone()))})}computeSingleOutputShape(t){const{dataFormat:e,filters:s,kernelSize:i,padding:o,strides:r,dilationRate:a}=this.cell,c=e==="channelsFirst",u=t[c?3:2],l=t[c?4:3],d=wi(u,i[0],o,r[0],a[0]),h=wi(l,i[1],o,r[1],a[1]);return[...t.slice(0,2),...c?[s,d,h]:[d,h,s]]}}ZS.className="ConvRNN2D";class Wx extends cp{constructor(t){const{filters:e,kernelSize:s,strides:i,padding:o,dataFormat:r,dilationRate:a}=t;super(Object.assign(Object.assign({},t),{units:e})),this.filters=e,Nn(this.filters,"filters"),this.kernelSize=La(s,2,"kernelSize"),this.kernelSize.forEach(c=>Nn(c,"kernelSize")),this.strides=La(i||1,2,"strides"),this.strides.forEach(c=>Nn(c,"strides")),this.padding=o||"valid",Ls(this.padding),this.dataFormat=r||"channelsLast",gn(this.dataFormat),this.dilationRate=La(a||1,2,"dilationRate"),this.dilationRate.forEach(c=>Nn(c,"dilationRate"))}build(t){var e;t=Ne(t);const s=this.dataFormat==="channelsFirst"?1:t.length-1;if(t[s]==null)throw new W(`The channel dimension of the input should be defined. Found ${t[s]}`);const i=t[s],o=4,r=this.kernelSize.concat([i,this.filters*o]);this.kernel=this.addWeight("kernel",r,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const a=this.kernelSize.concat([this.filters,this.filters*o]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",a,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let c;if(this.unitForgetBias){const u=this.biasInitializer,l=this.filters;c=new(e=class extends si{apply(h,f){const p=u.apply([l]),x=jo([l]),g=u.apply([l*2]);return Ex([p,x,g])}},e.className="CustomInit",e)}else c=this.biasInitializer;this.bias=this.addWeight("bias",[this.filters*o],null,c,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(t,e){return tt(()=>{if(t.length!==3)throw new W(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${t.length}.`);const s=e.training||!1,i=t[0],o=t[1],r=t[2],a=4;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=zo({ones:()=>ei(i),rate:this.dropout,training:s,count:a,dropoutFunc:this.dropoutFunc}));const c=this.dropoutMask,u=(q,J,it)=>!J||!J[it]?q:z(J[it],q);let l=u(i,c,0),d=u(i,c,1),h=u(i,c,2),f=u(i,c,3);0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=zo({ones:()=>ei(o),rate:this.recurrentDropout,training:s,count:a,dropoutFunc:this.dropoutFunc}));const p=this.recurrentDropoutMask;let x=u(o,p,0),g=u(o,p,1),m=u(o,p,2),y=u(o,p,3);const w=3,[b,_,T,E]=$s(this.kernel.read(),a,w),[I,S,v,C]=this.useBias?$s(this.bias.read(),a):[null,null,null,null];l=this.inputConv(l,b,I,this.padding),d=this.inputConv(d,_,S,this.padding),h=this.inputConv(h,T,v,this.padding),f=this.inputConv(f,E,C,this.padding);const[M,N,D,$]=$s(this.recurrentKernel.read(),a,w);x=this.recurrentConv(x,M),g=this.recurrentConv(g,N),m=this.recurrentConv(m,D),y=this.recurrentConv(y,$);const F=this.recurrentActivation.apply(yt(l,x)),B=this.recurrentActivation.apply(yt(d,g)),P=yt(z(B,r),z(F,this.activation.apply(yt(h,m)))),V=z(this.recurrentActivation.apply(yt(f,y)),this.activation.apply(P));return[V,V,P]})}getConfig(){const t=super.getConfig(),{units:e}=t,s=M6(t,["units"]),i={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign(Object.assign({},s),i)}inputConv(t,e,s,i){const o=$r(t,e,this.strides,i||"valid",this.dataFormat==="channelsFirst"?"NCHW":"NHWC",this.dilationRate);return s?Ei(o,s,this.dataFormat):o}recurrentConv(t,e){return $r(t,e,1,"same",this.dataFormat==="channelsFirst"?"NCHW":"NHWC")}}Wx.className="ConvLSTM2DCell";xt(Wx);class JS extends ZS{constructor(t){const e=new Wx(t);super(Object.assign(Object.assign({},t),{cell:e}))}static fromConfig(t,e){return new t(e)}}JS.className="ConvLSTM2D";xt(JS);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Gx extends _e{constructor(t){super(t),this.rate=Math.max(Math.min(t.rate,1),0),this.noiseShape=t.noiseShape,this.seed=t.seed,this.supportsMasking=!0}getNoiseShape(t){if(this.noiseShape==null)return this.noiseShape;const e=t.shape,s=[];for(let i=0;i<this.noiseShape.length;++i)s.push(this.noiseShape[i]==null?e[i]:this.noiseShape[i]);return s}call(t,e){return tt(()=>{this.invokeCallHook(t,e);const s=ie(t);if(0<this.rate&&this.rate<1){const i=e.training==null?!1:e.training,o=this.getNoiseShape(s);return Ml(()=>zC(s,this.rate,o,this.seed),()=>s,i)}return t})}getConfig(){const t={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},e=super.getConfig();return Object.assign(t,e),t}dispose(){return super.dispose()}}Gx.className="Dropout";xt(Gx);class QS extends Gx{constructor(t){super(t),this.inputSpec=[{ndim:3}]}getNoiseShape(t){const e=t.shape;return[e[0],1,e[2]]}}QS.className="SpatialDropout1D";xt(QS);class tT extends _e{constructor(t){if(super(t),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",t.batchInputShape==null&&t.inputShape==null&&t.inputDim!=null){let e=null;t.batchSize!=null&&(e=t.batchSize),this.batchInputShape=[e,t.inputDim]}this.units=t.units,Nn(this.units,"units"),this.activation=Bo(t.activation),t.useBias!=null&&(this.useBias=t.useBias),this.kernelInitializer=nn(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=nn(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=En(t.kernelConstraint),this.biasConstraint=En(t.biasConstraint),this.kernelRegularizer=sn(t.kernelRegularizer),this.biasRegularizer=sn(t.biasRegularizer),this.activityRegularizer=sn(t.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(t){t=Ne(t);const e=t[t.length-1];this.kernel==null&&(this.kernel=this.addWeight("kernel",[e,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:e}}],this.built=!0}computeOutputShape(t){t=Ne(t);const e=t.slice();return e[e.length-1]=this.units,e}call(t,e){return tt(()=>{this.invokeCallHook(t,e);const s=ie(t),i=$C(this.activation.getClassName());let o;return i!=null?o=Oi(s,this.kernel.read(),i,this.bias?this.bias.read():null):(o=Oi(s,this.kernel.read()),this.bias!=null&&(o=Ei(o,this.bias.read())),this.activation!=null&&(o=this.activation.apply(o))),o})}getConfig(){const t={units:this.units,activation:Uo(this.activation),useBias:this.useBias,kernelInitializer:an(this.kernelInitializer),biasInitializer:an(this.biasInitializer),kernelRegularizer:je(this.kernelRegularizer),biasRegularizer:je(this.biasRegularizer),activityRegularizer:je(this.activityRegularizer),kernelConstraint:Tn(this.kernelConstraint),biasConstraint:Tn(this.biasConstraint)},e=super.getConfig();return Object.assign(t,e),t}}tT.className="Dense";xt(tT);class eT extends _e{constructor(t){t=t||{},super(t),this.inputSpec=[{minNDim:3}],this.dataFormat=t.dataFormat}computeOutputShape(t){t=Ne(t);for(const e of t.slice(1))if(e==null)throw new W(`The shape of the input to "Flatten" is not fully defined (got ${t.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[t[0],Fo(t,1)]}call(t,e){return tt(()=>{this.invokeCallHook(t,e);let s=ie(t);if(this.dataFormat==="channelsFirst"&&s.rank>1){const i=[0];for(let o=2;o<s.rank;++o)i.push(o);i.push(1),s=Re(s,i)}return uB(s)})}getConfig(){const t={};this.dataFormat!=null&&(t.dataFormat=this.dataFormat);const e=super.getConfig();return Object.assign(t,e),t}}eT.className="Flatten";xt(eT);class nT extends _e{constructor(t){super(t),this.supportsMasking=!0,this.activation=Bo(t.activation)}call(t,e){return tt(()=>{this.invokeCallHook(t,e);const s=ie(t);return this.activation.apply(s)})}getConfig(){const t={activation:Uo(this.activation)},e=super.getConfig();return Object.assign(t,e),t}}nT.className="Activation";xt(nT);class sT extends _e{constructor(t){super(t),this.n=t.n,this.inputSpec=[{ndim:2}]}computeOutputShape(t){return[t[0],this.n,t[1]]}call(t,e){return tt(()=>(t=ie(t),aB(t,this.n)))}getConfig(){const t={n:this.n},e=super.getConfig();return Object.assign(t,e),t}}sT.className="RepeatVector";xt(sT);class iT extends _e{constructor(t){super(t),this.targetShape=t.targetShape;for(let e=0;e<this.targetShape.length;++e)this.isUnknown(this.targetShape[e])&&(this.targetShape[e]=null)}isUnknown(t){return t<0||t==null}fixUnknownDimension(t,e){const s="Total size of new array must be unchanged.",i=e.slice();let o=1,r=null;for(let c=0;c<i.length;++c){const u=i[c];if(this.isUnknown(u))if(r===null)r=c;else throw new W("Can only specifiy one unknown dimension.");else o*=u}const a=Fo(t);if(r!==null){if(o===0||a%o!==0)throw new W(s);i[r]=a/o}else if(a!==o)throw new W(s);return i}computeOutputShape(t){let e=!1;for(let s=0;s<t.length;++s)if(this.isUnknown(t[s])){e=!0;break}return e?t.slice(0,1).concat(this.targetShape):t.slice(0,1).concat(this.fixUnknownDimension(t.slice(1),this.targetShape))}call(t,e){return tt(()=>{this.invokeCallHook(t,e);const s=ie(t),i=s.shape,o=i.slice(0,1).concat(this.fixUnknownDimension(i.slice(1),this.targetShape));return j(s,o)})}getConfig(){const t={targetShape:this.targetShape},e=super.getConfig();return Object.assign(t,e),t}}iT.className="Reshape";xt(iT);class oT extends _e{constructor(t){if(super(t),t.dims==null)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(t.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${t.dims} instead.`);const e=Ci(1,t.dims.length+1);if(!Pe(t.dims.slice().sort(),e))throw new Error("Invalid permutation `dims`: "+JSON.stringify(t.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=t.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new Sn({ndim:this.dims.length+1})]}computeOutputShape(t){t=Ne(t);const e=t.slice();return this.dims.forEach((s,i)=>{e[i+1]=t[s]}),e}call(t,e){return Re(ie(t),this.dimsIncludingBatch)}getConfig(){const t={dims:this.dims},e=super.getConfig();return Object.assign(t,e),t}}oT.className="Permute";xt(oT);class rT extends _e{constructor(t){super(t??{}),this.supportsMasking=!0,t!=null?this.maskValue=t.maskValue==null?0:t.maskValue:this.maskValue=0}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={maskValue:this.maskValue};return Object.assign(e,t),e}computeMask(t,e){const s=ie(t);return T0(ih(s,this.maskValue),-1)}call(t,e){return tt(()=>{this.invokeCallHook(t,e);const s=ie(t),r=T0(ih(s,this.maskValue),-1,!0);return z(s,Nt(r,s.dtype))})}}rT.className="Masking";xt(rT);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class aT extends _e{constructor(t){if(super(t),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",t.batchInputShape==null&&t.inputShape==null){let e=null;t.batchSize!=null&&(e=t.batchSize),t.inputLength==null?this.batchInputShape=[e,null]:this.batchInputShape=[e].concat(Oe(t.inputLength))}this.inputDim=t.inputDim,Nn(this.inputDim,"inputDim"),this.outputDim=t.outputDim,Nn(this.outputDim,"outputDim"),this.embeddingsInitializer=nn(t.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=sn(t.embeddingsRegularizer),this.activityRegularizer=sn(t.activityRegularizer),this.embeddingsConstraint=En(t.embeddingsConstraint),this.maskZero=t.maskZero,this.supportsMasking=t.maskZero,this.inputLength=t.inputLength}build(t){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(t){}computeMask(t,e){return tt(()=>this.maskZero?(t=ie(t),ih(t,Me(t))):null)}computeOutputShape(t){if(t=Ne(t),this.inputLength==null)return[...t,this.outputDim];const e=Oe(this.inputLength);if(e.length!==t.length-1)throw new W(`"inputLength" is ${this.inputLength}, but received input shape has shape ${t}`);{let s=0;for(let i=0;i<e.length;++i){const o=e[i],r=t[i+1];if(o!=null&&r!=null&&o!==r)throw new W(`"inputLength" is ${this.inputLength}, but received input shape has shape ${t}`);o==null&&(e[s]=r),s++}}return[t[0],...e,this.outputDim]}call(t,e){return tt(()=>{this.invokeCallHook(t,e);let s=ie(t);s.dtype!=="int32"&&(s=Li(s,"int32"));const i=BC(this.embeddings.read(),j(s,[s.size]));return j(i,Ne(this.computeOutputShape(s.shape)))})}getConfig(){const t={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:an(this.embeddingsInitializer),embeddingsRegularizer:je(this.embeddingsRegularizer),activityRegularizer:je(this.activityRegularizer),embeddingsConstraint:Tn(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},e=super.getConfig();return Object.assign(t,e),t}}aT.className="Embedding";xt(aT);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Kr extends _e{constructor(t){super(t||{}),this.supportsMasking=!0}mergeFunction(t){throw new me}computeElementwiseOpOutputShape(t,e){if(t==null||e==null)return null;if(t.length<e.length)return this.computeElementwiseOpOutputShape(e,t);if(e.length===0)return t;const s=t.slice(0,t.length-e.length);for(let i=0;i<e.length;++i){const o=t[t.length-e.length+i],r=e[i];if(o==null||r==null||o<0||r<0)s.push(null);else if(o===1)s.push(r);else if(r===1)s.push(o);else{if(o!==r)throw new W("Operands could not be broadcast together with shapes "+JSON.stringify(t)+" "+JSON.stringify(e));s.push(o)}}return s}build(t){if(Array.isArray(t)&&!Array.isArray(t[0])&&(t=[Ne(t)]),t=t,t.length<2)throw new W(`A merge layer should be called on an Array of at least 2 inputs. Got ${t.length} input(s).`);let e=[];for(const o of t)o!=null&&o[0]!==null&&e.push(o[0]);if(e=$o(e),e.length>1)throw new W(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(t)}.`);let s=t[0]==null?null:t[0].slice(1);for(let o=1;o<t.length;++o){const r=t[o]==null?null:t[o].slice(1);s=this.computeElementwiseOpOutputShape(s,r)}const i=t.map(o=>o.length);t.indexOf(null)===-1&&$o(i).length===1?this.reshapeRequired=!1:this.reshapeRequired=!0}call(t,e){return tt(()=>{if(t=t,this.reshapeRequired){const s=[],i=t.map(o=>o.rank);if(i.indexOf(null)===-1){const o=Oo(i);for(let r of t){const a=r.rank;for(let c=0;c<o-a;++c)r=Il(r,1);s.push(r)}return this.mergeFunction(s)}else{let o=!1;for(const c of t){const u=c.rank;if(u==null){const l=c.shape,d=l[0],h=l.slice(1).concat([d]);let f=j(c,[d].concat(Fo(l.slice(1))));f=Re(f,[1,0]),f=j(f,h),s.push(f),o=!0}else if(u>1){const l=Ci(1,u).concat([0]);s.push(Re(c,l)),o=!0}else s.push(c)}let r=this.mergeFunction(s);const a=r.rank;if(o){if(a==null){const c=r.shape,u=c.length,l=c[u-1],d=[l].concat(c.slice(0,c.length-1));r=j(Re(j(r,[-1,l]),[1,0]),d)}else if(a>1){const c=[a-1].concat(Ci(0,a-1));r=Re(r,c)}}return r}}else return this.mergeFunction(t)})}computeOutputShape(t){t=t;let e;t[0]==null?e=null:e=t[0].slice(1);for(let i=1;i<t.length;++i){const o=t[i]==null?null:t[i].slice(1);e=this.computeElementwiseOpOutputShape(e,o)}let s=[];for(const i of t)i!=null&&i[0]!==null&&s.push(i[0]);return s=$o(s),s.length===1?e=s.concat(e):e=[null].concat(e),e}computeMask(t,e){return tt(()=>{if(e==null)return null;if(!Array.isArray(e))throw new W("`mask` should be an Array");if(!Array.isArray(t))throw new W("`inputs` should be an Array");if(e.length!==t.length)throw new W(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${t.length} vs ${e.length})`);if(e.every(i=>i==null))return null;e=e.map(i=>i==null?i:fs(i,0));let s=e[0];for(let i=1;i<e.length-1;++i)s=uo(s,e[i]);return s})}}class cT extends Kr{constructor(t){super(t)}mergeFunction(t){return tt(()=>{let e=t[0].clone();for(let s=1;s<t.length;++s)e=yt(e,t[s]);return e})}}cT.className="Add";xt(cT);class uT extends Kr{constructor(t){super(t)}mergeFunction(t){return tt(()=>{let e=t[0].clone();for(let s=1;s<t.length;++s)e=z(e,t[s]);return e})}}uT.className="Multiply";xt(uT);class lT extends Kr{constructor(t){super(t)}mergeFunction(t){return tt(()=>{let e=t[0].clone();for(let s=1;s<t.length;++s)e=yt(e,t[s]);return z(1/t.length,e)})}}lT.className="Average";xt(lT);class dT extends Kr{constructor(t){super(t)}mergeFunction(t){return tt(()=>{let e=t[0];for(let s=1;s<t.length;++s)e=dn(e,t[s]);return e})}}dT.className="Maximum";xt(dT);class hT extends Kr{constructor(t){super(t)}mergeFunction(t){return tt(()=>{let e=t[0];for(let s=1;s<t.length;++s)e=Do(e,t[s]);return e})}}hT.className="Minimum";xt(hT);class fT extends Kr{constructor(t){super(t),this.DEFAULT_AXIS=-1,t==null&&(t={}),this.axis=t.axis==null?this.DEFAULT_AXIS:t.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(t){if(!(Array.isArray(t)&&Array.isArray(t[0]))||t.length===1)throw new W("A `Concatenate` layer should be called on a list of at least 2 inputs");t=t;let e=!0;for(const i of t)if(i!=null){e=!1;break}if(e)return;const s=[];for(let i=0;i<t.length;++i){const o=t[i].slice();o.splice(this.axis,1);let r=!1;for(const a of s)if(Pe(a,o)){r=!0;break}r||s.push(o)}if(s.length>1)throw new W("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(t))}mergeFunction(t){return tt(()=>Ex(t,this.axis))}computeOutputShape(t){if(!(Array.isArray(t)&&Array.isArray(t[0])))throw new W("A `Concatenate` layer should be called on a list of inputs.");const e=t,s=e[0].slice(),i=this.axis<0?s.length+this.axis:this.axis;for(const o of e.slice(1)){if(s[i]==null||o[i]==null){s[i]=null;break}s[i]+=o[i]}return s}computeMask(t,e){if(e==null)return null;if(!Array.isArray(e))throw new W("`mask` should be an array for Concatenate");if(!Array.isArray(t))throw new W("`inputs` should be an array for Concatenate");if(e.length!==t.length)throw new W(`Mismatch in the length of mask (${e.length}) and the legnth of inputs (${t.length})`);return tt(()=>{let s=!0;if(e.forEach(r=>{if(r!=null){s=!1;return}}),s)return null;const i=[];for(let r=0;r<t.length;++r)e[r]==null?i.push(Nt(ei(t[r]),"bool")):e[r].rank<t[r].rank?i.push(fs(e[r],-1)):i.push(e[r]);const o=Xn(i,this.axis);return p_(o,-1,!1)})}getConfig(){const t={axis:this.axis},e=super.getConfig();return Object.assign(t,e),t}}fT.className="Concatenate";xt(fT);function Fc(n,t){for(;n<0;)n+=t;return n}function A6(n,t,e){if(n.shape.length>3||t.shape.length>3)throw new me("batchDot is not implemented for tensors of 4D or higher rank yet");if(k(n.shape.length>=2,()=>`batchDot requires the rank of x to be >= 2, but got ${n.shape.length}`),k(n.shape.length>=2,()=>`batchDot requires the rank of y to be >= 2, but got ${t.shape.length}`),typeof e=="number"&&(e=[e,e]),n.dtype==="complex64"||t.dtype==="complex64")throw new me("batchDot is not implemented for complex64-type Tensors yet.");const s=n.shape.length,i=t.shape.length;e==null&&(e=[s-1,i-2]);const o=e;return tt(()=>{let r;if(s>i){r=s-i;const c=[];for(let u=0;u<r;++u)c.push(1);t=j(t,t.shape.concat(c))}else if(i>s){r=i-s;const c=[];for(let u=0;u<r;++u)c.push(1);n=j(n,n.shape.concat(c))}else r=0;let a;if(n.shape.length===2&&t.shape.length===2)o[0]===o[1]?a=Yt(z(n,t),o[0]):a=Yt(z(Re(n,[1,0]),t),o[1]);else{const c=o[0]!==n.shape.length-1,u=o[1]===t.shape.length-1;a=Fe(n,t,c,u)}if(r>0){let c;s>i?c=s+i-3:c=s-1;const u=[];for(let l=c;l<c+r;++l)u.push(l);a=vl(a,u)}return a.shape.length===1&&(a=fs(a,1)),a})}class pT extends Kr{constructor(t){super(t),this.axes=t.axes,this.normalize=t.normalize==null?!1:t.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(t){k(Array.isArray(t)&&t.length===2&&Array.isArray(t[0])&&Array.isArray(t[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");const e=t[0],s=t[1];if(e.length>3||s.length>3)throw new me("Dot layer does not support tensors of 4D or higher rank yet.");const i=this.interpretAxes(e,s);if(e[i[0]]!==s[i[1]])throw new W(`Dimension incompatibility: ${e[i[0]]} !== ${s[i[1]]}`)}mergeFunction(t){if(t.length!==2)throw new W(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${t.length} input(s).`);let e=t[0],s=t[1],i;return Array.isArray(this.axes)?i=this.axes.map((o,r)=>Fc(o,t[r].shape.length)):i=[Fc(this.axes,e.shape.length),Fc(this.axes,s.shape.length)],this.normalize&&(e=dh(e,i[0]),s=dh(s,i[1])),A6(e,s,i)}interpretAxes(t,e){let s;return Array.isArray(this.axes)?s=this.axes:s=[Fc(this.axes,t.length),Fc(this.axes,e.length)],s}computeOutputShape(t){k(Array.isArray(t)&&t.length===2&&Array.isArray(t[0])&&Array.isArray(t[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");const e=t[0].slice(),s=t[1].slice();if(e.length>3||s.length>3)throw new me("Dot layer does not support tensors of 4D or higher rank yet.");const i=this.interpretAxes(e,s);e.splice(i[0],1),s.splice(i[1],1),s.splice(0,1);const o=e.concat(s);return o.length===1&&o.push(1),o}computeMask(t,e){return null}getConfig(){const t={axes:this.axes,normalize:this.normalize},e=super.getConfig();return Object.assign(t,e),t}}pT.className="Dot";xt(pT);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class mT extends _e{constructor(t){super(t),this.supportsMasking=!0,this.stddev=t.stddev}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={stddev:this.stddev};return Object.assign(e,t),e}call(t,e){return tt(()=>{this.invokeCallHook(t,e);const s=ie(t);return Ml(()=>yt(ep(s.shape,0,this.stddev),s),()=>s,e.training||!1)})}}mT.className="GaussianNoise";xt(mT);class gT extends _e{constructor(t){super(t),this.supportsMasking=!0,this.rate=t.rate}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={rate:this.rate};return Object.assign(e,t),e}call(t,e){return tt(()=>{this.invokeCallHook(t,e);const s=ie(t);return this.rate>0&&this.rate<1?Ml(()=>{const o=Math.sqrt(this.rate/(1-this.rate));return z(s,ep(s.shape,1,o))},()=>s,e.training||!1):s})}}gT.className="GaussianDropout";xt(gT);class xT extends _e{constructor(t){super(t),this.supportsMasking=!0,this.rate=t.rate,this.noiseShape=t.noiseShape}_getNoiseShape(t){return this.noiseShape||ie(t).shape}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={rate:this.rate};return Object.assign(e,t),e}call(t,e){return tt(()=>{if(this.rate<1&&this.rate>0){const s=this._getNoiseShape(t);return Ml(()=>{const o=ie(t),a=-1.6732632423543772*1.0507009873554805;let c=Hr(wl(s),this.rate);c=Li(c,"float32");const u=((1-this.rate)*(1+this.rate*a**2))**-.5,l=-u*a*this.rate,d=yt(z(o,c),z(yt(c,-1),a));return yt(z(d,u),l)},()=>ie(t),e.training||!1)}return t})}}xT.className="AlphaDropout";xt(xT);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function du(n,t,e,s,i,o=.001){let r;if(n.rank===2)r=u$(n,t,e,s,i,o);else if(n.rank===3)r=d$(n,t,e,s,i,o);else if(n.rank===4)r=f$(n,t,e,s,i,o);else throw new me(`batchNormalization is not implemented for array of rank ${n.rank} yet`);return r}function N6(n,t,e,s,i=.001){return tt(()=>{const o=$g(n,s),r=o.mean,a=o.variance;return[du(n,r,a,e,t,i),r,a]})}function k6(n,t,e,s,i=.001){return tt(()=>{const o=$g(n,s),r=o.mean,a=o.variance,c=[];for(const p of Ci(0,n.rank))s.indexOf(p)!==-1?c.push(1):c.push(n.shape[p]);const u=j(r,c),l=j(a,c),d=t==null?null:j(t,c),h=e==null?null:j(e,c);return[du(n,u,l,h,d,i),r,a]})}function D6(n,t,e,s,i=.001){return Pe(s.slice().sort(),Ci(0,n.rank-1))?N6(n,t,e,s,i):k6(n,t,e,s,i)}class yT extends _e{constructor(t){t==null&&(t={}),super(t),this.supportsMasking=!0,this.axis=t.axis==null?-1:t.axis,this.momentum=t.momentum==null?.99:t.momentum,this.epsilon=t.epsilon==null?.001:t.epsilon,this.center=t.center==null?!0:t.center,this.scale=t.scale==null?!0:t.scale,this.betaInitializer=nn(t.betaInitializer||"zeros"),this.gammaInitializer=nn(t.gammaInitializer||"ones"),this.movingMeanInitializer=nn(t.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=nn(t.movingVarianceInitializer||"ones"),this.betaConstraint=En(t.betaConstraint),this.gammaConstraint=En(t.gammaConstraint),this.betaRegularizer=sn(t.betaRegularizer),this.gammaRegularizer=sn(t.gammaRegularizer)}build(t){t=Ne(t);const e=this.axis>=0?this.axis:this.axis+t.length,s=t[e];if(s==null)throw new W(`Axis ${e} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(t)}.`);this.inputSpec=[new Sn({ndim:t.length,axes:{[e]:s}})];const i=[s];this.scale&&(this.gamma=this.addWeight("gamma",i,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",i,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",i,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",i,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(t,e){return tt(()=>{const s=e.training==null?!1:e.training,i=ie(t),o=i.shape,r=o.length,a=Ci(0,r),c=this.axis>=0?this.axis:this.axis+r;a.splice(c,1);const u=Or(1,r);u[c]=o[c];const l=a.slice();l.sort();const d=!Pe(l,Ci(0,r).slice(0,r-1)),h=()=>{if(d){const y=j(this.movingMean.read(),u),w=j(this.movingVariance.read(),u),b=this.center?j(this.beta.read(),u):null,_=this.scale?j(this.gamma.read(),u):null;return du(i,y,w,b,_,this.epsilon)}else return du(i,this.movingMean.read(),this.movingVariance.read(),this.beta==null?null:this.beta.read(),this.gamma==null?null:this.gamma.read(),this.epsilon)};if(!s)return h();const[f,p,x]=D6(i,this.gamma.read(),this.beta.read(),a,this.epsilon),g=(y,w,b)=>{tt(()=>{const _=1-b,T=y.read(),E=z(ee(T,w),_);y.write(ee(T,E))})};return(()=>{g(this.movingMean,p,this.momentum),g(this.movingVariance,x,this.momentum)})(),f})}getConfig(){const t={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:an(this.betaInitializer),gammaInitializer:an(this.gammaInitializer),movingMeanInitializer:an(this.movingMeanInitializer),movingVarianceInitializer:an(this.movingVarianceInitializer),betaRegularizer:je(this.betaRegularizer),gammaRegularizer:je(this.gammaRegularizer),betaConstraint:Tn(this.betaConstraint),gammaConstraint:Tn(this.gammaConstraint)},e=super.getConfig();return Object.assign(t,e),t}}yT.className="BatchNormalization";xt(yT);class bT extends _e{constructor(t){if(t==null&&(t={}),super(t),this.axis=t.axis==null?-1:t.axis,typeof this.axis=="number"){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else if(Array.isArray(this.axis)){for(const e of this.axis)if(!Number.isInteger(e))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}else throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);this.epsilon=t.epsilon==null?.001:t.epsilon,this.center=t.center==null?!0:t.center,this.scale=t.scale==null?!0:t.scale,this.betaInitializer=nn(t.betaInitializer||"zeros"),this.gammaInitializer=nn(t.gammaInitializer||"ones"),this.betaRegularizer=sn(t.betaRegularizer),this.gammaRegularizer=sn(t.gammaRegularizer),this.supportsMasking=!0}build(t){t=Ne(t);const e=t.length;typeof this.axis=="number"&&(this.axis=[this.axis]);for(let o=0;o<this.axis.length;++o)this.axis[o]<0&&(this.axis[o]+=e);for(const o of this.axis)if(o<0||o>=e)throw new Error(`Invalid axis: ${o}`);if(this.axis.length!==$o(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);const s=this.axis.map(o=>t[o]),i=!0;this.scale?this.gamma=this.addWeight("gamma",s,"float32",this.gammaInitializer,this.gammaRegularizer,i):this.gamma=null,this.center?this.beta=this.addWeight("beta",s,"float32",this.betaInitializer,this.betaRegularizer,i):this.beta=null,this.built=!0}call(t,e){const s=ie(t),i=s.shape,o=i.length;return tt(()=>{let{mean:a,variance:c}=$g(s,this.axis,!0);const u=Or(1,o);for(const x of this.axis)u[x]=i[x];const l=x=>x!=null&&x.shape.length!==o?j(x,u):x;let d=this.scale?l(this.gamma.read()):null,h=this.center?l(this.beta.read()):null;const f=[],p=[];for(let x=0;x<o;++x)this.axis.indexOf(x)!==-1?(f.push(i[x]),p.push(1)):(f.push(1),p.push(i[x]));return a=xi(a,f),c=xi(c,f),d!=null&&(d=xi(d,p)),h!=null&&(h=xi(h,p)),du(s,a,c,h,d,this.epsilon)})}getConfig(){const t={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:an(this.betaInitializer),gammaInitializer:an(this.gammaInitializer),betaRegularizer:je(this.betaRegularizer),gammaRegularizer:je(this.gammaRegularizer)},e=super.getConfig();return Object.assign(t,e),t}}bT.className="LayerNormalization";xt(bT);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function $6(n,t,e){return tt(()=>{if(n.rank!==4)throw new W(`temporalPadding expects input tensor to be 4-D, but received a ${n.rank}-D tensor.`);if(t==null&&(t=[[1,1],[1,1]]),t.length!==2||t[0].length!==2||t[1].length!==2)throw new W("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(e==null&&(e=Si()),e!=="channelsLast"&&e!=="channelsFirst")throw new W(`Unknown data format: ${e}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let s;return e==="channelsFirst"?s=[[0,0],[0,0],t[0],t[1]]:s=[[0,0],t[0],t[1],[0,0]],Fg(n,s)})}class wT extends _e{constructor(t){if(t==null&&(t={}),super(t),this.dataFormat=t.dataFormat==null?Si():t.dataFormat,t.padding==null)this.padding=[[1,1],[1,1]];else if(typeof t.padding=="number")this.padding=[[t.padding,t.padding],[t.padding,t.padding]];else{if(t.padding=t.padding,t.padding.length!==2)throw new W(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${t.padding.length} array.`);let e,s;if(typeof t.padding[0]=="number")e=[t.padding[0],t.padding[0]],s=[t.padding[1],t.padding[1]];else{if(t.padding=t.padding,t.padding[0].length!==2)throw new W(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${t.padding[0].length} array.`);if(e=t.padding[0],t.padding[1].length!==2)throw new W(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${t.padding[1].length} array.`);s=t.padding[1]}this.padding=[e,s]}this.inputSpec=[new Sn({ndim:4})]}computeOutputShape(t){t=Ne(t);let e,s;return this.dataFormat==="channelsFirst"?(t[2]!=null&&t[2]>=0?e=t[2]+this.padding[0][0]+this.padding[0][1]:e=null,t[3]!=null&&t[3]>=0?s=t[3]+this.padding[1][0]+this.padding[1][1]:s=null,[t[0],t[1],e,s]):(t[1]!=null&&t[1]>=0?e=t[1]+this.padding[0][0]+this.padding[0][1]:e=null,t[2]!=null&&t[2]>=0?s=t[2]+this.padding[1][0]+this.padding[1][1]:s=null,[t[0],e,s,t[3]])}call(t,e){return tt(()=>$6(ie(t),this.padding,this.dataFormat))}getConfig(){const t={padding:this.padding,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}wT.className="ZeroPadding2D";xt(wT);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function up(n,t,e,s,i,o){return tt(()=>{gn(i),PC(o),Ls(s),e==null&&(e=[1,1]),s==null&&(s="valid"),i==null&&(i=Si()),o==null&&(o="max"),n=Ux(n,i);let r;const a=s==="same"?"same":"valid";return o==="max"?r=Dg(n,t,e,a):r=Cg(n,t,e,a),i==="channelsFirst"&&(r=Re(r,[0,3,1,2])),r})}function vT(n,t,e,s,i,o){return tt(()=>{gn(i),PC(o),Ls(s),e==null&&(e=[1,1,1]),s==null&&(s="valid"),i==null&&(i=Si()),o==null&&(o="max"),n=OS(n,i);let r;const a=s==="same"?"same":"valid";return o==="max"?r=ZF(n,t,e,a):r=Q4(n,t,e,a),i==="channelsFirst"&&(r=Re(r,[0,4,1,2,3])),r})}class _T extends _e{constructor(t){if(t.poolSize==null&&(t.poolSize=2),super(t),typeof t.poolSize=="number")this.poolSize=[t.poolSize];else if(Array.isArray(t.poolSize)&&t.poolSize.length===1&&typeof t.poolSize[0]=="number")this.poolSize=t.poolSize;else throw new W(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(t.poolSize)}`);if(Nn(this.poolSize,"poolSize"),t.strides==null)this.strides=this.poolSize;else if(typeof t.strides=="number")this.strides=[t.strides];else if(Array.isArray(t.strides)&&t.strides.length===1&&typeof t.strides[0]=="number")this.strides=t.strides;else throw new W(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(t.strides)}`);Nn(this.strides,"strides"),this.padding=t.padding==null?"valid":t.padding,Ls(this.padding),this.inputSpec=[new Sn({ndim:3})]}computeOutputShape(t){t=Ne(t);const e=wi(t[1],this.poolSize[0],this.padding,this.strides[0]);return[t[0],e,t[2]]}call(t,e){return tt(()=>{this.invokeCallHook(t,e),t=Il(ie(t),2);const s=this.poolingFunction(ie(t),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return vl(s,[2])})}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides},e=super.getConfig();return Object.assign(t,e),t}}class CT extends _T{constructor(t){super(t)}poolingFunction(t,e,s,i,o){return gn(o),Ls(i),up(t,e,s,i,o,"max")}}CT.className="MaxPooling1D";xt(CT);class ST extends _T{constructor(t){super(t)}poolingFunction(t,e,s,i,o){return gn(o),Ls(i),up(t,e,s,i,o,"avg")}}ST.className="AveragePooling1D";xt(ST);class TT extends _e{constructor(t){if(t.poolSize==null&&(t.poolSize=[2,2]),super(t),this.poolSize=Array.isArray(t.poolSize)?t.poolSize:[t.poolSize,t.poolSize],t.strides==null)this.strides=this.poolSize;else if(Array.isArray(t.strides)){if(t.strides.length!==2)throw new W(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${t.strides.length}.`);this.strides=t.strides}else this.strides=[t.strides,t.strides];Nn(this.poolSize,"poolSize"),Nn(this.strides,"strides"),this.padding=t.padding==null?"valid":t.padding,this.dataFormat=t.dataFormat==null?"channelsLast":t.dataFormat,gn(this.dataFormat),Ls(this.padding),this.inputSpec=[new Sn({ndim:4})]}computeOutputShape(t){t=Ne(t);let e=this.dataFormat==="channelsFirst"?t[2]:t[1],s=this.dataFormat==="channelsFirst"?t[3]:t[2];return e=wi(e,this.poolSize[0],this.padding,this.strides[0]),s=wi(s,this.poolSize[1],this.padding,this.strides[1]),this.dataFormat==="channelsFirst"?[t[0],t[1],e,s]:[t[0],e,s,t[3]]}call(t,e){return tt(()=>(this.invokeCallHook(t,e),this.poolingFunction(ie(t),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}class ET extends TT{constructor(t){super(t)}poolingFunction(t,e,s,i,o){return gn(o),Ls(i),up(t,e,s,i,o,"max")}}ET.className="MaxPooling2D";xt(ET);class IT extends TT{constructor(t){super(t)}poolingFunction(t,e,s,i,o){return gn(o),Ls(i),up(t,e,s,i,o,"avg")}}IT.className="AveragePooling2D";xt(IT);class RT extends _e{constructor(t){if(t.poolSize==null&&(t.poolSize=[2,2,2]),super(t),this.poolSize=Array.isArray(t.poolSize)?t.poolSize:[t.poolSize,t.poolSize,t.poolSize],t.strides==null)this.strides=this.poolSize;else if(Array.isArray(t.strides)){if(t.strides.length!==3)throw new W(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${t.strides.length}.`);this.strides=t.strides}else this.strides=[t.strides,t.strides,t.strides];Nn(this.poolSize,"poolSize"),Nn(this.strides,"strides"),this.padding=t.padding==null?"valid":t.padding,this.dataFormat=t.dataFormat==null?"channelsLast":t.dataFormat,gn(this.dataFormat),Ls(this.padding),this.inputSpec=[new Sn({ndim:5})]}computeOutputShape(t){t=Ne(t);let e=this.dataFormat==="channelsFirst"?t[2]:t[1],s=this.dataFormat==="channelsFirst"?t[3]:t[2],i=this.dataFormat==="channelsFirst"?t[4]:t[3];return e=wi(e,this.poolSize[0],this.padding,this.strides[0]),s=wi(s,this.poolSize[1],this.padding,this.strides[1]),i=wi(i,this.poolSize[2],this.padding,this.strides[2]),this.dataFormat==="channelsFirst"?[t[0],t[1],e,s,i]:[t[0],e,s,i,t[4]]}call(t,e){return tt(()=>(this.invokeCallHook(t,e),this.poolingFunction(ie(t),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}class MT extends RT{constructor(t){super(t)}poolingFunction(t,e,s,i,o){return gn(o),Ls(i),vT(t,e,s,i,o,"max")}}MT.className="MaxPooling3D";xt(MT);class AT extends RT{constructor(t){super(t)}poolingFunction(t,e,s,i,o){return gn(o),Ls(i),vT(t,e,s,i,o,"avg")}}AT.className="AveragePooling3D";xt(AT);class NT extends _e{constructor(t){super(t),this.inputSpec=[new Sn({ndim:3})]}computeOutputShape(t){return[t[0],t[2]]}call(t,e){throw new me}}class kT extends NT{constructor(t){super(t||{})}call(t,e){return tt(()=>{const s=ie(t);return bn(s,1)})}}kT.className="GlobalAveragePooling1D";xt(kT);class DT extends NT{constructor(t){super(t||{})}call(t,e){return tt(()=>{const s=ie(t);return bi(s,1)})}}DT.className="GlobalMaxPooling1D";xt(DT);class $T extends _e{constructor(t){super(t),this.dataFormat=t.dataFormat==null?"channelsLast":t.dataFormat,gn(this.dataFormat),this.inputSpec=[new Sn({ndim:4})]}computeOutputShape(t){return t=t,this.dataFormat==="channelsLast"?[t[0],t[3]]:[t[0],t[1]]}call(t,e){throw new me}getConfig(){const t={dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}class FT extends $T{call(t,e){return tt(()=>{const s=ie(t);return this.dataFormat==="channelsLast"?bn(s,[1,2]):bn(s,[2,3])})}}FT.className="GlobalAveragePooling2D";xt(FT);class PT extends $T{call(t,e){return tt(()=>{const s=ie(t);return this.dataFormat==="channelsLast"?bi(s,[1,2]):bi(s,[2,3])})}}PT.className="GlobalMaxPooling2D";xt(PT);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class LT extends _e{constructor(t){super(t),this.layer=t.layer}build(t){this.built=!0}get trainable(){return this.layer!=null?this.layer.trainable:!1}set trainable(t){this.layer!=null&&(this.layer.trainable=t)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(t){this.layer.setWeights(t)}getConfig(){const t={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},e=super.getConfig();return Object.assign(t,e),t}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),this.layer!=null&&this.layer.setFastWeightInitDuringBuild(t)}static fromConfig(t,e,s={}){const i=e.layer,o=ro(i,s);delete e.layer;const r={layer:o};return Object.assign(r,e),new t(r)}}class OT extends LT{constructor(t){super(t),this.supportsMasking=!0}build(t){if(t=Ne(t),t.length<3)throw new W(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(t)}`);this.inputSpec=[{shape:t}];const e=[t[0]].concat(t.slice(2));this.layer.built||(this.layer.build(e),this.layer.built=!0),super.build(t)}computeOutputShape(t){t=Ne(t);const e=[t[0]].concat(t.slice(2)),s=this.layer.computeOutputShape(e),i=t[1];return[s[0],i].concat(s.slice(1))}call(t,e){return tt(()=>(t=ie(t),qS((r,a)=>[ie(this.layer.call(r,e)),[]],t,[],!1,null,null,!1,!0)[1]))}}OT.className="TimeDistributed";xt(OT);function F6(n){jr(nB,"BidirectionalMergeMode",n)}const P6="concat";class UT extends LT{constructor(t){super(t);const e=t.layer.getConfig(),s={};s.className=t.layer.getClassName(),s.config=e,this.forwardLayer=ro(s),e.goBackwards=e.goBackwards!==!0;const i={};if(i.className=t.layer.getClassName(),i.config=e,this.backwardLayer=ro(i),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=t.mergeMode===void 0?P6:t.mergeMode,F6(this.mergeMode),t.weights)throw new me("weights support is not implemented for Bidirectional layer yet.");this._stateful=t.layer.stateful,this.returnSequences=t.layer.returnSequences,this.returnState=t.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=t.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(t){this._trainable=t,this.forwardLayer!=null&&(this.forwardLayer.trainable=t),this.backwardLayer!=null&&(this.backwardLayer.trainable=t)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(t){const e=t.length,s=Math.floor(e/2);this.forwardLayer.setWeights(t.slice(0,s)),this.backwardLayer.setWeights(t.slice(s))}computeOutputShape(t){let e=this.forwardLayer.computeOutputShape(t);Array.isArray(e)&&Array.isArray(e[0])||(e=[e]),e=e;let s,i,o;return this.returnState&&(o=e.slice(1)),s=e[0],s=s,this.mergeMode==="concat"?(s[s.length-1]*=2,i=[s]):this.mergeMode==null?i=[s,s.slice()]:i=[s],this.returnState?this.mergeMode==null?i.concat(o).concat(o.slice()):[s].concat(o).concat(o.slice()):ps(i)}apply(t,e){let s=e==null?null:e.initialState,i=e==null?null:e.constants;e==null&&(e={});const o=XS(t,s,i,this.numConstants);if(t=o.inputs,s=o.initialState,i=o.constants,Array.isArray(t)&&(s=t.slice(1),t=t[0]),(s==null||s.length===0)&&i==null)return super.apply(t,e);const r=[],a=[];if(s!=null){const u=s.length;if(u%2>0)throw new W("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");e.initialState=s,r.push(...s);const l=s.map(d=>new Sn({shape:d.shape}));this.forwardLayer.stateSpec=l.slice(0,u/2),this.backwardLayer.stateSpec=l.slice(u/2),a.push(...l)}if(i!=null)throw new me("Support for constants in Bidirectional layers is not implemented yet.");const c=r[0]instanceof Vi;for(const u of r)if(u instanceof Vi!==c)throw new W("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(c){const u=[t].concat(r),l=this.inputSpec.concat(a),d=this.inputSpec;this.inputSpec=l;const h=super.apply(u,e);return this.inputSpec=d,h}else return super.apply(t,e)}call(t,e){return tt(()=>{const s=e.initialState;let i,o;if(s==null)i=this.forwardLayer.call(t,e),o=this.backwardLayer.call(t,e);else{const c=s.slice(0,s.length/2),u=s.slice(s.length/2);i=this.forwardLayer.call(t,Object.assign(e,{initialState:c})),o=this.backwardLayer.call(t,Object.assign(e,{initialState:u}))}let r;this.returnState&&(Array.isArray(i)&&(r=i.slice(1).concat(o.slice(1))),i=i[0],o=o[0]),this.returnSequences&&(o=Pr(o,1));let a;return this.mergeMode==="concat"?a=Ex([i,o]):this.mergeMode==="sum"?a=yt(i,o):this.mergeMode==="ave"?a=z(.5,yt(i,o)):this.mergeMode==="mul"?a=z(i,o):this.mergeMode==null&&(a=[i,o]),this.returnState?this.mergeMode==null?a.concat(r):[a].concat(r):a})}resetStates(t){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(t){Cr(this.forwardLayer.name,()=>{this.forwardLayer.build(t)}),Cr(this.backwardLayer.name,()=>{this.backwardLayer.build(t)}),this.built=!0}computeMask(t,e){Array.isArray(e)&&(e=e[0]);let s;if(this.returnSequences?this.mergeMode==null?s=[e,e]:s=e:this.mergeMode==null?s=[null,null]:s=null,this.returnState){const o=this.forwardLayer.states.map(r=>null);return Array.isArray(s)?s.concat(o).concat(o):[s].concat(o).concat(o)}else return s}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),this.forwardLayer!=null&&this.forwardLayer.setFastWeightInitDuringBuild(t),this.backwardLayer!=null&&this.backwardLayer.setFastWeightInitDuringBuild(t)}getConfig(){const t={mergeMode:this.mergeMode},e=super.getConfig();return Object.assign(t,e),t}static fromConfig(t,e){const s=ro(e.layer);if(delete e.layer,e.numConstants!=null)throw new me("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const i=e;return i.layer=s,new t(i)}}UT.className="Bidirectional";xt(UT);/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class BT extends _e{constructor(t){super(t),this.scale=t.scale,t.offset?this.offset=t.offset:this.offset=0}getConfig(){const t={scale:this.scale,offset:this.offset},e=super.getConfig();return Object.assign(t,e),t}call(t,e){return tt(()=>(t=ie(t),t.dtype!=="float32"&&(t=Li(t,"float32")),yt(z(t,this.scale),this.offset)))}}BT.className="Rescaling";xt(BT);/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const{resizeBilinear:L6,cropAndResize:O6}=io;class zT extends _e{constructor(t){super(t),this.height=t.height,this.width=t.width}centerCrop(t,e,s,i,o,r,a,c){return tt(()=>{let u,l=!1;const d=e/r,h=s/a,f=(i+e)/r,p=(o+s)/a,x=[d,h,f,p],g=[];t.rank===3?(l=!0,u=zi([t])):u=t;for(let _=0;_<u.shape[0];_++)g.push(x);const m=qs(g,[g.length,4]),y=au(0,g.length,1,"int32"),b=O6(u,m,y,[i,o],"nearest");return Li(l?ie(Lr(b)):b,c)})}upsize(t,e,s,i){return tt(()=>{const o=L6(t,[e,s]);return Li(o,i)})}call(t,e){return tt(()=>{const s=ie(t),i=s.dtype,o=s.shape,r=o[o.length-3],a=o[o.length-2];let c=0;r!==this.height&&(c=Math.floor((r-this.height)/2));let u=0;return a!==this.width&&(u=Math.floor((a-this.width)/2),u===0&&(u=1)),c>=0&&u>=0?this.centerCrop(s,c,u,this.height,this.width,r,a,i):this.upsize(t,this.height,this.width,i)})}getConfig(){const t={height:this.height,width:this.width},e=super.getConfig();return Object.assign(t,e),t}computeOutputShape(t){t=Ne(t);const e=t.length-3,s=t.length-2;return t[e]=this.height,t[s]=this.width,t}}zT.className="CenterCrop";xt(zT);/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function U6(n,t,e,s){let i=ie(n);if(i.dtype!=="int32"&&(i=Li(i,"int32")),t==="int")return i;const o=i.shape;if(i.rank===0&&(i=fs(i,-1)),t==="oneHot"&&i.shape[i.shape.length-1]!==1&&(i=fs(i,-1)),i.rank>2)throw new W(`When outputMode is not int, maximum output rank is 2 Received outputMode ${t} and input shape ${o} which would result in output rank ${i.rank}.`);const r=["multiHot","oneHot"].includes(t),a=i;let c;if(typeof s<"u"&&t==="count"?c=Ob(a,s,e,r):c=Ob(a,[],e,r),t!=="tfIdf")return c;if(s)return z(c,s);throw new W("When outputMode is 'tfIdf', weights must be provided.")}/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class VT extends _e{constructor(t){super(t),this.numTokens=t.numTokens,t.outputMode?this.outputMode=t.outputMode:this.outputMode="multiHot"}getConfig(){const t={numTokens:this.numTokens,outputMode:this.outputMode},e=super.getConfig();return Object.assign(t,e),t}computeOutputShape(t){return t=Ne(t),t==null?[this.numTokens]:this.outputMode==="oneHot"&&t[t.length-1]!==1?(t.push(this.numTokens),t):(t[t.length-1]=this.numTokens,t)}call(t,e){return tt(()=>{t=ie(t),t.dtype!=="int32"&&(t=Li(t,"int32"));let s;if(typeof e.countWeights<"u"){if(this.outputMode!=="count")throw new W(`countWeights is not used when outputMode !== count.
              Received countWeights=${e.countWeights}`);s=ie(e.countWeights)}const i=bi(t),o=sh(t),r=as(this.numTokens,i).bufferSync().get(0),a=Hr(o,0).bufferSync().get(0);if(!(r&&a))throw new W(`Input values must be between 0 < values <= numTokens with numTokens=${this.numTokens}`);return U6(t,this.outputMode,this.numTokens,s)})}}VT.className="CategoryEncoding";xt(VT);/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const B6=["bilinear","nearest"],Tw=new Set(B6);class WT extends _e{constructor(t){if(super(t),this.height=t.height,this.width=t.width,t.interpolation)if(Tw.has(t.interpolation))this.interpolation=t.interpolation;else throw new W(`Invalid interpolation parameter: ${t.interpolation} is not implemented`);else this.interpolation="bilinear";this.cropToAspectRatio=!!t.cropToAspectRatio}computeOutputShape(t){t=Ne(t);const e=t[2];return[this.height,this.width,e]}getConfig(){const t={height:this.height,width:this.width,interpolation:this.interpolation,cropToAspectRatio:this.cropToAspectRatio},e=super.getConfig();return Object.assign(t,e),t}call(t,e){return tt(()=>{const s=[this.height,this.width];if(this.interpolation==="bilinear")return io.resizeBilinear(t,s,!this.cropToAspectRatio);if(this.interpolation==="nearest")return io.resizeNearestNeighbor(t,s,!this.cropToAspectRatio);throw new Error(`Interpolation is ${this.interpolation} but only ${[...Tw]} are supported`)})}}WT.className="Resizing";xt(WT);/**
 * @license
 * Copyright 2023 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class GT{constructor(t){this.seed=t}next(){if(this.seed!==void 0)return this.seed++}}GT.className="RandomSeed";/**
 * @license
 * Copyright 2023 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class HT extends _e{constructor(t){super(t),this.randomGenerator=new GT(t.seed)}getConfig(){const t={seed:this.randomGenerator.seed},e=super.getConfig();return Object.assign(t,e),t}}HT.className="BaseRandomLayer";/**
 * @license
 * Copyright 2023 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const z6=["bilinear","nearest"],Ew=new Set(z6);class XT extends HT{constructor(t){super(t);const{factor:e,interpolation:s="bilinear"}=t;if(this.factor=e,Array.isArray(this.factor)&&this.factor.length===2)this.widthLower=this.factor[0],this.widthUpper=this.factor[1];else if(!Array.isArray(this.factor)&&this.factor>0)this.widthLower=-this.factor,this.widthUpper=this.factor;else throw new W(`Invalid factor: ${this.factor}. Must be positive number or tuple of 2 numbers`);if(this.widthLower<-1||this.widthUpper<-1)throw new W(`factor must have values larger than -1. Got: ${this.factor}`);if(this.widthUpper<this.widthLower)throw new W(`factor cannot have upper bound less than lower bound.
        Got upper bound: ${this.widthUpper}.
        Got lower bound: ${this.widthLower}
      `);if(s)if(Ew.has(s))this.interpolation=s;else throw new W(`Invalid interpolation parameter: ${s} is not implemented`)}getConfig(){const t={factor:this.factor,interpolation:this.interpolation},e=super.getConfig();return Object.assign(t,e),t}computeOutputShape(t){t=Ne(t);const e=t[2];return[this.imgHeight,-1,e]}call(t,e){return tt(()=>{const s=ie(t);this.imgHeight=s.shape[s.shape.length-3];const i=s.shape[s.shape.length-2];this.widthFactor=wl([1],1+this.widthLower,1+this.widthUpper,"float32",this.randomGenerator.next());let o=this.widthFactor.dataSync()[0]*i;o=Math.round(o);const r=[this.imgHeight,o];switch(this.interpolation){case"bilinear":return io.resizeBilinear(t,r);case"nearest":return io.resizeNearestNeighbor(t,r);default:throw new Error(`Interpolation is ${this.interpolation}
          but only ${[...Ew]} are supported`)}})}}XT.className="RandomWidth";xt(XT);/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const V6=nt();V6.registerFlag("KEEP_INTERMEDIATE_TENSORS",()=>!1,n=>{n&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */var Iw;(function(n){n[n.DT_INVALID=0]="DT_INVALID",n[n.DT_FLOAT=1]="DT_FLOAT",n[n.DT_DOUBLE=2]="DT_DOUBLE",n[n.DT_INT32=3]="DT_INT32",n[n.DT_UINT8=4]="DT_UINT8",n[n.DT_INT16=5]="DT_INT16",n[n.DT_INT8=6]="DT_INT8",n[n.DT_STRING=7]="DT_STRING",n[n.DT_COMPLEX64=8]="DT_COMPLEX64",n[n.DT_INT64=9]="DT_INT64",n[n.DT_BOOL=10]="DT_BOOL",n[n.DT_QINT8=11]="DT_QINT8",n[n.DT_QUINT8=12]="DT_QUINT8",n[n.DT_QINT32=13]="DT_QINT32",n[n.DT_BFLOAT16=14]="DT_BFLOAT16",n[n.DT_QINT16=15]="DT_QINT16",n[n.DT_QUINT16=16]="DT_QUINT16",n[n.DT_UINT16=17]="DT_UINT16",n[n.DT_COMPLEX128=18]="DT_COMPLEX128",n[n.DT_HALF=19]="DT_HALF",n[n.DT_RESOURCE=20]="DT_RESOURCE",n[n.DT_VARIANT=21]="DT_VARIANT",n[n.DT_UINT32=22]="DT_UINT32",n[n.DT_UINT64=23]="DT_UINT64",n[n.DT_FLOAT_REF=101]="DT_FLOAT_REF",n[n.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",n[n.DT_INT32_REF=103]="DT_INT32_REF",n[n.DT_UINT8_REF=104]="DT_UINT8_REF",n[n.DT_INT16_REF=105]="DT_INT16_REF",n[n.DT_INT8_REF=106]="DT_INT8_REF",n[n.DT_STRING_REF=107]="DT_STRING_REF",n[n.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",n[n.DT_INT64_REF=109]="DT_INT64_REF",n[n.DT_BOOL_REF=110]="DT_BOOL_REF",n[n.DT_QINT8_REF=111]="DT_QINT8_REF",n[n.DT_QUINT8_REF=112]="DT_QUINT8_REF",n[n.DT_QINT32_REF=113]="DT_QINT32_REF",n[n.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",n[n.DT_QINT16_REF=115]="DT_QINT16_REF",n[n.DT_QUINT16_REF=116]="DT_QUINT16_REF",n[n.DT_UINT16_REF=117]="DT_UINT16_REF",n[n.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",n[n.DT_HALF_REF=119]="DT_HALF_REF",n[n.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",n[n.DT_VARIANT_REF=121]="DT_VARIANT_REF",n[n.DT_UINT32_REF=122]="DT_UINT32_REF",n[n.DT_UINT64_REF=123]="DT_UINT64_REF"})(Iw||(Iw={}));var Rw;(function(n){(function(t){t[t.LEGACY=0]="LEGACY",t[t.V1=1]="V1",t[t.V2=2]="V2"})(n.CheckpointFormatVersion||(n.CheckpointFormatVersion={}))})(Rw||(Rw={}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */var Mw;(function(n){n[n.FAIL=0]="FAIL",n[n.SHORTEST=1]="SHORTEST",n[n.LONGEST=2]="LONGEST"})(Mw||(Mw={}));/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ot(n,t){Array.isArray(n)||(n=[n]),n.forEach(e=>{e!=null&&k(e.dtype!=="complex64",()=>`${t} does not support complex64 tensors in the CPU backend.`)})}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const W6=V_;class lp extends I1{nextDataId(){return lp.nextDataId++}constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new f2(this,Ii())}write(t,e,s){this.firstUse&&(this.firstUse=!1,nt().get("IS_NODE")&&Ns(`
============================
Hi, looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, visit https://github.com/tensorflow/tfjs-node for more details. 
============================`));const i={id:this.nextDataId()};return this.data.set(i,{values:t,dtype:s,refCount:1}),i}makeTensorInfo(t,e,s){let i;if(e==="string"&&s!=null&&s.length>0&&_u(s[0])){const o=s.map(r=>ko(r));i=this.write(o,t,e)}else i=this.write(s,t,e);return{dataId:i,shape:t,dtype:e}}refCount(t){return this.data.has(t)?this.data.get(t).refCount:0}incRef(t){const e=this.data.get(t);e.refCount++}decRef(t){if(this.data.has(t)){const e=this.data.get(t);e.refCount--}}move(t,e,s,i,o){this.data.set(t,{values:e,dtype:i,refCount:o})}numDataIds(){return this.data.numDataIds()}async read(t){return this.readSync(t)}readSync(t){const{dtype:e,complexTensorInfos:s}=this.data.get(t);if(e==="complex64"){const i=this.readSync(s.real.dataId),o=this.readSync(s.imag.dataId);return lo(i,o)}return h9(this.data.get(t).values,e)}bufferSync(t){const e=this.readSync(t.dataId);if(t.dtype==="string")try{const s=e.map(i=>Lo(i));return we(t.shape,t.dtype,s)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return we(t.shape,t.dtype,e)}makeOutput(t,e,s){return Ii().makeTensorFromTensorInfo(this.makeTensorInfo(e,s,t),this)}disposeData(t,e=!1){if(this.data.has(t)){if(this.data.get(t).refCount--,!e&&this.data.get(t).refCount>0)return!1;const{complexTensorInfos:s}=this.data.get(t);s!=null&&(this.disposeData(s.real.dataId,!0),this.disposeData(s.imag.dataId,!0)),this.data.delete(t)}return!0}disposeIntermediateTensorInfo(t){this.disposeData(t.dataId)}async time(t){const e=hs();return t(),{kernelMs:hs()-e}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(t){Ot([t],"where");const e=this.readSync(t.dataId);return W6(t.shape,e)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}lp.nextDataId=0;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qT(n){const t=new Float32Array(n.length);for(let e=0;e<n.length;++e)t[e]=Math.abs(n[e]);return t}const G6=n=>{const{x:t}=n.inputs,e=n.backend;Ot(t,"abs");let s=new Float32Array(ct(t.shape));const i=e.data.get(t.dataId).values;return s=qT(i),e.makeOutput(s,t.shape,t.dtype)},H6={kernelName:Bh,backendName:"cpu",kernelFunc:G6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xn(n){return(t,e,s,i,o)=>{const r=de(t,e),a=r.length,c=Kt(r),u=ct(r),l=qn(o,u),d=t.length,h=e.length,f=Kt(t),p=Kt(e),x=ja(t,r),g=ja(e,r);if(x.length+g.length===0)for(let m=0;m<l.length;++m)l[m]=n(s[m%s.length],i[m%i.length]);else for(let m=0;m<l.length;++m){const y=cc(m,a,c),w=y.slice(-d);x.forEach(E=>w[E]=0);const b=Fi(w,d,f),_=y.slice(-h);g.forEach(E=>_[E]=0);const T=Fi(_,h,p);l[m]=n(s[b],i[T])}return[l,r]}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _s(n){const{inputs:t,backend:e}=n,{real:s,imag:i}=t,o=e.data.get(s.dataId).values,r=e.data.get(i.dataId).values,a=e.makeTensorInfo(s.shape,"complex64"),c=e.data.get(a.dataId);return c.complexTensorInfos={real:e.makeTensorInfo(s.shape,"float32",o),imag:e.makeTensorInfo(i.shape,"float32",r)},a}const X6={kernelName:B1,backendName:"cpu",kernelFunc:_s};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gh(n,t,e="float32"){if(e==="complex64"){const i=gh(n,t,"float32"),o=gh(n,t,"float32");return _s({inputs:{real:i,imag:o},backend:n})}const s=jn(ct(t),e);return n.makeTensorInfo(t,e,s)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Wi(n){const{inputs:t,backend:e}=n,{x:s}=t;return e.incRef(s.dataId),{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}const q6={kernelName:Wu,backendName:"cpu",kernelFunc:Wi};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ur(n){const{inputs:t,backend:e}=n,{input:s}=t,i=e.data.get(s.dataId).complexTensorInfos.real,o=e.data.get(i.dataId).values;return e.makeTensorInfo(i.shape,i.dtype,o)}const j6={kernelName:lg,backendName:"cpu",kernelFunc:Ur};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jT(n,t,e,s){if(s==="int32"){const i=Int32Array.from(n);return[t,"int32",i]}if(s==="bool"){const i=Gr([0],e),[o,r]=xn((a,c)=>a!==c?1:0)(t,[],n,i,"bool");return[r,"bool",o]}throw new Error(`Error in Cast: failed to cast ${e} to ${s}`)}function Vo(n){const{inputs:t,backend:e,attrs:s}=n,{x:i}=t,{dtype:o}=s;if(o==="complex64"){if(i.dtype==="complex64")return Wi({inputs:{x:i},backend:e});const l=gh(e,i.shape,i.dtype),d=Vo({inputs:{x:i},backend:e,attrs:{dtype:"float32"}}),h=_s({inputs:{real:d,imag:l},backend:e});return e.disposeIntermediateTensorInfo(l),e.disposeIntermediateTensorInfo(d),h}if(i.dtype==="complex64"){const l=Ur({inputs:{input:i},backend:e}),d=Vo({inputs:{x:l},backend:e,attrs:{dtype:o}});return e.disposeIntermediateTensorInfo(l),d}if(!g2(i.dtype,o)){const l=Wi({inputs:{x:i},backend:e});return{dataId:l.dataId,shape:l.shape,dtype:o}}const r=e.data.get(i.dataId).values,[a,c,u]=jT(r,i.shape,i.dtype,o);return e.makeTensorInfo(a,c,u)}const K6={kernelName:Au,backendName:"cpu",kernelFunc:Vo};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Rn(n,t,e,s){return e==null?({inputs:i,backend:o})=>{const{a:r,b:a}=i,c=o;Ot([r,a],n);const u=c.data.get(r.dataId).values,l=c.data.get(a.dataId).values,d=r.dtype==="string"?ho(u):u,h=r.dtype==="string"?ho(l):l,f=s||r.dtype,[p,x]=t(r.shape,a.shape,d,h,f);return c.makeTensorInfo(x,f,p)}:({inputs:i,backend:o})=>{const{a:r,b:a}=i,c=o;if(r.dtype==="complex64"||a.dtype==="complex64"){const u=Vo({inputs:{x:r},backend:c,attrs:{dtype:"complex64"}}),l=c.data.get(u.dataId),d=l.complexTensorInfos.real,h=l.complexTensorInfos.imag,f=c.data.get(d.dataId).values,p=c.data.get(h.dataId).values,x=Vo({inputs:{x:a},backend:c,attrs:{dtype:"complex64"}}),g=c.data.get(x.dataId),m=g.complexTensorInfos.real,y=g.complexTensorInfos.imag,w=c.data.get(m.dataId).values,b=c.data.get(y.dataId).values,[_,T,E]=e(r.shape,a.shape,f,p,w,b),I=c.makeTensorInfo(E,"float32",_),S=c.makeTensorInfo(E,"float32",T),v=_s({inputs:{real:I,imag:S},backend:c});return c.disposeIntermediateTensorInfo(u),c.disposeIntermediateTensorInfo(x),c.disposeIntermediateTensorInfo(I),c.disposeIntermediateTensorInfo(S),v}else{const u=c.data.get(r.dataId).values,l=c.data.get(a.dataId).values,d=s||r.dtype,[h,f]=t(r.shape,a.shape,u,l,d);return c.makeTensorInfo(f,d,h)}}}function Hx(n){return(t,e,s,i,o,r)=>{const a=de(t,e),c=ct(a),u=a.length,l=Kt(a),d=qn("float32",c),h=qn("float32",c),f=ja(t,a),p=ja(e,a),x=lo(s,i),g=lo(o,r),m=t.length,y=Kt(t),w=e.length,b=Kt(e);if(f.length+p.length===0)for(let _=0;_<d.length;_++){const T=_%x.length,E=_%g.length,I=n(x[T*2],x[T*2+1],g[E*2],g[E*2+1]);d[_]=I.real,h[_]=I.imag}else for(let _=0;_<d.length;_++){const T=cc(_,u,l),E=T.slice(-m);f.forEach(M=>E[M]=0);const I=Fi(E,m,y),S=T.slice(-w);p.forEach(M=>S[M]=0);const v=Fi(S,w,b),C=n(x[I*2],x[I*2+1],g[v*2],g[v*2+1]);d[_]=C.real,h[_]=C.imag}return[d,h,a]}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const KT=xn((n,t)=>n+t),Y6=Hx((n,t,e,s)=>({real:n+e,imag:t+s})),Ja=Rn(uc,KT,Y6),Z6={kernelName:uc,backendName:"cpu",kernelFunc:Ja};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xx(n,t,e,s,i){const o=ct(s),r=jn(i,e);for(let a=0;a<n.length;a++){const c=n[a];if(c<0)throw new Error("Input x must be non-negative!");c>=i||(o>0?r[c]+=t[a]:r[c]+=1)}return r}function YT(n,t,e,s=!1){const i=n.shape[0],o=n.shape[1],r=we([i,e],t.dtype);for(let a=0;a<i;a++)for(let c=0;c<o;c++){const u=n.get(a,c);if(u<0)throw new Error("Input x must be non-negative!");u>=e||(s?r.set(1,a,u):t.size>0?r.set(r.get(a,u)+t.get(a,c),a,u):r.set(r.get(a,u)+1,a,u))}return r}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ZT=xn((n,t)=>n&t),J6=Rn(U1,ZT),Q6={kernelName:U1,backendName:"cpu",kernelFunc:J6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Gi(n){return(t,e,s)=>{const i=fn(e,t.length);for(let o=0;o<t.length;++o)i[o]=n(t[o],s);return i}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ue(n,t,e){const s=Gi(t);return Zo(n,s,e)}function Zo(n,t,e){return({inputs:s,attrs:i,backend:o})=>{const{x:r}=s;Ot(r,n);const a=o,c=a.data.get(r.dataId).values;let u;if(r.dtype==="string"){if(!Array.isArray(c))throw new Error("String tensor's value was not an instance of Array");u=ho(c)}else u=c;const l=e||r.dtype,d=t(u,l,i);return a.makeTensorInfo(r.shape,l,d)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const JT=Gi(n=>Math.ceil(n)),t8=Zo(Nu,JT),e8={kernelName:Nu,backendName:"cpu",kernelFunc:t8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QT(n,t,e,s){const i=fn(e,ct(t));if(s&&e!=="string"){let o=0;n.forEach(r=>{const a=ct(r.shape);i.set(r.vals,o),o+=a})}else{let o=0;n.forEach(r=>{const a=e==="string"?ho(r.vals):r.vals;let c=0;for(let u=0;u<r.shape[0];++u){const l=u*t[1]+o;for(let d=0;d<r.shape[1];++d)i[l+d]=a[c++]}o+=r.shape[1]})}return i}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tE=xn((n,t)=>n===t?1:0),eE=Rn(ef,tE,null,"bool"),n8={kernelName:ef,backendName:"cpu",kernelFunc:eE};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nE=Gi(n=>Math.exp(n)),sE=Zo(Ou,nE,"float32"),s8={kernelName:Ou,backendName:"cpu",kernelFunc:sE};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iE=Gi(n=>Math.expm1(n)),i8=Zo(Uu,iE),o8={kernelName:Uu,backendName:"cpu",kernelFunc:i8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oE=Gi(n=>Math.floor(n)),r8=Zo(Bu,oE),a8={kernelName:Bu,backendName:"cpu",kernelFunc:r8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rE=xn((n,t)=>Math.floor(n/t)),c8=Rn(zu,rE,null,"int32"),u8={kernelName:zu,backendName:"cpu",kernelFunc:c8};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aE(n,t,e,s,i,o,r,a,c){const u=we([s,o],e);for(let l=0;l<s;l++){const d=[];let h=0;for(let f=0;f<i;f++){const p=n[l*i+f];h+=p*r[f],d.push(p)}if(h<0||h>=c/o)throw new Error(`Invalid indices: ${d} does not index into ${a}`);for(let f=0;f<o;f++)u.values[l*o+f]=t.get(...t.indexToLoc(h*o+f))}return u}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cE(n,t,e){const s=we(e,n.dtype);for(let i=0;i<s.size;++i){const r=s.indexToLoc(i).slice(),a=r[0],c=r[2],u=t.locToIndex([a,c]);r[2]=t.values[u];const l=n.locToIndex(r);0<=l&&l<n.values.length&&(s.values[i]=n.values[l])}return s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uE=xn((n,t)=>n>t?1:0),l8=Rn(rf,uE,null,"bool"),d8={kernelName:rf,backendName:"cpu",kernelFunc:l8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lE=xn((n,t)=>n>=t?1:0),h8=Rn(Vu,lE,null,"bool"),f8={kernelName:Vu,backendName:"cpu",kernelFunc:h8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dE=xn((n,t)=>n<t?1:0),p8=Rn(cf,dE,null,"bool"),m8={kernelName:cf,backendName:"cpu",kernelFunc:p8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hE=xn((n,t)=>n<=t?1:0),g8=Rn(uf,hE,null,"bool"),x8={kernelName:uf,backendName:"cpu",kernelFunc:g8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fE(n,t,e){const s=(t-n)/(e-1),i=jn(e,"float32");i[0]=n;for(let o=1;o<i.length;o++)i[o]=i[o-1]+s;return i}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pE=Gi(n=>Math.log(n)),y8=Zo(qu,pE),b8={kernelName:qu,backendName:"cpu",kernelFunc:y8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mE(n,t,e,s){const i=qn(s,ct(e));for(let o=0;o<i.length;++o){const r=o*t;let a=n[r];for(let c=0;c<t;++c){const u=n[r+c];(Number.isNaN(u)||u>a)&&(a=u)}i[o]=a}return i}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gE=xn((n,t)=>Math.max(n,t)),w8=Rn(Ku,gE),v8={kernelName:Ku,backendName:"cpu",kernelFunc:w8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xE=xn((n,t)=>Math.min(n,t)),_8=Rn(Yu,xE),C8={kernelName:Yu,backendName:"cpu",kernelFunc:_8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qx=xn((n,t)=>n*t),S8=Hx((n,t,e,s)=>({real:n*e-t*s,imag:n*s+t*e})),dp=Rn(Ju,qx,S8),T8={kernelName:Ju,backendName:"cpu",kernelFunc:dp};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yE(n,t,e){const s=Ho(-1,e);return qx([],t,s,n,e)}function E8(n){const{inputs:t,backend:e}=n,{x:s}=t;Ot(s,"neg");const i=e.data.get(s.dataId).values,[o,r]=yE(i,s.shape,s.dtype);return e.makeTensorInfo(r,s.dtype,o)}const I8={kernelName:wf,backendName:"cpu",kernelFunc:E8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bE=xn((n,t)=>n!==t?1:0),R8=Rn(vf,bE,null,"bool"),M8={kernelName:vf,backendName:"cpu",kernelFunc:R8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jx(n,t,e,s,i){const o=t.length,r=ct(t),a=Kt(t),c=Kt(i),u=qn(e,ct(i));for(let l=0;l<r;++l){const d=cc(l,o,a),h=new Array(d.length);for(let p=0;p<h.length;p++)h[p]=d[s[p]];const f=Fi(h,o,c);u[f]=n[l]}return u}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gs(n){const{inputs:t,attrs:e,backend:s}=n,{x:i}=t,{perm:o}=e;Ot(i,"transpose");const r=i.shape.length,a=new Array(r);for(let d=0;d<a.length;d++)a[d]=i.shape[o[d]];const c=s.data.get(i.dataId).values,u=jx(c,i.shape,i.dtype,o,a);return{dataId:s.write(u,a,i.dtype),shape:a,dtype:i.dtype}}const A8={kernelName:$a,backendName:"cpu",kernelFunc:gs};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wE(n,t,e,s){const[i,o]=$n(n,s),r=Ts(t,"int32"),a=jn(ct(i),r),c=ct(o);for(let u=0;u<a.length;++u){const l=u*c;let d=1;for(let h=0;h<c;++h)d*=e[l+h];a[u]=d}return{outVals:a,outShape:i,outDtype:r}}function N8(n){const{inputs:t,backend:e,attrs:s}=n,{x:i}=t,{axis:o,keepDims:r}=s;Ot(i,"prod");const a=i.shape.length,c=ve(o,i.shape),u=un(c,a);let l=c,d=i;const h=[];u!=null&&(d=gs({inputs:{x:i},backend:e,attrs:{perm:u}}),h.push(d),l=mn(l.length,a));const f=e.data.get(d.dataId).values,{outVals:p,outShape:x,outDtype:g}=wE(d.shape,d.dtype,f,l);let m=x;return r&&(m=wn(x,c)),h.forEach(y=>e.disposeIntermediateTensorInfo(y)),e.makeTensorInfo(m,g,p)}const k8={kernelName:If,backendName:"cpu",kernelFunc:N8};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function D8(n,t,e){n.forEach((s,i)=>{if(s<0||s>=e){const o=cc(i,t.length,Kt(t)).join(",");throw new Error(`indices[${o}] = ${s} is not in [0, ${e})`)}})}function $8(n,t){for(let e=0;e<n.length;++e){const s=n[e],i=e===n.length-1?t:n[e+1].length;if(s.length===0)throw new Error("Ragged splits may not be empty");if(s[0]<0)throw new Error("Ragged splits must be non-negative");if(s[s.length-1]>i)throw new Error("Ragged splits must not point past values");for(let o=1;o<s.length;++o)if(s[o-1]>s[o])throw new Error("Ragged splits must be sorted in ascending order")}}function F8(n,t,e,s){const i=[];let o=0;const r=t.length-1+e.length,a=new Array(r).fill(null).map(()=>[0]);$8(e,s);let c=1;for(let u=0;u<t.length-1;++u){c*=t[u];const l=t[u+1];for(let d=1;d<c+1;++d)a[u].push(d*l)}for(let u=0;u<n.length;++u){let l=n[u],d=n[u]+1;for(let h=0;h<e.length;++h){const f=e[h],p=h+t.length-1;if(p>=0){const x=a[p],g=x[x.length-1]-f[l];for(let m=l;m<d;++m)a[p].push(f[m+1]+g)}l=f[l],d=f[d]}d!==l&&(i.push([l,d]),o+=d-l)}return{outSplits:a,valueSlices:i,numValues:o}}function P8(n){const t=[];for(let e=0;e<n.length;++e){const s=n[e].length,i=fn("int32",s);t.push(i),n[e].forEach((o,r)=>i[r]=o)}return t}function Aw(n,t){const e=n.slice(0,t);for(;e.length<t;)e.push(1);for(let s=t;s<n.length;s++)e[t-1]*=n[s];return e}function L8(n,t,e,s,i,o){const r=Aw(t,2)[1],a=Aw(o,2)[1];let c=0;for(const u of e)for(let l=u[0];l<u[1];++l){for(let d=0;d<s;++d)i[c*a+d]=n[l*r+d];++c}}function O8(n,t,e,s,i){const o=t.slice();o[0]=i;const r=fn(e,ct(o)),a=n.length,c=a===0?0:a/t[0];return L8(n,t,s,c,r,o),[r,o]}function vE(n,t,e,s,i,o,r,a){if(n.length===0)throw new Error("paramsNestedSplits must be non empty");if(t[0].length===0)throw new Error("Split tensors must not be scalars");const c=t[0][0]-1;if(D8(o,r,c),s.length===0)throw new Error("params.rank must be nonzero");const u=s[0],{outSplits:l,valueSlices:d,numValues:h}=F8(o,r,n,u),f=P8(l),p=O8(e,s,i,d,h);return[f,p[0],p[1]]}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Nw=2147483647;function _E(n,t,e,s,i,o,r){if(t.length>1)throw new Error("starts must be a scalar or vector");if(i.length>1)throw new Error("limits must be a scalar or vector");if(r.length>1)throw new Error("deltas must be a scalar or vector");const a=t.length===0,c=i.length===0,u=r.length===0,l=[];a||l.push(t[0]),c||l.push(i[0]),u||l.push(r[0]);for(let g=1;g<l.length;++g)if(l[g]!==l[g-1])throw new Error("starts, limits, and deltas must have the same shape");const d=l.length===0?1:l[0],h=fn("int32",d+1);h[0]=0;for(let g=0;g<d;++g){const m=a?n[0]:n[g],y=c?s[0]:s[g],w=u?o[0]:o[g];if(w===0)throw new Error("Requires delta != 0");let b;if(w>0&&y<m||w<0&&y>m)b=0;else if(b=Math.ceil(Math.abs((y-m)/w)),b>Nw)throw new Error(`Requires ((limit - start) / delta) <= ${Nw}`);h[g+1]=h[g]+b}const f=h[d],p=fn(e,f);let x=0;for(let g=0;g<d;++g){const m=h[g+1]-h[g];let y=a?n[0]:n[g];const w=u?o[0]:o[g];for(let b=0;b<m;++b)p[x++]=y,y+=w}return[h,p]}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Vs=fi;class xh{constructor(t,e,s,i,o,r,a,c,u,l){this.shape=t,this.shapeShape=e,this.values=s,this.valuesShape=i,this.valuesDType=o,this.defaultValue=r,this.defaultValueShape=a,this.rowPartitionValues=c,this.rowPartitionValuesShapes=u,this.rowPartitionTypes=aC(l),this.raggedRank=cC(this.rowPartitionTypes)}getRowPartitionTypeByDimension(t){return this.rowPartitionTypes[0]===Vs.FIRST_DIM_SIZE?this.rowPartitionTypes[t+1]:this.rowPartitionTypes[t]}getRowPartitionTensor(t){return this.rowPartitionTypes[0]===Vs.FIRST_DIM_SIZE?this.rowPartitionValues[t+1]:this.rowPartitionValues[t]}getMaxWidth(t){const e=this.getRowPartitionTensor(t-1);switch(this.getRowPartitionTypeByDimension(t-1)){case Vs.VALUE_ROWIDS:return xh.getMaxWidthValueRowID(e);case Vs.ROW_SPLITS:return xh.getMaxWidthRowSplit(e);default:throw new Error(`Cannot handle partition type ${Vs[this.getRowPartitionTypeByDimension(t-1)]}`)}}static getMaxWidthRowSplit(t){const e=t.length;if(e===0||e===1)return 0;let s=0;for(let i=0;i<e-1;++i){const o=t[i+1]-t[i];o>s&&(s=o)}return s}static getMaxWidthValueRowID(t){const e=t.length;if(e===0)return 0;let s=0,i=t[0],o=0;for(let r=1;r<e;++r){const a=t[r];a!==i&&(i=a,o=Math.max(r-s,o),s=r)}return Math.max(e-s,o)}tensorShapeFromTensor(t,e,s=!0){if(e.length===0){if(t[0]===-1)return[];throw new Error("The only valid scalar shape tensor is the fully unknown shape specified as -1.")}return Dw(t,s)}calculateOutputSize(t){const e=this.valuesShape,s=this.defaultValueShape;uC(s,e);const i=this.tensorShapeFromTensor(this.shape,this.shapeShape),r=rC(this.raggedRank,i,e);r[0]<0&&(r[0]=t);for(let a=1;a<=this.raggedRank;++a)r[a]<0&&(r[a]=this.getMaxWidth(a));return r}calculateFirstParentOutputIndex(t,e,s){const i=Math.min(t,s),o=[];let r=0;for(let a=0;a<i;++a,r+=e)o.push(r);for(let a=i;a<t;++a)o.push(-1);return k(o.length===t,()=>"Final length of result must be equal to firstDimension."),o}calculateOutputIndexRowSplit(t,e,s,i){const o=t.length,r=[];for(let a=0;a<o-1;++a){const c=t[a+1]-t[a];let u=Math.min(i,c),l=e[a];l===-1&&(u=0);for(let d=0;d<u;++d)r.push(l),l+=s;for(let d=0;d<c-u;++d)r.push(-1)}if(o>0&&r.length!==t[o-1])throw new Error("Invalid row split size.");return r}calculateOutputIndexValueRowID(t,e,s,i){const o=t.length,r=[];if(o===0)return[];let a=0,c=t[0];if(c>=e.length)throw new Error(`Got currentValueRowId=${c}, which is not less than ${e.length}`);let u=e[c];r.push(u);for(let l=1;l<o;++l){const d=t[l];if(d===c)u>=0&&(++a,a<i?u+=s:u=-1);else{if(a=0,c=d,d>=e.length)throw new Error(`Got nextValueRowId=${d} which is not less than ${e.length}`);u=e[d]}r.push(u)}if(r.length!==t.length)throw new Error("Invalid row ids.");return r}calculateOutputIndex(t,e,s,i){const o=this.getRowPartitionTensor(t),r=this.getRowPartitionTypeByDimension(t);switch(r){case Vs.VALUE_ROWIDS:return this.calculateOutputIndexValueRowID(o,e,s,i);case Vs.ROW_SPLITS:if(o.length-1>e.length)throw new Error(`Row partition size is greater than output size: ${o.length-1} > ${e.length}`);return this.calculateOutputIndexRowSplit(o,e,s,i);default:throw new Error(`Unsupported partition type: ${Vs[r]}`)}}getFirstDimensionSize(){const t=this.rowPartitionValues[0];if(this.rowPartitionTypes.length===0)throw new Error("No row_partition_types given.");const e=this.rowPartitionTypes[0];switch(e){case Vs.FIRST_DIM_SIZE:return t[0];case Vs.VALUE_ROWIDS:throw new Error("Cannot handle VALUE_ROWIDS in first dimension.");case Vs.ROW_SPLITS:return this.rowPartitionValuesShapes[0][0]-1;default:throw new Error(`Cannot handle type ${Vs[e]}`)}}compute(){if(this.rowPartitionValues[0].length<=0)throw new Error("Invalid first partition input. Tensor requires at least one element.");const e=this.getFirstDimensionSize(),s=this.calculateOutputSize(e),i=new Array(this.raggedRank+1);i[i.length-1]=1;for(let c=i.length-2;c>=0;--c)i[c]=i[c+1]*s[c+1];const o=Dw(s,!1),r=fn(this.valuesDType,ct(o));if(i[0]*s[0]>0){let c=this.calculateFirstParentOutputIndex(e,i[0],s[0]);for(let u=1;u<=this.raggedRank;++u)c=this.calculateOutputIndex(u-1,c,i[u],s[u]);this.setOutput(this.raggedRank,c,r,o)}return[o,r]}setOutput(t,e,s,i){if(s.length===0)return;const o=this.values,r=s;let a=i.slice();a=a.slice(t+1);const c=ct(a),u=e.length;let l=this.defaultValue;if(l.length!==c&&l.length!==1){const p=this.defaultValueShape;tt(()=>{const x=j(l,p);l=jc(x,a).dataSync()})}let d=0,h=0,f=0;for(let p=0;p<=u;++p){let x=p<u?e[p]:-1;if(x===f){++f;continue}if(h<f){const g=o.subarray(d*c),m=r.subarray(h*c),y=(f-h)*c;kw(m,g,y)}if(p>=u){const g=s.length;x=Math.floor(g/c)}if(x>f)if(this.defaultValue.length===1)r.subarray(f*c,x*c).fill(this.defaultValue[0]),f=x;else for(;x>f;){const g=r.slice(f*c);kw(g,l,c),++f}x<0?(d=p+1,h=f):(d=p,h=f,f=h+1)}}}function kw(n,t,e){for(let s=0;s<e;s++)n[s]=t[s]}function Dw(n,t){const e=[];for(let s of n){if(s<0){if(!t)throw new Error(`Dimension ${s} must be >= 0`);if(s<-1)throw new Error(`Dimension ${s} must be >= -1`);s=-1}e.push(s)}return e}function CE(n,t,e,s,i,o,r,a,c,u){return new xh(n,t,e,s,i,o,r,a,c,u).compute()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SE(n,t,e,s){const i=n===t,o=n<t&&e<0,r=t<n&&e>1;if(i||o||r)return jn(0,s);const a=Math.abs(Math.ceil((t-n)/e)),c=jn(a,s);t<n&&e===1&&(e=-1),c[0]=n;for(let u=1;u<c.length;u++)c[u]=c[u-1]+e;return c}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const TE=Gi(n=>1/Math.sqrt(n)),U8=Zo(il,TE),B8={kernelName:il,backendName:"cpu",kernelFunc:U8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function br(n,t,e,s,i,o,r,a,c,u){const l=[s/i,i],d=n.values,h=t.values;if(s===0)return we(e,t.dtype);const f=c instanceof On?c:we(l,t.dtype);typeof c=="string"||typeof c=="number"?f.values.fill(c):typeof c=="boolean"&&f.values.fill(+c);for(let p=0;p<o;p++){const x=[];let g=0;for(let m=0;m<r;m++){const y=d[p*r+m];x.push(y),g+=y*a[m]}if(g<0||g>=s/i)throw new Error(`Invalid indices: ${x} does not index into ${e}`);for(let m=0;m<i;m++)u?f.values[g*i+m]+=h[p*i+m]:f.values[g*i+m]=t.rank===0?h[0]:h[p*i+m]}return f}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const z8=Gi(n=>1/(1+Math.exp(-n))),EE=Ue(ul,n=>1/(1+Math.exp(-n))),V8={kernelName:ul,backendName:"cpu",kernelFunc:EE};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IE(n,t,e,s,i){const o=ex(s,t,e),r=ct(e),a=Kt(s);if(o){const d=nx(t,a);return i==="string"?n.slice(d,d+r):n.subarray(d,d+r)}const c=i==="string"?ho(n):n,u=we(s,i,c),l=we(e,i);for(let d=0;d<l.size;++d){const h=l.indexToLoc(d),f=h.map((p,x)=>p+t[x]);l.set(u.get(...f),...h)}return i==="string"?MC(l.values):l.values}function Br(n){const{inputs:t,backend:e,attrs:s}=n,{x:i}=t,{begin:o,size:r}=s;Ot(i,"slice");const[a,c]=Yf(i,o,r);Qg(i,a,c);const u=e.data.get(i.dataId).values,l=IE(u,a,c,i.shape,i.dtype);return e.makeTensorInfo(c,i.dtype,l)}const W8={kernelName:Df,backendName:"cpu",kernelFunc:Br};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RE(n,t,e,s,i,o,r){const a=t[0],c=o[0],u=new Array(c),l=new Array(a),d=t[1];if(c===0){if(a!==0)throw new Error(gC(a));const g=fn(e,0),m=fn(i,0);return[g,[0,d],m,u,l]}let h=!0,f=0;const p=new Array(c).fill(0);for(let g=0;g<a;++g){const m=n[g*d];if(m<0)throw new Error(xC(g,m));if(m>=c)throw new Error(yC(g,m,c));++p[m],h=h&&m>=f,f=m}let x=!0;for(let g=0;g<c;++g){const m=p[g]===0;u[g]=m,x=x&&!m,p[g]=Math.max(p[g],1),g>0&&(p[g]+=p[g-1])}if(x&&h){const g=n,m=s;for(let y=0;y<a;++y)l[y]=y;return[g,[a,d],m,u,l]}else{const g=p[c-1],m=fn(e,g*d),y=fn(i,g),w=new Array(c).fill(0);for(let b=0;b<a;++b){const _=n[b*d],T=w[_],E=(_===0?0:p[_-1])+T;w[_]++;for(let I=0;I<d;++I)m[E*d+I]=n[b*d+I];y[E]=s[b],l[b]=E}for(let b=0;b<c;++b)if(w[b]===0){const T=b===0?0:p[b-1];m[T*d+0]=b;for(let E=1;E<d;++E)m[T*d+E]=0;y[T]=r}return[m,[g,d],y,u,l]}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ME(n,t,e,s,i){const o=ct(s),r=t[0],a=i.length,c=[];let u=1,l=-1;for(let g=0;g<a;++g){const m=i[g];if(m===-1){if(l!==-1)throw new Error(bC(l,g));l=g,c.push(1)}else{if(m<0)throw new Error(wC(g,m));u*=m,c.push(m)}}if(l!==-1){if(u<=0)throw new Error(vC());const g=Math.trunc(o/u);if(u*g!==o)throw new Error(_C(s,c));c[l]=g}if(ct(c)!==o)throw new Error(CC(s,c));const h=s.length,f=[];if(h>0){f[h-1]=1;for(let g=h-2;g>=0;--g)f[g]=f[g+1]*s[g+1]}const p=[];if(a>0){p[a-1]=1;for(let g=a-2;g>=0;--g)p[g]=p[g+1]*c[g+1]}const x=fn(e,r*a);for(let g=0;g<r;++g){let m=0;for(let y=0;y<h;++y)m+=n[g*h+y]*f[y];for(let y=0;y<a;++y)x[g*a+y]=Math.trunc(m/p[y]),m%=p[y]}return[x,[r,a],c]}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Kx(n,t,e,s,i,o=!1,r=0){const a=s.length,c=[t[0],n.length/t[0]],u=c[1],d=a>0?i[a-1]+1:0;if(d<0)throw new Error(A0());const h=t.slice();h[0]=d;const f=h.reduce((w,b)=>w*b,1),p=fn(e,f);if(a===0)return d>0&&p.fill(r),[p,h];if(d<=0)throw new Error(A0());let x=0,g=1,m=0,y=i[x];for(;;){let w=0;if(g<a){if(w=i[g],y===w){++g;continue}if(y>=w)throw new Error(SC())}if(y<0||y>=d)throw new Error(TC(y,d));y>m&&p.fill(r,m*u,y*u);for(let b=x;b<g;++b){const _=s[b];if(_<0||_>=c[0])throw new Error(EC(b,s[b],c[0]));for(let T=0;T<u;T++)p[y*u+T]+=n[_*u+T]}if(o)for(let b=0;b<u;b++)p[y*u+b]/=g-x;if(x=g,++g,m=y+1,y=w,g>a)break}return m<d&&p.fill(r,m*u,d*u),[p,h]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const G8=Gi(n=>Math.sqrt(n)),H8=Ue(dl,n=>Math.sqrt(n)),X8={kernelName:dl,backendName:"cpu",kernelFunc:H8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const AE=xn((n,t)=>{const e=n-t;return e*e}),q8=Rn(hl,AE),j8={kernelName:hl,backendName:"cpu",kernelFunc:q8};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const NE=Gi((n,t)=>{const{pattern:e,replaceGlobal:s,rewrite:i}=t;return n.replace(new RegExp(e,s?"g":""),i)}),K8=Zo(pg,NE),Y8={kernelName:pg,backendName:"cpu",kernelFunc:K8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kE(n,t,e,s){const i=we(n,t.dtype);for(let o=0;o<i.size;o++){const r=i.indexToLoc(o),a=new Array(r.length);for(let c=0;c<a.length;c++)a[c]=r[c]*e[c]+s[c];i.set(t.get(...a),...r)}return i}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Z8{constructor(t,e,s,i,o,r){this.separator=ko(t),this.nGramWidths=e,this.leftPad=ko(s),this.rightPad=ko(i),this.padWidth=o,this.preserveShort=r}getPadWidth(t){return Math.min(this.padWidth<0?t-1:this.padWidth,t-1)}getNumNGrams(t,e){const s=this.getPadWidth(e);return Math.max(0,t+2*s-e+1)}createNGrams(t,e,s,i,o,r){for(let a=0;a<o;++a){const c=this.getPadWidth(r),u=Math.max(0,c-a),l=Math.max(0,c-(o-(a+1))),d=r-(u+l),h=e+(u>0?0:a-c);let f=0;f+=u*this.leftPad.length;for(let y=0;y<d;++y)f+=t[h+y].length;f+=l*this.rightPad.length;const p=u+l+d-1;f+=p*this.separator.length,s[i+a]=new Uint8Array(f);const x=s[i+a];let g=0;const m=y=>y.forEach(w=>x[g++]=w);for(let y=0;y<u;++y)m(this.leftPad),m(this.separator);for(let y=0;y<d-1;++y)m(t[h+y]),m(this.separator);if(d>0){m(t[h+d-1]);for(let y=0;y<l;++y)m(this.separator),m(this.rightPad)}else{for(let y=0;y<l-1;++y)m(this.rightPad),m(this.separator);m(this.rightPad)}}}compute(t,e){const s=t.length,i=e.length;if(i>0){let c=e[0];if(c!==0)throw new Error(`First split value must be 0, got ${c}`);for(let u=1;u<i;++u){let l=e[u]>=c;if(l=l&&e[u]<=s,!l)throw new Error(`Invalid split value ${e[u]}, must be in [${c}, ${s}]`);c=e[u]}if(c!==s)throw new Error(`Last split value must be data size. Expected ${s}, got ${c}`)}const o=i-1,r=fn("int32",i);if(s===0||i===0){const c=new Array(s);for(let u=0;u<=o;++u)r[u]=0;return[c,r]}r[0]=0;for(let c=1;c<=o;++c){const u=e[c]-e[c-1];let l=0;this.nGramWidths.forEach(d=>{l+=this.getNumNGrams(u,d)}),this.preserveShort&&u>0&&l===0&&(l=1),r[c]=r[c-1]+l}const a=new Array(r[o]);for(let c=0;c<o;++c){const u=e[c];let l=r[c];if(this.nGramWidths.forEach(d=>{const h=e[c+1]-e[c],f=this.getNumNGrams(h,d);this.createNGrams(t,u,a,l,f,d),l+=f}),this.preserveShort&&l===r[c]){const d=e[c+1]-e[c];if(d===0)continue;const h=d+2*this.padWidth;this.createNGrams(t,u,a,l,1,h)}}return[a,r]}}function DE(n,t,e,s,i,o,r,a){return new Z8(e,s,i,o,r,a).compute(n,t)}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function J8(n,t,e,s){if(!n.length)return;if(t.length===0){for(let o=0;o<n.length;++o)s.push(n.subarray(o,o+1));return}if(t.length===1){const o=t[0];let r=n.indexOf(o);for(;r!==-1;){const a=n.subarray(0,r);(!e||a.length!==0)&&s.push(a),n=n.subarray(r+1),r=n.indexOf(o)}(!e||n.length!==0)&&s.push(n);return}let i=0;for(let o=0;o<n.length+1;o++)if(o===n.length||t.indexOf(n[o])!==-1){const r=n.subarray(i,o);(!e||r.length!==0)&&s.push(r),i=o+1}}function $E(n,t,e){const s=n.length,i=[];let o=0,r=0;const a=new Array(s);for(let h=0;h<s;++h){const f=i.length;J8(n[h],t,e,i);const p=i.length-f;a[h]=p,o+=p,r=Math.max(r,p)}const c=fn("int32",o*2),u=new Array(o),l=[s,r];let d=0;for(let h=0;h<s;++h)for(let f=0;f<a[h];++f)c[d*2]=h,c[d*2+1]=f,u[d]=i[d],++d;return[c,u,l]}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FE(n,t){const e=fn("int32",n.length);for(let s=0;s<n.length;++s)e[s]=D9(n[s]).modulo(t).getLowBitsUnsigned();return e}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PE=xn((n,t)=>n-t),Q8=Hx((n,t,e,s)=>({real:n-e,imag:t-s})),Yx=Rn(fl,PE,Q8),tz={kernelName:fl,backendName:"cpu",kernelFunc:Yx};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LE(n,t){const e=new Array(n.rank);for(let i=0;i<e.length;i++)e[i]=n.shape[i]*t[i];const s=we(e,n.dtype);for(let i=0;i<s.values.length;++i){const o=s.indexToLoc(i),r=new Array(n.rank);for(let c=0;c<r.length;c++)r[c]=o[c]%n.shape[c];const a=n.locToIndex(r);s.values[i]=n.values[a]}return s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zc=(n,t)=>{const e=t.value-n.value;return e===0?n.index-t.index:e};function OE(n,t,e=0,s=n.length-1){for(;s>e;){if(s-e>600){const a=s-e+1,c=t-e+1,u=Math.log(a),l=.5*Math.exp(2*u/3),d=.5*Math.sqrt(u*l*(a-l)/a)*Math.sign(c-a/2),h=Math.max(e,Math.floor(t-c*l/a+d)),f=Math.min(s,Math.floor(t+(a-c)*l/a+d));OE(n,t,h,f)}const i=n[t];let o=e,r=s;for(wa(n,e,t),zc(n[s],i)>0&&wa(n,e,s);o<r;){for(wa(n,o,r),o++,r--;zc(n[o],i)<0;)o=o+1;for(;zc(n[r],i)>0;)r=r-1}zc(n[e],i)===0?wa(n,e,r):(r=r+1,wa(n,r,s)),r<=t&&(e=r+1),t<=r&&(s=r-1)}}function UE(n,t,e,s,i){const o=t[t.length-1],[r,a]=[n.length/o,o],c=qn(e,r*s),u=qn("int32",r*s);for(let d=0;d<r;d++){const h=d*a,f=n.subarray(h,h+a);let p=new Array(f.length);f.forEach((y,w)=>p[w]={value:y,index:w}),s<p.length&&(OE(p,s),p=p.slice(0,s)),i&&p.sort(zc);const x=d*s,g=c.subarray(x,x+s),m=u.subarray(x,x+s);for(let y=0;y<s;y++)g[y]=p[y].value,m[y]=p[y].index}const l=t.slice();return l[l.length-1]=s,[we(l,e,c),we(l,"int32",u)]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BE(n,t,e,s){const i=ve(t,e)[0],o=[1,e[0],1];for(let p=0;p<i;p++)o[0]*=e[p];o[1]=e[i];for(let p=i+1;p<e.length;p++)o[2]*=e[p];const r=new Map,a=new Int32Array(e[i]),c=new On(o,s,n),u=[],l=o[0]===1&&o[2]===1;for(let p=0;p<e[i];p++){let x;if(l)x=n[p].toString();else{const m=[];for(let y=0;y<o[0];y++)for(let w=0;w<o[2];w++)m.push(c.get(y,p,w));x=m.join(",")}const g=r.get(x);if(g!=null)a[p]=g;else{const m=r.size;r.set(x,m),a[p]=m,u.push(p)}}const d=o.slice();d[1]=r.size;const h=new On(d,s);u.forEach((p,x)=>{for(let g=0;g<o[0];g++)for(let m=0;m<o[2];m++)h.set(c.get(g,p,m),g,x,m)});const f=e.slice();return f[i]=d[1],{outputValues:h.values,outputShape:f,indices:a}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ez=Object.freeze(Object.defineProperty({__proto__:null,addImpl:KT,bincountImpl:Xx,bincountReduceImpl:YT,bitwiseAndImpl:ZT,castImpl:jT,ceilImpl:JT,concatImpl:QT,equalImpl:tE,expImpl:nE,expm1Impl:iE,floorDivImpl:rE,floorImpl:oE,gatherNdImpl:aE,gatherV2Impl:cE,greaterEqualImpl:lE,greaterImpl:uE,lessEqualImpl:hE,lessImpl:dE,linSpaceImpl:fE,logImpl:pE,maxImpl:mE,maximumImpl:gE,minimumImpl:xE,multiplyImpl:qx,negImpl:yE,notEqualImpl:bE,prodImpl:wE,raggedGatherImpl:vE,raggedRangeImpl:_E,raggedTensorToTensorImpl:CE,rangeImpl:SE,rsqrtImpl:TE,scatterImpl:br,sigmoidImpl:z8,simpleAbsImpl:qT,sliceImpl:IE,sparseFillEmptyRowsImpl:RE,sparseReshapeImpl:ME,sparseSegmentReductionImpl:Kx,sqrtImpl:G8,squaredDifferenceImpl:AE,staticRegexReplaceImpl:NE,stridedSliceImpl:kE,stringNGramsImpl:DE,stringSplitImpl:$E,stringToHashBucketFastImpl:FE,subImpl:PE,tileImpl:LE,topKImpl:UE,transposeImpl:jx,uniqueImpl:BE},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */o_("cpu",()=>new lp,1);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zE=Ue(Pu,n=>n>=0?n:Math.exp(n)-1),nz={kernelName:Pu,backendName:"cpu",kernelFunc:zE};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VE(n){const{inputs:t,backend:e,attrs:s}=n,{x:i}=t,{alpha:o}=s;Ot([i],"leakyRelu");const r=ct(i.shape),a=e.data.get(i.dataId).values,c=qn("float32",r);for(let u=0;u<a.length;u++)c[u]=a[u]<0?o*a[u]:a[u];return e.makeTensorInfo(i.shape,"float32",c)}const sz={kernelName:af,backendName:"cpu",kernelFunc:VE};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iz=xn((n,t)=>n<0?t*n:n);function WE(n){const{inputs:t,backend:e}=n,{x:s,alpha:i}=t;Ot([s,i],"prelu");const o=e.data.get(s.dataId).values,r=e.data.get(i.dataId).values,[a,c]=iz(s.shape,i.shape,o,r,"float32");return e.makeTensorInfo(c,"float32",a)}const oz={kernelName:Ef,backendName:"cpu",kernelFunc:WE};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const GE=Ue(el,n=>Math.max(0,n)),rz={kernelName:el,backendName:"cpu",kernelFunc:GE};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const HE=Ue(nl,n=>Math.min(Math.max(0,n),6)),az={kernelName:nl,backendName:"cpu",kernelFunc:HE};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yh(n,t,e,s,i){if(e==="linear")return Wi({inputs:{x:t},backend:n});if(e==="relu")return GE({inputs:{x:t},backend:n});if(e==="elu")return zE({inputs:{x:t},backend:n});if(e==="relu6")return HE({inputs:{x:t},backend:n});if(e==="prelu")return WE({inputs:{x:t,alpha:s},backend:n});if(e==="leakyrelu")return VE({inputs:{x:t},backend:n,attrs:{alpha:i}});if(e==="sigmoid")return EE({inputs:{x:t},backend:n});throw new Error(`Activation ${e} has not been implemented for the CPU backend.`)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Je(n){const{inputs:t,backend:e,attrs:s}=n,{x:i}=t,{shape:o}=s,r=ct(i.shape),a=m2(o,r),c=ct(a);k(r===c,()=>`The new shape (${a}) has ${c} elements and the old shape (${i.shape}) has ${r} elements. The new shape and old shape must have the same number of elements.`),e.incRef(i.dataId);const u=e.data.get(i.dataId);if(u.complexTensorInfos!=null){const l=u.complexTensorInfos.real,d=u.complexTensorInfos.imag;l.shape=a,d.shape=a}return{dataId:i.dataId,shape:a,dtype:i.dtype}}const cz={kernelName:Rf,backendName:"cpu",kernelFunc:Je};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XE(n){const{inputs:t,backend:e,attrs:s}=n,{a:i,b:o}=t,{transposeA:r,transposeB:a}=s;Ot([i,o],"matMul");const c=i.shape.length,u=o.shape.length,l=r?i.shape[c-2]:i.shape[c-1],d=a?o.shape[u-1]:o.shape[u-2],h=r?i.shape[c-1]:i.shape[c-2],f=a?o.shape[u-2]:o.shape[u-1],p=i.shape.slice(0,-2),x=o.shape.slice(0,-2),g=ct(p),m=ct(x),w=de(i.shape.slice(0,-2),o.shape.slice(0,-2)).concat([h,f]);k(l===d,()=>`Error in matMul: inner shapes (${l}) and (${d}) of Tensors with shapes ${i.shape} and ${o.shape} and transposeA=${r} and transposeB=${a} must match.`);const b=r?[g,l,h]:[g,h,l],_=a?[m,f,d]:[m,d,f],T=Je({inputs:{x:i},backend:e,attrs:{shape:b}}),E=Je({inputs:{x:o},backend:e,attrs:{shape:_}}),I=r?T.shape[1]:T.shape[2],S=r?T.shape[2]:T.shape[1],v=a?E.shape[1]:E.shape[2],C=Math.max(g,m),M=e.data.get(T.dataId).values,N=e.data.get(E.dataId).values,D=Kt(T.shape),$=Kt(E.shape),[F,B,P]=r?[D[0],1,D[1]]:[D[0],D[1],1],[V,q,J]=a?[1,$[1],$[0]]:[$[1],1,$[0]],it=S*v,ut=we([C,S,v],T.dtype),G=ut.values,Q=e.blockSize;for(let ht=0;ht<C;ht++){const dt=ht%g,gt=ht%m;for(let St=0;St<S;St+=Q){const _t=Math.min(St+Q,S);for(let Pt=0;Pt<v;Pt+=Q){const Zt=Math.min(Pt+Q,v);for(let qt=0;qt<I;qt+=Q){const U=Math.min(qt+Q,I);for(let he=St;he<_t;he++)for(let Wt=Pt;Wt<Zt;Wt++){let Qt=0;for(let Tt=qt;Tt<U;Tt++){const pe=M[dt*F+he*B+Tt*P],$t=N[Tt*V+Wt*q+gt*J];Qt+=pe*$t}G[ht*it+(he*v+Wt)]+=Qt}}}}}return e.disposeIntermediateTensorInfo(T),e.disposeIntermediateTensorInfo(E),e.makeTensorInfo(w,ut.dtype,ut.values)}const uz={kernelName:Hh,backendName:"cpu",kernelFunc:XE};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lz(n){const{inputs:t,backend:e,attrs:s}=n,{a:i,b:o,bias:r,preluActivationWeights:a}=t,{transposeA:c,transposeB:u,activation:l,leakyreluAlpha:d}=s;let h,f,p;const x=[];h=XE({inputs:{a:i,b:o},attrs:{transposeA:c,transposeB:u},backend:e}),r&&(f=Ja({inputs:{a:h,b:r},backend:e}),x.push(h),h=f),l&&(p=yh(e,h,l,a,d),x.push(h),h=p);for(const m of x)e.disposeIntermediateTensorInfo(m);return h}const dz={kernelName:Qd,backendName:"cpu",kernelFunc:lz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hz=Ue(Cu,n=>Math.acos(n)),fz={kernelName:Cu,backendName:"cpu",kernelFunc:hz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pz=Ue(Su,n=>Math.acosh(n)),mz={kernelName:Su,backendName:"cpu",kernelFunc:pz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gz(n){const{inputs:t,backend:e}=n,s=t;Ot(t,"addN");const i=s.map(a=>e.data.get(a.dataId).values),o=we(s[0].shape,s[0].dtype),r=o.values;for(let a=0;a<s.length;a++){const c=i[a];for(let u=0;u<r.length;u++)r[u]+=c[u]}return e.makeTensorInfo(o.shape,o.dtype,o.values)}const xz={kernelName:D1,backendName:"cpu",kernelFunc:gz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yz(n){const{inputs:t,backend:e,attrs:s}=n,{x:i}=t,{axis:o,keepDims:r}=s;Ot(i,"all");const a=ve(o,i.shape);let c=a;const u=un(c,i.shape.length);let l=i;u!=null&&(l=gs({inputs:{x:i},backend:e,attrs:{perm:u}}),c=mn(c.length,i.shape.length)),Bn("all",c,l.shape.length);const[d,h]=$n(l.shape,c),f=ct(h),p=jn(ct(d),l.dtype),x=e.data.get(l.dataId).values;for(let m=0;m<p.length;++m){const y=m*f;let w=x[y];for(let b=0;b<f;++b){const _=x[y+b];w=w&&_}p[m]=w}u!=null&&e.disposeIntermediateTensorInfo(l);const g=e.makeTensorInfo(d,l.dtype,p);if(r){const m=wn(d,a),y=Je({inputs:{x:g},backend:e,attrs:{shape:m}});return e.disposeIntermediateTensorInfo(g),y}return g}const bz={kernelName:$1,backendName:"cpu",kernelFunc:yz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wz(n){const{inputs:t,backend:e,attrs:s}=n,{x:i}=t,{axis:o,keepDims:r}=s;Ot(i,"any");const a=ve(o,i.shape);let c=a;const u=un(c,i.shape.length);let l=i;u!=null&&(l=gs({inputs:{x:i},backend:e,attrs:{perm:u}}),c=mn(c.length,i.shape.length)),Bn("any",c,l.shape.length);const[d,h]=$n(l.shape,c),f=ct(h),p=jn(ct(d),l.dtype),x=e.data.get(l.dataId).values;for(let m=0;m<p.length;++m){const y=m*f;let w=x[y];for(let b=0;b<f;++b){const _=x[y+b];w=w||_}p[m]=w}u!=null&&e.disposeIntermediateTensorInfo(l);const g=e.makeTensorInfo(d,l.dtype,p);if(r){const m=wn(d,a),y=Je({inputs:{x:g},backend:e,attrs:{shape:m}});return e.disposeIntermediateTensorInfo(g),y}return g}const vz={kernelName:F1,backendName:"cpu",kernelFunc:wz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _z(n){const{inputs:t,backend:e,attrs:s}=n,{x:i}=t,{axis:o}=s;Ot(i,"argMax");let r=ve(o,i.shape);const a=un(r,i.shape.length);let c=i;const u=[];a!=null&&(c=gs({inputs:{x:i},backend:e,attrs:{perm:a}}),u.push(c),r=mn(r.length,c.shape.length)),r=[r[0]],Bn("argMax",r,c.shape.length);const[l,d]=$n(c.shape,r),h=ct(l),f=jn(h,"int32"),p=ct(d),x=e.data.get(c.dataId).values;for(let g=0;g<f.length;++g){const m=g*p;let y=x[m],w=0;for(let b=0;b<p;++b){const _=x[m+b];_>y&&(y=_,w=b)}f[g]=w}return u.forEach(g=>e.disposeIntermediateTensorInfo(g)),e.makeTensorInfo(l,"int32",f)}const Cz={kernelName:zh,backendName:"cpu",kernelFunc:_z};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Sz(n){const{inputs:t,backend:e,attrs:s}=n,{x:i}=t,{axis:o}=s;Ot(i,"argMin");let r=ve(o,i.shape);const a=un(r,i.shape.length);let c=i;const u=[];a!=null&&(c=gs({inputs:{x:i},backend:e,attrs:{perm:a}}),u.push(c),r=mn(r.length,c.shape.length)),r=[r[0]],Bn("argMin",r,c.shape.length);const[l,d]=$n(c.shape,r),h=ct(l),f=jn(h,"int32"),p=ct(d),x=e.data.get(c.dataId).values;for(let g=0;g<f.length;++g){const m=g*p;let y=x[m],w=0;for(let b=0;b<p;++b){const _=x[m+b];_<y&&(y=_,w=b)}f[g]=w}return u.forEach(g=>e.disposeIntermediateTensorInfo(g)),e.makeTensorInfo(l,"int32",f)}const Tz={kernelName:Vh,backendName:"cpu",kernelFunc:Sz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ez=Ue(Tu,n=>Math.asin(n)),Iz={kernelName:Tu,backendName:"cpu",kernelFunc:Ez};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Rz=Ue(Eu,n=>Math.asinh(n)),Mz={kernelName:Eu,backendName:"cpu",kernelFunc:Rz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Az=Ue(Iu,n=>Math.atan(n)),Nz={kernelName:Iu,backendName:"cpu",kernelFunc:Az};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kz=xn((n,t)=>Math.atan2(n,t)),Dz=Rn(Mu,kz),$z={kernelName:Mu,backendName:"cpu",kernelFunc:Dz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Fz=Ue(Ru,n=>Math.atanh(n)),Pz={kernelName:Ru,backendName:"cpu",kernelFunc:Fz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zx(n,t,e,s,i,o){const r=i.strideHeight,a=i.strideWidth,c=i.dilationHeight,u=i.dilationWidth,l=i.effectiveFilterHeight,d=i.effectiveFilterWidth,h=i.padInfo.top,f=i.padInfo.left,p=o==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,x=we(i.outShape,e),g=x.values,m=i.outShape[1]*i.outShape[2]*i.outShape[3],y=i.outShape[2]*i.outShape[3],w=i.outShape[3];for(let b=0;b<i.batchSize;++b){const _=b*m,T=b*s[0];for(let E=0;E<i.inChannels;++E)for(let I=0;I<i.outHeight;++I){const S=I*r-h,v=Math.max(0,S),C=Math.min(i.inHeight,l+S),M=_+I*y;for(let N=0;N<i.outWidth;++N){const D=N*a-f,$=Math.max(0,D),F=Math.min(i.inWidth,d+D);let B=p,P=0,V=0;for(let J=v;J<C;J+=c){const it=T+J*s[1];for(let ut=$;ut<F;ut+=u){const G=it+ut*s[2],Q=n[G+E];o==="max"&&Q>B?B=Q:o==="avg"&&(P+=Q,V++)}if(isNaN(B))break}const q=M+N*w+E;g[q]=o==="avg"?P/V:B}}}return x}function qE(n,t,e,s,i=!1,o=!1){const r=we(s.outShape,"int32"),a=s.strideHeight,c=s.strideWidth,u=s.dilationHeight,l=s.dilationWidth,d=s.effectiveFilterHeight,h=s.effectiveFilterWidth,f=s.padInfo.top,p=s.padInfo.left,x=we(t,e,n);for(let g=0;g<s.batchSize;++g)for(let m=0;m<s.inChannels;++m)for(let y=0;y<s.outHeight;++y){const w=y*a-f;let b=w;for(;b<0;)b+=u;const _=Math.min(s.inHeight,d+w);for(let T=0;T<s.outWidth;++T){const E=T*c-p;let I=E;for(;I<0;)I+=l;const S=Math.min(s.inWidth,h+E);let v=Number.NEGATIVE_INFINITY,C=-1;for(let M=b;M<_;M+=u){const N=M-w;for(let D=I;D<S;D+=l){const $=D-E,F=x.get(g,M,D,m);F>v&&(v=F,i?C=o?((g*s.inHeight+M)*s.inWidth+D)*s.inChannels+m:(M*s.inWidth+D)*s.inChannels+m:C=N*h+$)}}r.set(C,g,y,T,m)}}return r}function jE(n,t,e,s,i,o){const r=i.strideDepth,a=i.strideHeight,c=i.strideWidth,u=i.dilationDepth,l=i.dilationHeight,d=i.dilationWidth,h=i.effectiveFilterDepth,f=i.effectiveFilterHeight,p=i.effectiveFilterWidth,x=i.padInfo.front,g=i.padInfo.top,m=i.padInfo.left,y=o==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,w=we(i.outShape,e),b=w.values,_=i.outShape[1]*i.outShape[2]*i.outShape[3]*i.outShape[4],T=i.outShape[2]*i.outShape[3]*i.outShape[4],E=i.outShape[3]*i.outShape[4],I=i.outShape[4];for(let S=0;S<i.batchSize;++S){const v=S*_,C=S*s[0];for(let M=0;M<i.inChannels;++M)for(let N=0;N<i.outDepth;++N){const D=N*r-x;let $=D;for(;$<0;)$+=u;const F=Math.min(i.inDepth,h+D),B=v+N*T;for(let P=0;P<i.outHeight;++P){const V=P*a-g;let q=V;for(;q<0;)q+=l;const J=Math.min(i.inHeight,f+V),it=B+P*E;for(let ut=0;ut<i.outWidth;++ut){const G=ut*c-m;let Q=G;for(;Q<0;)Q+=d;const ht=Math.min(i.inWidth,p+G),dt=it+ut*I;let gt=y,St=0,_t=0;for(let Zt=$;Zt<F;Zt+=u){const qt=C+Zt*s[1];for(let U=q;U<J;U+=l){const he=qt+U*s[2];for(let Wt=Q;Wt<ht;Wt+=d){const Qt=he+Wt*s[3],Tt=n[Qt+M];if(o==="max"&&Tt>gt?gt=Tt:o==="avg"&&(St+=Tt,_t++),isNaN(gt))break}if(isNaN(gt))break}if(isNaN(gt))break}const Pt=dt+M;b[Pt]=o==="avg"?St/Math.max(_t,1):gt}}}}return w}function Lz(n,t){const e=we(t.outShape,"int32"),s=t.strideDepth,i=t.strideHeight,o=t.strideWidth,r=t.dilationDepth,a=t.dilationHeight,c=t.dilationWidth,u=t.effectiveFilterDepth,l=t.effectiveFilterHeight,d=t.effectiveFilterWidth,h=t.padInfo.front,f=t.padInfo.top,p=t.padInfo.left;for(let x=0;x<t.batchSize;++x)for(let g=0;g<t.inChannels;++g)for(let m=0;m<t.outDepth;++m){const y=m*s-h;let w=y;for(;w<0;)w+=r;const b=Math.min(t.inDepth,u+y);for(let _=0;_<t.outHeight;++_){const T=_*i-f;let E=T;for(;E<0;)E+=a;const I=Math.min(t.inHeight,l+T);for(let S=0;S<t.outWidth;++S){const v=S*o-p;let C=v;for(;C<0;)C+=c;const M=Math.min(t.inWidth,d+v);let N=Number.NEGATIVE_INFINITY,D=-1;for(let $=w;$<b;$+=r){const F=$-y;for(let B=E;B<I;B+=a){const P=B-T;for(let V=C;V<M;V+=c){const q=V-v,J=n.get(x,$,B,V,g);J>=N&&(N=J,D=F*l*d+P*l+q)}}}e.set(D,x,m,_,S,g)}}}return e}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Oz(n){const{inputs:t,backend:e,attrs:s}=n,{x:i}=t;Ot(i,"avgPool");const{filterSize:o,strides:r,pad:a,dimRoundingMode:c}=s,u=1;k(Yn(r,u),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${r} and dilations '${u}'`);const l=ni(i.shape,o,r,u,a,c);let d;if(l.filterWidth===1&&l.filterHeight===1&&Pe(l.inShape,l.outShape))d=Wi({inputs:{x:i},backend:e});else{const h=e.data.get(i.dataId).values,f=Kt(i.shape),p=Zx(h,i.shape,i.dtype,f,l,"avg");d=e.makeTensorInfo(l.outShape,i.dtype,p.values)}return d}const Uz={kernelName:Wh,backendName:"cpu",kernelFunc:Oz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bz(n){const{inputs:t,backend:e,attrs:s}=n,{x:i}=t,{filterSize:o,strides:r,pad:a,dimRoundingMode:c,dataFormat:u}=s;Ot(i,"avgPool3d");const l=po(i.shape,o,r,1,a,c,u),d=e.data.get(i.dataId).values,h=jE(d,i.shape,i.dtype,Kt(i.shape),l,"avg");return e.makeTensorInfo(h.shape,"float32",h.values)}const zz={kernelName:Gh,backendName:"cpu",kernelFunc:Bz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vz(n){const{inputs:t,backend:e,attrs:s}=n,{dy:i,input:o}=t,{filterSize:r,strides:a,pad:c,dimRoundingMode:u}=s;Ot([i,o],"avgPool3DGrad");const l=po(o.shape,r,a,1,c,u),d=l.strideDepth,h=l.strideHeight,f=l.strideWidth,p=l.filterDepth,x=l.filterHeight,g=l.filterWidth,m=l.dilationDepth,y=l.dilationHeight,w=l.dilationWidth,b=l.effectiveFilterDepth,_=l.effectiveFilterHeight,T=l.effectiveFilterWidth,E=b-1-l.padInfo.front,I=T-1-l.padInfo.left,S=_-1-l.padInfo.top,v=we(o.shape,"float32"),C=1/(p*x*g),M=e.bufferSync(i);for(let N=0;N<l.batchSize;++N)for(let D=0;D<l.inChannels;++D)for(let $=0;$<l.inDepth;++$)for(let F=0;F<l.inHeight;++F)for(let B=0;B<l.inWidth;++B){const P=$-E,V=F-S,q=B-I;let J=0;for(let it=0;it<b;it+=m){const ut=(P+it)/d;if(!(ut<0||ut>=l.outDepth||Math.floor(ut)!==ut))for(let G=0;G<_;G+=y){const Q=(V+G)/h;if(!(Q<0||Q>=l.outHeight||Math.floor(Q)!==Q))for(let ht=0;ht<T;ht+=w){const dt=(q+ht)/f;if(dt<0||dt>=l.outWidth||Math.floor(dt)!==dt)continue;const gt=M.get(N,ut,Q,dt,D);J+=gt}}}v.set(J*C,N,$,F,B,D)}return e.makeTensorInfo(v.shape,v.dtype,v.values)}const Wz={kernelName:L1,backendName:"cpu",kernelFunc:Vz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Gz(n){const{inputs:t,backend:e,attrs:s}=n,{dy:i,input:o}=t,r=o;Ot([i,o],"avgPoolGrad");const{filterSize:a,strides:c,pad:u}=s,l=ni(r.shape,a,c,1,u),d=l.strideHeight,h=l.strideWidth,f=l.filterHeight,p=l.filterWidth,x=l.dilationHeight,g=l.dilationWidth,m=l.effectiveFilterHeight,y=l.effectiveFilterWidth,w=y-1-l.padInfo.left,b=m-1-l.padInfo.top,_=we(r.shape,"float32"),T=1/(f*p),E=e.data.get(i.dataId).values,I=we(i.shape,"float32",E);for(let S=0;S<l.batchSize;++S)for(let v=0;v<l.inChannels;++v)for(let C=0;C<l.inHeight;++C)for(let M=0;M<l.inWidth;++M){const N=C-b,D=M-w;let $=0;for(let F=0;F<m;F+=x){const B=(N+F)/d;if(!(B<0||B>=l.outHeight||Math.floor(B)!==B))for(let P=0;P<y;P+=g){const V=(D+P)/h;if(V<0||V>=l.outWidth||Math.floor(V)!==V)continue;const q=I.get(S,B,V,v);$+=q}}_.set($*T,S,C,M,v)}return e.makeTensorInfo(_.shape,_.dtype,_.values)}const Hz={kernelName:P1,backendName:"cpu",kernelFunc:Gz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xz(n){const{inputs:t,backend:e,attrs:s}=n,{x:i,scale:o,offset:r,mean:a,variance:c}=t;k(a.shape.length===c.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),k(r==null||a.shape.length===r.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),k(o==null||a.shape.length===o.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks."),Ot([i,a,c,o,r],"batchNorm");let{varianceEpsilon:u}=s;u==null&&(u=.001);const l=e.data.get(i.dataId).values,d=e.data.get(a.dataId).values,h=e.data.get(c.dataId).values,f=o?e.data.get(o.dataId).values:new Float32Array([1]),p=r?e.data.get(r.dataId).values:new Float32Array([0]),x=new Float32Array(l.length),g=p.length,m=f.length,y=h.length,w=d.length;let b=0,_=0,T=0,E=0;for(let I=0;I<l.length;++I)x[I]=p[b++]+(l[I]-d[_++])*f[T++]/Math.sqrt(h[E++]+u),b>=g&&(b=0),_>=w&&(_=0),T>=m&&(T=0),E>=y&&(E=0);return e.makeTensorInfo(i.shape,i.dtype,x)}const qz={kernelName:sf,backendName:"cpu",kernelFunc:Xz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jz(n){const{inputs:t,backend:e,attrs:s}=n,{x:i}=t,{blockShape:o,crops:r}=s;Ot([i],"batchToSpaceND");const a=o.reduce((m,y)=>m*y),c=Cl(i.shape,o,a),u=Sl(c.length,o.length),l=Tl(i.shape,o,a),d=ax(r,o.length),h=cx(l,r,o.length),f=Je({inputs:{x:i},backend:e,attrs:{shape:c}}),p=gs({inputs:{x:f},backend:e,attrs:{perm:u}}),x=Je({inputs:{x:p},backend:e,attrs:{shape:l}}),g=Br({inputs:{x},backend:e,attrs:{begin:d,size:h}});return e.disposeIntermediateTensorInfo(f),e.disposeIntermediateTensorInfo(p),e.disposeIntermediateTensorInfo(x),g}const Kz={kernelName:Xh,backendName:"cpu",kernelFunc:jz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Yz(n){const{inputs:t,backend:e,attrs:s}=n,{x:i,weights:o}=t,{size:r}=s,a=e.data.get(i.dataId).values,c=e.data.get(o.dataId).values,u=Xx(a,c,o.dtype,o.shape,r);return e.makeTensorInfo([r],o.dtype,u)}const Zz={kernelName:O1,backendName:"cpu",kernelFunc:Yz};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Jz(n){const{inputs:t,backend:e}=n,{s0:s,s1:i}=t,o=e.data.get(s.dataId).values,r=e.data.get(i.dataId).values,a=de(Array.from(o),Array.from(r));return e.makeTensorInfo([a.length],"int32",Int32Array.from(a))}const Qz={kernelName:v2,backendName:"cpu",kernelFunc:Jz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tV=Ue(ku,(n,t)=>{const e=t;return n>e.clipValueMax?e.clipValueMax:n<e.clipValueMin?e.clipValueMin:n}),eV={kernelName:ku,backendName:"cpu",kernelFunc:tV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nV=n=>{const{x:t}=n.inputs,e=n.backend,s=new Float32Array(ct(t.shape)),i=e.data.get(t.dataId),o=i.complexTensorInfos.real,r=i.complexTensorInfos.imag,a=e.data.get(o.dataId).values,c=e.data.get(r.dataId).values;for(let u=0;u<a.length;u++){const l=a[u],d=c[u];s[u]=Math.hypot(l,d)}return e.makeOutput(s,t.shape,"float32")},sV={kernelName:qh,backendName:"cpu",kernelFunc:nV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Qa(n){const{inputs:t,backend:e}=n,{input:s}=t,i=e.data.get(s.dataId).complexTensorInfos.imag,o=e.data.get(i.dataId).values;return e.makeTensorInfo(i.shape,i.dtype,o)}const iV={kernelName:ng,backendName:"cpu",kernelFunc:Qa};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tc(n){const{inputs:t,backend:e,attrs:s}=n,{axis:i}=s,o=ve(i,t[0].shape)[0],r=t.map(x=>x.shape);ix(r,o);let a=Pi(t.map(x=>x.shape),o);if(ct(a)===0)return e.makeTensorInfo(a,t[0].dtype,[]);const c=t.filter(x=>ct(x.shape)>0);if(c.length===1)return Wi({inputs:{x:c[0]},backend:e});if(c[0].dtype==="complex64"){const x=c.map(b=>Ur({inputs:{input:b},backend:e})),g=c.map(b=>Qa({inputs:{input:b},backend:e})),m=tc({inputs:x,backend:e,attrs:{axis:o}}),y=tc({inputs:g,backend:e,attrs:{axis:o}}),w=_s({inputs:{real:m,imag:y},backend:e});return x.forEach(b=>e.disposeIntermediateTensorInfo(b)),g.forEach(b=>e.disposeIntermediateTensorInfo(b)),e.disposeIntermediateTensorInfo(m),e.disposeIntermediateTensorInfo(y),w}const u=c.map(x=>{const m=[-1,ct(x.shape.slice(o))];return Je({inputs:{x},backend:e,attrs:{shape:m}})}),l=u.map(x=>({vals:e.data.get(x.dataId).values,shape:x.shape}));a=Pi(u.map(x=>x.shape),1);const d=u[0].shape[0]===1,h=QT(l,a,t[0].dtype,d),f=Pi(c.map(x=>x.shape),o),p=e.makeTensorInfo(f,t[0].dtype,h);return u.forEach(x=>e.disposeIntermediateTensorInfo(x)),p}const oV={kernelName:jh,backendName:"cpu",kernelFunc:tc};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KE(n){const{inputs:t,backend:e,attrs:s}=n,{x:i,filter:o}=t,{strides:r,pad:a,dataFormat:c,dilations:u,dimRoundingMode:l}=s;Ot([i,o],"conv2d");const d=mo(c),h=Un(i.shape,o.shape,r,u,a,l,!1,d),f=h.filterHeight,p=h.filterWidth,x=h.dilationHeight,g=h.dilationWidth,m=h.padInfo.left,y=h.padInfo.top,w=h.dataFormat==="channelsLast",b=new On(h.outShape,i.dtype),_=Kt(i.shape),T=Kt(o.shape),E=_[0],I=w?_[1]:_[2],S=w?_[2]:1,v=w?1:_[1],C=b.strides[0],M=w?b.strides[1]:b.strides[2],N=w?b.strides[2]:1,D=w?1:b.strides[1],$=e.data.get(i.dataId).values,F=e.data.get(o.dataId).values,B=b.values;for(let P=0;P<h.batchSize;++P){const V=P*E,q=P*C;for(let J=0;J<h.outHeight;++J){const it=q+J*M,ut=J*h.strideHeight-y;for(let G=0;G<f;++G){const Q=ut+G*x;if(Q<0||Q>=h.inHeight)continue;const ht=G*T[0],dt=V+Q*I;for(let gt=0;gt<h.outWidth;++gt){const St=it+gt*N,_t=gt*h.strideWidth-m;for(let Pt=0;Pt<p;++Pt){const Zt=_t+Pt*g;if(Zt<0||Zt>=h.inWidth)continue;const qt=ht+Pt*T[1],U=dt+Zt*S;let he=qt;for(let Wt=0;Wt<h.inChannels;++Wt){const Qt=$[U+Wt*v];for(let Tt=0;Tt<h.outChannels;++Tt)B[St+Tt*D]+=Qt*F[he+Tt];he+=h.outChannels}}}}}}return e.makeTensorInfo(b.shape,b.dtype,B)}const rV={kernelName:Kh,backendName:"cpu",kernelFunc:KE};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aV(n){const{inputs:t,backend:e,attrs:s}=n,{x:i,dy:o}=t,{strides:r,pad:a,dataFormat:c,dimRoundingMode:u,filterShape:l}=s;Ot([i,o],"conv2dBackpropFilter");const d=mo(c),h=Un(i.shape,l,r,1,a,u,!1,d),{strideHeight:f,strideWidth:p,filterHeight:x,filterWidth:g}=h,m=h.dataFormat==="channelsLast",y=new On(h.filterShape,"float32"),w=h.padInfo.left,b=h.padInfo.top,_=e.data.get(i.dataId).values,T=e.data.get(o.dataId).values,E=new On(i.shape,i.dtype,_),I=new On(o.shape,o.dtype,T);for(let S=0;S<x;++S){const v=Math.max(0,Math.ceil((b-S)/f)),C=Math.min(h.outHeight,(h.inHeight+b-S)/f);for(let M=0;M<g;++M){const N=Math.max(0,Math.ceil((w-M)/p)),D=Math.min(h.outWidth,(h.inWidth+w-M)/p);for(let $=0;$<h.inChannels;++$)for(let F=0;F<h.outChannels;++F){let B=0;for(let P=0;P<h.batchSize;++P)for(let V=v;V<C;++V){const q=S+V*f-b;for(let J=N;J<D;++J){const it=M+J*p-w;m?B+=E.get(P,q,it,$)*I.get(P,V,J,F):B+=E.get(P,$,q,it)*I.get(P,F,V,J)}}y.set(B,S,M,$,F)}}}return e.makeTensorInfo(y.shape,y.dtype,y.values)}const cV={kernelName:z1,backendName:"cpu",kernelFunc:aV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uV(n){const{inputs:t,backend:e,attrs:s}=n,{dy:i,filter:o}=t,{inputShape:r,strides:a,pad:c,dataFormat:u,dimRoundingMode:l}=s;Ot([i,o],"conv2dBackpropInput");const d=Kt(o.shape),h=Kt(i.shape);let f=mo(u);const p=Un(r,o.shape,a,1,c,l,!1,f),x=new On(p.inShape,"float32"),g=x.values,m=e.data.get(i.dataId).values,y=e.data.get(o.dataId).values,[w,b,_]=d,{batchSize:T,filterHeight:E,filterWidth:I,inChannels:S,inHeight:v,inWidth:C,outChannels:M,outHeight:N,outWidth:D,strideHeight:$,strideWidth:F}=p;f=p.dataFormat;const B=E-1-p.padInfo.top,P=I-1-p.padInfo.left,V=f==="channelsLast",q=x.strides[0],J=V?x.strides[1]:x.strides[2],it=V?x.strides[2]:1,ut=V?1:x.strides[1],G=h[0],Q=V?h[1]:h[2],ht=V?h[2]:1,dt=V?1:h[1];for(let gt=0;gt<T;++gt)for(let St=0;St<S;++St)for(let _t=0;_t<v;++_t){const Pt=_t-B,Zt=Math.max(0,Math.ceil(Pt/$)),qt=Math.min(N,(E+Pt)/$);for(let U=0;U<C;++U){const he=U-P,Wt=Math.max(0,Math.ceil(he/F)),Qt=Math.min(D,(I+he)/F);let Tt=0;for(let $t=Zt;$t<qt;++$t){const oe=$t*$-Pt;for(let ke=Wt;ke<Qt;++ke){const L=ke*F-he,R=G*gt+Q*$t+ht*ke,et=w*(E-1-oe)+b*(I-1-L)+_*St;for(let ft=0;ft<M;++ft){const pt=m[R+dt*ft],lt=y[et+ft];Tt+=pt*lt}}}const pe=q*gt+J*_t+it*U+ut*St;g[pe]=Tt}}return e.makeTensorInfo(x.shape,x.dtype,x.values)}const lV={kernelName:Yh,backendName:"cpu",kernelFunc:uV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dV(n){const{inputs:t,backend:e,attrs:s}=n,{x:i,filter:o}=t,{strides:r,pad:a,dilations:c}=s;Ot([i,o],"conv3d");const u=Xo(i.shape,o.shape,r,c,a),{filterDepth:l,filterHeight:d,filterWidth:h,dilationDepth:f,dilationHeight:p,dilationWidth:x,padInfo:g}=u,m=g.front,y=g.left,w=g.top,b=new On(u.outShape,i.dtype),_=e.data.get(i.dataId).values,T=e.data.get(o.dataId).values,E=b.values,I=Kt(i.shape),S=Kt(o.shape);for(let v=0;v<u.batchSize;++v){const C=v*I[0],M=v*b.strides[0];for(let N=0;N<u.outDepth;++N){const D=M+N*b.strides[1],$=N*u.strideDepth-m;for(let F=0;F<l;++F){const B=$+F*f;if(B<0||B>=u.inDepth)continue;const P=F*S[0],V=C+B*I[1];for(let q=0;q<u.outHeight;++q){const J=D+q*b.strides[2],it=q*u.strideHeight-w;for(let ut=0;ut<d;++ut){const G=it+ut*p;if(G<0||G>=u.inHeight)continue;const Q=P+ut*S[1],ht=V+G*I[2];for(let dt=0;dt<u.outWidth;++dt){const gt=J+dt*u.outChannels,St=dt*u.strideWidth-y;for(let _t=0;_t<h;++_t){const Pt=St+_t*x;if(Pt<0||Pt>=u.inWidth)continue;const Zt=Q+_t*S[2],qt=ht+Pt*u.inChannels;let U=Zt;for(let he=0;he<u.inChannels;++he){const Wt=_[qt+he];for(let Qt=0;Qt<u.outChannels;++Qt)E[gt+Qt]+=Wt*T[U+Qt];U+=u.outChannels}}}}}}}}return e.makeTensorInfo(b.shape,b.dtype,b.values)}const hV={kernelName:Zh,backendName:"cpu",kernelFunc:dV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fV(n){const{inputs:t,backend:e,attrs:s}=n,{x:i,dy:o}=t,{strides:r,pad:a,filterShape:c}=s;Ot([i,o],"conv3dBackpropFilterV2");const u=Kt(i.shape),l=Kt(o.shape),d=Xo(i.shape,c,r,1,a),h=d.strideDepth,f=d.strideHeight,p=d.strideWidth,x=d.filterDepth,g=d.filterHeight,m=d.filterWidth,y=new On(d.filterShape,"float32"),w=y.values,[b,_,T,E]=y.strides,I=e.data.get(o.dataId).values,[S,v,C,M]=l,N=e.data.get(i.dataId).values,[D,$,F,B]=u,P=d.padInfo.front,V=d.padInfo.left,q=d.padInfo.top;for(let J=0;J<x;++J){const it=Math.max(0,Math.ceil((P-J)/h)),ut=Math.min(d.outDepth,(d.inDepth+P-J)/h),G=J*b;for(let Q=0;Q<g;++Q){const ht=Math.max(0,Math.ceil((q-Q)/f)),dt=Math.min(d.outHeight,(d.inHeight+q-Q)/f),gt=Q*_+G;for(let St=0;St<m;++St){const _t=Math.max(0,Math.ceil((V-St)/p)),Pt=Math.min(d.outWidth,(d.inWidth+V-St)/p),Zt=St*T+gt;for(let qt=0;qt<d.inChannels;++qt){const U=qt*E+Zt;for(let he=0;he<d.outChannels;++he){let Wt=0;for(let Qt=0;Qt<d.batchSize;++Qt){const Tt=Qt*D,pe=Qt*S;for(let $t=it;$t<ut;++$t){const ke=(J+$t*h-P)*$+Tt,L=$t*v+pe;for(let R=ht;R<dt;++R){const ft=(Q+R*f-q)*F+ke,pt=R*C+L;for(let lt=_t;lt<Pt;++lt){const It=(St+lt*p-V)*B+ft,Bt=lt*M+pt;Wt+=N[It+qt]*I[Bt+he]}}}}w[U+he]=Wt}}}}}return e.makeTensorInfo(y.shape,y.dtype,y.values)}const pV={kernelName:V1,backendName:"cpu",kernelFunc:fV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mV(n){const{inputs:t,backend:e,attrs:s}=n,{dy:i,filter:o}=t,{pad:r,strides:a,inputShape:c}=s;Ot([i],"conv3dBackpropInputV2");const u=Kt(i.shape),l=Kt(o.shape),d=Xo(c,o.shape,a,1,r),h=new On(d.inShape,"float32"),f=h.values,[p,x,g,m]=h.strides,y=e.data.get(i.dataId).values,[w,b,_,T]=u,E=e.data.get(o.dataId).values,[I,S,v,C]=l,{batchSize:M,filterDepth:N,filterHeight:D,filterWidth:$,inChannels:F,inDepth:B,inHeight:P,inWidth:V,outChannels:q,outDepth:J,outHeight:it,outWidth:ut,strideDepth:G,strideHeight:Q,strideWidth:ht}=d,dt=N-1-d.padInfo.front,gt=D-1-d.padInfo.top,St=$-1-d.padInfo.left;for(let _t=0;_t<M;++_t)for(let Pt=0;Pt<F;++Pt)for(let Zt=0;Zt<B;++Zt){const qt=Zt-dt,U=Math.max(0,Math.ceil(qt/G)),he=Math.min(J,(N+qt)/G);for(let Wt=0;Wt<P;++Wt){const Qt=Wt-gt,Tt=Math.max(0,Math.ceil(Qt/Q)),pe=Math.min(it,(D+Qt)/Q);for(let $t=0;$t<V;++$t){const oe=$t-St,ke=Math.max(0,Math.ceil(oe/ht)),L=Math.min(ut,($+oe)/ht);let R=0;for(let et=U;et<he;++et){const ft=et*G-qt;for(let pt=Tt;pt<pe;++pt){const lt=pt*Q-Qt;for(let Vt=ke;Vt<L;++Vt){const It=Vt*ht-oe,Bt=w*_t+b*et+_*pt+T*Vt,jt=I*(N-1-ft)+S*(D-1-lt)+v*($-1-It)+C*Pt;for(let bt=0;bt<q;++bt){const Ft=y[Bt+bt],ne=E[jt+bt];R+=Ft*ne}}}}f[p*_t+x*Zt+g*Wt+m*$t+Pt]=R}}}return e.makeTensorInfo(h.shape,h.dtype,h.values)}const gV={kernelName:W1,backendName:"cpu",kernelFunc:mV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xV=Ue(Du,n=>Math.cos(n)),yV={kernelName:Du,backendName:"cpu",kernelFunc:xV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bV=Ue($u,n=>Math.cosh(n)),wV={kernelName:$u,backendName:"cpu",kernelFunc:bV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vV(n){const{inputs:t,backend:e,attrs:s}=n,{image:i,boxes:o,boxInd:r}=t,{cropSize:a,method:c,extrapolationValue:u}=s,[l,d,h,f]=i.shape,p=o.shape[0],[x,g]=a,m=we([p,x,g,f],"float32"),y=e.data.get(o.dataId).values,w=e.data.get(r.dataId).values,b=e.data.get(i.dataId).values,_=Kt(i.shape),T=Kt(m.shape);for(let E=0;E<p;E++){const I=E*4,S=y[I],v=y[I+1],C=y[I+2],M=y[I+3],N=w[E];if(N>=l)continue;const D=x>1?(C-S)*(d-1)/(x-1):0,$=g>1?(M-v)*(h-1)/(g-1):0;for(let F=0;F<x;F++){const B=x>1?S*(d-1)+F*D:.5*(S+C)*(d-1);if(B<0||B>d-1){for(let P=0;P<g;P++)for(let V=0;V<f;V++){const q=V+P*T[2]+F*T[1]+E*T[0];m.values[q]=u}continue}if(c==="bilinear"){const P=Math.floor(B),V=Math.ceil(B),q=B-P;for(let J=0;J<g;J++){const it=g>1?v*(h-1)+J*$:.5*(v+M)*(h-1);if(it<0||it>h-1){for(let ht=0;ht<f;ht++){const dt=ht+J*T[2]+F*T[1]+E*T[0];m.values[dt]=u}continue}const ut=Math.floor(it),G=Math.ceil(it),Q=it-ut;for(let ht=0;ht<f;ht++){let dt=ht+ut*_[2]+P*_[1]+N*_[0];const gt=b[dt];dt=ht+G*_[2]+P*_[1]+N*_[0];const St=b[dt];dt=ht+ut*_[2]+V*_[1]+N*_[0];const _t=b[dt];dt=ht+G*_[2]+V*_[1]+N*_[0];const Pt=b[dt],Zt=gt+(St-gt)*Q,qt=_t+(Pt-_t)*Q;dt=ht+J*T[2]+F*T[1]+E*T[0],m.values[dt]=Zt+(qt-Zt)*q}}}else for(let P=0;P<g;++P){const V=g>1?v*(h-1)+P*$:.5*(v+M)*(h-1);if(V<0||V>h-1){for(let it=0;it<f;it++){const ut=it+P*T[2]+F*T[1]+E*T[0];m.values[ut]=u}continue}const q=Math.round(V),J=Math.round(B);for(let it=0;it<f;it++){const ut=it+q*_[2]+J*_[1]+N*_[0],G=it+P*T[2]+F*T[1]+E*T[0];m.values[G]=b[ut]}}}}return e.makeTensorInfo(m.shape,m.dtype,m.values)}const _V={kernelName:H1,backendName:"cpu",kernelFunc:vV};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CV(n){const{inputs:t,backend:e,attrs:s}=n,{x:i}=t,{axis:o,exclusive:r,reverse:a}=s;Ot(i,"cumprod");const c=un([o],i.shape.length);let u=i;c!=null&&(u=gs({inputs:{x:i},backend:e,attrs:{perm:c}}));const l=mn(1,i.shape.length)[0];if(l!==u.shape.length-1)throw new Error(`backend.cumprod in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${l}`);const d=Ts(u.dtype,"int32"),h=A1(ct(u.shape),d),f=e.data.get(u.dataId).values,p=u.shape[u.shape.length-1],x=a?(m,y)=>m+p-y-1:(m,y)=>m+y;for(let m=0;m<f.length;m+=p)for(let y=0;y<p;y++){const w=x(m,y);if(y===0)h[w]=r?1:f[w];else{const b=x(m,y-1);h[w]=r?f[b]*h[b]:f[w]*h[b]}}const g=e.makeTensorInfo(u.shape,d,h);if(c!=null){const m=qo(c),y=gs({inputs:{x:g},backend:e,attrs:{perm:m}});return e.disposeIntermediateTensorInfo(g),e.disposeIntermediateTensorInfo(u),y}return g}const SV={kernelName:G1,backendName:"cpu",kernelFunc:CV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TV(n){const{inputs:t,backend:e,attrs:s}=n,{x:i}=t,{axis:o,exclusive:r,reverse:a}=s;Ot(i,"cumsum");const c=un([o],i.shape.length);let u=i;c!=null&&(u=gs({inputs:{x:i},backend:e,attrs:{perm:c}}));const l=mn(1,i.shape.length)[0];if(l!==u.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${l}`);const d=Ts(u.dtype,"int32"),h=jn(ct(u.shape),d),f=e.data.get(u.dataId).values,p=u.shape[u.shape.length-1],x=a?(m,y)=>m+p-y-1:(m,y)=>m+y;for(let m=0;m<f.length;m+=p)for(let y=0;y<p;y++){const w=x(m,y);if(y===0)h[w]=r?0:f[w];else{const b=x(m,y-1);h[w]=r?f[b]+h[b]:f[w]+h[b]}}const g=e.makeTensorInfo(u.shape,d,h);if(c!=null){const m=qo(c),y=gs({inputs:{x:g},backend:e,attrs:{perm:m}});return e.disposeIntermediateTensorInfo(g),e.disposeIntermediateTensorInfo(u),y}return g}const EV={kernelName:Jh,backendName:"cpu",kernelFunc:TV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IV(n){const{inputs:t,backend:e,attrs:s}=n,{x:i,weights:o}=t,{size:r,binaryOutput:a}=s;if(i.shape.length===1){const c=e.data.get(i.dataId).values,u=e.data.get(o.dataId).values,l=Xx(c,u,o.dtype,o.shape,r);return e.makeTensorInfo([r],o.dtype,l)}else if(i.shape.length===2){const c=e.bufferSync(i),u=e.bufferSync(o),l=YT(c,u,r,a);return e.makeTensorInfo(l.shape,o.dtype,l.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${i.shape.length}.`)}const RV={kernelName:X1,backendName:"cpu",kernelFunc:IV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MV(n){const{inputs:t,backend:e,attrs:s}=n,{x:i}=t,{blockSize:o,dataFormat:r}=s;k(r==="NHWC",()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${r}`);const a=i.shape[0],c=i.shape[1],u=i.shape[2],l=i.shape[3],d=c*o,h=u*o,f=l/(o*o),p=e.data.get(i.dataId).values,x=new Float32Array(a*d*h*f);let g=0;for(let m=0;m<a;++m)for(let y=0;y<d;++y){const w=Math.floor(y/o),b=y%o;for(let _=0;_<h;++_){const T=Math.floor(_/o),E=_%o,I=(b*o+E)*f;for(let S=0;S<f;++S){const C=S+I+l*(T+u*(w+c*m));x[g++]=p[C]}}}return e.makeTensorInfo([a,d,h,f],i.dtype,x)}const AV={kernelName:q1,backendName:"cpu",kernelFunc:MV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YE(n){const{inputs:t,backend:e,attrs:s}=n,{x:i,filter:o}=t,{strides:r,pad:a,dilations:c,dimRoundingMode:u}=s;Ot([i,o],"depthwiseConv2DNative");const l=Kt(i.shape),d=Kt(o.shape);let h=c;h==null&&(h=[1,1]),k(Yn(r,h),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${r} and dilations '${h}'`);const f=Un(i.shape,o.shape,r,h,a,u,!0),{filterHeight:p,filterWidth:x,dilationHeight:g,dilationWidth:m,padInfo:y}=f,w=y.left,b=y.top,_=f.outChannels/f.inChannels,T=new On(f.outShape,i.dtype),E=e.data.get(i.dataId).values,I=e.data.get(o.dataId).values,S=T.values;for(let v=0;v<f.batchSize;++v){const C=v*l[0],M=v*T.strides[0];for(let N=0;N<f.outHeight;++N){const D=M+N*T.strides[1],$=N*f.strideHeight-b;for(let F=0;F<p;++F){const B=$+F*g;if(B<0||B>=f.inHeight)continue;const P=F*d[0],V=C+B*l[1];for(let q=0;q<f.outWidth;++q){const J=D+q*T.strides[2],it=q*f.strideWidth-w;for(let ut=0;ut<x;++ut){const G=it+ut*m;if(G<0||G>=f.inWidth)continue;const Q=P+ut*d[1],ht=V+G*f.inChannels;let dt=J,gt=Q;for(let St=0;St<f.inChannels;++St){const _t=E[ht+St];for(let Pt=0;Pt<_;++Pt)S[dt+Pt]+=_t*I[gt+Pt];dt+=_,gt+=_}}}}}}return e.makeTensorInfo(T.shape,T.dtype,T.values)}const NV={kernelName:Qh,backendName:"cpu",kernelFunc:YE};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kV(n){const{inputs:t,backend:e,attrs:s}=n,{x:i,dy:o}=t,{strides:r,dilations:a,pad:c,dimRoundingMode:u,filterShape:l}=s;Ot([i,o],"depthwiseConv2dNativeBackpropFilter");const d=Un(i.shape,l,r,a,c,u,!0),{strideHeight:h,strideWidth:f,filterHeight:p,filterWidth:x}=d,g=new On(d.filterShape,"float32"),m=d.padInfo.left,y=d.padInfo.top,w=d.outChannels/d.inChannels,b=e.data.get(i.dataId).values,_=new On(i.shape,i.dtype,b),T=e.data.get(o.dataId).values,E=new On(o.shape,o.dtype,T);for(let I=0;I<p;++I){const S=Math.max(0,Math.ceil((y-I)/h)),v=Math.min(d.outHeight,(d.inHeight+y-I)/h);for(let C=0;C<x;++C){const M=Math.max(0,Math.ceil((m-C)/f)),N=Math.min(d.outWidth,(d.inWidth+m-C)/f);for(let D=0;D<d.outChannels;++D){const $=Math.trunc(D/w),F=D%w;let B=0;for(let P=0;P<d.batchSize;++P)for(let V=S;V<v;++V){const q=I+V*h-y;for(let J=M;J<N;++J){const it=C+J*f-m;B+=_.get(P,q,it,$)*E.get(P,V,J,D)}}g.set(B,I,C,$,F)}}}return e.makeTensorInfo(g.shape,g.dtype,g.values)}const DV={kernelName:j1,backendName:"cpu",kernelFunc:kV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $V(n){const{inputs:t,backend:e,attrs:s}=n,{dy:i,filter:o}=t,{strides:r,dilations:a,pad:c,dimRoundingMode:u,inputShape:l}=s;Ot([i,o],"depthwiseConv2DNativeBackpropInput");const d=Kt(i.shape),h=Kt(o.shape),f=Un(l,o.shape,r,a,c,u,!0),p=new On(f.inShape,"float32"),x=p.values,[g,m,y]=p.strides,w=e.data.get(i.dataId).values,[b,_,T]=d,E=e.data.get(o.dataId).values,[I,S,v]=h,{batchSize:C,filterHeight:M,filterWidth:N,inChannels:D,inHeight:$,inWidth:F,outChannels:B,outHeight:P,outWidth:V,strideHeight:q,strideWidth:J}=f,it=M-1-f.padInfo.top,ut=N-1-f.padInfo.left,G=B/D;for(let Q=0;Q<C;++Q)for(let ht=0;ht<D;++ht)for(let dt=0;dt<$;++dt){const gt=dt-it,St=Math.max(0,Math.ceil(gt/q)),_t=Math.min(P,(M+gt)/q);for(let Pt=0;Pt<F;++Pt){const Zt=Pt-ut,qt=Math.max(0,Math.ceil(Zt/J)),U=Math.min(V,(N+Zt)/J);let he=0;for(let Wt=St;Wt<_t;++Wt){const Qt=Wt*q-gt;for(let Tt=qt;Tt<U;++Tt){const pe=Tt*J-Zt,$t=b*Q+_*Wt+T*Tt,oe=I*(M-1-Qt)+S*(N-1-pe)+v*ht;for(let ke=0;ke<G;++ke){const L=ht*G+ke,R=w[$t+L],et=E[oe+ke];he+=R*et}}}x[g*Q+m*dt+y*Pt+ht]=he}}return e.makeTensorInfo(p.shape,p.dtype,p.values)}const FV={kernelName:K1,backendName:"cpu",kernelFunc:$V};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PV(n){const{inputs:t,backend:e}=n,{x:s}=t,i=ct(s.shape),o=e.data.get(s.dataId).values,r=we([i,i],s.dtype),a=r.values;for(let u=0;u<o.length;u++)a[u*i+u]=o[u];const c=[...s.shape,...s.shape];return e.makeTensorInfo(c,r.dtype,r.values)}const LV={kernelName:_2,backendName:"cpu",kernelFunc:PV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const OV={kernelName:tf,backendName:"cpu",kernelFunc:({inputs:n,backend:t,attrs:e})=>{const{x:s,filter:i}=n,{strides:o,pad:r,dilations:a}=e,c=t,u=c.data.get(s.dataId).values,l=s.shape.length,d=c.data.get(i.dataId).values,h=i.shape.length,{batchSize:f,inHeight:p,inWidth:x,inChannels:g,outHeight:m,outWidth:y,padInfo:w,strideHeight:b,strideWidth:_,filterHeight:T,filterWidth:E,dilationHeight:I,dilationWidth:S,outShape:v}=yl(s.shape,i.shape,o,r,"NHWC",a),C=ct(v),M=v.length,N=fn(s.dtype,C);for(let $=0;$<f;++$)for(let F=0;F<m;++F){const B=F*b-w.top;for(let P=0;P<y;++P){const V=P*_-w.left;for(let q=0;q<g;++q){let J=Number.MIN_SAFE_INTEGER;for(let ut=0;ut<T;++ut){const G=B+ut*I;if(G>=0&&G<p)for(let Q=0;Q<E;++Q){const ht=V+Q*S;if(ht>=0&&ht<x){const dt=Fi([$,G,ht,q],l,Kt(s.shape)),gt=Fi([ut,Q,q],h,Kt(i.shape)),St=u[dt]+d[gt];St>J&&(J=St)}}}const it=Fi([$,F,P,q],M,Kt(v));N[it]=J}}}return{dataId:c.write(Gr(N,s.dtype),v,s.dtype),shape:v,dtype:s.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const UV={kernelName:m0,backendName:"cpu",kernelFunc:({inputs:n,backend:t,attrs:e})=>{const{x:s,filter:i,dy:o}=n,{strides:r,pad:a,dilations:c}=e,u=t,l=yi(s.shape,u.data.get(s.dataId).values),d=yi(i.shape,u.data.get(i.dataId).values),{batchSize:h,inHeight:f,inWidth:p,inChannels:x,outHeight:g,outWidth:m,padInfo:y,strideHeight:w,strideWidth:b,filterHeight:_,filterWidth:T,dilationHeight:E,dilationWidth:I,outShape:S}=yl(s.shape,i.shape,r,a,"NHWC",c);k(o.rank===S.length,()=>`Error in ${m0}, dy must have the same rank as output ${S.length}, but got ${o.rank}`);const v=yi(S,u.data.get(o.dataId).values),C=y2(i.shape,i.dtype);for(let N=0;N<h;++N)for(let D=0;D<g;++D){const $=D*w-y.top;for(let F=0;F<m;++F){const B=F*b-y.left;for(let P=0;P<x;++P){let V=Number.MIN_SAFE_INTEGER,q=0,J=0;for(let it=0;it<_;++it){const ut=$+it*E;if(ut>=0&&ut<f)for(let G=0;G<T;++G){const Q=B+G*I;if(Q>=0&&Q<p){const ht=l[N][ut][Q][P]+d[it][G][P];ht>V&&(V=ht,q=it,J=G)}}}C[q][J][P]+=v[N][D][F][P]}}}return{dataId:u.write(Gr(C,s.dtype),i.shape,i.dtype),shape:i.shape,dtype:i.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const BV={kernelName:p0,backendName:"cpu",kernelFunc:({inputs:n,backend:t,attrs:e})=>{const{x:s,filter:i,dy:o}=n,{strides:r,pad:a,dilations:c}=e,u=t,l=yi(s.shape,u.data.get(s.dataId).values),d=yi(i.shape,u.data.get(i.dataId).values),{batchSize:h,inHeight:f,inWidth:p,inChannels:x,outHeight:g,outWidth:m,padInfo:y,strideHeight:w,strideWidth:b,filterHeight:_,filterWidth:T,dilationHeight:E,dilationWidth:I,outShape:S}=yl(s.shape,i.shape,r,a,"NHWC",c);k(o.rank===S.length,()=>`Error in ${p0}, dy must have the same rank as output ${S.length}, but got ${o.rank}`);const v=yi(S,u.data.get(o.dataId).values),C=y2(s.shape,s.dtype);for(let N=0;N<h;++N)for(let D=0;D<g;++D){const $=D*w-y.top;for(let F=0;F<m;++F){const B=F*b-y.left;for(let P=0;P<x;++P){let V=Number.MIN_SAFE_INTEGER,q=$<0?0:$,J=B<0?0:B;for(let it=0;it<_;++it){const ut=$+it*E;if(ut>=0&&ut<f)for(let G=0;G<T;++G){const Q=B+G*I;if(Q>=0&&Q<p){const ht=l[N][ut][Q][P]+d[it][G][P];ht>V&&(V=ht,q=ut,J=Q)}}}C[N][q][J][P]+=v[N][D][F][P]}}}return{dataId:u.write(Gr(C,s.dtype),s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zV(n){const{inputs:t,backend:e,attrs:s}=n,{image:i}=t,{canvas:o,options:r}=s,{contextOptions:a,imageOptions:c}=r||{},u=c?.alpha||1,l=a?.contextType||"2d";if(l!=="2d")throw new Error(`Context type ${a.contextType} is not supported by the CPU backend.`);const d=o.getContext(l,a?.contextAttributes||{});if(d==null)throw new Error(`Could not get the context with ${l} type.`);const[h,f]=i.shape.slice(0,2),p=i.shape.length===2?1:i.shape[2],x=e.data.get(i.dataId).values,g=i.dtype==="float32"?255:1,m=new Uint8ClampedArray(f*h*4);for(let w=0;w<h*f;++w){const b=[0,0,0,255*u];for(let T=0;T<p;T++){const E=x[w*p+T];if(i.dtype==="float32"){if(E<0||E>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${E}.`)}else if(i.dtype==="int32"&&(E<0||E>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${E}.`);p===1?(b[0]=E*g,b[1]=E*g,b[2]=E*g):b[T]=E*g}const _=w*4;m[_+0]=Math.round(b[0]),m[_+1]=Math.round(b[1]),m[_+2]=Math.round(b[2]),m[_+3]=Math.round(b[3])}o.width=f,o.height=h;const y=new ImageData(m,f,h);return d.putImageData(y,0,0),i}const VV={kernelName:w9,backendName:"cpu",kernelFunc:zV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $l(n){const{inputs:t,backend:e,attrs:s}=n,{x:i}=t,{axis:o,keepDims:r}=s;Ot(i,"sum");let a;i.dtype==="bool"?a=Vo({inputs:{x:i},backend:e,attrs:{dtype:"int32"}}):a=Wi({inputs:{x:i},backend:e});const c=a.shape.length,u=ve(o,a.shape),l=un(u,c);let d=u,h=a;l!=null&&(h=gs({inputs:{x:a},backend:e,attrs:{perm:l}}),d=mn(d.length,c)),Bn("sum",d,h.shape.length);const[f,p]=$n(h.shape,d),x=Ts(h.dtype,"int32");let g=gh(e,f,x);const m=ct(p),y=e.data.get(g.dataId).values,w=e.data.get(h.dataId).values;for(let b=0;b<y.length;++b){const _=b*m;let T=0;for(let E=0;E<m;++E)T+=w[_+E];y[b]=T}if(r){const b=wn(g.shape,u),_=g;g=Je({inputs:{x:g},backend:e,attrs:{shape:b}}),e.disposeIntermediateTensorInfo(_)}return e.disposeIntermediateTensorInfo(a),l!=null&&e.disposeIntermediateTensorInfo(h),g}const WV={kernelName:$f,backendName:"cpu",kernelFunc:$l};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GV(n){const{inputs:t,backend:e,attrs:s}=n,{equation:i}=s,o=t,{allDims:r,summedDims:a,idDims:c}=gx(i,o.length);yx(r.length,c,o);const{path:u,steps:l}=bx(a,c),d=l.length;let h=null,f=r.length;const p=[];for(let x=0;x<d;++x){for(const g of l[x]){const{permutationIndices:m,expandDims:y}=xx(f,c[g]);let w;wx(m)?w=o[g]:(w=gs({inputs:{x:o[g]},backend:e,attrs:{perm:m}}),p.push(w));const b=w.shape.slice();for(let _=0;_<y.length;++_)b.splice(y[_],0,1);Pe(w.shape,b)||(w=Je({inputs:{x:w},backend:e,attrs:{shape:b}}),p.push(w)),h===null?h=w:(h=dp({inputs:{a:w,b:h},backend:e}),p.push(h))}x<d-1&&(u[x]>=0&&(h=$l({inputs:{x:h},backend:e,attrs:{axis:u[x]-(r.length-f),keepDims:!1}}),p.push(h)),f--)}for(const x of p)x!==h&&e.disposeIntermediateTensorInfo(x);return h}const HV={kernelName:Y1,backendName:"cpu",kernelFunc:GV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XV(n){const{inputs:t,backend:e}=n,{dy:s,y:i}=t;Ot([s,i],"eluGrad");const o=new Float32Array(ct(i.shape)),r=e.data.get(i.dataId).values,a=e.data.get(s.dataId).values;for(let c=0;c<r.length;++c){const u=r[c];u>=0?o[c]=a[c]:o[c]=a[c]*(u+1)}return e.makeTensorInfo(i.shape,"float32",o)}const qV={kernelName:Z1,backendName:"cpu",kernelFunc:XV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jV=ux,KV=lx,YV=dx,ZV=hx,JV=fx,QV=px,t7=Ue(Lu,n=>{const t=Math.sign(n),e=Math.abs(n),s=1/(1+jV*e);return t*(1-((((QV*s+JV)*s+ZV)*s+YV)*s+KV)*s*Math.exp(-e*e))}),e7={kernelName:Lu,backendName:"cpu",kernelFunc:t7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bh(n){const{inputs:t,backend:e,attrs:s}=n,{input:i}=t,{dim:o}=s,r=i.shape.length,a=i.shape.slice();let c=o;return o<0&&(k(-(r+1)<=o,()=>`Axis must be in the interval [${-(r+1)}, ${r}]`),c=r+o+1),a.splice(c,0,1),Je({inputs:{x:i},backend:e,attrs:{shape:a}})}const n7={kernelName:nf,backendName:"cpu",kernelFunc:bh};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const s7=xn((n,t)=>n/t),Jx=Rn(Fu,s7),z0={kernelName:Fu,backendName:"cpu",kernelFunc:Jx};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZE(n,t,e){const s=n.shape,i=s[0],o=s[1],r=e.data.get(n.dataId),a=r.complexTensorInfos.real,c=r.complexTensorInfos.imag,u=[i,o],l=ct(u),d=qn("float32",l),h=qn("float32",l);for(let g=0;g<i;g++){const m=Br({inputs:{x:a},backend:e,attrs:{begin:[g,0],size:[1,o]}}),y=Br({inputs:{x:c},backend:e,attrs:{begin:[g,0],size:[1,o]}}),w=_s({inputs:{real:m,imag:y},backend:e}),{real:b,imag:_}=i7(w,t,e),T=lo(b,_);for(let E=0;E<o;E++){const I=mx(T,E);d[g*o+E]=I.real,h[g*o+E]=I.imag}e.disposeIntermediateTensorInfo(m),e.disposeIntermediateTensorInfo(y),e.disposeIntermediateTensorInfo(w)}const f=e.makeTensorInfo(u,"float32",d),p=e.makeTensorInfo(u,"float32",h),x=_s({inputs:{real:f,imag:p},backend:e});return e.disposeIntermediateTensorInfo(f),e.disposeIntermediateTensorInfo(p),x}function i7(n,t,e){const s=ct(n.shape),i=e.data.get(n.dataId),o=e.data.get(i.complexTensorInfos.real.dataId).values,r=e.data.get(i.complexTensorInfos.imag.dataId).values;if(o7(s)){const a=V0(o,r,s,t,e),c=[n.shape[0],n.shape[1]];if(t){const u=e.makeTensorInfo(c,"float32",a.real),l=e.makeTensorInfo(c,"float32",a.imag),d=e.makeTensorInfo([],"float32",Ho(s,"float32")),h=Wi({inputs:{x:d},backend:e}),f=z0.kernelFunc({inputs:{a:u,b:d},backend:e}),p=z0.kernelFunc({inputs:{a:l,b:h},backend:e}),x=e.data.get(f.dataId).values,g=e.data.get(p.dataId).values;return e.disposeIntermediateTensorInfo(u),e.disposeIntermediateTensorInfo(l),e.disposeIntermediateTensorInfo(d),e.disposeIntermediateTensorInfo(h),e.disposeIntermediateTensorInfo(f),e.disposeIntermediateTensorInfo(p),{real:x,imag:g}}return a}else{const a=lo(o,r),c=r7(a,s,t);return lC(c)}}function o7(n){return(n&n-1)===0}function V0(n,t,e,s,i){if(e===1)return{real:n,imag:t};const o=lo(n,t),r=e/2,a=dC(o),c=a.real,u=a.imag,l=[c.length],d=i.makeTensorInfo(l,"float32",c),h=i.makeTensorInfo(l,"float32",u),f=_s({inputs:{real:d,imag:h},backend:i}),p=hC(o),x=p.real,g=p.imag,m=[x.length],y=i.makeTensorInfo(m,"float32",x),w=i.makeTensorInfo(m,"float32",g),b=_s({inputs:{real:y,imag:w},backend:i}),_=V0(c,u,r,s,i),T=_.real,E=_.imag,I=[T.length],S=i.makeTensorInfo(I,"float32",T),v=i.makeTensorInfo(I,"float32",E),C=_s({inputs:{real:S,imag:v},backend:i}),M=V0(x,g,r,s,i),N=M.real,D=M.imag,$=[N.length],F=i.makeTensorInfo($,"float32",N),B=i.makeTensorInfo($,"float32",D),P=_s({inputs:{real:F,imag:B},backend:i}),V=pC(e,s),q=[V.real.length],J=i.makeTensorInfo(q,"float32",V.real),it=i.makeTensorInfo(q,"float32",V.imag),ut=_s({inputs:{real:J,imag:it},backend:i}),G=dp({inputs:{a:ut,b:P},backend:i}),Q=Ja({inputs:{a:C,b:G},backend:i}),ht=Yx({inputs:{a:C,b:G},backend:i}),dt=Ur({inputs:{input:Q},backend:i}),gt=Ur({inputs:{input:ht},backend:i}),St=Qa({inputs:{input:Q},backend:i}),_t=Qa({inputs:{input:ht},backend:i}),Pt=tc({inputs:[dt,gt],backend:i,attrs:{axis:0}}),Zt=tc({inputs:[St,_t],backend:i,attrs:{axis:0}}),qt=i.data.get(Pt.dataId).values,U=i.data.get(Zt.dataId).values;return i.disposeIntermediateTensorInfo(d),i.disposeIntermediateTensorInfo(h),i.disposeIntermediateTensorInfo(f),i.disposeIntermediateTensorInfo(y),i.disposeIntermediateTensorInfo(w),i.disposeIntermediateTensorInfo(b),i.disposeIntermediateTensorInfo(S),i.disposeIntermediateTensorInfo(v),i.disposeIntermediateTensorInfo(C),i.disposeIntermediateTensorInfo(F),i.disposeIntermediateTensorInfo(B),i.disposeIntermediateTensorInfo(P),i.disposeIntermediateTensorInfo(J),i.disposeIntermediateTensorInfo(it),i.disposeIntermediateTensorInfo(ut),i.disposeIntermediateTensorInfo(G),i.disposeIntermediateTensorInfo(Q),i.disposeIntermediateTensorInfo(ht),i.disposeIntermediateTensorInfo(dt),i.disposeIntermediateTensorInfo(St),i.disposeIntermediateTensorInfo(gt),i.disposeIntermediateTensorInfo(_t),i.disposeIntermediateTensorInfo(Pt),i.disposeIntermediateTensorInfo(Zt),{real:qt,imag:U}}function r7(n,t,e){const s=new Float32Array(t*2);for(let i=0;i<t;i++){let o=0,r=0;for(let a=0;a<t;a++){const c=mC(i*a,t,e),u=mx(n,a);o+=u.real*c.real-u.imag*c.imag,r+=u.real*c.imag+u.imag*c.real}e&&(o/=t,r/=t),fC(s,o,r,i)}return s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a7(n){const{inputs:t,backend:e}=n,{input:s}=t,i=ct(s.shape),o=s.shape[s.shape.length-1],r=i/o,a=Je({inputs:{x:s},backend:e,attrs:{shape:[r,o]}}),c=ZE(a,!1,e),u=Je({inputs:{x:c},backend:e,attrs:{shape:s.shape}});return e.disposeIntermediateTensorInfo(a),e.disposeIntermediateTensorInfo(c),u}const c7={kernelName:J1,backendName:"cpu",kernelFunc:a7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Qx(n){const{backend:t,attrs:e}=n,{shape:s,value:i,dtype:o}=e,r=o||ac(i),a=fn(r,ct(s));return l7(a,i,r),t.makeTensorInfo(s,r,a)}const u7={kernelName:Q1,backendName:"cpu",kernelFunc:Qx};function l7(n,t,e){n.fill(t)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const d7={kernelName:tg,backendName:"cpu",kernelFunc:({inputs:n,attrs:t,backend:e})=>{const{image:s}=n,i=e,o=qn(s.dtype,ct(s.shape)),[r,a,c,u]=s.shape,l=i.data.get(s.dataId).values;for(let h=0;h<r;h++){const f=h*c*a*u;for(let p=0;p<a;p++){const x=p*(c*u);for(let g=0;g<c;g++){const m=g*u;for(let y=0;y<u;y++){const w=Math.round(c-g-1),b=f+x+m+y;let _=l[b];if(w>=0&&w<c){const T=w*u,E=f+x+T+y;_=l[E]}o[b]=_}}}}return{dataId:i.write(o,s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function h7(n){const{inputs:t,backend:e,attrs:s}=n,{x:i,filter:o,bias:r,preluActivationWeights:a}=t,{strides:c,pad:u,dataFormat:l,dilations:d,dimRoundingMode:h,activation:f,leakyreluAlpha:p}=s;let x=KE({inputs:{x:i,filter:o},backend:e,attrs:{strides:c,pad:u,dataFormat:l,dilations:d,dimRoundingMode:h}});if(r){const g=x;if(l==="NCHW"&&r.shape.length===1&&r.shape[0]!==1){const m=Je({inputs:{x:r},backend:e,attrs:{shape:[r.shape[0],1,1]}});x=Ja({inputs:{a:x,b:m},backend:e}),e.disposeIntermediateTensorInfo(m)}else x=Ja({inputs:{a:x,b:r},backend:e});e.disposeIntermediateTensorInfo(g)}if(f){const g=x;if(l==="NCHW"&&f==="prelu"&&a.shape.length===1&&a.shape[0]!==1){const m=Je({inputs:{x:a},backend:e,attrs:{shape:[a.shape[0],1,1]}});x=yh(e,x,f,m,p),e.disposeIntermediateTensorInfo(m)}else x=yh(e,x,f,a,p);e.disposeIntermediateTensorInfo(g)}return x}const f7={kernelName:th,backendName:"cpu",kernelFunc:h7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function p7(n){const{inputs:t,backend:e,attrs:s}=n,{x:i,filter:o,bias:r,preluActivationWeights:a}=t,{strides:c,pad:u,dataFormat:l,dilations:d,dimRoundingMode:h,activation:f,leakyreluAlpha:p}=s;let x=YE({inputs:{x:i,filter:o},backend:e,attrs:{strides:c,pad:u,dataFormat:l,dilations:d,dimRoundingMode:h}});if(r){const g=x;x=Ja({inputs:{a:x,b:r},backend:e}),e.disposeIntermediateTensorInfo(g)}if(f){const g=x;x=yh(e,x,f,a,p),e.disposeIntermediateTensorInfo(g)}return x}const m7={kernelName:z2,backendName:"cpu",kernelFunc:p7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function g7(n){const{inputs:t,backend:e}=n,{params:s,indices:i}=t,o=ct(s.shape),r=i.shape,a=r[r.length-1],[c,u,l,d]=Jg(s,i);if(u===0)return e.makeTensorInfo(c,s.dtype,[]);const h=e.data.get(i.dataId).values,f=e.bufferSync(s),p=aE(h,f,s.dtype,u,a,l,d,s.shape,o);return e.makeTensorInfo(c,s.dtype,p.values)}const x7={kernelName:C2,backendName:"cpu",kernelFunc:g7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function y7(n){const{inputs:t,backend:e,attrs:s}=n,{x:i,indices:o}=t,{axis:r,batchDims:a}=s;Ot([i,o],"gatherV2");const c=ve(r,i.shape)[0],u=e.data.get(o.dataId).values,l=i.shape[c];for(let b=0;b<u.length;++b){const _=u[b];k(_<=l-1&&_>=0,()=>`GatherV2: the index value ${_} is not in [0, ${l-1}]`)}let d=a;a==null&&(d=0);const h=ct(o.shape),f=_x(i,o,c,d),p=Je({inputs:{x:i},backend:e,attrs:{shape:[f.batchSize,f.outerSize,f.dimSize,f.sliceSize]}}),x=Je({inputs:{x:o},backend:e,attrs:{shape:[f.batchSize,h/f.batchSize]}}),g=[f.batchSize,f.outerSize,h/f.batchSize,f.sliceSize],m=e.bufferSync(x),y=e.bufferSync(p),w=cE(y,m,g);return e.disposeIntermediateTensorInfo(p),e.disposeIntermediateTensorInfo(x),e.makeTensorInfo(f.outputShape,w.dtype,w.values)}const b7={kernelName:of,backendName:"cpu",kernelFunc:y7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function w7(n){const{inputs:t,backend:e}=n,{input:s}=t,i=ct(s.shape),o=s.shape[s.shape.length-1],r=i/o,a=Je({inputs:{x:s},backend:e,attrs:{shape:[r,o]}}),c=ZE(a,!0,e),u=Je({inputs:{x:c},backend:e,attrs:{shape:s.shape}});return e.disposeIntermediateTensorInfo(a),e.disposeIntermediateTensorInfo(c),u}const v7={kernelName:eg,backendName:"cpu",kernelFunc:w7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _7=Ue(Gu,n=>Number.isFinite(n)?1:0,"bool"),C7={kernelName:Gu,backendName:"cpu",kernelFunc:_7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const S7=Ue(Hu,n=>Math.abs(n)===1/0?1:0,"bool"),T7={kernelName:Hu,backendName:"cpu",kernelFunc:S7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const E7=Ue(Xu,n=>Number.isNaN(n)?1:0,"bool"),I7={kernelName:Xu,backendName:"cpu",kernelFunc:E7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function R7(n){const{backend:t,attrs:e}=n,{start:s,stop:i,num:o}=e,r=fE(s,i,o);return t.makeTensorInfo([r.length],"float32",r)}const M7={kernelName:S2,backendName:"cpu",kernelFunc:R7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const A7=Ue(ju,n=>Math.log1p(n)),N7={kernelName:ju,backendName:"cpu",kernelFunc:A7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const k7=xn((n,t)=>n&&t),D7=Rn(lf,k7,null,"bool"),$7={kernelName:lf,backendName:"cpu",kernelFunc:D7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const F7=Ue(df,n=>n?0:1,"bool"),P7={kernelName:df,backendName:"cpu",kernelFunc:F7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const L7=xn((n,t)=>n||t),O7=Rn(hf,L7,null,"bool"),U7={kernelName:hf,backendName:"cpu",kernelFunc:O7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function B7(n){const{inputs:t,backend:e,attrs:s}=n,{x:i}=t,{depthRadius:o,bias:r,alpha:a,beta:c}=s;Ot(i,"LRN");const u=i.shape[3],l=u-1,d=e.data.get(i.dataId).values,h=ct(i.shape),f=new Float32Array(h);function p(x){const g=x%u;let m=x-g+Math.max(0,g-o);const y=x-g+Math.min(g+o,l);let w=0;for(;m<=y;m++){const b=d[m];w+=b*b}return w}for(let x=0;x<h;x++){const g=p(x),m=d[x]*Math.pow(r+a*g,-c);f[x]=m}return e.makeTensorInfo(i.shape,i.dtype,f)}const z7={kernelName:ff,backendName:"cpu",kernelFunc:B7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function V7(n){const{inputs:t,backend:e,attrs:s}=n,{x:i,y:o,dy:r}=t,{depthRadius:a,bias:c,alpha:u,beta:l}=s;Ot(r,"LRNGrad");const d=ct(r.shape),h=r.shape[3],f=e.data.get(r.dataId).values,p=e.data.get(i.dataId).values,x=e.data.get(o.dataId).values,g=new Float32Array(d),m=d;for(let y=0;y<m;y++){const w=y%h,b=y-w+Math.max(0,w-a),_=y-w+Math.min(h,w+a+1);let T=0;for(let E=b;E<_;E++)T+=Math.pow(p[E],2);T=u*T+c;for(let E=b;E<_;E++){let I=-2*u*l*p[E]*x[y]/T;y===E&&(I+=Math.pow(T,-l)),I*=f[y],g[E]+=I}}return e.makeTensorInfo(r.shape,i.dtype,g)}const W7={kernelName:sg,backendName:"cpu",kernelFunc:V7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JE(n){const{inputs:t,backend:e,attrs:s}=n,{x:i}=t,{reductionIndices:o,keepDims:r}=s,a=e;let c=i.shape;const u=c.length,l=ve(o,c);let d=l;const h=un(d,u);let f=a.data.get(i.dataId).values;if(h!=null){const b=new Array(u);for(let _=0;_<b.length;_++)b[_]=c[h[_]];f=jx(f,c,i.dtype,h,b),d=mn(d.length,u),c=b}Ot(i,"max"),Bn("max",d,u);const[p,x]=$n(c,d),g=ct(x),m=mE(f,g,p,i.dtype),y=a.write(m,p,i.dtype);let w=p;return r&&(w=wn(p,l)),{dataId:y,shape:w,dtype:i.dtype}}const G7={kernelName:pf,backendName:"cpu",kernelFunc:JE};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function H7(n){const{inputs:t,backend:e,attrs:s}=n,{x:i}=t;Ot(i,"maxPool");const{filterSize:o,strides:r,pad:a,dimRoundingMode:c}=s,u=1;k(Yn(r,u),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${r} and dilations '${u}'`);const l=ni(i.shape,o,r,u,a,c);let d;if(l.filterWidth===1&&l.filterHeight===1&&Pe(l.inShape,l.outShape))d=Wi({inputs:{x:i},backend:e});else{const h=e.data.get(i.dataId).values,f=Kt(i.shape),p=Zx(h,i.shape,i.dtype,f,l,"max");d=e.makeTensorInfo(l.outShape,i.dtype,p.values)}return d}const X7={kernelName:mf,backendName:"cpu",kernelFunc:H7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function q7(n){const{inputs:t,backend:e,attrs:s}=n,{x:i}=t,{filterSize:o,strides:r,pad:a,dimRoundingMode:c,dataFormat:u}=s;Ot(i,"maxPool3d");const l=po(i.shape,o,r,1,a,c,u),d=e.data.get(i.dataId).values,h=jE(d,i.shape,i.dtype,Kt(i.shape),l,"max");return e.makeTensorInfo(h.shape,"float32",h.values)}const j7={kernelName:gf,backendName:"cpu",kernelFunc:q7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function K7(n){const{inputs:t,backend:e,attrs:s}=n,{dy:i,input:o}=t,{filterSize:r,strides:a,pad:c,dimRoundingMode:u}=s;Ot([i,o],"maxPool3DGrad");const l=po(o.shape,r,a,1,c,u),d=e.bufferSync(o),h=Lz(d,l),f=l.strideDepth,p=l.strideHeight,x=l.strideWidth,g=l.dilationDepth,m=l.dilationHeight,y=l.dilationWidth,w=l.effectiveFilterDepth,b=l.effectiveFilterHeight,_=l.effectiveFilterWidth,T=w-1-l.padInfo.front,E=_-1-l.padInfo.left,I=b-1-l.padInfo.top,S=we(o.shape,"float32"),v=e.bufferSync(i);for(let C=0;C<l.batchSize;++C)for(let M=0;M<l.inChannels;++M)for(let N=0;N<l.inDepth;++N)for(let D=0;D<l.inHeight;++D)for(let $=0;$<l.inWidth;++$){const F=N-T,B=D-I,P=$-E;let V=0;for(let q=0;q<w;q+=g){const J=(F+q)/f;if(!(J<0||J>=l.outDepth||Math.floor(J)!==J))for(let it=0;it<b;it+=m){const ut=(B+it)/p;if(!(ut<0||ut>=l.outHeight||Math.floor(ut)!==ut))for(let G=0;G<_;G+=y){const Q=(P+G)/x;if(Q<0||Q>=l.outWidth||Math.floor(Q)!==Q)continue;const ht=w*b*_-1-h.get(C,J,ut,Q,M),dt=q*b*_+it*_+G,gt=ht===dt?1:0;if(gt===0)continue;const St=v.get(C,J,ut,Q,M);V+=St*gt}}}S.set(V,C,N,D,$,M)}return e.makeTensorInfo(S.shape,S.dtype,S.values)}const Y7={kernelName:og,backendName:"cpu",kernelFunc:K7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Z7(n){const{inputs:t,backend:e,attrs:s}=n,{dy:i,input:o,output:r}=t,a=o;Ot([o,r],"maxPoolGrad");const{filterSize:c,strides:u,pad:l,dimRoundingMode:d}=s,h=ni(a.shape,c,u,1,l,d),f=e.data.get(a.dataId).values,p=we(h.outShape,a.dtype,qE(f,a.shape,a.dtype,h).values),x=h.strideHeight,g=h.strideWidth,m=h.dilationHeight,y=h.dilationWidth,w=h.effectiveFilterHeight,b=h.effectiveFilterWidth,_=b-1-h.padInfo.left,T=w-1-h.padInfo.top,E=we(a.shape,"float32"),I=e.data.get(i.dataId).values,S=we(i.shape,"float32",I);for(let v=0;v<h.batchSize;++v)for(let C=0;C<h.inChannels;++C)for(let M=0;M<h.inHeight;++M)for(let N=0;N<h.inWidth;++N){const D=M-T,$=N-_;let F=0;for(let B=0;B<w;B+=m){const P=(D+B)/x;if(!(P<0||P>=h.outHeight||Math.floor(P)!==P))for(let V=0;V<b;V+=y){const q=($+V)/g;if(q<0||q>=h.outWidth||Math.floor(q)!==q)continue;const J=w*b-1-p.get(v,P,q,C),it=B*b+V,ut=J===it?1:0;if(ut===0)continue;const G=S.get(v,P,q,C);F+=G*ut}}E.set(F,v,M,N,C)}return e.makeTensorInfo(E.shape,E.dtype,E.values)}const J7={kernelName:ig,backendName:"cpu",kernelFunc:Z7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Q7(n,t,e,s,i){const o=Kt(t),r=Zx(n,t,e,o,i,"max"),a=qE(n,t,e,i,!0,s);return[r.values,a.values]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tW={kernelName:T2,backendName:"cpu",kernelFunc:({inputs:n,attrs:t,backend:e})=>{const{x:s}=n,{filterSize:i,strides:o,pad:r,includeBatchInIndex:a}=t,c=e;Ot(s,"MaxPoolWithArgmax");const u=c.data.get(s.dataId).values,l=ni(s.shape,i,o,[1,1],r),[d,h]=Q7(u,s.shape,s.dtype,a,l),f=c.write(d,l.outShape,s.dtype),p=c.write(h,l.outShape,s.dtype);return[{dataId:f,shape:l.outShape,dtype:s.dtype},{dataId:p,shape:l.outShape,dtype:"int32"}]}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eW(n){const{inputs:t,backend:e,attrs:s}=n,{x:i}=t,{axis:o,keepDims:r}=s,a=ve(o,i.shape),u=$n(i.shape,a)[1],l=ct(u),d=[],h=e.makeTensorInfo([],"float32",new Float32Array([l]));d.push(h);const f=Vo({inputs:{x:i},backend:e,attrs:{dtype:"float32"}});d.push(f);const p=Jx({inputs:{a:f,b:h},backend:e});d.push(p);const x=$l({inputs:{x:p},backend:e,attrs:{axis:o,keepDims:r}});return d.forEach(g=>e.disposeIntermediateTensorInfo(g)),x}const nW={kernelName:xf,backendName:"cpu",kernelFunc:eW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sW(n){const{inputs:t,backend:e,attrs:s}=n,{x:i}=t,{axis:o,keepDims:r}=s;Ot(i,"min");const a=ve(o,i.shape);let c=a;const u=un(c,i.shape.length);let l=i;u!=null&&(l=gs({inputs:{x:i},backend:e,attrs:{perm:u}}),c=mn(c.length,i.shape.length)),Bn("min",c,l.shape.length);const[d,h]=$n(l.shape,c),f=ct(h),p=jn(ct(d),l.dtype),x=e.data.get(l.dataId).values;for(let m=0;m<p.length;++m){const y=m*f;let w=x[y];for(let b=0;b<f;++b){const _=x[y+b];(Number.isNaN(_)||_<w)&&(w=_)}p[m]=w}u!=null&&e.disposeIntermediateTensorInfo(l);const g=e.makeTensorInfo(d,l.dtype,p);if(r){const m=wn(d,a),y=Je({inputs:{x:g},backend:e,attrs:{shape:m}});return e.disposeIntermediateTensorInfo(g),y}return g}const iW={kernelName:yf,backendName:"cpu",kernelFunc:sW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oW(n){const{inputs:t,backend:e,attrs:s}=n,{x:i}=t,{paddings:o,mode:r}=s;Ot(i,"mirrorPad");const a=o.map((w,b)=>w[0]+i.shape[b]+w[1]),c=o.map(w=>w[0]),u=o.map((w,b)=>w[0]+i.shape[b]),l=r==="reflect"?0:1,d=e.data.get(i.dataId).values,h=i.shape.length,f=Kt(i.shape),p=ct(a),x=a.length,g=Kt(a),m=qn(i.dtype,p);for(let w=0;w<p;w++){let b=cc(w,x,g);for(let T=0;T<x;T++)b[T]<c[T]?b[T]=c[T]*2-b[T]-l:b[T]>=u[T]&&(b[T]=(u[T]-1)*2-b[T]+l);b=b.map((T,E)=>T-c[E]);const _=Fi(b,h,f);m[w]=d[_]}return{dataId:e.write(m,a,i.dtype),shape:a,dtype:i.dtype}}const rW={kernelName:bf,backendName:"cpu",kernelFunc:oW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aW=xn((n,t)=>{const e=n%t;return n<0&&t<0||n>=0&&t>=0?e:(e+t)%t}),cW=Rn(Zu,aW),uW={kernelName:Zu,backendName:"cpu",kernelFunc:cW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QE(n){const{inputs:t,backend:e,attrs:s}=n,{logits:i}=t,{dim:o}=s,r=i.shape.length;let a=o;if(a===-1&&(a=r-1),a!==r-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${r} and dim was ${a}`);const c=ve([a],i.shape),u=JE({inputs:{x:i},backend:e,attrs:{reductionIndices:c,keepDims:!1}}),l=wn(u.shape,c),d=Je({inputs:{x:u},backend:e,attrs:{shape:l}}),h=Yx({inputs:{a:i,b:d},backend:e}),f=sE({inputs:{x:h},backend:e}),p=$l({inputs:{x:f},backend:e,attrs:{axis:c,keepDims:!1}}),x=Je({inputs:{x:p},backend:e,attrs:{shape:l}}),g=Jx({inputs:{a:f,b:x},backend:e});return e.disposeIntermediateTensorInfo(u),e.disposeIntermediateTensorInfo(d),e.disposeIntermediateTensorInfo(h),e.disposeIntermediateTensorInfo(f),e.disposeIntermediateTensorInfo(p),e.disposeIntermediateTensorInfo(x),g}const lW={kernelName:Lf,backendName:"cpu",kernelFunc:QE};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dW(n){const{inputs:t,backend:e,attrs:s}=n,{logits:i}=t,{numSamples:o,seed:r,normalized:a}=s;Ot(i,"multinomial");const c=a?i:QE({inputs:{logits:i},backend:e,attrs:{dim:-1}}),u=c.shape[0],l=c.shape[1],d=e.data.get(c.dataId).values,h=[u,o],f=jn(ct(h),"int32");for(let p=0;p<u;++p){const x=p*l,g=new Float32Array(l-1);g[0]=d[x];for(let w=1;w<g.length;++w)g[w]=g[w-1]+d[x+w];const m=Og.alea(r.toString()),y=p*o;for(let w=0;w<o;++w){const b=m();f[y+w]=g.length;for(let _=0;_<g.length;_++)if(b<g[_]){f[y+w]=_;break}}}return a||e.disposeIntermediateTensorInfo(c),e.makeTensorInfo(h,"int32",f)}const hW={kernelName:E2,backendName:"cpu",kernelFunc:dW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fW=qg;function pW(n){const{inputs:t,backend:e,attrs:s}=n,{boxes:i,scores:o}=t,{maxOutputSize:r,iouThreshold:a,scoreThreshold:c}=s;Ot(i,"NonMaxSuppression");const u=e.data.get(i.dataId).values,l=e.data.get(o.dataId).values,{selectedIndices:d}=fW(u,l,r,a,c);return e.makeTensorInfo([d.length],"int32",new Int32Array(d))}const mW={kernelName:rg,backendName:"cpu",kernelFunc:pW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gW=jg;function xW(n){const{inputs:t,backend:e,attrs:s}=n,{boxes:i,scores:o}=t,{maxOutputSize:r,iouThreshold:a,scoreThreshold:c,padToMaxOutputSize:u}=s;Ot(i,"NonMaxSuppressionPadded");const l=e.data.get(i.dataId).values,d=e.data.get(o.dataId).values,{selectedIndices:h,validOutputs:f}=gW(l,d,r,a,c,u);return[e.makeTensorInfo([h.length],"int32",new Int32Array(h)),e.makeTensorInfo([],"int32",new Int32Array([f]))]}const yW={kernelName:ag,backendName:"cpu",kernelFunc:xW};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bW=Kg;function wW(n){const{inputs:t,backend:e,attrs:s}=n,{boxes:i,scores:o}=t,{maxOutputSize:r,iouThreshold:a,scoreThreshold:c,softNmsSigma:u}=s;Ot(i,"NonMaxSuppressionWithScore");const l=e.data.get(i.dataId).values,d=e.data.get(o.dataId).values,h=r,f=a,p=c,x=u,{selectedIndices:g,selectedScores:m}=bW(l,d,h,f,p,x);return[e.makeTensorInfo([g.length],"int32",new Int32Array(g)),e.makeTensorInfo([m.length],"float32",new Float32Array(m))]}const vW={kernelName:cg,backendName:"cpu",kernelFunc:wW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _W(n){const{inputs:t,backend:e,attrs:s}=n,{indices:i}=t,{dtype:o,depth:r,onValue:a,offValue:c}=s;Ot(i,"oneHot");const u=ct(i.shape),l=new Float32Array(u*r);l.fill(c);const d=e.data.get(i.dataId).values;for(let h=0;h<u;++h)d[h]>=0&&d[h]<r&&(l[h*r+d[h]]=a);return e.makeTensorInfo([...i.shape,r],o,l)}const CW={kernelName:Cf,backendName:"cpu",kernelFunc:_W};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wh(n){const{inputs:t,backend:e}=n,{x:s}=t;if(s.dtype==="string")throw new Error("zerosLike is not supported for string tensors");if(s.dtype==="complex64"){const i=Ur({inputs:{input:s},backend:e}),o=wh({inputs:{x:i},backend:e}),r=Qa({inputs:{input:s},backend:e}),a=wh({inputs:{x:r},backend:e}),c=_s({inputs:{real:o,imag:a},backend:e});return e.disposeIntermediateTensorInfo(i),e.disposeIntermediateTensorInfo(o),e.disposeIntermediateTensorInfo(r),e.disposeIntermediateTensorInfo(a),c}else return Qx({backend:e,attrs:{shape:s.shape,value:0,dtype:s.dtype}})}const SW={kernelName:Bf,backendName:"cpu",kernelFunc:wh};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tI(n){const{inputs:t,backend:e}=n,{x:s}=t;if(s.dtype==="string")throw new Error("onesLike is not supported for string tensors");if(s.dtype==="complex64"){const i=Ur({inputs:{input:s},backend:e}),o=tI({inputs:{x:i},backend:e}),r=Qa({inputs:{input:s},backend:e}),a=wh({inputs:{x:r},backend:e}),c=_s({inputs:{real:o,imag:a},backend:e});return e.disposeIntermediateTensorInfo(i),e.disposeIntermediateTensorInfo(o),e.disposeIntermediateTensorInfo(r),e.disposeIntermediateTensorInfo(a),c}else return Qx({backend:e,attrs:{shape:s.shape,value:1,dtype:s.dtype}})}const TW={kernelName:_f,backendName:"cpu",kernelFunc:tI};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eI(n){const{inputs:t,backend:e,attrs:s}=n,{axis:i}=s;if(t.length===1)return bh({inputs:{input:t[0]},backend:e,attrs:{dim:i}});const o=t[0].shape,r=t[0].dtype;t.forEach(l=>{M1(o,l.shape,"All tensors passed to stack must have matching shapes"),k(r===l.dtype,()=>"All tensors passed to stack must have matching dtypes")});const a=[],c=t.map(l=>{const d=bh({inputs:{input:l},backend:e,attrs:{dim:i}});return a.push(d),d}),u=tc({inputs:c,backend:e,attrs:{axis:i}});return a.forEach(l=>e.disposeIntermediateTensorInfo(l)),u}const EW={kernelName:Sf,backendName:"cpu",kernelFunc:eI};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IW(n){const{inputs:t,backend:e,attrs:s}=n,{x:i}=t,{paddings:o,constantValue:r}=s;Ot(i,"pad");const a=o.map((y,w)=>y[0]+i.shape[w]+y[1]),c=o.map(y=>y[0]),u=e.data.get(i.dataId).values,l=ct(i.shape),d=i.shape.length,h=Kt(i.shape),f=ct(a),p=a.length,x=Kt(a),g=qn(i.dtype,f);r!==0&&g.fill(r);for(let y=0;y<l;y++){const b=cc(y,d,h).map((T,E)=>T+c[E]),_=Fi(b,p,x);g[_]=u[y]}return{dataId:e.write(g,a,i.dtype),shape:a,dtype:i.dtype}}const nI={kernelName:Tf,backendName:"cpu",kernelFunc:IW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const RW=xn((n,t)=>Math.pow(n,t)),MW=Rn(Qu,RW),AW={kernelName:Qu,backendName:"cpu",kernelFunc:MW};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NW(n){const{inputs:t,backend:e,attrs:s}=n,{paramsNestedSplits:i,paramsDenseValues:o,indices:r}=t,{outputRaggedRank:a}=s,c=i.map(m=>e.data.get(m.dataId).values),u=i.map(m=>m.shape),l=e.data.get(o.dataId).values,d=e.data.get(r.dataId).values,[h,f,p]=vE(c,u,l,o.shape,o.dtype,d,r.shape),x=h.map(m=>e.makeTensorInfo([m.length],"int32",m)),g=e.makeTensorInfo(p,o.dtype,f);return x.concat([g])}const kW={kernelName:I2,backendName:"cpu",kernelFunc:NW};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DW(n){const{inputs:t,backend:e}=n,{starts:s,limits:i,deltas:o}=t,r=e.data.get(s.dataId).values,a=e.data.get(i.dataId).values,c=e.data.get(o.dataId).values,[u,l]=_E(r,s.shape,s.dtype,a,i.shape,c,o.shape),d=e.makeTensorInfo([u.length],"int32",u),h=e.makeTensorInfo([l.length],s.dtype,l);return[d,h]}const $W={kernelName:R2,backendName:"cpu",kernelFunc:DW};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FW(n){const{inputs:t,backend:e,attrs:s}=n,{shape:i,values:o,defaultValue:r,rowPartitionTensors:a}=t,{rowPartitionTypes:c}=s,u=e.data.get(i.dataId).values,l=e.data.get(o.dataId).values,d=e.data.get(r.dataId).values,h=a.map(g=>e.data.get(g.dataId).values),f=a.map(g=>g.shape),[p,x]=CE(u,i.shape,l,o.shape,o.dtype,d,r.shape,h,f,c);return e.makeTensorInfo(p,o.dtype,x)}const PW={kernelName:M2,backendName:"cpu",kernelFunc:FW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LW(n){const{backend:t,attrs:e}=n,{start:s,stop:i,dtype:o,step:r}=e,a=SE(s,i,r,o);return t.makeTensorInfo([a.length],o,a)}const OW={kernelName:ug,backendName:"cpu",kernelFunc:LW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const UW=Ue(tl,n=>1/n),BW={kernelName:tl,backendName:"cpu",kernelFunc:UW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zW(n){const{inputs:t,backend:e,attrs:s}=n,{images:i}=t,{alignCorners:o,halfPixelCenters:r,size:a}=s;Ot(i,"resizeBilinear");const c=Kt(i.shape),[u,l]=a,[d,h,f,p]=i.shape,x=e.data.get(i.dataId).values,g=new Float32Array(ct([d,u,l,p])),m=[o&&u>1?h-1:h,o&&l>1?f-1:f],y=[o&&u>1?u-1:u,o&&l>1?l-1:l];let w=0;const b=m[0]/y[0],_=m[1]/y[1];for(let T=0;T<d;T++)for(let E=0;E<u;E++){let I;r?I=b*(E+.5)-.5:I=b*E;const S=Math.max(0,Math.floor(I)),v=I-S,C=Math.min(h-1,Math.ceil(I)),M=T*c[0]+S*c[1],N=T*c[0]+C*c[1];for(let D=0;D<l;D++){let $;r?$=_*(D+.5)-.5:$=_*D;const F=Math.max(0,Math.floor($)),B=$-F,P=Math.min(f-1,Math.ceil($)),V=M+F*c[2],q=N+F*c[2],J=M+P*c[2],it=N+P*c[2];for(let ut=0;ut<p;ut++){const G=x[V+ut],Q=x[q+ut],ht=x[J+ut],dt=x[it+ut],gt=G+(ht-G)*B,St=Q+(dt-Q)*B,_t=gt+(St-gt)*v;g[w++]=_t}}}return e.makeTensorInfo([d,u,l,p],"float32",g)}const VW={kernelName:Af,backendName:"cpu",kernelFunc:zW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WW(n){const{inputs:t,backend:e,attrs:s}=n,{images:i,dy:o}=t,{alignCorners:r}=s;Ot([o,i],"resizeBilinearGrad");const a=Kt(i.shape),[c,u,l,d]=i.shape,[,h,f]=o.shape,p=new Float32Array(c*u*l*d),x=[r&&h>1?u-1:u,r&&f>1?l-1:l],g=[r&&h>1?h-1:h,r&&f>1?f-1:f],m=x[0]/g[0],y=x[1]/g[1],w=e.data.get(o.dataId).values;let b=0;for(let _=0;_<c;_++){const T=_*a[0];for(let E=0;E<h;E++){const I=E*m,S=Math.floor(I),v=Math.min(Math.ceil(I),u-1),C=T+S*a[1],M=T+v*a[1],N=I-S,D=1-N;for(let $=0;$<f;$++){const F=$*y,B=Math.floor(F),P=Math.min(Math.ceil(F),l-1),V=F-B,q=1-V,J=C+B*a[2],it=C+P*a[2],ut=M+B*a[2],G=M+P*a[2],Q=D*q,ht=D*V,dt=N*q,gt=N*V;for(let St=0;St<d;St++){const _t=w[b++];p[J+St]+=_t*Q,p[it+St]+=_t*ht,p[ut+St]+=_t*dt,p[G+St]+=_t*gt}}}}return e.makeTensorInfo([c,l,u,d],"float32",p)}const GW={kernelName:hg,backendName:"cpu",kernelFunc:WW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HW(n){const{inputs:t,backend:e,attrs:s}=n,{images:i}=t,{alignCorners:o,halfPixelCenters:r,size:a}=s;Ot(i,"resizeNearestNeighbor");const c=Kt(i.shape),[u,l]=a,[d,h,f,p]=i.shape,x=e.data.get(i.dataId).values,g=new Float32Array(d*u*l*p),m=[o&&u>1?h-1:h,o&&l>1?f-1:f],y=[o&&u>1?u-1:u,o&&l>1?l-1:l],w=m[0]/y[0],b=m[1]/y[1];let _=0;for(let T=0;T<d;T++){const E=T*c[0];for(let I=0;I<u;I++){const S=r?w*(I+.5):w*I;let v=Math.min(h-1,o?Math.round(S):Math.floor(S));r&&(v=Math.max(0,v));const C=E+v*c[1];for(let M=0;M<l;M++){const N=r?b*(M+.5):b*M;let D=Math.min(f-1,o?Math.round(N):Math.floor(N));r&&(D=Math.max(0,D));const $=C+D*c[2];for(let F=0;F<p;F++){const B=x[$+F];g[_++]=B}}}}return e.makeTensorInfo([d,u,l,p],i.dtype,g)}const XW={kernelName:Mf,backendName:"cpu",kernelFunc:HW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qW(n){const{inputs:t,backend:e,attrs:s}=n,{images:i,dy:o}=t,{alignCorners:r}=s;Ot([o,i],"resizeNearestNeighborGrad");const a=Kt(i.shape),c=Kt(o.shape),[u,l,d,h]=i.shape,[,f,p]=o.shape,x=new Float32Array(u*l*d*h),g=e.data.get(o.dataId).values,m=[r&&f>1?l-1:l,r&&p>1?d-1:d],y=[r&&f>1?f-1:f,r&&p>1?p-1:p],w=m[0]/y[0],b=m[1]/y[1],_=1/w,T=1/b,E=Math.ceil(_)*2+2,I=Math.ceil(T)*2+2;for(let S=0;S<u;S++){const v=S*a[0];for(let C=0;C<l;C++){const M=v+C*a[1],N=Math.floor(C*_),D=Math.floor(N-E/2);for(let $=0;$<d;$++){const F=M+$*a[2],B=Math.floor($*T),P=Math.floor(B-I/2);for(let V=0;V<h;V++){let q=0;for(let J=0;J<E;J++){const it=J+D;if(it<0||it>=f)continue;const ut=v+it*c[1],G=it*w,Q=Math.min(l-1,r?Math.round(G):Math.floor(G));if(C===Q)for(let ht=0;ht<I;ht++){const dt=ht+P;if(dt<0||dt>=p)continue;const gt=ut+dt*c[2],St=dt*b,_t=Math.min(d-1,r?Math.round(St):Math.floor(St));$===_t&&(q+=g[gt+V])}}x[F+V]=q}}}}return e.makeTensorInfo(i.shape,i.dtype,x)}const jW={kernelName:dg,backendName:"cpu",kernelFunc:qW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KW(n){const{inputs:t,backend:e,attrs:s}=n,{x:i}=t,{dims:o}=s;Ot(i,"reverse");const r=i.shape.length,a=ve(o,i.shape);if(r===0)return Wi({inputs:{x:i},backend:e});const c=new On(i.shape,i.dtype),u=e.bufferSync(i);for(let l=0;l<c.size;l++){const d=c.indexToLoc(l),h=d.slice();a.forEach(f=>h[f]=i.shape[f]-1-h[f]),c.set(u.get(...h),...d)}return e.makeTensorInfo(c.shape,c.dtype,c.values)}const YW={kernelName:Nf,backendName:"cpu",kernelFunc:KW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ZW={kernelName:bg,backendName:"cpu",kernelFunc:({inputs:n,attrs:t,backend:e})=>{const{image:s}=n,{radians:i,fillValue:o,center:r}=t,a=e,c=qn(s.dtype,ct(s.shape)),[u,l,d,h]=s.shape,[f,p]=rx(r,l,d),x=255,g=Math.sin(i),m=Math.cos(i),y=a.data.get(s.dataId).values;for(let b=0;b<u;b++){const _=b*d*l*h;for(let T=0;T<l;T++){const E=T*(d*h);for(let I=0;I<d;I++){const S=I*h;for(let v=0;v<h;v++){const C=[u,T,I,v],M=C[2],N=C[1];let D=(M-f)*m-(N-p)*g,$=(M-f)*g+(N-p)*m;D=Math.round(D+f),$=Math.round($+p);let F=o;if(typeof o!="number"&&(v===3?F=x:F=o[v]),D>=0&&D<d&&$>=0&&$<l){const P=$*(d*h),V=D*h,q=_+P+V+v;F=y[q]}const B=_+E+S+v;c[B]=F}}}}return{dataId:a.write(c,s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const JW=Ue(sl,n=>{const t=Math.floor(n);return n-t<.5?Math.floor(n):n-t>.5?Math.ceil(n):t%2===0?t:t+1}),QW={kernelName:sl,backendName:"cpu",kernelFunc:JW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tG(n){const{inputs:t,backend:e,attrs:s}=n,{indices:i,updates:o}=t,{shape:r}=s,{sliceRank:a,numUpdates:c,sliceSize:u,strides:l,outputSize:d}=qr(o,i,r),h=!0,f=e.bufferSync(i),p=e.bufferSync(o),x=br(f,p,r,d,u,c,a,l,0,h);return e.makeTensorInfo(r,x.dtype,x.values)}const eG={kernelName:A2,backendName:"cpu",kernelFunc:tG};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nG(n,t){let e=0,s=n.length,i=0;for(;e<s;)i=Math.floor((e+s)/2),n[i]<t?e=i+1:s=i;return s}function sG(n,t){let e=0,s=n.length,i=0;for(;e<s;)i=Math.floor((e+s)/2),n[i]<=t?e=i+1:s=i;return s}function iG(n,t,e,s,i,o){const r=fn("int32",e*i);for(let a=0;a<e;++a){const c=n.slice(a*s,(a+1)*s),u=a*i;for(let l=0;l<i;++l)r[u+l]=o==="left"?nG(c,t[l+u]):sG(c,t[l+u])}return r}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oG(n){const{inputs:t,backend:e,attrs:s}=n,{sortedSequence:i,values:o}=t,{side:r}=s,a=e.data.get(i.dataId).values,c=e.data.get(o.dataId).values,u=iG(a,c,i.shape[0],i.shape[1],o.shape[1],r);return e.makeTensorInfo(o.shape,"int32",u)}const rG={kernelName:k2,backendName:"cpu",kernelFunc:oG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aG(n){const{inputs:t,backend:e}=n,{condition:s,t:i,e:o}=t;Ot([s,i,o],"select");const r=s.shape.length,a=e.data.get(s.dataId).values,c=e.data.get(i.dataId).values,u=e.data.get(o.dataId).values,l=Ts(i.dtype,o.dtype),d=jn(ct(i.shape),l);let h=0;const f=r===0||r>1||i.shape.length===1?1:ct(i.shape.slice(1));for(let p=0;p<a.length;p++)for(let x=0;x<f;x++)a[p]===1?d[h++]=c[p]:d[h++]=u[p];return e.makeTensorInfo(i.shape,l,d)}const cG={kernelName:kf,backendName:"cpu",kernelFunc:aG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uG=Jf,lG=Qf,dG=Ue(ol,n=>n>=0?lG*n:uG*(Math.exp(n)-1)),hG={kernelName:ol,backendName:"cpu",kernelFunc:dG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fG=Ue(cl,n=>n<0?-1:n>0?1:0),pG={kernelName:cl,backendName:"cpu",kernelFunc:fG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mG=Ue(rl,n=>Math.sin(n)),gG={kernelName:rl,backendName:"cpu",kernelFunc:mG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xG=Ue(al,n=>Math.sinh(n)),yG={kernelName:al,backendName:"cpu",kernelFunc:xG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bG=11920928955078125e-23,$w=Math.log(bG)+2,wG=Ue(ll,n=>{const t=n>-$w,e=n<$w,s=Math.exp(n);let i;return e?i=s:t?i=n:i=Math.log(1+s),i}),vG={kernelName:ll,backendName:"cpu",kernelFunc:wG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _G(n){const{inputs:t,backend:e,attrs:s}=n,{x:i}=t,{blockShape:o,paddings:r}=s;Ot([i],"spaceToBatchND");const a=ct(o),c=[[0,0]];c.push(...r);for(let T=1+o.length;T<i.shape.length;++T)c.push([0,0]);const u=nI.kernelFunc({inputs:{x:i},backend:e,attrs:{paddings:c,constantValue:0}}),l=Cl(u.shape,o,a,!1),d=Sl(l.length,o.length,!1),h=Tl(u.shape,o,a,!1),x=Je({inputs:{x:u},backend:e,attrs:{shape:l}}),y=gs({inputs:{x},backend:e,attrs:{perm:d}}),_=Je({inputs:{x:y},backend:e,attrs:{shape:h}});return e.disposeIntermediateTensorInfo(u),e.disposeIntermediateTensorInfo(x),e.disposeIntermediateTensorInfo(y),_}const CG={kernelName:Ff,backendName:"cpu",kernelFunc:_G};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SG(n){const{inputs:t,backend:e}=n,{indices:s,values:i,denseShape:o,defaultValue:r}=t;if(o.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
        ${o.shape}`);if(s.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
        ${s.shape}`);if(i.shape.length!==1)throw new Error(`Values must be a vector, saw:
        ${i.shape}`);if(r.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${r.shape}`);const a=e.data.get(s.dataId).values,c=e.data.get(i.dataId).values,u=e.data.get(o.dataId).values,l=e.data.get(r.dataId).values[0],[d,h,f,p,x]=RE(a,s.shape,s.dtype,c,i.dtype,u,l);return[e.makeTensorInfo(h,s.dtype,d),e.makeTensorInfo([h[0]],i.dtype,f),e.makeTensorInfo([p.length],"bool",new Uint8Array(p.map(g=>Number(g)))),e.makeTensorInfo([x.length],s.dtype,new Int32Array(x))]}const TG={kernelName:D2,backendName:"cpu",kernelFunc:SG};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EG(n){const{inputs:t,backend:e}=n,{inputIndices:s,inputShape:i,newShape:o}=t;if(s.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape
        ${s.shape}`);if(i.shape.length!==1)throw new Error(`Input shape should be a vector but received shape
        ${i.shape}`);if(o.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${o.shape}`);const r=Array.from(e.data.get(i.dataId).values),a=e.data.get(s.dataId).values,c=Array.from(e.data.get(o.dataId).values),[u,l,d]=ME(a,s.shape,s.dtype,r,c);return[e.makeTensorInfo(l,s.dtype,u),e.makeTensorInfo([d.length],o.dtype,new Int32Array(d))]}const IG={kernelName:$2,backendName:"cpu",kernelFunc:EG};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RG(n){const{inputs:t,backend:e}=n,{data:s,indices:i,segmentIds:o}=t;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(i.shape.length!==1)throw new Error(`Indices should be a vector but received shape
          ${i.shape}`);if(o.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
          ${o.shape}`);if(i.shape[0]!==o.shape[0])throw new Error("segmentIds and indices should have same size.");const r=e.data.get(s.dataId).values,a=e.data.get(i.dataId).values,c=e.data.get(o.dataId).values,[u,l]=Kx(r,s.shape,s.dtype,a,c,!0);return e.makeTensorInfo(l,s.dtype,u)}const MG={kernelName:F2,backendName:"cpu",kernelFunc:RG};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AG(n){const{inputs:t,backend:e}=n,{data:s,indices:i,segmentIds:o}=t;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(i.shape.length!==1)throw new Error(`Indices should be a vector but received shape
         ${i.shape}`);if(o.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
         ${o.shape}`);if(i.shape[0]!==o.shape[0])throw new Error("segmentIds and indices should have same size.");const r=e.data.get(s.dataId).values,a=e.data.get(i.dataId).values,c=e.data.get(o.dataId).values,[u,l]=Kx(r,s.shape,s.dtype,a,c);return e.makeTensorInfo(l,s.dtype,u)}const NG={kernelName:P2,backendName:"cpu",kernelFunc:AG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kG(n){const{inputs:t,backend:e,attrs:s}=n,{sparseIndices:i,sparseValues:o,defaultValue:r}=t,{outputShape:a}=s,{sliceRank:c,numUpdates:u,sliceSize:l,strides:d,outputSize:h}=qr(o,i,a),f=!1,p=e.bufferSync(i);let x;switch(o.dtype){case"bool":{const g=e.bufferSync(o),m=!!e.data.get(r.dataId).values[0];x=br(p,g,a,h,l,u,c,d,m,f);break}case"float32":{const g=e.bufferSync(o),m=e.data.get(r.dataId).values[0];x=br(p,g,a,h,l,u,c,d,m,f);break}case"int32":{const g=e.bufferSync(o),m=e.data.get(r.dataId).values[0];x=br(p,g,a,h,l,u,c,d,m,f);break}case"string":{const g=e.bufferSync(o),m=Lo(e.data.get(r.dataId).values[0]);x=br(p,g,a,h,l,u,c,d,m,f);break}default:throw new Error(`Unsupported type ${o.dtype}`)}return e.makeTensorInfo(a,x.dtype,x.values)}const DG={kernelName:L2,backendName:"cpu",kernelFunc:kG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $G(n){const{inputs:t,backend:e,attrs:s}=n,{x:i}=t,{numOrSizeSplits:o,axis:r}=s,a=ve(r,i.shape)[0],c=vx(i,o,a),u=new Array(i.shape.length).fill(0),l=i.shape.slice();return c.map(d=>{const h=[...l];h[a]=d;const f=Br({inputs:{x:i},backend:e,attrs:{begin:u,size:h}});return u[a]+=d,f})}const FG={kernelName:Pf,backendName:"cpu",kernelFunc:$G};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PG={kernelName:fg,backendName:"cpu",kernelFunc:({inputs:n,backend:t})=>{const{x:e}=n,s=t;Ot(e,"square");const i=s.data.get(e.dataId).values,o=new Float32Array(i.length);for(let a=0;a<i.length;++a){const c=i[a];o[a]=c*c}return{dataId:s.write(o,e.shape,e.dtype),shape:e.shape,dtype:e.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LG=Ue(xl,(n,t)=>{const e=t;return isNaN(n)?NaN:n>0?1:e.alpha}),OG={kernelName:xl,backendName:"cpu",kernelFunc:LG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UG(n){const{inputs:t,backend:e,attrs:s}=n,{x:i}=t,{begin:o,end:r,strides:a,beginMask:c,endMask:u,ellipsisMask:l,newAxisMask:d,shrinkAxisMask:h}=s;Ot(i,"stridedSlice");const{finalShapeSparse:f,finalShape:p,isIdentity:x,sliceDim0:g,isSimpleSlice:m,begin:y,end:w,strides:b}=sx(i.shape,o,r,a,c,u,l,d,h);let _;if(x)_=Je({inputs:{x:i},backend:e,attrs:{shape:p}});else if(g||m){k(i.shape.length>=1,()=>`Input must have rank at least 1, got: ${i.shape.length}`);const T=tx(y,w,b),E=Br({inputs:{x:i},backend:e,attrs:{begin:y,size:T}});_=Je({inputs:{x:E},backend:e,attrs:{shape:p}}),e.disposeIntermediateTensorInfo(E)}else{const T=e.bufferSync(i),E=kE(f,T,b,y);_=e.makeTensorInfo(p,E.dtype,E.values)}return _}const BG={kernelName:mg,backendName:"cpu",kernelFunc:UG};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zG(n){const{inputs:t,backend:e,attrs:s}=n,{separator:i,nGramWidths:o,leftPad:r,rightPad:a,padWidth:c,preserveShortSequences:u}=s,{data:l,dataSplits:d}=t,h=e.data.get(l.dataId).values,f=e.data.get(d.dataId).values,[p,x]=DE(h,f,i,o,r,a,c,u);return[e.makeTensorInfo([p.length],"string",p),e.makeTensorInfo(d.shape,"int32",x)]}const VG={kernelName:O2,backendName:"cpu",kernelFunc:zG};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WG(n){const{inputs:t,backend:e,attrs:s}=n,{skipEmpty:i}=s,{input:o,delimiter:r}=t;if(o.dtype!=="string")throw new Error("Input must be of datatype string");if(o.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${o.shape}`);if(r.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${r.shape}`);const a=e.data.get(o.dataId).values,c=e.data.get(r.dataId).values[0],[u,l,d]=$E(a,c,i),h=l.length;return[e.makeTensorInfo([h,2],"int32",u),e.makeTensorInfo([h],"string",l),e.makeTensorInfo([2],"int32",new Int32Array(d))]}const GG={kernelName:U2,backendName:"cpu",kernelFunc:WG};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HG(n){const{inputs:t,backend:e,attrs:s}=n,{numBuckets:i}=s,{input:o}=t;if(o.dtype!=="string")throw new Error("Input must be of datatype string");if(i<=0)throw new Error("Number of buckets must be at least 1");const r=e.data.get(o.dataId).values,a=FE(r,i);return e.makeTensorInfo(o.shape,"int32",a)}const XG={kernelName:B2,backendName:"cpu",kernelFunc:HG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qG=Ue(pl,n=>Math.tan(n)),jG={kernelName:pl,backendName:"cpu",kernelFunc:qG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const KG=Ue(ml,n=>Math.tanh(n)),YG={kernelName:ml,backendName:"cpu",kernelFunc:KG};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZG(n){const{inputs:t,backend:e}=n,{tensor:s,indices:i,updates:o}=t,{sliceRank:r,numUpdates:a,sliceSize:c,strides:u,outputSize:l}=qr(o,i,s.shape),d=!1,h=e.bufferSync(i),f=e.bufferSync(o),p=e.bufferSync(s),x=br(h,f,s.shape,l,c,a,r,u,p,d);return e.makeTensorInfo(s.shape,x.dtype,x.values)}const JG={kernelName:N2,backendName:"cpu",kernelFunc:ZG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QG(n){const{inputs:t,backend:e,attrs:s}=n,{x:i}=t,{reps:o}=s;Ot(i,"tile");const r=LE(e.bufferSync(i),o);return e.makeTensorInfo(r.shape,r.dtype,r.values)}const tH={kernelName:gl,backendName:"cpu",kernelFunc:QG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eH(n){const{inputs:t,backend:e,attrs:s}=n,{x:i}=t,{k:o,sorted:r}=s;Ot(i,"topk");const a=e.data.get(i.dataId).values,[c,u]=UE(a,i.shape,i.dtype,o,r);return[e.makeTensorInfo(c.shape,c.dtype,c.values),e.makeTensorInfo(u.shape,u.dtype,u.values)]}const nH={kernelName:gg,backendName:"cpu",kernelFunc:eH};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sH(n){const{inputs:t,attrs:e,backend:s}=n,{image:i,transforms:o}=t,{interpolation:r,fillMode:a,fillValue:c,outputShape:u}=e,[l,d,h,f]=i.shape,[p,x]=u??[d,h],g=[l,p,x,f],m=Kt(i.shape),y=m[0],w=m[1],b=m[2],_=Kt(g),T=_[0],E=_[1],I=_[2],S=qn(i.dtype,ct(g));S.fill(c);const v=s.data.get(i.dataId).values,C=s.data.get(o.dataId).values;for(let N=0;N<l;++N){const D=o.shape[0]===1?C:C.subarray(N*8,N*8+8);for(let $=0;$<p;++$)for(let F=0;F<x;++F)for(let B=0;B<f;++B){let P;const V=D[6]*F+D[7]*$+1;if(V===0)continue;const q=(D[0]*F+D[1]*$+D[2])/V,J=(D[3]*F+D[4]*$+D[5])/V,it=Fw(q,h,a),ut=Fw(J,d,a);switch(r){case"nearest":P=uH(v,d,h,y,w,b,N,ut,it,B,c);break;case"bilinear":P=lH(v,d,h,y,w,b,N,ut,it,B,c);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${r}`)}const G=N*T+$*E+F*I+B;S[G]=P}return s.makeTensorInfo(g,i.dtype,S)}return{dataId:s.write(S,g,i.dtype),shape:i.shape,dtype:i.dtype}}const iH={kernelName:xg,backendName:"cpu",kernelFunc:sH};function Fw(n,t,e){switch(e){case"reflect":return oH(n,t);case"wrap":return rH(n,t);case"nearest":return cH(n,t);case"constant":default:return aH(n)}}function oH(n,t){let e=n;if(e<0)if(t<=1)e=0;else{const s=2*t;e<s&&(e=s*Math.trunc(-e/s)+e),e=e<-t?e+s:-e-1}else if(e>t-1)if(t<=1)e=0;else{const s=2*t;e-=s*Math.trunc(e/s),e>=t&&(e=s-e-1)}return Rr(0,e,t-1)}function rH(n,t){let e=n;if(e<0)if(t<=1)e=0;else{const s=t-1;e+=t*(Math.trunc(-e/s)+1)}else if(e>t-1)if(t<=1)e=0;else{const s=t-1;e-=t*Math.trunc(e/s)}return Rr(0,e,t-1)}function aH(n,t){return n}function cH(n,t){return Rr(0,n,t-1)}function Vc(n,t,e,s,i,o,r,a,c,u,l){const d=r*s+a*i+c*o+u;return 0<=a&&a<t&&0<=c&&c<e?n[d]:l}function uH(n,t,e,s,i,o,r,a,c,u,l){const d=Math.round(a),h=Math.round(c);return Vc(n,t,e,s,i,o,r,d,h,u,l)}function lH(n,t,e,s,i,o,r,a,c,u,l){const d=Math.floor(a),h=Math.floor(c),f=d+1,p=h+1,x=(p-c)*Vc(n,t,e,s,i,o,r,d,h,u,l)+(c-h)*Vc(n,t,e,s,i,o,r,d,p,u,l),g=(p-c)*Vc(n,t,e,s,i,o,r,f,h,u,l)+(c-h)*Vc(n,t,e,s,i,o,r,f,p,u,l);return(f-a)*x+(a-d)*g}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dH(n){const{inputs:t,attrs:e,backend:s}=n,{axis:i}=e,{x:o}=t;Ot(o,"unique");const r=s.data.get(o.dataId).values,{outputValues:a,outputShape:c,indices:u}=BE(r,i,o.shape,o.dtype);return[s.makeTensorInfo(c,o.dtype,a),s.makeTensorInfo([u.length],"int32",u)]}const hH={kernelName:yg,backendName:"cpu",kernelFunc:dH};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fH(n){const{inputs:t,backend:e,attrs:s}=n,{value:i}=t;let{axis:o}=s;o<0&&(o+=i.shape.length);const r=i.shape.length,a=i.shape[o],c=new Array(r-1);let u=0;for(let f=0;f<r;f++)f!==o&&(c[u++]=i.shape[f]);const l=new Array(r).fill(0),d=i.shape.slice();d[o]=1;const h=new Array(a);for(let f=0;f<h.length;f++){l[o]=f;const p=Br({inputs:{x:i},backend:e,attrs:{begin:l,size:d}});h[f]=Je({inputs:{x:p},backend:e,attrs:{shape:c}}),e.disposeIntermediateTensorInfo(p)}return h}const pH={kernelName:Of,backendName:"cpu",kernelFunc:fH};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mH(n){const{inputs:t,backend:e,attrs:s}=n,{x:i,segmentIds:o}=t,{numSegments:r}=s;Ot(i,"unsortedSegmentSum");const a=i.shape.length,c=o.shape.length,u=[],l=[],d=a-c;let h=o;for(let p=0;p<d;++p){const x=bh({inputs:{input:h},backend:e,attrs:{dim:p+1}});h=x,l.push(x)}for(let p=0;p<r;++p){const x=Ho(p,"int32"),g=e.makeTensorInfo([],"int32",x),m=eE({inputs:{a:g,b:h},backend:e}),y=Vo({inputs:{x:m},backend:e,attrs:{dtype:"float32"}}),w=dp({inputs:{a:y,b:i},backend:e}),b=$l({inputs:{x:w},backend:e,attrs:{axis:0,keepDims:!1}});u.push(b),l.push(g),l.push(m),l.push(y),l.push(w),l.push(b)}const f=eI({inputs:u,backend:e,attrs:{axis:0}});return l.forEach(p=>e.disposeIntermediateTensorInfo(p)),f}const gH={kernelName:Uf,backendName:"cpu",kernelFunc:mH};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xH=[dz,H6,fz,mz,Z6,xz,bz,vz,Cz,Tz,Iz,Mz,Nz,$z,Pz,Uz,zz,Wz,Hz,uz,qz,Kz,Zz,Q6,Qz,K6,e8,eV,X6,sV,oV,rV,cV,lV,hV,pV,gV,yV,wV,_V,SV,EV,RV,AV,NV,DV,FV,LV,OV,UV,BV,VV,HV,nz,qV,n8,e7,s8,n7,o8,c7,u7,d7,a8,u8,f7,m7,x7,b7,d8,f8,q6,v7,iV,C7,T7,I7,sz,m8,x8,M7,b8,N7,$7,P7,U7,z7,W7,G7,v8,X7,j7,Y7,J7,tW,nW,iW,C8,rW,uW,hW,T8,I8,mW,yW,vW,M8,CW,TW,EW,nI,AW,oz,k8,kW,$W,PW,OW,j6,z0,BW,rz,az,cz,VW,GW,XW,jW,YW,ZW,QW,B8,eG,rG,cG,hG,V8,pG,gG,yG,W8,lW,vG,CG,TG,IG,MG,NG,DG,FG,X8,PG,j8,Y8,OG,BG,VG,GG,XG,tz,WV,jG,YG,JG,tH,nH,iH,A8,hH,pH,gH,SW];for(const n of xH)V2(n);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mr={},yd={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function yH(n,t){mr[n]=t}function Ti(n,t){if(!(n in mr)||t!=null){const s=wH(n,t);if(s!==null)mr[n]=s;else return console.log("Could not get context for WebGL version",n),null}const e=mr[n];return e==null||e.isContextLost()?(delete mr[n],Ti(n)):(e.disable(e.DEPTH_TEST),e.disable(e.STENCIL_TEST),e.disable(e.BLEND),e.disable(e.DITHER),e.disable(e.POLYGON_OFFSET_FILL),e.disable(e.SAMPLE_COVERAGE),e.enable(e.SCISSOR_TEST),e.enable(e.CULL_FACE),e.cullFace(e.BACK),mr[n])}function bH(n){if(!nt().getBool("IS_SAFARI")&&typeof OffscreenCanvas<"u"&&n===2)return new OffscreenCanvas(300,150);if(typeof document<"u")return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}function wH(n,t){if(n!==1&&n!==2)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const e=t??bH(n);return e.addEventListener("webglcontextlost",s=>{s.preventDefault(),delete mr[n]},!1),nt().getBool("SOFTWARE_WEBGL_ENABLED")&&(yd.failIfMajorPerformanceCaveat=!1),n===1?e.getContext("webgl",yd)||e.getContext("experimental-webgl",yd):e.getContext("webgl2",yd)}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var hu;(function(n){n[n.DENSE=0]="DENSE",n[n.SHARED_BATCH=1]="SHARED_BATCH"})(hu||(hu={}));var ks;(function(n){n[n.RENDER=0]="RENDER",n[n.UPLOAD=1]="UPLOAD",n[n.PIXELS=2]="PIXELS",n[n.DOWNLOAD=3]="DOWNLOAD"})(ks||(ks={}));var Pn;(function(n){n[n.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",n[n.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",n[n.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",n[n.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",n[n.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"})(Pn||(Pn={}));function Fl(n,t){return[t,n]}function vH(n,t){return n*t}function bd(n){const t=ct(n),e=Math.ceil(t/4);return l0(e)}function gc(n,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(n/2))]}function _H(n,t){const[e,s]=gc(n,t);return e*s*4}function ty(n,t){const e=n;let s,i,o,r,a,c,u,l,d,h;return nt().getNumber("WEBGL_VERSION")===2?(s=e.R32F,i=e.R16F,o=e.RGBA16F,r=e.RGBA32F,a=e.RED,u=4,l=1,d=e.HALF_FLOAT,h=e.FLOAT,c=e.RGBA8):(s=n.RGBA,i=n.RGBA,o=n.RGBA,r=e.RGBA,a=n.RGBA,u=4,l=4,d=t!=null?t.HALF_FLOAT_OES:null,h=n.FLOAT,c=n.RGBA),{internalFormatFloat:s,internalFormatHalfFloat:i,internalFormatPackedHalfFloat:o,internalFormatPackedFloat:r,textureFormatFloat:a,downloadTextureFormat:c,downloadUnpackNumChannels:u,defaultNumChannels:l,textureTypeHalfFloat:d,textureTypeFloat:h}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function At(n,t){const e=t();return nt().getBool("DEBUG")&&CH(n),e}function CH(n){const t=n.getError();if(t!==n.NO_ERROR)throw new Error("WebGL Error: "+IH(n,t))}const SH=596e-10,TH=65504;function EH(n){return!!(nt().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||n===0||SH<Math.abs(n)&&Math.abs(n)<TH)}function IH(n,t){switch(t){case n.NO_ERROR:return"NO_ERROR";case n.INVALID_ENUM:return"INVALID_ENUM";case n.INVALID_VALUE:return"INVALID_VALUE";case n.INVALID_OPERATION:return"INVALID_OPERATION";case n.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case n.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case n.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${t}`}}function wd(n,t){return go(n,()=>n.getExtension(t),'Extension "'+t+'" not supported on this browser.')}function RH(n,t){const e=go(n,()=>n.createShader(n.VERTEX_SHADER),"Unable to create vertex WebGLShader.");if(At(n,()=>n.shaderSource(e,t)),At(n,()=>n.compileShader(e)),n.getShaderParameter(e,n.COMPILE_STATUS)===!1)throw console.log(n.getShaderInfoLog(e)),new Error("Failed to compile vertex shader.");return e}function MH(n,t){const e=go(n,()=>n.createShader(n.FRAGMENT_SHADER),"Unable to create fragment WebGLShader.");if(At(n,()=>n.shaderSource(e,t)),At(n,()=>n.compileShader(e)),nt().get("ENGINE_COMPILE_ONLY"))return e;if(n.getShaderParameter(e,n.COMPILE_STATUS)===!1)throw sI(t,n.getShaderInfoLog(e)),new Error("Failed to compile fragment shader.");return e}const AH=/ERROR: [0-9]+:([0-9]+):/g;function sI(n,t){const e=AH.exec(t);if(e==null){console.log(`Couldn't parse line number in error: ${t}`),console.log(n);return}const s=+e[1],i=n.split(`
`),o=i.length.toString().length+2,r=i.map((d,h)=>Da((h+1).toString(),o)+d);let a=0;for(let d=0;d<r.length;d++)a=Math.max(r[d].length,a);const c=r.slice(0,s-1),u=r.slice(s-1,s),l=r.slice(s);console.log(c.join(`
`)),console.log(t.split(`
`)[0]),console.log(`%c ${Da(u[0],a)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(l.join(`
`))}function NH(n){return go(n,()=>n.createProgram(),"Unable to create WebGLProgram.")}function kH(n,t){if(At(n,()=>n.linkProgram(t)),!nt().get("ENGINE_COMPILE_ONLY")&&n.getProgramParameter(t,n.LINK_STATUS)===!1)throw console.log(n.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}function dm(n,t){if(At(n,()=>n.validateProgram(t)),n.getProgramParameter(t,n.VALIDATE_STATUS)===!1)throw console.log(n.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function DH(n,t){const e=go(n,()=>n.createBuffer(),"Unable to create WebGLBuffer");return At(n,()=>n.bindBuffer(n.ARRAY_BUFFER,e)),At(n,()=>n.bufferData(n.ARRAY_BUFFER,t,n.STATIC_DRAW)),e}function $H(n,t){const e=go(n,()=>n.createBuffer(),"Unable to create WebGLBuffer");return At(n,()=>n.bindBuffer(n.ELEMENT_ARRAY_BUFFER,e)),At(n,()=>n.bufferData(n.ELEMENT_ARRAY_BUFFER,t,n.STATIC_DRAW)),e}function FH(n){return go(n,()=>n.createTexture(),"Unable to create WebGLTexture.")}function PH(n,t){const e=nt().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(n<=0||t<=0){const s=`[${n}x${t}]`;throw new Error("Requested texture size "+s+" is invalid.")}if(n>e||t>e){const s=`[${n}x${t}]`,i=`[${e}x${e}]`;throw new Error("Requested texture size "+s+" greater than WebGL maximum on this browser / GPU "+i+".")}}function LH(n){return go(n,()=>n.createFramebuffer(),"Unable to create WebGLFramebuffer.")}function Pw(n,t,e,s,i,o,r){const a=n.getAttribLocation(t,e);return a===-1?!1:(At(n,()=>n.bindBuffer(n.ARRAY_BUFFER,s)),At(n,()=>n.vertexAttribPointer(a,i,n.FLOAT,!1,o,r)),At(n,()=>n.enableVertexAttribArray(a)),!0)}function OH(n,t,e){WH(n,e),At(n,()=>n.activeTexture(n.TEXTURE0+e)),At(n,()=>n.bindTexture(n.TEXTURE_2D,t))}function UH(n,t,e){return go(n,()=>n.getUniformLocation(t,e),'uniform "'+e+'" not present in program.')}function BH(n,t,e){return n.getUniformLocation(t,e)}function zH(n,t,e,s){At(n,()=>OH(n,t,s)),At(n,()=>n.uniform1i(e,s))}function hm(n,t,e){At(n,()=>n.bindFramebuffer(n.FRAMEBUFFER,e)),At(n,()=>n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,t,0))}function Lw(n,t){At(n,()=>n.bindFramebuffer(n.FRAMEBUFFER,t)),At(n,()=>n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,null,0))}function vd(n){const t=n.checkFramebufferStatus(n.FRAMEBUFFER);if(t!==n.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+VH(n,t))}function VH(n,t){switch(t){case n.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case n.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case n.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case n.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${t}`}}function go(n,t,e){const s=At(n,()=>t());if(s==null)throw new Error(e);return s}function WH(n,t){const e=n.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,s=t+n.TEXTURE0;if(s<n.TEXTURE0||s>e){const i=`[gl.TEXTURE0, gl.TEXTURE${e}]`;throw new Error(`textureUnit must be in ${i}.`)}}function ec(n,t=2){return ct(n.slice(0,n.length-t))}function nc(n){if(n.length===0)throw Error("Cannot get rows and columns of an empty shape array.");return[n.length>1?n[n.length-2]:1,n[n.length-1]]}function _d(n){let t=[1,1,1];return n.length===0||n.length===1&&n[0]===1||(t=[ec(n),...nc(n)]),t}function GH(n,t=!1){let e=nt().getNumber("WEBGL_MAX_TEXTURE_SIZE"),s=nt().getNumber("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE");s===1/0&&nt().getBool("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE")&&(s=e/2),t&&(e=e*2,s=s*2,n=n.map((a,c)=>c>=n.length-2?R1(n[c]):n[c]),n.length===1&&(n=[2,n[0]])),n.length!==2&&(n=Go(n).newShape);let i=ct(n),o=null;n.length<=1&&i<=e?o=[1,i]:n.length===2&&n[0]<=e&&n[1]<=e?o=n:n.length===3&&n[0]*n[1]<=e&&n[2]<=e?o=[n[0]*n[1],n[2]]:n.length===3&&n[0]<=e&&n[1]*n[2]<=e?o=[n[0],n[1]*n[2]]:n.length===4&&n[0]*n[1]*n[2]<=e&&n[3]<=e?o=[n[0]*n[1]*n[2],n[3]]:n.length===4&&n[0]<=e&&n[1]*n[2]*n[3]<=e&&(o=[n[0],n[1]*n[2]*n[3]]);const r=o!=null&&Math.max(...o)>s&&Math.min(...o)<=(t?2:1)&&Math.min(...o)>0;if(o==null||r)if(t){const a=ec(n);let c=2,u=2;n.length&&([c,u]=nc(n)),i=a*(c/2)*(u/2),o=l0(i).map(l=>l*2)}else o=l0(i);return o}function Cd(n){return n%2===0}function vh(n,t){if(n=n.slice(-2),t=t.slice(-2),Pe(n,t)||!n.length||!t.length||n[0]===0||n[1]===0||t[0]===0||t[1]===0)return!0;if(n.length!==t.length){const e=n[n.length-1],s=t[t.length-1];if(e===s||Cd(e)&&Cd(s)&&(n[0]===1||t[0]===1))return!0}return n[1]===t[1]&&Cd(n[0])&&Cd(t[0])}let fm,pm;function HH(n){if(fm==null){const t=Ti(n);fm=t.getParameter(t.MAX_TEXTURE_SIZE)}return fm}function XH(n){if(pm==null){const t=Ti(n);pm=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,pm)}function qH(n){if(n===0)return 0;let t;const e=Ti(n);return Zs(e,"EXT_disjoint_timer_query_webgl2")&&n===2?t=2:Zs(e,"EXT_disjoint_timer_query")?t=1:t=0,t}function Zs(n,t){return n.getExtension(t)!=null}function Ow(n){try{if(Ti(n)!=null)return!0}catch(t){return console.log("Error when getting WebGL context: ",t),!1}return!1}function jH(n){if(n===0)return!1;const t=Ti(n);if(n===1){if(!Zs(t,"OES_texture_float"))return!1}else if(!Zs(t,"EXT_color_buffer_float"))return!1;return W0(t)}function KH(n){if(n===0)return!1;const t=Ti(n);if(n===1){if(!Zs(t,"OES_texture_float")||!Zs(t,"WEBGL_color_buffer_float"))return!1}else{if(Zs(t,"EXT_color_buffer_float"))return W0(t);const s="EXT_color_buffer_half_float";if(Zs(t,s)){const i=t.getExtension(s);return YH(t,i)}return!1}return W0(t)}function W0(n){const t=ty(n),e=n.createTexture();n.bindTexture(n.TEXTURE_2D,e),n.texImage2D(n.TEXTURE_2D,0,t.internalFormatFloat,1,1,0,t.textureFormatFloat,t.textureTypeFloat,null);const o=n.createFramebuffer();n.bindFramebuffer(n.FRAMEBUFFER,o),n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,e,0);const r=n.checkFramebufferStatus(n.FRAMEBUFFER)===n.FRAMEBUFFER_COMPLETE;return n.bindTexture(n.TEXTURE_2D,null),n.bindFramebuffer(n.FRAMEBUFFER,null),n.deleteTexture(e),n.deleteFramebuffer(o),r}function YH(n,t){const e=ty(n,t),s=n.createTexture();n.bindTexture(n.TEXTURE_2D,s),n.texImage2D(n.TEXTURE_2D,0,e.internalFormatHalfFloat,1,1,0,e.textureFormatFloat,e.textureTypeHalfFloat,null);const r=n.createFramebuffer();n.bindFramebuffer(n.FRAMEBUFFER,r),n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,s,0);const a=n.checkFramebufferStatus(n.FRAMEBUFFER)===n.FRAMEBUFFER_COMPLETE;return n.bindTexture(n.TEXTURE_2D,null),n.bindFramebuffer(n.FRAMEBUFFER,null),n.deleteTexture(s),n.deleteFramebuffer(r),a}function ZH(n){return n!==2?!1:Ti(n).fenceSync!=null}function Pl(n,t){Array.isArray(n)||(n=[n]),n.forEach(e=>{e!=null&&k(e.dtype!=="complex64",()=>`${t} does not support complex64 tensors in the WebGL backend.`)})}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ut=nt();Ut.registerFlag("HAS_WEBGL",()=>Ut.getNumber("WEBGL_VERSION")>0);Ut.registerFlag("WEBGL_VERSION",()=>Ow(2)?2:Ow(1)?1:0);Ut.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",()=>!1);Ut.registerFlag("WEBGL_BUFFER_SUPPORTED",()=>Ut.get("WEBGL_VERSION")===2);Ut.registerFlag("WEBGL_CPU_FORWARD",()=>!0);Ut.registerFlag("WEBGL_FORCE_F16_TEXTURES",()=>!1);Ut.registerFlag("WEBGL_PACK",()=>Ut.getBool("HAS_WEBGL"));Ut.registerFlag("WEBGL_PACK_NORMALIZATION",()=>Ut.getBool("WEBGL_PACK"));Ut.registerFlag("WEBGL_PACK_CLIP",()=>Ut.getBool("WEBGL_PACK"));Ut.registerFlag("WEBGL_PACK_DEPTHWISECONV",()=>Ut.getBool("WEBGL_PACK"));Ut.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",()=>Ut.getBool("WEBGL_PACK"));Ut.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",()=>Ut.getBool("WEBGL_PACK"));Ut.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",()=>Ut.getBool("WEBGL_PACK"));Ut.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",()=>Ut.getBool("WEBGL_PACK"));Ut.registerFlag("WEBGL_PACK_REDUCE",()=>Ut.getBool("WEBGL_PACK"));Ut.registerFlag("WEBGL_LAZILY_UNPACK",()=>Ut.getBool("WEBGL_PACK"));Ut.registerFlag("WEBGL_CONV_IM2COL",()=>Ut.getBool("WEBGL_PACK"));Ut.registerFlag("WEBGL_PACK_CONV2DTRANSPOSE",()=>Ut.getBool("WEBGL_PACK"));Ut.registerFlag("WEBGL_MAX_TEXTURE_SIZE",()=>HH(Ut.getNumber("WEBGL_VERSION")));Ut.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",()=>XH(Ut.getNumber("WEBGL_VERSION")));Ut.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",()=>{const n=Ut.getNumber("WEBGL_VERSION");return n===0?0:qH(n)});Ut.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",()=>Ut.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!e_());Ut.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",()=>jH(Ut.getNumber("WEBGL_VERSION")));Ut.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",()=>Ut.getBool("WEBGL_FORCE_F16_TEXTURES")?!1:Ut.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"));Ut.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",()=>KH(Ut.getNumber("WEBGL_VERSION")));Ut.registerFlag("WEBGL_FENCE_API_ENABLED",()=>ZH(Ut.getNumber("WEBGL_VERSION")));Ut.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",()=>Ut.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0);Ut.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",()=>-1,n=>{if(typeof n!="number")throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be a number but got ${n}.`);if(n<0&&n!==-1)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${n}.`)});Ut.registerFlag("WEBGL_FLUSH_THRESHOLD",()=>e_()?1:-1,n=>{if(typeof n!="number")throw new Error(`WEBGL_FLUSH_THRESHOLD must be a number but got ${n}.`);if(n<0&&n!==-1)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${n}.`)});Ut.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",()=>128);Ut.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",()=>!1);Ut.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e5);Ut.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",()=>128);Ut.registerFlag("WEBGL_EXP_CONV",()=>!1);Ut.registerFlag("SOFTWARE_WEBGL_ENABLED",()=>Ut.getBool("IS_TEST"));Ut.registerFlag("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE",()=>1/0);Ut.registerFlag("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE",()=>!1);Ut.registerFlag("WEBGL2_ISNAN_CUSTOM",()=>!1);Ut.registerFlag("ENGINE_COMPILE_ONLY",()=>!1);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function us(){let n,t,e,s,i,o,r,a,c,u;return nt().getNumber("WEBGL_VERSION")===2?(n="#version 300 es",t="in",e="out",s="in",i="texture",o="outputColor",r="out vec4 outputColor;",a=nt().getBool("WEBGL2_ISNAN_CUSTOM")?`
      bool isnan_custom(float val) {
        uint floatToUint = floatBitsToUint(val);
        return (floatToUint & 0x7fffffffu) > 0x7f800000u;
      }

      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan_custom(val.x),
          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));
      }

      #define isnan(value) isnan_custom(value)
    `:"",c="",u=`
      #define round(value) newRound(value)
      int newRound(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 newRound(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `):(n="",t="attribute",e="varying",s="varying",i="texture2D",o="gl_FragColor",r="",a=`
      #define isnan(value) isnan_custom(value)
      bool isnan_custom(float val) {
        return (val > 0. || val < 1. || val == 0.) ? false : true;
      }
      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));
      }
    `,c=`
      uniform float INFINITY;

      bool isinf(float val) {
        return abs(val) == INFINITY;
      }
      bvec4 isinf(vec4 val) {
        return equal(abs(val), vec4(INFINITY));
      }
    `,u=`
      int round(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 round(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `),{version:n,attribute:t,varyingVs:e,varyingFs:s,texture2D:i,output:o,defineOutput:r,defineSpecialNaN:a,defineSpecialInf:c,defineRound:u}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Yr(n,t,e="index"){const s=Kt(t);return s.map((i,o)=>{const r=`int ${n[o]} = ${e} / ${i}`,a=o===s.length-1?`int ${n[o+1]} = ${e} - ${n[o]} * ${i}`:`index -= ${n[o]} * ${i}`;return`${r}; ${a};`}).join("")}function hp(n,t,e="index"){const s=Kt(t);return s.map((i,o)=>{const r=`int ${n[o]} = ${e} / outShapeStrides[${o}]`,a=o===s.length-1?`int ${n[o+1]} = ${e} - ${n[o]} * outShapeStrides[${o}]`:`index -= ${n[o]} * outShapeStrides[${o}]`;return`${r}; ${a};`}).join("")}function JH(n,t){const e=n.length,s=n.map(o=>`${t}[${o}]`),i=new Array(e-1);i[e-2]=s[e-1];for(let o=e-3;o>=0;--o)i[o]=`(${i[o+1]} * ${s[o+1]})`;return i}function QH(n,t,e="index"){const s=n.map((o,r)=>r),i=JH(s,t);return i.map((o,r)=>{const a=`int ${n[r]} = ${e} / ${i[r]}`,c=r===i.length-1?`int ${n[r+1]} = ${e} - ${n[r]} * ${i[r]}`:`index -= ${n[r]} * ${i[r]}`;return`${a}; ${c};`}).join("")}function ey(n){const t=Kt(n).map(e=>e.toString());return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;
  }
`}function ny(){return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;
  }
`}const iI=`
  const float FLOAT_MAX = 1.70141184e38;
  const float FLOAT_MIN = 1.17549435e-38;

  lowp vec4 encode_float(highp float v) {
    if (isnan(v)) {
      return vec4(255, 255, 255, 255);
    }

    highp float av = abs(v);

    if(av < FLOAT_MIN) {
      return vec4(0.0, 0.0, 0.0, 0.0);
    } else if(v > FLOAT_MAX) {
      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;
    } else if(v < -FLOAT_MAX) {
      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;
    }

    highp vec4 c = vec4(0,0,0,0);

    highp float e = floor(log2(av));
    highp float m = exp2(fract(log2(av))) - 1.0;

    c[2] = floor(128.0 * m);
    m -= c[2] / 128.0;
    c[1] = floor(32768.0 * m);
    m -= c[1] / 32768.0;
    c[0] = floor(8388608.0 * m);

    highp float ebias = e + 127.0;
    c[3] = floor(ebias / 2.0);
    ebias -= c[3] * 2.0;
    c[2] += floor(ebias) * 128.0;

    c[3] += 128.0 * step(0.0, -v);

    return c / 255.0;
  }
`;/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const{getBroadcastDims:oI}=WO;function tX(n,t,e){const s=[];if(n.forEach(f=>{const p=ct(f.shapeInfo.logicalShape);if(f.shapeInfo.isUniform?s.push(`uniform float ${f.name}${p>1?`[${p}]`:""};`):(s.push(`uniform sampler2D ${f.name};`),s.push(`uniform int offset${f.name};`)),e.enableShapeUniforms){const{uniformShape:x}=sy(e.packedInputs,f.shapeInfo.logicalShape,f.shapeInfo.texShape);switch(x.length){case 1:s.push(`uniform int ${f.name}Shape;`);break;case 2:s.push(`uniform ivec2 ${f.name}Shape;`);break;case 3:s.push(`uniform ivec3 ${f.name}Shape;`);break;case 4:s.push(`uniform ivec4 ${f.name}Shape;`);break}s.push(`uniform ivec2 ${f.name}TexShape;`)}}),e.enableShapeUniforms){switch(t.logicalShape.length){case 1:s.push("uniform int outShape;");break;case 2:s.push("uniform ivec2 outShape;"),s.push("uniform int outShapeStrides;");break;case 3:s.push("uniform ivec3 outShape;"),s.push("uniform ivec2 outShapeStrides;");break;case 4:s.push("uniform ivec4 outShape;"),s.push("uniform ivec3 outShapeStrides;");break}s.push("uniform ivec2 outTexShape;")}e.customUniforms&&e.customUniforms.forEach(f=>{s.push(`uniform ${f.type} ${f.name}${f.arrayIndex?`[${f.arrayIndex}]`:""};`)});const i=s.join(`
`),o=n.map(f=>eX(f,t,e.packedInputs,e.enableShapeUniforms)).join(`
`),r=t.texShape,a=us(),c=iX(a);let u,l,d=aX(a);return t.isPacked?(u=nX(t.logicalShape,r,e.enableShapeUniforms),l=rX(a)):(u=sX(t.logicalShape,r,e.enableShapeUniforms),l=oX(a)),e.packedInputs&&(d+=dX),[d,c,l,i,u,o,e.userCode].join(`
`)}function xc(n,t=!1){const e=n.shapeInfo.logicalShape;switch(e.length){case 0:return CX(n,t);case 1:return TX(n,t);case 2:return IX(n,t);case 3:return MX(n,t);case 4:return NX(n,t);case 5:return kX(n);case 6:return DX(n);default:throw new Error(`${e.length}-D input sampling is not yet supported`)}}function rI(n,t){switch(n.shapeInfo.logicalShape.length){case 0:return _X(n);case 1:return SX(n,t);case 2:return EX(n,t);case 3:return RX(n,t);default:return AX(n,t)}}function eX(n,t,e=!1,s){let i="";e?i+=rI(n,s):i+=xc(n,s);const o=n.shapeInfo.logicalShape,r=t.logicalShape;return o.length<=r.length&&(e?i+=$X(n,t):i+=FX(n,t)),i}function nX(n,t,e){switch(n.length){case 0:return aI();case 1:return hX(n,t,e);case 2:return wX(n,t,e);case 3:return pX(n,t,e);default:return gX(n,t,e)}}function sX(n,t,e){switch(n.length){case 0:return aI();case 1:return fX(n,t,e);case 2:return vX(n,t,e);case 3:return mX(n,t,e);case 4:return xX(n,t,e);case 5:return yX(n,t);case 6:return bX(n,t);default:throw new Error(`${n.length}-D output sampling is not yet supported`)}}function iX(n){return`
    float sampleTexture(sampler2D textureSampler, vec2 uv) {
      return ${n.texture2D}(textureSampler, uv).r;
    }
  `}function oX(n){return`
    void setOutput(float val) {
      ${n.output} = vec4(val, 0, 0, 0);
    }
  `}function rX(n){return`
    void setOutput(vec4 val) {
      ${n.output} = val;
    }
  `}function aX(n){return`${n.version}
    precision highp float;
    precision highp int;
    precision highp sampler2D;
    ${n.varyingFs} vec2 resultUV;
    ${n.defineOutput}
    const vec2 halfCR = vec2(0.5, 0.5);

    struct ivec5
    {
      int x;
      int y;
      int z;
      int w;
      int u;
    };

    struct ivec6
    {
      int x;
      int y;
      int z;
      int w;
      int u;
      int v;
    };

    uniform float NAN;
    ${n.defineSpecialNaN}
    ${n.defineSpecialInf}
    ${n.defineRound}

    int imod(int x, int y) {
      return x - y * (x / y);
    }

    int idiv(int a, int b, float sign) {
      int res = a / b;
      int mod = imod(a, b);
      if (sign < 0. && mod != 0) {
        res -= 1;
      }
      return res;
    }

    //Based on the work of Dave Hoskins
    //https://www.shadertoy.com/view/4djSRW
    #define HASHSCALE1 443.8975
    float random(float seed){
      vec2 p = resultUV * seed;
      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);
      p3 += dot(p3, p3.yzx + 19.19);
      return fract((p3.x + p3.y) * p3.z);
    }

    ${cX}
    ${uX}
    ${lX}
  `}const cX=`
vec2 uvFromFlat(int texNumR, int texNumC, int index) {
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
vec2 packedUVfrom1D(int texNumR, int texNumC, int index) {
  int texelIndex = index / 2;
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,uX=`
vec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,
  int texNumC, int row, int col) {
  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,lX=`
vec2 packedUVfrom3D(int texNumR, int texNumC,
    int texelsInBatch, int texelsInLogicalRow, int b,
    int row, int col) {
  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,dX=`
  float getChannel(vec4 frag, vec2 innerDims) {
    vec2 modCoord = mod(innerDims, 2.);
    return modCoord.x == 0. ?
      (modCoord.y == 0. ? frag.r : frag.g) :
      (modCoord.y == 0. ? frag.b : frag.a);
  }
  float getChannel(vec4 frag, int dim) {
    float modCoord = mod(float(dim), 2.);
    return modCoord == 0. ? frag.r : frag.g;
  }
`;function aI(){return`
    int getOutputCoords() {
      return 0;
    }
  `}function hX(n,t,e){const s=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];return s[0]===1?e?`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ${s[1]}.0);
      }
    `:s[1]===1?e?`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ${s[0]}.0);
      }
    `:e?`
    int getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));
      return 2 * (resTexRC.x * ${s[1]} + resTexRC.y);
    }
  `}function fX(n,t,e){return t[0]===1?e?`
      int getOutputCoords() {
        return int(resultUV.x * float(outTexShape[1]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.x * ${t[1]}.0);
      }
    `:t[1]===1?e?`
      int getOutputCoords() {
        return int(resultUV.y * float(outTexShape[0]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.y * ${t[0]}.0);
      }
    `:e?`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      return resTexRC.x * outTexShape[1] + resTexRC.y;
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      return resTexRC.x * ${t[1]} + resTexRC.y;
    }
  `}function pX(n,t,e){if(e)return`
    ivec3 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec3(b, r, c);
    }
  `;const s=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],i=Math.ceil(n[2]/2),o=i*Math.ceil(n[1]/2);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));
      int index = resTexRC.x * ${s[1]} + resTexRC.y;

      int b = index / ${o};
      index -= b * ${o};

      int r = 2 * (index / ${i});
      int c = imod(index, ${i}) * 2;

      return ivec3(b, r, c);
    }
  `}function mX(n,t,e){if(e)return`
  ivec3 getOutputCoords() {
    ivec2 resTexRC = ivec2(resultUV.yx *
                           vec2(outTexShape[0], outTexShape[1]));
    int index = resTexRC.x * outTexShape[1] + resTexRC.y;
    ${hp(["r","c","d"],n)}
    return ivec3(r, c, d);
  }
`;const s=Yr(["r","c","d"],n);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      ${s}
      return ivec3(r, c, d);
    }
  `}function gX(n,t,e){if(e)return`
    ivec4 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatchN = texelsInBatch * outShape[1];

      int b2 = index / texelsInBatchN;
      index -= b2 * texelsInBatchN;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec4(b2, b, r, c);
    }
  `;const s=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],i=Math.ceil(n[n.length-1]/2),o=i*Math.ceil(n[n.length-2]/2);let r=o,a="",c="b, r, c";for(let u=2;u<n.length-1;u++)r*=n[n.length-u-1],a=`
      int b${u} = index / ${r};
      index -= b${u} * ${r};
    `+a,c=`b${u}, `+c;return`
    ivec${n.length} getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));
      int index = resTexRC.x * ${s[1]} + resTexRC.y;

      ${a}

      int b = index / ${o};
      index -= b * ${o};

      int r = 2 * (index / ${i});
      int c = imod(index, ${i}) * 2;

      return ivec${n.length}(${c});
    }
  `}function xX(n,t,e){if(e)return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      ${hp(["r","c","d","d2"],n)}
      return ivec4(r, c, d, d2);
    }
  `;const s=Yr(["r","c","d","d2"],n);return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      ${s}
      return ivec4(r, c, d, d2);
    }
  `}function yX(n,t){const e=Yr(["r","c","d","d2","d3"],n);return`
    ivec5 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},
                             ${t[1]}));

      int index = resTexRC.x * ${t[1]} + resTexRC.y;

      ${e}

      ivec5 outShape = ivec5(r, c, d, d2, d3);
      return outShape;
    }
  `}function bX(n,t){const e=Yr(["r","c","d","d2","d3","d4"],n);return`
    ivec6 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;

      ${e}

      ivec6 result = ivec6(r, c, d, d2, d3, d4);
      return result;
    }
  `}function wX(n,t,e){const s=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(Pe(n,t))return e?`
      ivec2 getOutputCoords() {
        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return 2 * ivec2(resultUV.yx * vec2(${s[0]}, ${s[1]}));
      }
    `;const i=Math.ceil(n[1]/2);return e?`
    ivec2 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));

      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;
      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));

      int index = resTexRC.x * ${s[1]} + resTexRC.y;
      int r = 2 * (index / ${i});
      int c = imod(index, ${i}) * 2;

      return ivec2(r, c);
    }
  `}function vX(n,t,e){return Pe(n,t)?e?`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));
      }
    `:n[1]===1?e?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(index, 0);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${t[0]}, ${t[1]}));
        int index = resTexRC.x * ${t[1]} + resTexRC.y;
        return ivec2(index, 0);
      }
    `:n[0]===1?e?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(0, index);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${t[0]}, ${t[1]}));
        int index = resTexRC.x * ${t[1]} + resTexRC.y;
        return ivec2(0, index);
      }
    `:e?`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      int r = index / outShape[1];
      int c = index - r * outShape[1];
      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      int r = index / ${n[1]};
      int c = index - r * ${n[1]};
      return ivec2(r, c);
    }
  `}function Zr(n){return`offset${n}`}function _X(n){const t=n.name,e="get"+t.charAt(0).toUpperCase()+t.slice(1),s=us();return`
    vec4 ${e}() {
      return ${s.texture2D}(${t}, halfCR);
    }
  `}function CX(n,t){const e=n.name,s="get"+e.charAt(0).toUpperCase()+e.slice(1);if(n.shapeInfo.isUniform)return`float ${s}() {return ${e};}`;const[i,o]=n.shapeInfo.texShape;if(i===1&&o===1)return`
      float ${s}() {
        return sampleTexture(${e}, halfCR);
      }
    `;const r=Zr(e);if(t)return`
    float ${s}() {
      vec2 uv = uvFromFlat(${e}TexShape[0], ${e}TexShape[1], ${r});
      return sampleTexture(${e}, uv);
    }
  `;const[a,c]=n.shapeInfo.texShape;return`
    float ${s}() {
      vec2 uv = uvFromFlat(${a}, ${c}, ${r});
      return sampleTexture(${e}, uv);
    }
  `}function SX(n,t){const e=n.name,s="get"+e.charAt(0).toUpperCase()+e.slice(1),i=n.shapeInfo.texShape,o=us();if(t)return`
    vec4 ${s}(int index) {
      ivec2 packedTexShape = ivec2(ceil(float(${e}TexShape[0]) / 2.0), ceil(float(${e}TexShape[1]) / 2.0));
      vec2 uv = packedUVfrom1D(
        packedTexShape[0], packedTexShape[1], index);
      return ${o.texture2D}(${e}, uv);
    }
  `;const r=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)];return`
    vec4 ${s}(int index) {
      vec2 uv = packedUVfrom1D(
        ${r[0]}, ${r[1]}, index);
      return ${o.texture2D}(${e}, uv);
    }
  `}function TX(n,t){const e=n.name,s="get"+e.charAt(0).toUpperCase()+e.slice(1);if(n.shapeInfo.isUniform)return`
      float ${s}(int index) {
        ${yc(n)}
      }
    `;const i=n.shapeInfo.texShape,o=i[0],r=i[1];if(r===1&&o===1)return`
      float ${s}(int index) {
        return sampleTexture(${e}, halfCR);
      }
    `;const a=Zr(e);return r===1?t?`
      float ${s}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${a}) + 0.5) / float(${e}TexShape[0]));
        return sampleTexture(${e}, uv);
      }
    `:`
      float ${s}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${a}) + 0.5) / ${o}.0);
        return sampleTexture(${e}, uv);
      }
    `:o===1?t?`
      float ${s}(int index) {
        vec2 uv = vec2((float(index + ${a}) + 0.5) / float(${e}TexShape[1]), 0.5);
        return sampleTexture(${e}, uv);
      }
    `:`
      float ${s}(int index) {
        vec2 uv = vec2((float(index + ${a}) + 0.5) / ${r}.0, 0.5);
        return sampleTexture(${e}, uv);
      }
    `:t?`
    float ${s}(int index) {
      vec2 uv = uvFromFlat(${e}TexShape[0], ${e}TexShape[1], index + ${a});
      return sampleTexture(${e}, uv);
    }
  `:`
    float ${s}(int index) {
      vec2 uv = uvFromFlat(${o}, ${r}, index + ${a});
      return sampleTexture(${e}, uv);
    }
  `}function EX(n,t){const e=n.shapeInfo.logicalShape,s=n.name,i="get"+s.charAt(0).toUpperCase()+s.slice(1),o=n.shapeInfo.texShape,r=o[0],a=o[1],c=us();if(o!=null&&Pe(e,o))return t?`
      vec4 ${i}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);

        return ${c.texture2D}(${s}, uv);
      }
    `:`
      vec4 ${i}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${a}.0, ${r}.0);

        return ${c.texture2D}(${s}, uv);
      }
    `;if(t)return`
    vec4 ${i}(int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${s}TexShape[0]) / 2.0), ceil(float(${s}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${s}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);
      return ${c.texture2D}(${s}, uv);
    }
  `;const u=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)],l=Math.ceil(e[1]/2);return`
    vec4 ${i}(int row, int col) {
      vec2 uv = packedUVfrom2D(${l}, ${u[0]}, ${u[1]}, row, col);
      return ${c.texture2D}(${s}, uv);
    }
  `}function IX(n,t){const e=n.shapeInfo.logicalShape,s=n.name,i="get"+s.charAt(0).toUpperCase()+s.slice(1),o=n.shapeInfo.texShape;if(o!=null&&Pe(e,o)){if(t)return`
      float ${i}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `;const h=o[0],f=o[1];return`
    float ${i}(int row, int col) {
      vec2 uv = (vec2(col, row) + halfCR) / vec2(${f}.0, ${h}.0);
      return sampleTexture(${s}, uv);
    }
  `}const{newShape:r,keptDims:a}=Go(e),c=r;if(c.length<e.length){const h=bc(n,c),f=["row","col"];return`
      ${xc(h,t)}
      float ${i}(int row, int col) {
        return ${i}(${wc(f,a)});
      }
    `}if(n.shapeInfo.isUniform)return`
      float ${i}(int row, int col) {
        int index = round(dot(vec2(row, col), vec2(${e[1]}, 1)));
        ${yc(n)}
      }
    `;const u=o[0],l=o[1],d=Zr(s);return l===1?t?`
      float ${i}(int row, int col) {
        float index = dot(vec3(row, col, ${d}), vec3(${s}Shape[1], 1, 1));
        vec2 uv = vec2(0.5, (index + 0.5) / float(${s}TexShape[0]));
        return sampleTexture(${s}, uv);
      }
    `:`
    float ${i}(int row, int col) {
      float index = dot(vec3(row, col, ${d}), vec3(${e[1]}, 1, 1));
      vec2 uv = vec2(0.5, (index + 0.5) / ${u}.0);
      return sampleTexture(${s}, uv);
    }
  `:u===1?t?`
      float ${i}(int row, int col) {
        float index = dot(vec3(row, col, ${d}), vec3(${s}Shape[1], 1, 1));
        vec2 uv = vec2((index + 0.5) / float(${s}TexShape[1]), 0.5);
        return sampleTexture(${s}, uv);
      }
    `:`
    float ${i}(int row, int col) {
      float index = dot(vec3(row, col, ${d}), vec3(${e[1]}, 1, 1));
      vec2 uv = vec2((index + 0.5) / ${l}.0, 0.5);
      return sampleTexture(${s}, uv);
    }
  `:t?`
      float ${i}(int row, int col) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${s}Shape[1] + col + ${d};
        vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index);
        return sampleTexture(${s}, uv);
      }
    `:`
  float ${i}(int row, int col) {
    // Explicitly use integer operations as dot() only works on floats.
    int index = row * ${e[1]} + col + ${d};
    vec2 uv = uvFromFlat(${u}, ${l}, index);
    return sampleTexture(${s}, uv);
  }
`}function RX(n,t){const e=n.shapeInfo.logicalShape,s=n.name,i="get"+s.charAt(0).toUpperCase()+s.slice(1),o=n.shapeInfo.texShape,r=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)];if(e[0]===1){const h=e.slice(1),f=[1,2],p=bc(n,h),x=["b","row","col"];return`
        ${rI(p,t)}
        vec4 ${i}(int b, int row, int col) {
          return ${i}(${wc(x,f)});
        }
      `}const a=us();if(t)return`
    vec4 ${i}(int b, int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${s}TexShape[0]) / 2.0), ceil(float(${s}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${s}Shape[2]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${s}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom3D(
        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);
      return ${a.texture2D}(${s}, uv);
    }
  `;const c=r[0],u=r[1],l=Math.ceil(e[2]/2),d=l*Math.ceil(e[1]/2);return`
    vec4 ${i}(int b, int row, int col) {
      vec2 uv = packedUVfrom3D(
        ${c}, ${u}, ${d}, ${l}, b, row, col);
      return ${a.texture2D}(${s}, uv);
    }
  `}function MX(n,t){const e=n.shapeInfo.logicalShape,s=n.name,i="get"+s.charAt(0).toUpperCase()+s.slice(1),o=e[1]*e[2],r=e[2],{newShape:a,keptDims:c}=Go(e),u=a;if(u.length<e.length){const x=bc(n,u),g=["row","col","depth"];return`
        ${xc(x,t)}
        float ${i}(int row, int col, int depth) {
          return ${i}(${wc(g,c)});
        }
      `}if(n.shapeInfo.isUniform)return`
      float ${i}(int row, int col, int depth) {
        int index = round(dot(vec3(row, col, depth),
                          vec3(${o}, ${r}, 1)));
        ${yc(n)}
      }
    `;const l=n.shapeInfo.texShape,d=l[0],h=l[1],f=n.shapeInfo.flatOffset;if(h===o&&f==null)return t?`
      float ${i}(int row, int col, int depth) {
        int stride1 = ${s}Shape[2];
        float texR = float(row);
        float texC = dot(vec2(col, depth), vec2(stride1, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
        float ${i}(int row, int col, int depth) {
          float texR = float(row);
          float texC = dot(vec2(col, depth), vec2(${r}, 1));
          vec2 uv = (vec2(texC, texR) + halfCR) /
                     vec2(${h}.0, ${d}.0);
          return sampleTexture(${s}, uv);
        }
      `;if(h===r&&f==null)return t?`
      float ${i}(int row, int col, int depth) {
        float texR = dot(vec2(row, col), vec2(${s}Shape[1], 1));
        float texC = float(depth);
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
    float ${i}(int row, int col, int depth) {
      float texR = dot(vec2(row, col), vec2(${e[1]}, 1));
      float texC = float(depth);
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${h}.0, ${d}.0);
      return sampleTexture(${s}, uv);
    }
  `;const p=Zr(s);return t?`
    float ${i}(int row, int col, int depth) {
      // Explicitly use integer operations as dot() only works on floats.
      int stride0 = ${s}Shape[1] * ${s}Shape[2];
      int stride1 = ${s}Shape[2];
      int index = row * stride0 + col * stride1 + depth + ${p};
      vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index);
      return sampleTexture(${s}, uv);
    }
    `:`
      float ${i}(int row, int col, int depth) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${o} + col * ${r} + depth + ${p};
        vec2 uv = uvFromFlat(${d}, ${h}, index);
        return sampleTexture(${s}, uv);
      }
  `}function AX(n,t){const e=n.name,s="get"+e.charAt(0).toUpperCase()+e.slice(1),i=us();if(t)return`
    vec4 ${s}(int b2, int b, int row, int col) {
      int valuesPerRow = int(ceil(float(${e}Shape[3]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${e}Shape[2]) / 2.0));
      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);
      texelsInBatch *= ${e}Shape[1];
      index = b2 * texelsInBatch + index;
      ivec2 packedTexShape = ivec2(ceil(float(${e}TexShape[0]) / 2.0), ceil(float(${e}TexShape[1]) / 2.0));
      int texR = index / packedTexShape[1];
      int texC = index - texR * packedTexShape[1];
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${i.texture2D}(${e}, uv);
    }
  `;const o=n.shapeInfo.logicalShape,r=o.length,a=n.shapeInfo.texShape,c=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)],u=c[0],l=c[1],d=Math.ceil(o[r-1]/2);let h=d*Math.ceil(o[r-2]/2),f="int b, int row, int col",p=`b * ${h} + (row / 2) * ${d} + (col / 2)`;for(let x=2;x<r-1;x++)f=`int b${x}, `+f,h*=o[r-x-1],p=`b${x} * ${h} + `+p;return`
    vec4 ${s}(${f}) {
      int index = ${p};
      int texR = index / ${l};
      int texC = index - texR * ${l};
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${l}, ${u});
      return ${i.texture2D}(${e}, uv);
    }
  `}function NX(n,t){const e=n.shapeInfo.logicalShape,s=n.name,i="get"+s.charAt(0).toUpperCase()+s.slice(1),o=e[3],r=e[2]*o,a=e[1]*r,{newShape:c,keptDims:u}=Go(e);if(c.length<e.length){const y=bc(n,c),w=["row","col","depth","depth2"];return`
      ${xc(y,t)}
      float ${i}(int row, int col, int depth, int depth2) {
        return ${i}(${wc(w,u)});
      }
    `}if(n.shapeInfo.isUniform)return`
      float ${i}(int row, int col, int depth, int depth2) {
        int index = round(dot(vec4(row, col, depth, depth2),
                          vec4(${a}, ${r}, ${o}, 1)));
        ${yc(n)}
      }
    `;const l=n.shapeInfo.flatOffset,d=n.shapeInfo.texShape,h=d[0],f=d[1],p=`int stride2 = ${s}Shape[3];`,x=`int stride1 = ${s}Shape[2] * stride2;`,g=`int stride0 = ${s}Shape[1] * stride1;`;if(f===a&&l==null)return t?`
      float ${i}(int row, int col, int depth, int depth2) {
        ${p}
        ${x}
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(stride1, stride2, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
      float ${i}(int row, int col, int depth, int depth2) {
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(${r}, ${o}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${f}.0, ${h}.0);
        return sampleTexture(${s}, uv);
      }
    `;if(f===o&&l==null)return t?`
      float ${i}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${s}Shape[1] * ${s}Shape[2], ${s}Shape[2], 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
      float ${i}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${e[1]*e[2]}, ${e[2]}, 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${f}.0, ${h}.0);
        return sampleTexture(${s}, uv);
      }
    `;const m=Zr(s);return t?`
    float ${i}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      ${p}
      ${x}
      ${g}
      int index = row * stride0 + col * stride1 +
          depth * stride2 + depth2;
      vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index + ${m});
      return sampleTexture(${s}, uv);
    }
  `:`
    float ${i}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${a} + col * ${r} +
          depth * ${o} + depth2;
      vec2 uv = uvFromFlat(${h}, ${f}, index + ${m});
      return sampleTexture(${s}, uv);
    }
  `}function kX(n){const t=n.shapeInfo.logicalShape,e=n.name,s="get"+e.charAt(0).toUpperCase()+e.slice(1),i=t[4],o=t[3]*i,r=t[2]*o,a=t[1]*r,{newShape:c,keptDims:u}=Go(t);if(c.length<t.length){const x=bc(n,c),g=["row","col","depth","depth2","depth3"];return`
      ${xc(x)}
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        return ${s}(${wc(g,u)});
      }
    `}if(n.shapeInfo.isUniform)return`
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        float index = dot(
          vec4(row, col, depth, depth2),
          vec4(${a}, ${r}, ${o}, ${i})) +
          depth3;
        ${yc(n)}
      }
    `;const l=n.shapeInfo.flatOffset,d=n.shapeInfo.texShape,h=d[0],f=d[1];if(f===a&&l==null)return`
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
                         vec4(${r}, ${o}, ${i}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${f}.0, ${h}.0);
        return sampleTexture(${e}, uv);
      }
    `;if(f===i&&l==null)return`
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        float texR = dot(
          vec4(row, col, depth, depth2),
          vec4(${t[1]*t[2]*t[3]},
               ${t[2]*t[3]}, ${t[3]}, 1));
        int texC = depth3;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${f}.0, ${h}.0);
        return sampleTexture(${e}, uv);
      }
    `;const p=Zr(e);return`
    float ${s}(int row, int col, int depth, int depth2, int depth3) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${a} + col * ${r} + depth * ${o} +
          depth2 * ${i} + depth3 + ${p};
      vec2 uv = uvFromFlat(${h}, ${f}, index);
      return sampleTexture(${e}, uv);
    }
  `}function DX(n){const t=n.shapeInfo.logicalShape,e=n.name,s="get"+e.charAt(0).toUpperCase()+e.slice(1),{newShape:i,keptDims:o}=Go(t);if(i.length<t.length){const g=bc(n,i),m=["row","col","depth","depth2","depth3","depth4"];return`
      ${xc(g)}
      float ${s}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        return ${s}(${wc(m,o)});
      }
    `}const r=t[5],a=t[4]*r,c=t[3]*a,u=t[2]*c,l=t[1]*u;if(n.shapeInfo.isUniform)return`
      float ${s}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
        int index = round(dot(
          vec4(row, col, depth, depth2),
          vec4(${l}, ${u}, ${c}, ${a})) +
          dot(
            vec2(depth3, depth4),
            vec2(${r}, 1)));
        ${yc(n)}
      }
    `;const d=n.shapeInfo.flatOffset,h=n.shapeInfo.texShape,f=h[0],p=h[1];if(p===l&&d==null)return`
      float ${s}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
          vec4(${u}, ${c}, ${a}, ${r})) +
               float(depth4);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${p}.0, ${f}.0);
        return sampleTexture(${e}, uv);
      }
    `;if(p===r&&d==null)return`
      float ${s}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        float texR = dot(vec4(row, col, depth, depth2),
          vec4(${t[1]*t[2]*t[3]*t[4]},
               ${t[2]*t[3]*t[4]},
               ${t[3]*t[4]},
               ${t[4]})) + float(depth3);
        int texC = depth4;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${p}.0, ${f}.0);
        return sampleTexture(${e}, uv);
      }
    `;const x=Zr(e);return`
    float ${s}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${l} + col * ${u} + depth * ${c} +
          depth2 * ${a} + depth3 * ${r} + depth4 + ${x};
      vec2 uv = uvFromFlat(${f}, ${p}, index);
      return sampleTexture(${e}, uv);
    }
  `}function yc(n){const t=n.name,e=ct(n.shapeInfo.logicalShape);return e<2?`return ${t};`:`
    for (int i = 0; i < ${e}; i++) {
      if (i == index) {
        return ${t}[i];
      }
    }
  `}function $X(n,t){const e=n.name,s=e.charAt(0).toUpperCase()+e.slice(1),i="get"+s+"AtOutCoords",o=n.shapeInfo.logicalShape.length,r=t.logicalShape.length,a=oI(n.shapeInfo.logicalShape,t.logicalShape),c=Ve(r),u=r-o;let l;const d=["x","y","z","w","u","v"];o===0?l="":r<2&&a.length>=1?l="coords = 0;":l=a.map(y=>`coords.${d[y+u]} = 0;`).join(`
`);let h="";r<2&&o>0?h="coords":h=n.shapeInfo.logicalShape.map((y,w)=>`coords.${d[w+u]}`).join(", ");let f="return outputValue;";const x=ct(n.shapeInfo.logicalShape)===1,m=ct(t.logicalShape)===1;if(o===1&&!x&&!m)f=`
      return vec4(outputValue.xy, outputValue.xy);
    `;else if(x&&!m)r===1?f=`
        return vec4(outputValue.x, outputValue.x, 0., 0.);
      `:f=`
        return vec4(outputValue.x);
      `;else if(a.length){const y=o-2,w=o-1;a.indexOf(y)>-1&&a.indexOf(w)>-1?f="return vec4(outputValue.x);":a.indexOf(y)>-1?f="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":a.indexOf(w)>-1&&(f="return vec4(outputValue.xx, outputValue.zz);")}return`
    vec4 ${i}() {
      ${c} coords = getOutputCoords();
      ${l}
      vec4 outputValue = get${s}(${h});
      ${f}
    }
  `}function FX(n,t){const e=n.name,s=e.charAt(0).toUpperCase()+e.slice(1),i="get"+s+"AtOutCoords",o=t.texShape,r=n.shapeInfo.texShape,a=n.shapeInfo.logicalShape.length,c=t.logicalShape.length;if(!n.shapeInfo.isUniform&&a===c&&n.shapeInfo.flatOffset==null&&Pe(r,o))return`
      float ${i}() {
        return sampleTexture(${e}, resultUV);
      }
    `;const u=Ve(c),l=oI(n.shapeInfo.logicalShape,t.logicalShape),d=c-a;let h;const f=["x","y","z","w","u","v"];a===0?h="":c<2&&l.length>=1?h="coords = 0;":h=l.map(x=>`coords.${f[x+d]} = 0;`).join(`
`);let p="";return c<2&&a>0?p="coords":p=n.shapeInfo.logicalShape.map((x,g)=>`coords.${f[g+d]}`).join(", "),`
    float ${i}() {
      ${u} coords = getOutputCoords();
      ${h}
      return get${s}(${p});
    }
  `}function Ve(n){if(n<=1)return"int";if(n===2)return"ivec2";if(n===3)return"ivec3";if(n===4)return"ivec4";if(n===5)return"ivec5";if(n===6)return"ivec6";throw Error(`GPU for rank ${n} is not yet supported`)}function sy(n,t,e){const{newShape:s,keptDims:i}=Go(t),o=t.length,r=n&&o===3&&t[0]===1,a=r?t.slice(1):s,c=!n&&o>1&&!Pe(t,e)&&s.length<o||r;return{useSqueezeShape:c,uniformShape:c?a:t,keptDims:i}}function bc(n,t){const e=JSON.parse(JSON.stringify(n));return e.shapeInfo.logicalShape=t,e}function wc(n,t){return t.map(e=>n[e]).join(", ")}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PX(n,t,e,s){const i=e.map((l,d)=>{const h={logicalShape:l.shape,texShape:l.isUniform?null:l.texData.texShape,isUniform:l.isUniform,isPacked:l.isUniform?!1:l.texData.isPacked,flatOffset:null};return l.texData!=null&&l.texData.slice!=null&&l.texData.slice.flatOffset>0&&(h.flatOffset=l.texData.slice.flatOffset),{name:t.variableNames[d],shapeInfo:h}}),o=i.map(l=>l.shapeInfo),r={logicalShape:s.shape,texShape:s.texData.texShape,isUniform:!1,isPacked:s.texData.isPacked,flatOffset:null},a=tX(i,r,t),c=MH(n.gl,a),u=n.createProgram(c);return nt().get("ENGINE_COMPILE_ONLY")?{program:t,fragmentShader:c,source:a,webGLProgram:u,inShapeInfos:o,outShapeInfo:r,variablesLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:(n.buildVao(u),Object.assign({program:t,fragmentShader:c,source:a,webGLProgram:u,inShapeInfos:o,outShapeInfo:r},cI(n,t,u)))}function cI(n,t,e){const s=[],i=[];let o,r,a,c=null,u=null;u=n.getUniformLocation(e,"NAN",!1),nt().getNumber("WEBGL_VERSION")===1&&(c=n.getUniformLocation(e,"INFINITY",!1));const l=!1;for(const d of t.variableNames){const h={name:d,uniform:n.getUniformLocation(e,d,l),offset:n.getUniformLocation(e,`offset${d}`,l)};t.enableShapeUniforms&&(h.shape=n.getUniformLocation(e,`${d}Shape`,l),h.texShape=n.getUniformLocation(e,`${d}TexShape`,l)),s.push(h)}if(t.enableShapeUniforms&&(o=n.getUniformLocation(e,"outShape",l),a=n.getUniformLocation(e,"outShapeStrides",l),r=n.getUniformLocation(e,"outTexShape",l)),t.customUniforms)for(const d of t.customUniforms)i.push(n.getUniformLocation(e,d.name,l));return{variablesLocations:s,customUniformLocations:i,infLoc:c,nanLoc:u,outShapeLocation:o,outShapeStridesLocation:a,outTexShapeLocation:r}}function Uw(n,t){if(n.length!==t.length)throw Error(`Binary was compiled with ${n.length} inputs, but was executed with ${t.length} inputs`);n.forEach((e,s)=>{const i=e.logicalShape,o=t[s],r=o.shape;if(!Pe(i,r))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${i} and ${r} must match`);if(e.isUniform&&o.isUniform)return;const a=e.texShape,c=o.isUniform?null:o.texData.texShape;if(!Pe(a,c))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${a} and ${c} must match`)})}function LX(n,t,e,s,i){t.program.enableShapeUniforms||(Uw(t.inShapeInfos,e),Uw([t.outShapeInfo],[s]));const o=s.texData.texture,r=s.texData.texShape;s.texData.isPacked?n.setOutputPackedMatrixTexture(o.texture,r[0],r[1]):n.setOutputMatrixTexture(o.texture,r[0],r[1]),n.setProgram(t.webGLProgram),n.bindVertexArray(t.webGLProgram.vao),nt().getNumber("WEBGL_VERSION")===1&&t.infLoc!==null&&n.gl.uniform1f(t.infLoc,1/0),t.nanLoc!==null&&n.gl.uniform1f(t.nanLoc,NaN);for(let c=0;c<e.length;++c){const u=e[c],{uniform:l,offset:d,shape:h,texShape:f}=t.variablesLocations[c];if(h){const{uniformShape:p}=sy(t.program.packedInputs,u.shape,u.texData.texShape);switch(p.length){case 1:n.gl.uniform1iv(h,new Int32Array(p));break;case 2:n.gl.uniform2iv(h,new Int32Array(p));break;case 3:n.gl.uniform3iv(h,new Int32Array(p));break;case 4:n.gl.uniform4iv(h,new Int32Array(p));break}}if(f&&n.gl.uniform2i(f,u.texData.texShape[0],u.texData.texShape[1]),l!=null){if(u.isUniform){if(ct(u.shape)<2)n.gl.uniform1f(l,u.uniformValues[0]);else{let p=u.uniformValues;p instanceof Float32Array||(p=new Float32Array(p)),n.gl.uniform1fv(l,p)}continue}u.texData.slice!=null&&d!=null&&n.gl.uniform1i(d,u.texData.slice.flatOffset),n.setInputMatrixTexture(u.texData.texture.texture,l,c)}}const a=t.outShapeLocation;if(a)switch(s.shape.length){case 1:n.gl.uniform1iv(a,new Int32Array(s.shape));break;case 2:n.gl.uniform2iv(a,new Int32Array(s.shape));break;case 3:n.gl.uniform3iv(a,new Int32Array(s.shape));break;case 4:n.gl.uniform4iv(a,new Int32Array(s.shape));break}if(t.outShapeStridesLocation){const c=Kt(s.shape);switch(s.shape.length){case 2:n.gl.uniform1iv(t.outShapeStridesLocation,new Int32Array(c));break;case 3:n.gl.uniform2iv(t.outShapeStridesLocation,new Int32Array(c));break;case 4:n.gl.uniform3iv(t.outShapeStridesLocation,new Int32Array(c));break}}if(t.outTexShapeLocation&&n.gl.uniform2i(t.outTexShapeLocation,s.texData.texShape[0],s.texData.texShape[1]),t.program.customUniforms&&i)for(let c=0;c<t.program.customUniforms.length;++c){const u=t.program.customUniforms[c],l=t.customUniformLocations[c],d=i[c];if(u.type==="float")n.gl.uniform1fv(l,d);else if(u.type==="vec2")n.gl.uniform2fv(l,d);else if(u.type==="vec3")n.gl.uniform3fv(l,d);else if(u.type==="vec4")n.gl.uniform4fv(l,d);else if(u.type==="int")n.gl.uniform1iv(l,d);else if(u.type==="ivec2")n.gl.uniform2iv(l,d);else if(u.type==="ivec3")n.gl.uniform3iv(l,d);else if(u.type==="ivec4")n.gl.uniform4iv(l,d);else throw Error(`uniform type ${u.type} is not supported yet.`)}n.executeProgram()}function OX(n,t,e){let s="";t.concat(e).forEach(r=>{const a=r.texData!=null&&r.texData.slice!=null&&r.texData.slice.flatOffset>0;if(n.enableShapeUniforms&&!r.isUniform){const c=r.texData.texShape,{useSqueezeShape:u,uniformShape:l,keptDims:d}=sy(n.packedInputs,r.shape,c);let h="",f="",p="";if(l.length===1&&n.packedInputs){const _=[Math.ceil(c[0]/2),Math.ceil(c[1]/2)];h=`${_[0]>1}_${_[1]>1}`}else if(l.length===2&&!n.packedInputs)f=`${l[0]>1}_${l[1]>1}`;else if(l.length>2&&!n.packedInputs){const _=Kt(l);p=`${_[0]===c[1]}_${_[_.length-1]===c[1]}`}const x=r.shape.length,g=l.length===2&&Pe(r.shape,c),m=ct(r.shape)===1,y=ja(r.shape,e.shape),w=!n.packedInputs&&x===e.shape.length&&Pe(c,e.texData.texShape),b=n.packedInputs||l.length>2?"":`${c[0]>1}_${c[1]>1}`;s+=`${x}_${w}_${u?d:""}_${l.length}_${m}_${y}_${g}_${h}_${f}_${p}_${b}_${a}`}else{const c=r.isUniform?"uniform":r.texData.texShape;s+=`${r.shape}_${c}_${a}`}});const i=n.userCode;let o=n.constructor.name;return o+="_"+s+"_"+i+`${nt().getNumber("WEBGL_VERSION")}`,o}function Jn(n){return nt().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&n<=4}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class UX{constructor(t){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=hu.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const e=us();this.outputShape=t,this.enableShapeUniforms=Jn(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?hp(["r","c","d"],t):Yr(["r","c","d"],t)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getA(rc.x, rc.y, rc.z);
        }

        ${e.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class BX{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=hu.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const e=us();this.outputShape=t,this.enableShapeUniforms=Jn(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?hp(["r","c","d"],t):Yr(["r","c","d"],t)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));
        }

        ${e.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class zX{constructor(t){this.variableNames=["A"],this.outTexUsage=ks.DOWNLOAD;const e=us();this.outputShape=t,this.userCode=`
      ${iI}

      void main() {
        float x = getAAtOutCoords();
        ${e.output} = encode_float(x);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class VX{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=ks.DOWNLOAD;const e=us();this.outputShape=t,this.userCode=`
      ${iI}

      void main() {
        ivec3 coords = getOutputCoords();
        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));
        ${e.output} = encode_float(x);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const WX={R:0,G:1,B:2,A:3};class Bw{constructor(t,e=!1,s="RGBA"){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];const i=us();this.outputShape=t,this.enableShapeUniforms=Jn(this.outputShape.length);let o="result";e&&(o="floor(result * 255. + 0.5)");let r="";for(let a=0;a<s.length;a++){const c=s[a];r+=`
          if(offset == ${a}) {
            result = values[${WX[c]}];
          }`}this.userCode=`
      ${this.enableShapeUniforms?ny():ey(t)}

      void main() {
        ivec3 coords = getOutputCoords();
        int flatIndex = getFlatIndex(coords);
        float result = 0.;
        int offset = imod(flatIndex, ${s.length});

        flatIndex = idiv(flatIndex, ${s.length}, 1.);

        int r = flatIndex / texShape[1];
        if (r < texShape[0]) {
          int c = imod(flatIndex, texShape[1]);
          vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
          vec4 values = ${i.texture2D}(A, uv);
          ${r}
        }
        ${i.output} = vec4(${o}, 0., 0., 0.);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class GX{constructor(t,e=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];const s=us();this.outputShape=t,this.enableShapeUniforms=Jn(this.outputShape.length);let i="",o="result";e&&(o="floor(result * 255. + 0.5)");for(let r=0;r<=1;r++)for(let a=0;a<=1;a++){const c=r*2+a;i+=`
          localCoords = coords;
          if(localCoords[2] + ${a} < ${this.enableShapeUniforms?"outShape[2]":`${t[2]}`}) {
          localCoords[2] += ${a};
          if (localCoords[1] + ${r} < ${this.enableShapeUniforms?"outShape[1]":`${t[1]}`}) {
            localCoords[1] += ${r};

            flatIndex = getFlatIndex(localCoords);
            offset = imod(flatIndex, 4);

            flatIndex = idiv(flatIndex, 4, 1.);

            int r = flatIndex / texShape[1];
            int c = imod(flatIndex, texShape[1]);
            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
            values = ${s.texture2D}(A, uv);

            if (offset == 0) {
              result[${c}] = values[0];
            } else if (offset == 1) {
              result[${c}] = values[1];
            } else if (offset == 2) {
              result[${c}] = values[2];
            } else {
              result[${c}] = values[3];
            }
          }
        }
        `}this.userCode=`
        ${this.enableShapeUniforms?ny():ey(t)}

        void main() {
          ivec3 coords = getOutputCoords();

          vec4 result = vec4(0.);
          int flatIndex, r, c, offset;
          ivec3 localCoords;
          vec2 uv;
          vec4 values;

          ${i}

          ${s.output} = ${o};
        }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HX(n){const t=us(),e=`${t.version}
    precision highp float;
    ${t.attribute} vec3 clipSpacePos;
    ${t.attribute} vec2 uv;
    ${t.varyingVs} vec2 resultUV;

    void main() {
      gl_Position = vec4(clipSpacePos, 1);
      resultUV = uv;
    }`;return RH(n,e)}function XX(n){const t=new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]);return DH(n,t)}function qX(n){const t=new Uint16Array([0,1,2,2,1,3]);return $H(n,t)}function Ll(n,t,e,s,i,o){PH(t,e);const r=FH(n),a=n.TEXTURE_2D;return At(n,()=>n.bindTexture(a,r)),At(n,()=>n.texParameteri(a,n.TEXTURE_WRAP_S,n.CLAMP_TO_EDGE)),At(n,()=>n.texParameteri(a,n.TEXTURE_WRAP_T,n.CLAMP_TO_EDGE)),At(n,()=>n.texParameteri(a,n.TEXTURE_MIN_FILTER,n.NEAREST)),At(n,()=>n.texParameteri(a,n.TEXTURE_MAG_FILTER,n.NEAREST)),nt().getNumber("WEBGL_VERSION")===1?At(n,()=>n.texImage2D(a,0,s,t,e,0,i,o,null)):At(n,()=>n.texStorage2D(a,1,s,t,e)),At(n,()=>n.bindTexture(n.TEXTURE_2D,null)),{texture:r,texShape:[e,t]}}function uI(n){return n.internalFormatFloat}function jX(n,t,e,s){const[i,o]=Fl(t,e);return Ll(n,i,o,uI(s),s.textureFormatFloat,n.FLOAT)}function lI(n){return n.internalFormatHalfFloat}function KX(n,t,e,s){const[i,o]=Fl(t,e);return Ll(n,i,o,lI(s),s.textureFormatFloat,s.textureTypeHalfFloat)}function dI(n){return n.downloadTextureFormat}function YX(n,t,e,s){const[i,o]=Fl(t,e);return Ll(n,i,o,dI(s),n.RGBA,n.UNSIGNED_BYTE)}function hI(n){return n.internalFormatPackedFloat}function ZX(n,t,e,s){const[i,o]=gc(t,e);return Ll(n,i,o,hI(s),n.RGBA,n.FLOAT)}function fI(n){return n.internalFormatPackedHalfFloat}function JX(n,t,e,s){const[i,o]=gc(t,e);return Ll(n,i,o,fI(s),n.RGBA,s.textureTypeHalfFloat)}function QX(n,t,e){return At(n,()=>n.bindBuffer(n.ARRAY_BUFFER,e)),Pw(n,t,"clipSpacePos",e,3,20,0)&&Pw(n,t,"uv",e,2,20,12)}function tq(n,t,e,s,i,o){At(n,()=>n.bindTexture(n.TEXTURE_2D,t));let r,a,c;i instanceof Uint8Array?(r=new Uint8Array(e*s*4),a=n.UNSIGNED_BYTE,c=n.RGBA):(r=new Float32Array(e*s*4),a=n.FLOAT,c=o.internalFormatPackedFloat),r.set(i),nt().getNumber("WEBGL_VERSION")===2?At(n,()=>n.texSubImage2D(n.TEXTURE_2D,0,0,0,e,s,n.RGBA,a,r)):At(n,()=>n.texImage2D(n.TEXTURE_2D,0,c,e,s,0,n.RGBA,a,r)),At(n,()=>n.bindTexture(n.TEXTURE_2D,null))}function eq(n,t,e){At(n,()=>n.bindTexture(n.TEXTURE_2D,t)),e.data instanceof Uint8Array?nt().getNumber("WEBGL_VERSION")===2?At(n,()=>n.texSubImage2D(n.TEXTURE_2D,0,0,0,e.width,e.height,n.RGBA,n.UNSIGNED_BYTE,e.data)):At(n,()=>n.texImage2D(n.TEXTURE_2D,0,n.RGBA,e.width,e.height,0,n.RGBA,n.UNSIGNED_BYTE,e.data)):nt().getNumber("WEBGL_VERSION")===2?At(n,()=>n.texSubImage2D(n.TEXTURE_2D,0,0,0,n.RGBA,n.UNSIGNED_BYTE,e)):At(n,()=>n.texImage2D(n.TEXTURE_2D,0,n.RGBA,n.RGBA,n.UNSIGNED_BYTE,e)),At(n,()=>n.bindTexture(n.TEXTURE_2D,null))}function nq(n,t,e,s){const i=n.createBuffer();At(n,()=>n.bindBuffer(n.PIXEL_PACK_BUFFER,i));const a=4*4*t*e;return At(n,()=>n.bufferData(n.PIXEL_PACK_BUFFER,a,n.STREAM_READ)),At(n,()=>n.readPixels(0,0,e,t,n.RGBA,n.FLOAT,0)),At(n,()=>n.bindBuffer(n.PIXEL_PACK_BUFFER,null)),i}function sq(n,t,e){const s=n,i=new Float32Array(e);return s.bindBuffer(s.PIXEL_PACK_BUFFER,t),s.getBufferSubData(s.PIXEL_PACK_BUFFER,0,i),s.bindBuffer(s.PIXEL_PACK_BUFFER,null),i}function iq(n,t,e,s){const[i,o]=Fl(t,e),r=4,a=new Uint8Array(vH(t*e,r));return At(n,()=>n.readPixels(0,0,i,o,s.downloadTextureFormat,n.UNSIGNED_BYTE,a)),new Float32Array(a.buffer)}function oq(n,t,e,s,i,o,r,a){const c=n,u=new Float32Array(_H(o,r));return c.bindBuffer(c.PIXEL_PACK_BUFFER,t),c.getBufferSubData(c.PIXEL_PACK_BUFFER,0,u),c.bindBuffer(c.PIXEL_PACK_BUFFER,null),u}function rq(n,t,e){const s=new Float32Array(t*e*4);return At(n,()=>n.readPixels(0,0,e,t,n.RGBA,n.FLOAT,s)),s}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class mm{constructor(t){this.outputTexture=null,this.program=null,this.disposed=!1,this.itemsToPoll=[];const e=nt().getNumber("WEBGL_VERSION");if(t!=null?(this.gl=t,yH(e,t)):this.gl=Ti(e),t=this.gl,nt().getNumber("WEBGL_VERSION")===2){const o=t;this.createVertexArray=()=>At(o,()=>o.createVertexArray()),this.bindVertexArray=r=>At(o,()=>o.bindVertexArray(r)),this.deleteVertexArray=r=>At(o,()=>o.deleteVertexArray(r)),this.getVertexArray=()=>At(o,()=>o.getParameter(o.VERTEX_ARRAY_BINDING))}else if(t!=null){const o=t.getExtension("OES_vertex_array_object");if(o==null)throw new Error("All WebGL1 implementations are expected to offer OES_vertex_array_object.");this.createVertexArray=()=>At(t,()=>o.createVertexArrayOES()),this.bindVertexArray=r=>At(t,()=>o.bindVertexArrayOES(r)),this.deleteVertexArray=r=>At(t,()=>o.deleteVertexArrayOES(r)),this.getVertexArray=()=>At(t,()=>t.getParameter(o.VERTEX_ARRAY_BINDING_OES))}let s="WEBGL_color_buffer_float";const i="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),nt().getNumber("WEBGL_VERSION")===1){const o="OES_texture_float",r="OES_texture_half_float";if(this.textureFloatExtension=wd(this.gl,o),Zs(this.gl,r))this.textureHalfFloatExtension=wd(this.gl,r);else if(nt().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(s),Zs(this.gl,i))this.colorBufferHalfFloatExtension=wd(this.gl,i);else if(nt().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(s="EXT_color_buffer_float",Zs(this.gl,s))this.colorBufferFloatExtension=this.gl.getExtension(s);else if(Zs(this.gl,i))this.colorBufferHalfFloatExtension=this.gl.getExtension(i);else throw new Error("GL context does not support color renderable floats");this.vertexBuffer=XX(this.gl),this.indexBuffer=qX(this.gl),this.framebuffer=LH(this.gl),this.textureConfig=ty(this.gl,this.textureHalfFloatExtension)}get debug(){return nt().getBool("DEBUG")}dispose(){if(this.disposed)return;this.program!=null&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),this.outputTexture!=null&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const t=this.gl;At(t,()=>t.finish()),At(t,()=>t.bindFramebuffer(t.FRAMEBUFFER,null)),At(t,()=>t.deleteFramebuffer(this.framebuffer)),At(t,()=>t.bindBuffer(t.ARRAY_BUFFER,null)),At(t,()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,null)),At(t,()=>t.deleteBuffer(this.indexBuffer)),this.disposed=!0}createFloat32MatrixTexture(t,e){return this.throwIfDisposed(),jX(this.gl,t,e,this.textureConfig)}createFloat16MatrixTexture(t,e){return this.throwIfDisposed(),KX(this.gl,t,e,this.textureConfig)}createUnsignedBytesMatrixTexture(t,e){return this.throwIfDisposed(),YX(this.gl,t,e,this.textureConfig)}uploadPixelDataToTexture(t,e){this.throwIfDisposed(),eq(this.gl,t,e)}uploadDenseMatrixToTexture(t,e,s,i){this.throwIfDisposed(),tq(this.gl,t,e,s,i,this.textureConfig)}createFloat16PackedMatrixTexture(t,e){return this.throwIfDisposed(),JX(this.gl,t,e,this.textureConfig)}createPackedMatrixTexture(t,e){return this.throwIfDisposed(),ZX(this.gl,t,e,this.textureConfig)}deleteMatrixTexture(t){this.throwIfDisposed(),this.outputTexture===t&&(Lw(this.gl,this.framebuffer),this.outputTexture=null),At(this.gl,()=>this.gl.deleteTexture(t))}downloadByteEncodedFloatMatrixFromOutputTexture(t,e,s){return this.downloadMatrixDriver(t,()=>iq(this.gl,e,s,this.textureConfig))}downloadPackedMatrixFromBuffer(t,e,s,i,o,r){return oq(this.gl,t,e,s,i,o,r,this.textureConfig)}downloadFloat32MatrixFromBuffer(t,e){return sq(this.gl,t,e)}createBufferFromTexture(t,e,s){this.bindTextureToFrameBuffer(t);const i=nq(this.gl,e,s,this.textureConfig);return this.unbindTextureToFrameBuffer(),i}createAndWaitForFence(){const t=this.createFence(this.gl);return this.pollFence(t)}createFence(t){let e,s;if(nt().getBool("WEBGL_FENCE_API_ENABLED")){const i=t,o=i.fenceSync(i.SYNC_GPU_COMMANDS_COMPLETE,0);t.flush(),s=()=>{const r=i.clientWaitSync(o,0,0);return r===i.ALREADY_SIGNALED||r===i.CONDITION_SATISFIED},e=o}else nt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(e=this.beginQuery(),this.endQuery(),s=()=>this.isQueryAvailable(e,nt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):s=()=>!0;return{query:e,isFencePassed:s}}downloadMatrixFromPackedTexture(t,e,s){return this.downloadMatrixDriver(t,()=>rq(this.gl,e,s))}createProgram(t){this.throwIfDisposed();const e=this.gl;this.vertexShader==null&&(this.vertexShader=HX(e));const s=NH(e);At(e,()=>e.attachShader(s,this.vertexShader)),At(e,()=>e.attachShader(s,t)),kH(e,s);const i=Object.assign(s,{vao:this.createVertexArray()});return this.debug&&dm(e,i),i}buildVao(t){this.setProgram(t),this.bindVertexArray(t.vao);const e=this.gl;At(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,this.indexBuffer)),QX(e,t,this.vertexBuffer)}deleteProgram(t){this.throwIfDisposed(),t===this.program&&(this.program=null),t!=null&&(At(this.gl,()=>this.gl.deleteProgram(t)),this.deleteVertexArray(t.vao))}setProgram(t){this.throwIfDisposed(),this.program=t,this.program!=null&&this.debug&&dm(this.gl,this.program),At(this.gl,()=>this.gl.useProgram(t))}getUniformLocation(t,e,s=!0){return this.throwIfDisposed(),s?UH(this.gl,t,e):BH(this.gl,t,e)}getAttributeLocation(t,e){return this.throwIfDisposed(),At(this.gl,()=>this.gl.getAttribLocation(t,e))}getUniformLocationNoThrow(t,e){return this.throwIfDisposed(),this.gl.getUniformLocation(t,e)}setInputMatrixTexture(t,e,s){this.throwIfDisposed(),this.throwIfNoProgram(),zH(this.gl,t,e,s)}setOutputMatrixTexture(t,e,s){this.setOutputMatrixTextureDriver(t,s,e)}setOutputPackedMatrixTexture(t,e,s){this.throwIfDisposed();const[i,o]=gc(e,s);this.setOutputMatrixTextureDriver(t,i,o)}setOutputMatrixWriteRegion(t,e,s,i){this.setOutputMatrixWriteRegionDriver(s,t,i,e)}setOutputPackedMatrixWriteRegion(t,e,s,i){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){this.program!=null&&dm(this.gl,this.program),vd(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const t=this.gl;if(this.debug){const e=this.getVertexArray();console.assert(e===this.program.vao,"VAO changed between setProgram and executeProgram!"),this.debugValidate()}At(t,()=>t.drawElements(t.TRIANGLES,6,t.UNSIGNED_SHORT,0))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),At(this.gl,()=>this.gl.finish())}getQueryTimerExtension(){return this.disjointQueryTimerExtension==null&&(this.disjointQueryTimerExtension=wd(this.gl,nt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(nt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){const s=this.gl,i=this.getQueryTimerExtensionWebGL2(),o=s.createQuery();return s.beginQuery(i.TIME_ELAPSED_EXT,o),o}const t=this.getQueryTimerExtensionWebGL1(),e=t.createQueryEXT();return t.beginQueryEXT(t.TIME_ELAPSED_EXT,e),e}endQuery(){if(nt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){const e=this.gl,s=this.getQueryTimerExtensionWebGL2();e.endQuery(s.TIME_ELAPSED_EXT);return}const t=this.getQueryTimerExtensionWebGL1();t.endQueryEXT(t.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(t){return await _b(()=>this.disposed||this.isQueryAvailable(t,nt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))),this.getQueryTime(t,nt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(t,e){if(e===0)return null;if(e===2){const s=this.gl;return s.getQueryParameter(t,s.QUERY_RESULT)/1e6}else{const s=this.getQueryTimerExtensionWebGL1();return s.getQueryObjectEXT(t,s.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(t,e){if(e===0)return!0;if(e===2){const s=this.gl,i=this.getQueryTimerExtensionWebGL2(),o=s.getQueryParameter(t,s.QUERY_RESULT_AVAILABLE);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(i.GPU_DISJOINT_EXT)),o&&!this.disjoint}else{const s=this.getQueryTimerExtensionWebGL1(),i=s.getQueryObjectEXT(t,s.QUERY_RESULT_AVAILABLE_EXT);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(s.GPU_DISJOINT_EXT)),i&&!this.disjoint}}pollFence(t){return new Promise(e=>{this.addItemToPoll(()=>t.isFencePassed(),()=>e())})}pollItems(){const t=aq(this.itemsToPoll.map(e=>e.isDoneFn));for(let e=0;e<=t;++e){const{resolveFn:s}=this.itemsToPoll[e];s()}this.itemsToPoll=this.itemsToPoll.slice(t+1)}addItemToPoll(t,e){if(this.itemsToPoll.push({isDoneFn:t,resolveFn:e}),this.itemsToPoll.length>1)return;let s;"setTimeoutCustom"in nt().platform&&(s=nt().platform.setTimeoutCustom.bind(nt().platform)),_b(()=>(this.pollItems(),this.itemsToPoll.length===0),()=>0,null,s)}bindTextureToFrameBuffer(t){this.throwIfDisposed(),hm(this.gl,t,this.framebuffer),this.debug&&vd(this.gl)}unbindTextureToFrameBuffer(){this.outputTexture!=null?(hm(this.gl,this.outputTexture,this.framebuffer),this.debug&&vd(this.gl)):Lw(this.gl,this.framebuffer)}downloadMatrixDriver(t,e){this.bindTextureToFrameBuffer(t);const s=e();return this.unbindTextureToFrameBuffer(),s}setOutputMatrixTextureDriver(t,e,s){this.throwIfDisposed();const i=this.gl;hm(i,t,this.framebuffer),this.debug&&vd(i),this.outputTexture=t,At(i,()=>i.viewport(0,0,e,s)),At(i,()=>i.scissor(0,0,e,s))}setOutputMatrixWriteRegionDriver(t,e,s,i){this.throwIfDisposed(),At(this.gl,()=>this.gl.scissor(t,e,s,i))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(this.program==null)throw new Error("No GPU program is currently set.")}}function aq(n){let t=0;for(;t<n.length&&n[t]();++t);return t-1}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const{addImpl:cq,bincountImpl:pI,bincountReduceImpl:uq,bitwiseAndImpl:lq,castImpl:dq,ceilImpl:hq,concatImpl:fq,equalImpl:pq,expImpl:mq,expm1Impl:gq,floorImpl:xq,gatherNdImpl:yq,gatherV2Impl:bq,greaterImpl:wq,greaterEqualImpl:vq,lessImpl:_q,lessEqualImpl:Cq,linSpaceImpl:Sq,logImpl:Tq,maxImpl:Eq,maximumImpl:Iq,minimumImpl:Rq,multiplyImpl:Mq,negImpl:Aq,notEqualImpl:Nq,prodImpl:kq,raggedGatherImpl:Dq,raggedRangeImpl:$q,raggedTensorToTensorImpl:Fq,rangeImpl:Pq,rsqrtImpl:Lq,scatterImpl:Oq,sigmoidImpl:Uq,simpleAbsImpl:mI,sliceImpl:Bq,sparseFillEmptyRowsImpl:zq,sparseReshapeImpl:Vq,sparseSegmentReductionImpl:gI,sqrtImpl:Wq,staticRegexReplaceImpl:Gq,stridedSliceImpl:Hq,stringNGramsImpl:Xq,stringSplitImpl:qq,stringToHashBucketFastImpl:jq,subImpl:Kq,tileImpl:Yq,topKImpl:Zq,transposeImpl:iy,uniqueImpl:Jq}=ez;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xI(n,t){return["x","y","z","w","u","v"].slice(0,t).map(e=>`${n}.${e}`)}function os(n,t){return t===1?[n]:xI(n,t)}function Qq(n,t){if(n===1)return"rc";let e="";for(let s=0;s<n;s++)e+=t[s],s<n-1&&(e+=",");return e}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class tj{constructor(t){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=t,this.rank=t.length,this.enableShapeUniforms=Jn(this.outputShape.length),this.rank===0)this.userCode=`
        void main() {
          setOutput(vec4(getA(), 0., 0., 0.));
        }
      `;else{const e=os("rc",this.rank),s=Ve(this.rank),i=this.getOutOfBoundsCondition(e),o=this.getSetup(e),r=this.getOutput(e);this.userCode=`
        void main() {
          ${s} rc = getOutputCoords();

          if(${i}) {
            setOutput(vec4(0));
          } else {
            ${o}

            setOutput(vec4(${r}));
          }
        }
      `}}getSourceCoordsArr(t){const e=[];for(let s=0;s<=1;s++)for(let i=0;i<=1;i++){let o=`${s===0?"r":"rp1"}, ${i===0?"c":"cp1"}`;for(let r=2;r<this.rank;r++)o=`${t[t.length-1-r]},`+o;e.push(o)}return e}getOutOfBoundsCondition(t){if(this.rank===1)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let e="";for(let s=this.rank-2;s<this.rank;s++)e+=`${t[s]} >= ${this.enableShapeUniforms?`outShape[${s}]`:this.outputShape[s]}`,s<this.rank-1&&(e+="||");return e}getSetup(t){if(this.rank===1)return"";const e=t.slice(-2),s=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],i=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`
      int r = ${e[0]};
      int c = ${e[1]};
      int rp1 = r + 1;
      int cp1 = c + 1;

      bool cEdge = cp1 >= ${s};
      bool rEdge = rp1 >= ${i};
    `}getOutput(t){const e=this.getSourceCoordsArr(t);return this.rank===1?`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`:`getA(${e[0]}),
            cEdge ? 0. : getA(${e[1]}),
            rEdge ? 0. : getA(${e[2]}),
            rEdge || cEdge ? 0. : getA(${e[3]})`}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class yI{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=t,this.enableShapeUniforms=Jn(this.outputShape.length);let s="";for(let i=0;i<4;i++){let o="thisRC = rc;";i%2===1&&(o+="thisRC.z += 1;"),i>1&&(o+="thisRC.y += 1;"),s+=`
        ${o}
        ${i>0?"if(thisRC.y < rows && thisRC.z < cols){":""}
          int flatIndex = getFlatIndex(thisRC);

          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);
          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));

          result[${i}] =
            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);
        ${i>0?"}":""}
      `}this.userCode=`
      ${ej(e,this.enableShapeUniforms)}
      ${this.enableShapeUniforms?ny():ey(t)}

      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0.);

        ivec3 thisRC;
        int rows = ${this.enableShapeUniforms?"outShape[1]":t[1]};
        int cols = ${this.enableShapeUniforms?"outShape[2]":t[2]};

        ${s}

        setOutput(result);
      }
    `}}function ej(n,t){return`
    ivec3 inputCoordsFromReshapedOutCoords(int index) {
      ${t?QH(["r","c","d"],"inputShape"):Yr(["r","c","d"],n)}
      return ivec3(r, c, d);
    }
  `}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class nj{constructor(t){this.gpgpu=t,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.usedTextures={},this.logEnabled=!1}acquireTexture(t,e,s){const i=Vw(e,s),o=Ww(t,i,s);o in this.freeTextures||(this.freeTextures[o]=[]),o in this.usedTextures||(this.usedTextures[o]=[]);const r=zw(t,i,this.gpgpu.gl,this.gpgpu.textureConfig,s);if(this.freeTextures[o].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=r,this.log();const c=this.freeTextures[o].pop();return this.usedTextures[o].push(c),c}let a;return i===Pn.PACKED_2X2_FLOAT32?a=this.gpgpu.createPackedMatrixTexture(t[0],t[1]):i===Pn.PACKED_2X2_FLOAT16?a=this.gpgpu.createFloat16PackedMatrixTexture(t[0],t[1]):i===Pn.UNPACKED_FLOAT32?a=this.gpgpu.createFloat32MatrixTexture(t[0],t[1]):i===Pn.UNPACKED_FLOAT16?a=this.gpgpu.createFloat16MatrixTexture(t[0],t[1]):i===Pn.PACKED_4X1_UNSIGNED_BYTE&&(a=this.gpgpu.createUnsignedBytesMatrixTexture(t[0],t[1])),this.usedTextures[o].push(a),this.numUsedTextures++,this._numBytesAllocated+=r,this.log(),a}releaseTexture(t,e,s,i){if(this.freeTextures==null)return;const o=Vw(s,i),r=Ww(e,o,i);r in this.freeTextures||(this.freeTextures[r]=[]);const a=zw(e,o,this.gpgpu.gl,this.gpgpu.textureConfig,i),c=nt().getNumber("WEBGL_DELETE_TEXTURE_THRESHOLD");c!==-1&&this._numBytesAllocated>c?(this.gpgpu.deleteMatrixTexture(t.texture),this._numBytesAllocated-=a):(this.freeTextures[r].push(t),this.numFreeTextures++,this._numBytesFree+=a),this.numUsedTextures--;const u=this.usedTextures[r],l=u&&u.indexOf(t);if(l==null||l<0)throw new Error("Cannot release a texture that was never provided by this texture manager");u[l]=u[u.length-1],u.pop(),this.log()}log(){if(!this.logEnabled)return;const t=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${t})`);const e=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*e)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(this.freeTextures!=null){for(const t in this.freeTextures)this.freeTextures[t].forEach(e=>{this.gpgpu.deleteMatrixTexture(e.texture)});for(const t in this.usedTextures)this.usedTextures[t].forEach(e=>{this.gpgpu.deleteMatrixTexture(e.texture)});this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function sj(n,t){const e=n;if(t===e.R32F)return 4;if(t===e.R16F)return 2;if(t===e.RGBA32F)return 16;if(t===n.RGBA)return 16;if(t===e.RGBA16F)return 8;if(t===e.RGBA8)return 4;throw new Error(`Unknown internal format ${t}`)}function zw(n,t,e,s,i){const o=ij(t,s);let r;if(i){const[c,u]=gc(n[0],n[1]);r=c*u}else{const[c,u]=Fl(n[0],n[1]);r=c*u}const a=sj(e,o);return r*a}function ij(n,t){switch(n){case Pn.PACKED_2X2_FLOAT32:return hI(t);case Pn.PACKED_2X2_FLOAT16:return fI(t);case Pn.UNPACKED_FLOAT32:return uI(t);case Pn.UNPACKED_FLOAT16:return lI(t);case Pn.PACKED_4X1_UNSIGNED_BYTE:return dI(t);default:throw new Error(`Unknown physical texture type ${n}`)}}function oj(n){return nt().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?n?Pn.PACKED_2X2_FLOAT32:Pn.UNPACKED_FLOAT32:n?Pn.PACKED_2X2_FLOAT16:Pn.UNPACKED_FLOAT16}function Vw(n,t){if(n===ks.UPLOAD)return Pn.PACKED_2X2_FLOAT32;if(n===ks.RENDER||n==null)return oj(t);if(n===ks.DOWNLOAD||n===ks.PIXELS)return Pn.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${n}`)}function Ww(n,t,e){return`${n[0]}_${n[1]}_${t}_${e}`}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class $i{constructor(t,e){this.variableNames=["A"],this.outputShape=t,this.enableShapeUniforms=Jn(this.outputShape.length),this.userCode=`
      float unaryOperation(float x) {
        ${e}
      }

      void main() {
        float x = getAAtOutCoords();
        float y = unaryOperation(x);

        setOutput(y);
      }
    `}}const ii="if (isnan(x)) return x;",rj="return x;",Gw="return abs(x);",aj="return (x >= 0.0) ? x : (exp(x) - 1.0);",cj=ii+`
  return (x < 0.0) ? 0.0 : x;
`,uj=ii+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,So="return x;",lj="return 1.0 / (1.0 + exp(-1.0 * x));";/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dj="return x;",hj=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,fj=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,pj=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,mj="return 1.0 / (1.0 + exp(-1.0 * x));";class Ro{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.enableShapeUniforms=Jn(this.outputShape.length),this.userCode=`
      vec4 unaryOperation(vec4 x) {
        ${e}
      }

      void main() {
        vec4 x = getAAtOutCoords();
        vec4 y = unaryOperation(x);

        setOutput(y);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class gj{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=t,this.enableShapeUniforms=Jn(this.outputShape.length);const e=t.length,s=os("rc",e),i=Ve(e),o=Qq(e,s),r=s.slice(-2),a=e<=1?"rc":`vec2(${r.join(",")})`;this.userCode=`
      void main() {
        ${i} rc = getOutputCoords();
        vec4 packedInput = getA(${o});

        setOutput(getChannel(packedInput, ${a}));
      }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xj=V_,yj=1e-7,bj=1e-4,Sd={};function wj(n){return n in Sd||(Sd[n]={}),Sd[n]}const vj=nt().getNumber("CPU_HANDOFF_SIZE_THRESHOLD"),_j=600;function Cj(){return nt().global.screen==null?1024:nt().global.screen.height*nt().global.screen.width*window.devicePixelRatio*_j/1024/1024}class fp extends I1{nextDataId(){return fp.nextDataId++}constructor(t){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!nt().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let e;if(t!=null){if(t instanceof mm)e=t;else{const s=Ti(nt().getNumber("WEBGL_VERSION"),t);e=new mm(s)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{const s=Ti(nt().getNumber("WEBGL_VERSION"));e=new mm(s),this.binaryCache=wj(nt().getNumber("WEBGL_VERSION")),this.gpgpuCreatedLocally=!0}this.gpgpu=e,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new nj(this.gpgpu),this.numMBBeforeWarning=Cj(),this.texData=new f2(this,Ii())}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}writeTexture(t,e,s,i,o,r){const a=this.makeTensorInfo(e,s),c=this.texData.get(a.dataId);c.isPacked=!1,c.texture={texture:t,texShape:[i,o]},c.texShape=[i,o];const u=_d(e),l=new Bw(u,!1,r),d=this.runWebGLProgram(l,[a],s,[[i,o]]);return d.shape=e,c.texture=null,this.disposeIntermediateTensorInfo(a),d.dataId}write(t,e,s){if((nt().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||nt().getBool("DEBUG"))&&this.checkNumericalProblems(t),s==="complex64"&&t!=null)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const i={id:this.nextDataId()};return this.texData.set(i,{shape:e,dtype:s,values:t,usage:ks.UPLOAD,refCount:1}),i}refCount(t){return this.texData.has(t)?this.texData.get(t).refCount:0}incRef(t){const e=this.texData.get(t);e.refCount++}decRef(t){if(this.texData.has(t)){const e=this.texData.get(t);e.refCount--}}move(t,e,s,i,o){if(nt().getBool("DEBUG")&&this.checkNumericalProblems(e),i==="complex64")throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(t,{shape:s,dtype:i,values:e,usage:ks.UPLOAD,refCount:o})}disposeIntermediateTensorInfo(t){this.disposeData(t.dataId)}readSync(t){const e=this.texData.get(t),{values:s,dtype:i,complexTensorInfos:o,slice:r,shape:a,isPacked:c}=e;if(r!=null){let h;c?h=new Ro(a,So):h=new $i(a,So);const f=this.runWebGLProgram(h,[{dataId:t,shape:a,dtype:i}],i),p=this.readSync(f.dataId);return this.disposeIntermediateTensorInfo(f),p}if(s!=null)return this.convertAndCacheOnCPU(t);if(i==="string")return s;const u=this.activeTimers!=null;let l;u&&(l=hs());let d;if(i==="complex64"){const h=this.readSync(o.real.dataId),f=this.readSync(o.imag.dataId);d=lo(h,f)}else d=this.getValuesFromTexture(t);return u&&(this.downloadWaitMs+=hs()-l),this.convertAndCacheOnCPU(t,d)}async read(t){if(this.pendingRead.has(t)){const p=this.pendingRead.get(t);return new Promise(x=>p.push(x))}const e=this.texData.get(t),{values:s,shape:i,slice:o,dtype:r,complexTensorInfos:a,isPacked:c}=e;if(o!=null){let p;c?p=new Ro(i,So):p=new $i(i,So);const x=this.runWebGLProgram(p,[{dataId:t,shape:i,dtype:r}],r),g=this.read(x.dataId);return this.disposeIntermediateTensorInfo(x),g}if(s!=null)return this.convertAndCacheOnCPU(t);if(nt().getBool("DEBUG")&&!nt().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&nt().getNumber("WEBGL_VERSION")===2)throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let u=null,l;if(r!=="complex64"&&nt().get("WEBGL_BUFFER_SUPPORTED")){l=this.decode(t);const p=this.texData.get(l.dataId);u=this.gpgpu.createBufferFromTexture(p.texture.texture,...bd(i))}this.pendingRead.set(t,[]),r!=="complex64"&&await this.gpgpu.createAndWaitForFence();let d;if(r==="complex64"){const p=await Promise.all([this.read(a.real.dataId),this.read(a.imag.dataId)]),x=p[0],g=p[1];d=lo(x,g)}else if(u==null)d=this.getValuesFromTexture(t);else{const p=ct(i);d=this.gpgpu.downloadFloat32MatrixFromBuffer(u,p)}if(l!=null&&this.disposeIntermediateTensorInfo(l),u!=null){const p=this.gpgpu.gl;At(p,()=>p.deleteBuffer(u))}const h=this.convertAndCacheOnCPU(t,d),f=this.pendingRead.get(t);return this.pendingRead.delete(t),f.forEach(p=>p(h)),this.pendingDisposal.has(t)&&(this.pendingDisposal.delete(t),this.disposeData(t)&&Ii().removeDataId(t,this),this.pendingDeletes--),h}readToGPU(t,e={}){const s=this.texData.get(t),{values:i,shape:o,slice:r,dtype:a,isPacked:c,texture:u}=s;if(a==="complex64")throw new Error("Does not support reading texture for complex64 dtype.");if(r!=null){let f;c?f=new Ro(o,So):f=new $i(o,So);const p=this.runWebGLProgram(f,[{dataId:t,shape:o,dtype:a}],a),x=this.readToGPU(p,e);return this.disposeIntermediateTensorInfo(p),x}if(u==null)throw i!=null?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");const l=this.decode(t,e.customTexShape),d=Ii().makeTensorFromTensorInfo(l),h=this.texData.get(l.dataId);return Object.assign({tensorRef:d},h.texture)}bufferSync(t){const e=this.readSync(t.dataId);if(t.dtype==="string")try{const s=e.map(i=>Lo(i));return we(t.shape,t.dtype,s)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return we(t.shape,t.dtype,e)}checkNumericalProblems(t){if(t!=null)for(let e=0;e<t.length;e++){const s=t[e];if(!EH(s))throw nt().getBool("WEBGL_RENDER_FLOAT32_CAPABLE")?Error(`The value ${s} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`):Error(`The value ${s} cannot be represented on this device.`)}}getValuesFromTexture(t){const{shape:e,dtype:s,isPacked:i}=this.texData.get(t),o=ct(e);if(nt().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const h=this.decode(t),f=this.texData.get(h.dataId),p=this.gpgpu.downloadMatrixFromPackedTexture(f.texture.texture,...bd(e)).subarray(0,o);return this.disposeIntermediateTensorInfo(h),p}const r=nt().getBool("WEBGL_PACK")&&i===!0,a=r?_d(e):e,c=r?new VX(a):new zX(a),u=this.runWebGLProgram(c,[{shape:a,dtype:s,dataId:t}],"float32"),l=this.texData.get(u.dataId),d=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(l.texture.texture,l.texShape[0],l.texShape[1]).subarray(0,o);return this.disposeIntermediateTensorInfo(u),d}timerAvailable(){return nt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(t){const e=this.activeTimers,s=[];let i=!1;this.programTimersStack==null?(this.programTimersStack=s,i=!0):this.activeTimers.push(s),this.activeTimers=s,t();const o=Mr(this.activeTimers.map(c=>c.query)).filter(c=>c!=null),r=Mr(this.activeTimers.map(c=>c.name)).filter(c=>c!=null);this.activeTimers=e,i&&(this.programTimersStack=null);const a={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if(nt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const c=await Promise.all(o);a.kernelMs=a9(c),a.getExtraProfileInfo=()=>c.map((u,l)=>({name:r[l],ms:u})).map(u=>`${u.name}: ${u.ms}`).join(", ")}else a.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,a})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return nt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:hs(),endMs:null}}endTimer(t){return nt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),t):(t.endMs=hs(),t)}async getQueryTime(t){if(nt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(t);const e=t;return e.endMs-e.startMs}disposeData(t,e=!1){if(this.pendingDisposal.has(t))return!1;if(!this.texData.has(t))return!0;if(e?this.texData.get(t).refCount=0:this.texData.get(t).refCount--,!e&&this.texData.get(t).refCount>0)return!1;if(this.pendingRead.has(t))return this.pendingDisposal.add(t),this.pendingDeletes++,!1;this.releaseGPUData(t);const{complexTensorInfos:s}=this.texData.get(t);return s!=null&&(this.disposeData(s.real.dataId,e),this.disposeData(s.imag.dataId,e)),this.texData.delete(t),!0}releaseGPUData(t){const{texture:e,dtype:s,texShape:i,usage:o,isPacked:r,slice:a}=this.texData.get(t),c=a&&a.origDataId||t,u=this.dataRefCount.get(c);u>1?this.dataRefCount.set(c,u-1):(this.dataRefCount.delete(c),e!=null&&(this.numBytesInGPU-=this.computeBytes(i,s),this.textureManager.releaseTexture(e,i,o,r)));const l=this.texData.get(t);l.texture=null,l.texShape=null,l.isPacked=!1,l.slice=null}getTexture(t){return this.uploadToGPU(t),this.texData.get(t).texture.texture}getDataInfo(t){return this.texData.get(t)}shouldExecuteOnCPU(t,e=vj){return nt().getBool("WEBGL_CPU_FORWARD")&&t.every(s=>this.texData.get(s.dataId).texture==null&&ct(s.shape)<e)}getGPGPUContext(){return this.gpgpu}where(t){Ns("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const e=t.dataSync();return xj(t.shape,e)}packedUnaryOp(t,e,s){const i=new Ro(t.shape,e),o=this.compileAndRun(i,[t],s);return Ii().makeTensorFromTensorInfo(o)}abs(t){if(this.shouldExecuteOnCPU([t])&&t.dtype!=="complex64"){const i=mI(this.texData.get(t.dataId).values);return this.makeOutput(t.shape,t.dtype,i)}if(nt().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,Gw,t.dtype);const e=new $i(t.shape,Gw),s=this.compileAndRun(e,[t]);return Ii().makeTensorFromTensorInfo(s)}makeTensorInfo(t,e,s){let i;if(e==="string"&&s!=null&&s.length>0&&_u(s[0])){const o=s.map(r=>ko(r));i=this.write(o,t,e)}else i=this.write(s,t,e);return this.texData.get(i).usage=null,{dataId:i,shape:t,dtype:e}}makeOutput(t,e,s){return Ii().makeTensorFromTensorInfo(this.makeTensorInfo(t,e,s),this)}unpackTensor(t){const e=new gj(t.shape);return this.runWebGLProgram(e,[t],t.dtype)}packTensor(t){const e=new tj(t.shape);return this.runWebGLProgram(e,[t],t.dtype,null,!0)}packedReshape(t,e){const s=[ec(t.shape),...nc(t.shape)],i={dtype:t.dtype,shape:s,dataId:t.dataId},o=[ec(e),...nc(e)],r=new yI(o,s),a=!0,c=[s],u=this.runWebGLProgram(r,[i],t.dtype,c,a);return{dataId:u.dataId,shape:e,dtype:u.dtype}}decode(t,e){const s=this.texData.get(t),{isPacked:i,shape:o,dtype:r}=s;if(e!=null){const h=ct(o),f=e[0]*e[1]*4;k(h<=f,()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data.")}const a=_d(o);let c;i?c=new BX(a):c=new UX(a);const u=!0,l=[e??bd(a)],d=this.runWebGLProgram(c,[{shape:a,dtype:r,dataId:t}],r,l,u,e);return{dtype:r,shape:o,dataId:d.dataId}}runWebGLProgram(t,e,s,i,o=!1,r){const a=this.makeTensorInfo(t.outputShape,s),c=this.texData.get(a.dataId);if(t.packedOutput&&(c.isPacked=!0),t.outPackingScheme===hu.DENSE){const m=r??bd(t.outputShape);c.texShape=m.map(y=>y*2)}if(t.outTexUsage!=null&&(c.usage=t.outTexUsage),ct(a.shape)===0)return c.values=qn(a.dtype,0),a;const u=[],l=e.map(m=>{if(m.dtype==="complex64")throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let y=this.texData.get(m.dataId);if(y.texture==null){if(!t.packedInputs&&ct(m.shape)<=nt().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:m.shape,texData:null,isUniform:!0,uniformValues:y.values};t.packedInputs&&(y.isPacked=!0,y.shape=m.shape)}if(this.uploadToGPU(m.dataId),!!y.isPacked!=!!t.packedInputs)m=y.isPacked?this.unpackTensor(m):this.packTensor(m),u.push(m),y=this.texData.get(m.dataId);else if(y.isPacked&&!vh(y.shape,m.shape)){const w=m,b=m.shape;m.shape=y.shape,m=this.packedReshape(m,b),u.push(m),y=this.texData.get(m.dataId),w.shape=b}return{shape:m.shape,texData:y,isUniform:!1}});this.uploadToGPU(a.dataId);const d={shape:a.shape,texData:c,isUniform:!1},h=OX(t,l,d),f=this.getAndSaveBinary(h,()=>PX(this.gpgpu,t,l,d)),p=this.activeTimers!=null;let x;p&&(x=this.startTimer()),nt().get("ENGINE_COMPILE_ONLY")||LX(this.gpgpu,f,l,d,i),u.forEach(m=>this.disposeIntermediateTensorInfo(m)),p&&(x=this.endTimer(x),this.activeTimers.push({name:t.constructor.name,query:this.getQueryTime(x)}));const g=nt().getNumber("WEBGL_FLUSH_THRESHOLD");if(g>0){const m=hs();m-this.lastGlFlushTime>g&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=m)}if(!nt().getBool("WEBGL_LAZILY_UNPACK")&&c.isPacked&&o===!1){const m=this.unpackTensor(a);return this.disposeIntermediateTensorInfo(a),m}return a}compileAndRun(t,e,s,i,o=!1){return s=s||e[0].dtype,this.runWebGLProgram(t,e,s,i,o)}getAndSaveBinary(t,e){return t in this.binaryCache||(this.binaryCache[t]=e()),this.binaryCache[t]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(nt().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach(e=>{this.gpgpu.deleteProgram(this.binaryCache[e].webGLProgram),delete this.binaryCache[e]}),this.textureManager.dispose(),this.canvas!=null&&typeof HTMLCanvasElement<"u"&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return this.floatPrecisionValue==null&&(this.floatPrecisionValue=tt(()=>{if(!nt().get("WEBGL_RENDER_FLOAT32_ENABLED")){const t=nt().getBool("DEBUG");nt().set("DEBUG",!1);const e=this.abs(Ee(1e-8)).dataSync()[0];if(nt().set("DEBUG",t),e>0)return 32}return 16})),this.floatPrecisionValue}epsilon(){return this.floatPrecision()===32?yj:bj}uploadToGPU(t){const e=this.texData.get(t),{shape:s,dtype:i,values:o,texture:r,usage:a,isPacked:c}=e;if(r!=null)return;const u=this.activeTimers!=null;let l;u&&(l=hs());let d=e.texShape;if(d==null&&(d=GH(s,c),e.texShape=d),o!=null){const h=_d(s);let f,p=d[1],x=d[0];const g=o instanceof Uint8Array||o instanceof Uint8ClampedArray;(c||!g)&&([p,x]=gc(d[0],d[1])),c?f=new GX(h,g):f=new Bw(h,g);const m=g?[x,p]:d,y=this.makeTensorInfo(m,i),w=this.texData.get(y.dataId);g?w.usage=ks.PIXELS:w.usage=ks.UPLOAD,w.texShape=m,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(y.dataId),p,x,o);const b=[[x,p]],T=this.runWebGLProgram(f,[y],i,b,!0),E=this.texData.get(T.dataId);e.texShape=E.texShape,e.isPacked=E.isPacked,e.usage=E.usage,nt().get("ENGINE_COMPILE_ONLY")?this.disposeData(T.dataId):(e.texture=E.texture,e.values=null,this.texData.delete(T.dataId)),this.disposeIntermediateTensorInfo(y),u&&(this.uploadWaitMs+=hs()-l)}else{const h=this.acquireTexture(d,a,i,c);e.texture=h}}convertAndCacheOnCPU(t,e){const s=this.texData.get(t),{dtype:i}=s;return e!=null&&(s.values=Sj(e,i)),s.values}acquireTexture(t,e,s,i){if(this.numBytesInGPU+=this.computeBytes(t,s),!this.warnedAboutMemory&&this.numBytesInGPU>this.numMBBeforeWarning*1024*1024){const o=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${o} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(t,e,i)}computeBytes(t,e){return t[0]*t[1]*Jd(e)}checkCompileCompletion(){for(const[,t]of Object.entries(this.binaryCache))this.checkCompletion_(t)}async checkCompileCompletionAsync(){const t=[];if(this.gpgpu.parallelCompilationExtension){for(const[,e]of Object.entries(this.binaryCache))t.push(this.checkCompletionAsync_(e));return Promise.all(t)}else{for(const[,e]of Object.entries(this.binaryCache)){const s=new Promise(i=>{try{this.checkCompletion_(e),i(!0)}catch(o){throw o}});t.push(s)}return Promise.all(t)}}async checkCompletionAsync_(t){return this.gpgpu.gl.getProgramParameter(t.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(t):(await oC(),this.checkCompletionAsync_(t))}checkCompletion_(t){if(this.gpgpu.gl.getProgramParameter(t.webGLProgram,this.gpgpu.gl.LINK_STATUS)===!1)throw console.log(this.gpgpu.gl.getProgramInfoLog(t.webGLProgram)),this.gpgpu.gl.getShaderParameter(t.fragmentShader,this.gpgpu.gl.COMPILE_STATUS)===!1?(sI(t.source,this.gpgpu.gl.getShaderInfoLog(t.fragmentShader)),new Error("Failed to compile fragment shader.")):new Error("Failed to link vertex and fragment shaders.");return!0}getUniformLocations(){for(const t of Object.values(this.binaryCache)){this.gpgpu.buildVao(t.webGLProgram);const{variablesLocations:e,customUniformLocations:s,infLoc:i,nanLoc:o,outShapeLocation:r,outShapeStridesLocation:a,outTexShapeLocation:c}=cI(this.gpgpu,t.program,t.webGLProgram);t.variablesLocations=e,t.customUniformLocations=s,t.infLoc=i,t.nanLoc=o,t.outShapeLocation=r,t.outShapeStridesLocation=a,t.outTexShapeLocation=c}}createTensorFromGPUData(t,e,s){t.channels=t.channels||"RGBA";const{texture:i,height:o,width:r,channels:a}=t,c=Ii().backend;if(!c.gpgpu.gl.isTexture(i))throw new Error("The texture is invalid. Also, please make sure the texture and the TFJS WebGL backend are using the same canvas. If you want to use your own custom canvas, you have to create and use the custom TFJS WebGL backend created from the canvas through 'new tf.MathBackendWebGL(customCanvas)'.");const u=c.writeTexture(i,e,s,o,r,a);return Ii().makeTensorFromDataId(u,e,s,c)}}fp.nextDataId=0;function Sj(n,t){if(t==="float32"||t==="complex64")return n;if(t==="int32"||t==="bool"){const e=t==="int32"?new Int32Array(n.length):new Uint8Array(n.length);for(let s=0;s<e.length;++s)e[s]=Math.round(n[s]);return e}else throw new Error(`Unknown dtype ${t}`)}/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */n_()&&o_("webgl",()=>new fp,2);/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oy=`
  if (isnan(a)) return a;
  if (isnan(b)) return b;
`;class zr{constructor(t,e,s){this.variableNames=["A","B"],this.outputShape=de(e,s),this.enableShapeUniforms=Jn(this.outputShape.length),this.userCode=`
      float binaryOperation(float a, float b) {
        ${t}
      }

      void main() {
        float a = getAAtOutCoords();
        float b = getBAtOutCoords();
        setOutput(binaryOperation(a, b));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Jr=`
  result.r = isNaN.r ? NAN : result.r;
  result.g = isNaN.g ? NAN : result.g;
  result.b = isNaN.b ? NAN : result.b;
  result.a = isNaN.a ? NAN : result.a;
`;class vc{constructor(t,e,s,i=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=de(e,s);const o=this.outputShape.length;this.enableShapeUniforms=Jn(o);let r="";if(i)if(o===0||ct(this.outputShape)===1)r=`
          result.y = 0.;
          result.z = 0.;
          result.w = 0.;
        `;else if(r=`
          ${Ve(o)} coords = getOutputCoords();
        `,o===1)this.enableShapeUniforms?r+=`
            result.y = (coords + 1) >= outShape ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `:r+=`
            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `;else{const c=os("coords",o);this.enableShapeUniforms?r+=`
            bool nextRowOutOfBounds =
              (${c[o-2]} + 1) >= outShape[${o} - 2];
            bool nextColOutOfBounds =
              (${c[o-1]} + 1) >= outShape[${o} - 1];
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `:r+=`
            bool nextRowOutOfBounds =
              (${c[o-2]} + 1) >= ${this.outputShape[o-2]};
            bool nextColOutOfBounds =
              (${c[o-1]} + 1) >= ${this.outputShape[o-1]};
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `}this.userCode=`
      vec4 binaryOperation(vec4 a, vec4 b) {
        ${t}
      }

      void main() {
        vec4 a = getAAtOutCoords();
        vec4 b = getBAtOutCoords();

        vec4 result = binaryOperation(a, b);
        ${r}

        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Is(n){const{inputs:t,backend:e}=n,{x:s}=t;return e.incRef(s.dataId),{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}const Tj={kernelName:Wu,backendName:"webgl",kernelFunc:Is};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Jo(n){const{inputs:t,backend:e}=n,{real:s,imag:i}=t,o=e.makeTensorInfo(s.shape,"complex64"),r=e.texData.get(o.dataId),a=Is({inputs:{x:s},backend:e}),c=Is({inputs:{x:i},backend:e});return r.complexTensorInfos={real:a,imag:c},o}const Ej={kernelName:B1,backendName:"webgl",kernelFunc:Jo};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bI="return (a < 0.) ? b * a : a;",wI=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function Ij(n){const{inputs:t,backend:e,attrs:s}=n,{x:i}=t,{alpha:o}=s,r=e.makeTensorInfo([],"float32",Ho(o,"float32")),a=nt().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new vc(wI,i.shape,r.shape):new zr(bI,i.shape,r.shape),c=e.runWebGLProgram(a,[i,r],"float32");return e.disposeIntermediateTensorInfo(r),c}const Rj={kernelName:af,backendName:"webgl",kernelFunc:Ij};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vI="return (a < 0.) ? b * a : a;",_I=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function Mj(n){const{inputs:t,backend:e}=n,{x:s,alpha:i}=t,o=nt().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new vc(_I,s.shape,i.shape):new zr(vI,s.shape,i.shape);return e.runWebGLProgram(o,[s,i],"float32")}const Aj={kernelName:Ef,backendName:"webgl",kernelFunc:Mj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _c="if (isnan(x)) return x;";function Ae({opSnippet:n,packedOpSnippet:t,cpuKernelImpl:e,dtype:s}){return({inputs:i,backend:o})=>{const{x:r}=i,a=o,c=s||r.dtype;if(a.shouldExecuteOnCPU([r])&&e!=null){const d=a.texData.get(r.dataId),h=e(d.values,c);return a.makeTensorInfo(r.shape,c,h)}const u=nt().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&t!=null;let l;return u?l=new Ro(r.shape,t):l=new $i(r.shape,n),a.runWebGLProgram(l,[r],c)}}function zn({opSnippet:n,packedOpSnippet:t,checkOutOfBounds:e=!1,supportsComplex:s=!1,cpuKernelImpl:i,dtype:o}){return({inputs:r,backend:a})=>{const{a:c,b:u}=r,l=a;if(s&&c.dtype==="complex64"){const p=l.texData.get(c.dataId),x=l.texData.get(u.dataId),[g,m]=[[p.complexTensorInfos.real,x.complexTensorInfos.real],[p.complexTensorInfos.imag,x.complexTensorInfos.imag]].map(w=>{const[b,_]=w,T={dataId:b.dataId,dtype:b.dtype,shape:c.shape},E={dataId:_.dataId,dtype:_.dtype,shape:u.shape},I=new zr(n,c.shape,u.shape);return l.runWebGLProgram(I,[T,E],Ts(b.dtype,_.dtype))}),y=Jo({inputs:{real:g,imag:m},backend:l});return l.disposeIntermediateTensorInfo(g),l.disposeIntermediateTensorInfo(m),y}const d=o||Ts(c.dtype,u.dtype);if((c.dtype==="string"||u.dtype==="string"||l.shouldExecuteOnCPU([c,u]))&&i!=null){const p=l.texData.get(c.dataId).values,x=l.texData.get(u.dataId).values,g=c.dtype==="string"?ho(p):p,m=c.dtype==="string"?ho(x):x,[y,w]=i(c.shape,u.shape,g,m,d),b=l.makeTensorInfo(w,d),_=l.texData.get(b.dataId);return _.values=y,b}const h=nt().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&t!=null;let f;return h?f=new vc(t,c.shape,u.shape,e):f=new zr(n,c.shape,u.shape),l.runWebGLProgram(f,[c,u],d)}}function fu(n,t=!1){if(n==="linear")return t?dj:rj;if(n==="relu")return t?fj:cj;if(n==="elu")return t?hj:aj;if(n==="relu6")return t?pj:uj;if(n==="prelu")return t?_I:vI;if(n==="leakyrelu")return t?wI:bI;if(n==="sigmoid")return t?mj:lj;throw new Error(`Activation ${n} has not been implemented for the WebGL backend.`)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class CI{constructor(t,e,s,i=!1,o=!1,r=!1,a=null,c=!1,u=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=s,this.enableShapeUniforms=Jn(this.outputShape.length);const l=i?t[1]:t[2],d=Math.ceil(l/2),h=i?"i * 2, rc.y":"rc.y, i * 2",f=o?"rc.z, i * 2":"i * 2, rc.z",p=i?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],x=o?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let g="",m="";a&&(c?g=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${a}
        }`:u?g=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${a}
        }`:g=`vec4 activation(vec4 x) {
          ${a}
        }`,m="result = activation(result);");const y=r?"result += getBiasAtOutCoords();":"";r&&this.variableNames.push("bias"),c&&this.variableNames.push("preluActivationWeights"),u&&this.variableNames.push("leakyreluAlpha");let w="rc.x",b="rc.x";t[0]<e[0]?w=`imod(rc.x, ${t[0]})`:e[0]<t[0]&&(b=`imod(rc.x, ${e[0]})`),this.userCode=`
      ${g}
      // Don't use uniform for sharedDimensionPacked for performance.
      const float sharedDimension = ${d}.0;

      vec4 dot2x2ARowBCol(ivec3 rc) {
        vec4 result = vec4(0);
        int batchA = ${w};
        int batchB = ${b};
        for (int i = 0; i < ${d}; i++) {
          vec4 a = getMatrixA(batchA, ${h});
          vec4 b = getMatrixB(batchB, ${f});

          // These swizzled products need to be separately added.
          // See: https://github.com/tensorflow/tfjs/issues/1735
          result += (${p[0]} * ${x[0]});
          result += (${p[1]} * ${x[1]});
        }
        return result;
      }

      void main() {
        ivec3 rc = getOutputCoords();
        vec4 result = dot2x2ARowBCol(rc);

        ${y}

        ${m}

        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Hw={REAL:"return areal * breal - aimag * bimag;",IMAG:"return areal * bimag + aimag * breal;"};class Xw{constructor(t,e,s){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=de(e,s),this.userCode=`
      float binaryOpComplex(
          float areal, float aimag, float breal, float bimag) {
        ${t}
      }

      void main() {
        float areal = getARealAtOutCoords();
        float aimag = getAImagAtOutCoords();
        float breal = getBRealAtOutCoords();
        float bimag = getBImagAtOutCoords();
        setOutput(binaryOpComplex(areal, aimag, breal, bimag));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qw="return a * b;";function ry(n){const{inputs:t,backend:e}=n,{a:s,b:i}=t,o=Ts(s.dtype,i.dtype);if(s.dtype==="complex64"){const a=e.texData.get(s.dataId),c=e.texData.get(i.dataId),u=new Xw(Hw.REAL,s.shape,i.shape),l=new Xw(Hw.IMAG,s.shape,i.shape),d=[{dataId:a.complexTensorInfos.real.dataId,dtype:a.complexTensorInfos.real.dtype,shape:s.shape},{dataId:a.complexTensorInfos.imag.dataId,dtype:a.complexTensorInfos.imag.dtype,shape:s.shape},{dataId:c.complexTensorInfos.real.dataId,dtype:c.complexTensorInfos.real.dtype,shape:i.shape},{dataId:c.complexTensorInfos.imag.dataId,dtype:c.complexTensorInfos.imag.dtype,shape:i.shape}],h=e.runWebGLProgram(u,d,"float32"),f=e.runWebGLProgram(l,d,"float32"),p=Jo({inputs:{real:h,imag:f},backend:e});return e.disposeIntermediateTensorInfo(h),e.disposeIntermediateTensorInfo(f),p}if(e.shouldExecuteOnCPU([s,i])){const a=e.texData.get(s.dataId),c=e.texData.get(i.dataId),[u,l]=Mq(s.shape,i.shape,a.values,c.values,o),d=e.makeTensorInfo(l,o),h=e.texData.get(d.dataId);return h.values=u,d}let r;return nt().getBool("WEBGL_PACK_BINARY_OPERATIONS")?r=new vc(qw,s.shape,i.shape):r=new zr(qw,s.shape,i.shape),e.runWebGLProgram(r,[s,i],o)}const Nj={kernelName:Ju,backendName:"webgl",kernelFunc:ry};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kj(n,t,e){const s=[ec(n.shape),...nc(n.shape)],i={dtype:n.dtype,shape:s,dataId:n.dataId},o=[ec(t),...nc(t)],r=new yI(o,s),a=!0,c=[s],u=e.runWebGLProgram(r,[i],n.dtype,c,a);return{dataId:u.dataId,shape:t,dtype:u.dtype}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Et(n){const{inputs:t,backend:e,attrs:s}=n,{x:i}=t,{shape:o}=s,r=e,a=ct(i.shape),c=m2(o,a),u=ct(c);k(a===u,()=>`The new shape (${c}) has ${u} elements and the old shape (${i.shape}) has ${a} elements. The new shape and old shape must have the same number of elements.`);const l=r.texData.get(i.dataId);return l.isPacked&&!vh(i.shape,c)&&!(l.texture!==null&&vh(l.shape,c))?kj(i,c,r):(r.incRef(i.dataId),{dataId:i.dataId,shape:c,dtype:i.dtype})}const Dj={kernelName:Rf,backendName:"webgl",kernelFunc:Et};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class jw{constructor(t,e){this.variableNames=["x"];const{windowSize:s,batchSize:i,inSize:o,outSize:r}=t;this.outputShape=[i,r];const a=Math.floor(s/4)*4,c=s%4;let u="sumValue += dot(values, ones);";if(e!=null){const d=1/e;u=`sumValue += dot(values * ${Ha(d)?d.toPrecision(2):d}, ones);`}let l="";o%s>0&&(l=`
        if (inIdx < 0 || inIdx >= ${o}) {
          return 0.0;
        }
      `),this.userCode=`
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${l}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${s};

        float sumValue = 0.0;

        for (int i = 0; i < ${a}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${u}
        }

        int inIdx = inOffset + ${a};
        if (${c===1}) {
          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);

          ${u}
        } else if (${c===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1), 0.0, 0.0);

          ${u}
        } else if (${c===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2), 0.0);

          ${u}
        }
        setOutput(sumValue);
      }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class $j{constructor(t,e){this.variableNames=["x"];const{windowSize:s,batchSize:i,inSize:o,outSize:r}=t;this.outputShape=[i,r];let a="0.0",c="";e==="prod"?a="1.0":e==="min"?(a="1.0 / 1e-20",c="min"):e==="max"&&(a="-1.0 / 1e-20",c="max");let u=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;e==="sum"?u="sumValue":e==="prod"?u="prodValue":e==="all"?u="allValue":e==="any"&&(u="anyValue");const l=Math.floor(s/4)*4,d=s%4;let h=`
      if (${e==="sum"}) {
        sumValue += dot(values, ones);
      } else if (${e==="prod"}) {
        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);
        prodValue *= tmp[0] * tmp[1];
      } else {
        minMaxValue = ${c}(values, minMaxValue);
        if (${e==="min"} || ${e==="max"}) {
          minMaxValue = ${c}(values, minMaxValue);
          bvec4 isNaN = isnan(values);
          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {
            minMaxValue = vec4(NAN);
          }
        }
      }
    `,f="vec4";e==="all"?(a="1.0",h=`
        bool reducedAllValue = all(values);
        float floatedReducedAllValue = float(reducedAllValue);
        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);
      `,f="bvec4"):e==="any"&&(a="0.0",h=`
        bool reducedAnyValue = any(values);
        float floatedReducedAnyValue = float(reducedAnyValue);
        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);
      `,f="bvec4");let p="";o%s>0&&(p=`
        if (inIdx < 0 || inIdx >= ${o}) {
          return initializationValue;
        }
      `),this.userCode=`
      const float initializationValue = ${a};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${p}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${s};

        vec4 minMaxValue = vec4(${a});
        float prodValue = 1.0;
        float sumValue = 0.0;
        float allValue = 1.0;
        float anyValue = 0.0;

        for (int i = 0; i < ${l}; i += 4) {
          int inIdx = inOffset + i;
          ${f} values = ${f}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${h}
        }

        int inIdx = inOffset + ${l};
        if (${d===1}) {
          ${f} values = ${f}(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          ${h}
        } else if (${d===2}) {
          ${f} values = ${f}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          ${h}
        } else if (${d===3}) {
          ${f} values = ${f}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          ${h}
        }
        setOutput(${u});
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fj(n){const t=[];for(;t.length===0||t[t.length-1].outSize!==1;){const e=t.length?t[t.length-1].outSize:n[1],s=Zf(e);t.push({inSize:e,windowSize:s,outSize:Math.ceil(e/s)})}return t}function Qr(n,t,e,s){const i=Fj(n.shape);let o=n;for(let r=0;r<i.length;r++){const{inSize:a,windowSize:c,outSize:u}=i[r];let l,d;e==="mean"?l=r===0?new jw({windowSize:c,inSize:a,batchSize:n.shape[0],outSize:u},a):new jw({windowSize:c,inSize:a,batchSize:n.shape[0],outSize:u}):l=new $j({windowSize:c,inSize:a,batchSize:n.shape[0],outSize:u},e),d=o,o=s.runWebGLProgram(l,[o],t),d.dataId!==n.dataId&&s.disposeIntermediateTensorInfo(d)}return o}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Pj{constructor(t,e){this.variableNames=["A"];const s=new Array(t.length);for(let r=0;r<s.length;r++)s[r]=t[e[r]];this.outputShape=s,this.rank=s.length;const i=Ve(this.rank),o=Lj(e);this.userCode=`
    void main() {
      ${i} resRC = getOutputCoords();
      setOutput(getA(${o}));
    }
    `}}function Lj(n){const t=n.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);const e=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],s=new Array(t);for(let i=0;i<n.length;i++)s[n[i]]=e[i];return s.join()}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Oj{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const s=new Array(t.length);for(let l=0;l<s.length;l++)s[l]=t[e[l]];if(this.outputShape=s,this.rank=s.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const i=Ve(this.rank),o=xI("rc",this.rank),r=new Array(this.rank);for(let l=0;l<e.length;l++)r[e[l]]=o[l];const a=`vec2(${r.slice(-2).join()})`,c=`++${o[this.rank-1]} < ${s[this.rank-1]}`,u=`getChannel(getA(${r.join()}), ${a})`;this.userCode=`
    void main() {
      ${i} rc = getOutputCoords();
      vec4 result = vec4(0.);
      result[0] = ${u};
      if(${c}) {
        result[1] = ${u};
      }
      --${o[this.rank-1]};
      if(++${o[this.rank-2]} < ${s[this.rank-2]}) {
        result[2] = ${u};
        if(${c}) {
          result[3] = ${u};
        }
      }
      setOutput(result);
    }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pp(n,t,e){const s=nt().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Oj(n.shape,t):new Pj(n.shape,t);return e.runWebGLProgram(s,[n],n.dtype)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Uj(n,t,e,s){const i=t,o=n.shape.length,r=ve(i,n.shape);let a=r;const c=un(a,o),u=c!=null;let l=n;u&&(l=pp(n,c,s),a=mn(a.length,o)),Bn("sum",a,o);const[d,h]=$n(l.shape,a);let f=d;e&&(f=wn(d,r));const p=ct(h),g=ct(n.shape)/p,m=Et({inputs:{x:l},attrs:{shape:[g,p]},backend:s}),y=wg(n.dtype),w=Qr(m,y,"sum",s),b=Et({inputs:{x:w},attrs:{shape:f},backend:s});return s.disposeIntermediateTensorInfo(m),s.disposeIntermediateTensorInfo(w),u&&s.disposeIntermediateTensorInfo(l),b}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mp(n){const{inputs:t,backend:e,attrs:s}=n,{x:i}=t,{axis:o,keepDims:r}=s;return Uj(i,o,r,e)}const Bj={kernelName:$f,backendName:"webgl",kernelFunc:mp};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cs(n){const{inputs:t,backend:e,attrs:s}=n,{x:i}=t,{perm:o}=s,r=e,a=i.shape.length,c=new Array(a);for(let l=0;l<c.length;l++)c[l]=i.shape[o[l]];let u;if(r.shouldExecuteOnCPU([i])){const d=r.texData.get(i.dataId).values,h=iy(d,i.shape,i.dtype,o,c);u=r.makeTensorInfo(c,i.dtype);const f=r.texData.get(u.dataId);f.values=h}else u=pp(i,o,r);return u}const zj={kernelName:$a,backendName:"webgl",kernelFunc:cs};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SI=1e3;function _h({a:n,b:t,transposeA:e,transposeB:s,backend:i,bias:o=null,preluActivationWeights:r=null,leakyreluAlpha:a=0,activation:c=null}){const u=n.shape.length,l=t.shape.length,d=e?n.shape[u-2]:n.shape[u-1],h=s?t.shape[l-1]:t.shape[l-2],f=e?n.shape[u-1]:n.shape[u-2],p=s?t.shape[l-2]:t.shape[l-1],x=n.shape.slice(0,-2),g=t.shape.slice(0,-2),m=ct(x),y=ct(g),b=de(n.shape.slice(0,-2),t.shape.slice(0,-2)).concat([f,p]);k(d===h,()=>`Error in matMul: inner shapes (${d}) and (${h}) of Tensors with shapes ${n.shape} and ${t.shape} and transposeA=${e} and transposeB=${s} must match.`);const _=e?[m,d,f]:[m,f,d],T=s?[y,p,h]:[y,h,p],E=Et({inputs:{x:n},backend:i,attrs:{shape:_}}),I=Et({inputs:{x:t},backend:i,attrs:{shape:T}}),S=[E,I],v=Math.max(m,y),C=e?E.shape[1]:E.shape[2],M=o!=null,N=r!=null,D=c==="leakyrelu",$=c!=null?fu(c,!0):null,F=M||N||D||$!=null;let B;if((f===1||p===1)&&C>SI&&F===!1){let V=E,q=I;e&&(V=cs({inputs:{x:E},backend:i,attrs:{perm:[0,2,1]}}),S.push(V)),s&&(q=cs({inputs:{x:I},backend:i,attrs:{perm:[0,2,1]}}),S.push(q));const J=p!==1,it=p===1;let ut=V;J&&(ut=Et({inputs:{x:V},backend:i,attrs:{shape:[v,C,1]}}),S.push(ut));const G=p===1?2:1;let Q=q;it&&(Q=Et({inputs:{x:q},backend:i,attrs:{shape:[v,1,C]}}),S.push(Q));const ht=ry({inputs:{a:ut,b:Q},backend:i});B=mp({inputs:{x:ht},backend:i,attrs:{axis:G,keepDims:!0}}),S.push(ht)}else{const V=Ts(n.dtype,t.dtype),q=new CI(_,T,[v,f,p],e,s,M,$,N,D),J=[E,I];if(o!=null&&J.push(o),N&&J.push(r),D){const it=i.makeTensorInfo([],"float32",Ho(a,"float32"));J.push(it),S.push(it)}B=i.runWebGLProgram(q,J,V)}const P=Et({inputs:{x:B},backend:i,attrs:{shape:b}});S.push(B);for(const V of S)i.disposeIntermediateTensorInfo(V);return P}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vj(n){const{inputs:t,backend:e,attrs:s}=n,{a:i,b:o,bias:r,preluActivationWeights:a}=t,{transposeA:c,transposeB:u,activation:l,leakyreluAlpha:d}=s;return _h({a:i,b:o,transposeA:c,transposeB:u,backend:e,bias:r,preluActivationWeights:a,leakyreluAlpha:d,activation:l})}const Wj={kernelName:Qd,backendName:"webgl",kernelFunc:Vj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Kw="return abs(x);";function Gj(n){const{inputs:t,backend:e}=n,{x:s}=t;if(e.shouldExecuteOnCPU([s])&&s.dtype!=="complex64"){const o=e.texData.get(s.dataId),r=mI(o.values);return e.makeTensorInfo(s.shape,s.dtype,r)}let i;return nt().getBool("WEBGL_PACK_UNARY_OPERATIONS")?i=new Ro(s.shape,Kw):i=new $i(s.shape,Kw),e.runWebGLProgram(i,[s],s.dtype)}const Hj={kernelName:Bh,backendName:"webgl",kernelFunc:Gj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Xj=ii+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return acos(x);
`,qj=Ae({opSnippet:Xj}),jj={kernelName:Cu,backendName:"webgl",kernelFunc:qj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Kj=ii+`
  if (x < 1.0) return NAN;
return log(x + sqrt(x * x - 1.0));`,Yj=Ae({opSnippet:Kj}),Zj={kernelName:Su,backendName:"webgl",kernelFunc:Yj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Yw="return a + b;",Jj=zn({opSnippet:Yw,packedOpSnippet:Yw,supportsComplex:!0,cpuKernelImpl:cq}),Qj={kernelName:uc,backendName:"webgl",kernelFunc:Jj};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class tK{constructor(t,e){this.outputShape=[],this.outputShape=t,this.variableNames=e.map((o,r)=>`T${r}`);const s=[];this.variableNames.forEach(o=>{s.push(`float v${o} = get${o}AtOutCoords();`)});const i=this.variableNames.map(o=>`v${o}`).join(" + ");this.userCode=`
      void main() {
        ${s.join(`
        `)}

        float result = ${i};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class eK{constructor(t,e){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.variableNames=e.map((o,r)=>`T${r}`);const s=[];this.variableNames.forEach(o=>{s.push(`vec4 v${o} = get${o}AtOutCoords();`)});const i=this.variableNames.map(o=>`v${o}`).join(" + ");this.userCode=`
      void main() {
        ${s.join(`
        `)}

        vec4 result = ${i};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xd(n){const{inputs:t,backend:e}=n,s=t;if(s.length===1)return Is({inputs:{x:s[0]},backend:e});if(s.length>nt().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const c=Math.floor(s.length/2),u=Xd({inputs:s.slice(0,c),backend:e}),l=Xd({inputs:s.slice(c),backend:e});return Xd({inputs:[u,l],backend:e})}const i=s.map(c=>c.dtype).reduce((c,u)=>Ts(c,u)),o=s.map(c=>c.shape),a=nt().getBool("WEBGL_PACK")?new eK(s[0].shape,o):new tK(s[0].shape,o);return e.runWebGLProgram(a,s,i)}const nK={kernelName:D1,backendName:"webgl",kernelFunc:Xd};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sK(n){const{inputs:t,backend:e,attrs:s}=n,{x:i}=t,{axis:o,keepDims:r}=s,a=i.shape.length,c=ve(o,i.shape);let u=c;const l=un(u,a);let d=i;l!=null&&(d=cs({inputs:{x:i},backend:e,attrs:{perm:l}}),u=mn(u.length,a)),Bn("all",u,a);const[h,f]=$n(d.shape,u),p=ct(f),x=Et({inputs:{x:d},backend:e,attrs:{shape:[-1,p]}}),g=Qr(x,x.dtype,"all",e);let m;if(r){const y=wn(h,c);m=Et({inputs:{x:g},backend:e,attrs:{shape:y}})}else m=Et({inputs:{x:g},backend:e,attrs:{shape:h}});return e.disposeIntermediateTensorInfo(x),e.disposeIntermediateTensorInfo(g),l!=null&&e.disposeIntermediateTensorInfo(d),m}const iK={kernelName:$1,backendName:"webgl",kernelFunc:sK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oK(n){const{inputs:t,backend:e,attrs:s}=n,{x:i}=t,{axis:o,keepDims:r}=s,a=i.shape.length,c=ve(o,i.shape);let u=c;const l=un(u,a);let d=i;l!=null&&(d=cs({inputs:{x:i},backend:e,attrs:{perm:l}}),u=mn(u.length,a)),Bn("any",u,a);const[h,f]=$n(d.shape,u),p=ct(f),x=Et({inputs:{x:d},backend:e,attrs:{shape:[-1,p]}}),g=Qr(x,x.dtype,"any",e);let m;if(r){const y=wn(h,c);m=Et({inputs:{x:g},backend:e,attrs:{shape:y}})}else m=Et({inputs:{x:g},backend:e,attrs:{shape:h}});return e.disposeIntermediateTensorInfo(x),e.disposeIntermediateTensorInfo(g),l!=null&&e.disposeIntermediateTensorInfo(d),m}const rK={kernelName:F1,backendName:"webgl",kernelFunc:oK};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class aK{constructor(t,e,s){this.variableNames=["A"];const{windowSize:i,batchSize:o,outSize:r}=t;s||this.variableNames.push("bestIndicesA"),this.outputShape=[o,r];const a=e==="max"?">":"<",c=s?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${i};

        int bestIndex = inOffset;
        float bestValue = getA(batch, bestIndex);

        for (int i = 0; i < ${i}; i++) {
          int inIdx = ${c};
          float candidate = getA(batch, inIdx);
          if (candidate ${a} bestValue) {
            bestValue = candidate;
            bestIndex = inIdx;
          }
        }
        setOutput(float(bestIndex));
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class cK{constructor(t,e,s,i){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,k(t.length>2,()=>`Packed arg${s.charAt(0).toUpperCase()+s.slice(1)} supports only inputs with rank above 2.`);const o=t[t.length-1],r=Math.ceil(o/e);this.outputShape=t.slice(0,-1),r>1&&this.outputShape.push(r),i||this.variableNames.push("bestIndicesA");const a=this.outputShape,c=a.length,u=Ve(c),l=os("coords",c);let d,h;if(r===1){h=c+1;const I=Ve(h);d=`
        ${I} sourceLocR = ${I}(${l.join()}, 0);
        ++${l[c-1]};
        ${I} sourceLocG = ${I}(${l.join()}, 0);
        ++${l[c-2]};
        ${I} sourceLocA = ${I}(${l.join()}, 0);
        --${l[c-1]};
        ${I} sourceLocB = ${I}(${l.join()}, 0);
        --${l[c-2]};`}else h=c,d=`
        ${u} sourceLocR = coords;
        ++${l[c-1]};
        ${u} sourceLocG = coords;
        ++${l[c-2]};
        ${u} sourceLocA = coords;
        --${l[c-1]};
        ${u} sourceLocB = coords;
        --${l[c-2]};`;const f=["x","y","z","w","u","v"].slice(0,h),p="."+f[h-1],x=f.map(I=>"int "+I),g=os("sourceLocR",h-1).concat("inIdx.r"),m=os("sourceLocG",h-1).concat("inIdx.g"),y=os("sourceLocB",h-1).concat("inIdx.b"),w=os("sourceLocA",h-1).concat("inIdx.a"),b=s==="max"?"greaterThan":"lessThan",_=i?"":`
          inIdx = round(vec4(getBestIndicesAChannel(${g.join()}),
                             getBestIndicesAChannel(${m.join()}),
                             getBestIndicesAChannel(${y.join()}),
                             getBestIndicesAChannel(${w.join()})));`,T=`vec4(
            getAChannel(${g.join()}),
            hasNextCol ? getAChannel(${m.join()}) : 0.,
            hasNextRow ? getAChannel(${y.join()}) : 0.,
            hasNextRow && hasNextCol ? getAChannel(${w.join()}) : 0.)`,E=i?"":`
      float getBestIndicesAChannel(${x.join()}) {
        return getChannel(getBestIndicesA(${f.join()}),
                                          vec2(${f.slice(-2).join()}));
      }`;this.userCode=`
      float getAChannel(${x.join()}) {
        return getChannel(getA(${f.join()}),
                               vec2(${f.slice(-2).join()}));
      }
      ${E}
      void main() {
        ${u} coords = getOutputCoords();
        bool hasNextCol = ${l[c-1]} < ${a[c-1]-1};
        bool hasNextRow = ${l[c-2]} < ${a[c-2]-1};
        ${d}
        ivec4 srcIdx = ivec4(sourceLocR${p}, sourceLocG${p},
          sourceLocB${p}, sourceLocA${p}) * ${e};
        ivec4 inIdx = srcIdx;
        vec4 bestIndex = vec4(inIdx);
        vec4 bestValue = ${T};

        for (int i = 0; i < ${e}; i++) {
          inIdx = srcIdx;
          ${_}
          vec4 candidate = ${T};
          bvec4 nan = isnan(candidate);
          bvec4 replace = bvec4(
            vec4(${b}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));

          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,
                           replace.y  ? candidate.y : bestValue.y,
                           replace.z  ? candidate.z : bestValue.z,
                           replace.w  ? candidate.w : bestValue.w);
          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));
          srcIdx++;
        }
        setOutput(bestIndex);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TI(n,t,e,s=null){let i=t.shape[0],o=t.shape[1];s!=null&&(i=s.shape[0],o=s.shape[1]);const r=Zf(o),a={windowSize:r,inSize:o,batchSize:i,outSize:Math.ceil(o/r)},c=new aK(a,e,s==null),u=[t];s!=null&&u.push(s);const l=n.runWebGLProgram(c,u,"int32");if(l.shape[1]===1)return l;const d=TI(n,t,e,l);return n.disposeIntermediateTensorInfo(l),d}function EI(n,t,e,s=null){const i=s!=null?s.shape:t.shape,o=i[i.length-1],r=Zf(o),a=new cK(i,r,e,s==null),c=s==null?[t]:[t,s],u=n.runWebGLProgram(a,c,"int32");if(u.shape.length===t.shape.length){const l=EI(n,t,e,u);return n.disposeIntermediateTensorInfo(u),l}return u}function II(n,t,e,s){const i=[e];if(Bn("arg"+s.charAt(0).toUpperCase()+s.slice(1),i,t.shape.length),!nt().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){const o=[],r=n.texData.get(t.dataId),a=r!==null&&r.isPacked;let c=t;a&&(c=n.unpackTensor(t),o.push(c));const[u,l]=$n(c.shape,i),d=ct(l),h=Et({inputs:{x:c},backend:n,attrs:{shape:[-1,d]}});o.push(h);const f=TI(n,h,s);o.push(f);const p=Et({inputs:{x:f},backend:n,attrs:{shape:u}});return o.forEach(x=>n.disposeIntermediateTensorInfo(x)),p}return EI(n,t,s)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uK(n){const{inputs:t,backend:e,attrs:s}=n,{x:i}=t,{axis:o}=s;let r=ve(o,i.shape);const a=un(r,i.shape.length);let c=i;const u=[];a!=null&&(c=cs({inputs:{x:i},backend:e,attrs:{perm:a}}),u.push(c),r=mn(r.length,c.shape.length)),Bn("argMax",[r[0]],c.shape.length);const l=II(e,c,r[0],"max");return u.forEach(d=>e.disposeIntermediateTensorInfo(d)),l}const lK={kernelName:zh,backendName:"webgl",kernelFunc:uK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dK(n){const{inputs:t,backend:e,attrs:s}=n,{x:i}=t,{axis:o}=s;let r=ve(o,i.shape);const a=un(r,i.shape.length);let c=i;const u=[];a!=null&&(c=cs({inputs:{x:i},backend:e,attrs:{perm:a}}),u.push(c),r=mn(r.length,c.shape.length)),Bn("argMin",[r[0]],c.shape.length);const l=II(e,c,r[0],"min");return u.forEach(d=>e.disposeIntermediateTensorInfo(d)),l}const hK={kernelName:Vh,backendName:"webgl",kernelFunc:dK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fK=ii+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return asin(x);
`,pK=Ae({opSnippet:fK}),mK={kernelName:Tu,backendName:"webgl",kernelFunc:pK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gK=ii+"return log(x + sqrt(x * x + 1.0));",xK=Ae({opSnippet:gK}),yK={kernelName:Eu,backendName:"webgl",kernelFunc:xK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bK=ii+`
  return atan(x);
`,wK=Ae({opSnippet:bK}),vK={kernelName:Iu,backendName:"webgl",kernelFunc:wK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _K=oy+`
  return atan(a, b);
`,CK=`
  vec4 result = atan(a, b);
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+Jr+`
  return result;
`,SK=zn({opSnippet:_K,packedOpSnippet:CK}),TK={kernelName:Mu,backendName:"webgl",kernelFunc:SK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const EK=ii+`
  if ((x < -1.0) || (x > 1.0)) return NAN;
return (log(1.0 + x) - log(1.0 - x)) / 2.0;`,IK=Ae({opSnippet:EK}),RK={kernelName:Ru,backendName:"webgl",kernelFunc:IK};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class pu{constructor(t,e,s,i=!1,o=!1){if(this.variableNames=["x"],e==="avg"&&s)throw new Error("Cannot compute positions for average pool.");const r=t.filterWidth,a=t.strideHeight,c=t.strideWidth,u=t.dilationHeight,l=t.dilationWidth,d=t.effectiveFilterHeight,h=t.effectiveFilterWidth,f=t.padInfo.top,p=t.padInfo.left;this.outputShape=t.outShape;const x=e==="avg",g=`((batch  * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + d`,m=`(xR * ${t.inWidth} + xC) * ${t.inChannels} + d`;let y="0.0";if(x||(y="-1.0 / 1e-20"),s){const I=">=";this.userCode=`
        const ivec2 strides = ivec2(${a}, ${c});
        const ivec2 pads = ivec2(${f}, ${p});

        void main() {
          ivec4 coords = getOutputCoords();
          int batch = coords[0];
          int d = coords[3];

          ivec2 xRCCorner = coords.yz * strides - pads;
          int xRCorner = xRCCorner.x;
          int xCCorner = xRCCorner.y;

          // max/min x(?, ?, d) to get y(yR, yC, d).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;
          float avgValue = 0.0;

          for (int wR = 0; wR < ${d};
              wR += ${u}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${t.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${h};
                wC += ${l}) {
              int xC = xCCorner + wC;

              if (xC < 0 || xC >= ${t.inWidth}) {
                continue;
              }

              float value = getX(batch, xR, xC, d);

              // If a min / max value has already been found, use it. If not,
              // use the current value.
              float currMinMaxValue = mix(
                  value, minMaxValue, minMaxValueFound);
              if (value ${I} currMinMaxValue) {
                minMaxValue = value;
                minMaxValueFound = 1.0;
                minMaxPosition = ${i?o?g:m:`wR * ${h} + wC`};
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}const w="max";let b=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;e==="avg"&&(b="avgValue / max(count, 1.0)");const _=Math.floor(r/4)*4,T=r%4,E=`
      if (${x}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${w}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec2 strides = ivec2(${a}, ${c});
      const ivec2 pads = ivec2(${f}, ${p});
      const float initializationValue = ${y};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xR, int xC, int d) {
        if (xC < 0 || xC >= ${t.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xR, xC, d);
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d = coords[3];

        ivec2 xRCCorner = coords.yz * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // max/min x(?, ?, d) to get y(yR, yC, d).
        // ? = to be determined
        vec4 minMaxValue = vec4(${y});
        float avgValue = 0.0;
        count = 0.0;

        for (int wR = 0; wR < ${d};
            wR += ${u}) {
          int xR = xRCorner + wR;

          if (xR < 0 || xR >= ${t.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${_}; wC += 4) {
            int xC = xCCorner + wC * ${l};

            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${l}, d),
              getValue(batch, xR, xC + 2 * ${l}, d),
              getValue(batch, xR, xC + 3 * ${l}, d)
            );

            ${E}
          }

          int xC = xCCorner + ${_};
          if (${T===1}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              initializationValue,
              initializationValue,
              initializationValue
            );

            ${E}
          } else if (${T===2}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${l}, d),
              initializationValue,
              initializationValue
            );

            ${E}
          } else if (${T===3}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${l}, d),
              getValue(batch, xR, xC + 2 * ${l}, d),
              initializationValue
            );

            ${E}
          }
        }
        setOutput(${b});
      }
    `}}class ay{constructor(t,e,s,i=!1,o=!1){if(this.variableNames=["x"],e==="avg"&&s)throw new Error("Cannot compute positions for average pool.");const r=t.filterWidth,a=t.strideDepth,c=t.strideHeight,u=t.strideWidth,l=t.dilationDepth,d=t.dilationHeight,h=t.dilationWidth,f=t.effectiveFilterDepth,p=t.effectiveFilterHeight,x=t.effectiveFilterWidth,g=t.padInfo.front,m=t.padInfo.top,y=t.padInfo.left;this.outputShape=t.outShape;const w=e==="avg";let b="0.0";if(w||(b="-1.0 / 1e-20"),s){const v=">=";this.userCode=`
        const ivec3 strides =
            ivec3(${a}, ${c}, ${u});
        const ivec3 pads = ivec3(${g}, ${m}, ${y});

        void main() {
          ivec5 coords = getOutputCoords();
          int batch = coords.x;
          int ch = coords.u;

          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
          int xDCorner = xCorner.x;
          int xRCorner = xCorner.y;
          int xCCorner = xCorner.z;

          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;

          for (int wD = 0; wD < ${f};
              wD += ${l}) {
            int xD = xDCorner + wD;

            if (xD < 0 || xD >= ${t.inDepth}) {
              continue;
            }

            for (int wR = 0; wR < ${p};
                wR += ${d}) {
              int xR = xRCorner + wR;

              if (xR < 0 || xR >= ${t.inHeight}) {
                continue;
              }

              for (int wC = 0; wC < ${x};
                  wC += ${h}) {
                int xC = xCCorner + wC;

                if (xC < 0 || xC >= ${t.inWidth}) {
                  continue;
                }

                float value = getX(batch, xD, xR, xC, ch);

                // If a min / max value has already been found, use it. If not,
                // use the current value.
                float currMinMaxValue = mix(
                    value, minMaxValue, minMaxValueFound);
                if (value ${v} currMinMaxValue) {
                  minMaxValue = value;
                  minMaxValueFound = 1.0;
                  minMaxPosition = ${i?o?`(((batch * ${t.inDepth} + xD) * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + ch`:`((xD * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + ch`:`wD * ${p} * ${x} +
                      wR * ${x} + wC`};
                }
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}const _="max";let T=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;e==="avg"&&(T="avgValue / max(count, 1.0)");const E=Math.floor(r/4)*4,I=r%4,S=`
      if (${w}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${_}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec3 strides =
        ivec3(${a}, ${c}, ${u});
      const ivec3 pads = ivec3(${g}, ${m}, ${y});
      const float initializationValue = ${b};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xD, int xR, int xC, int ch) {
        if (xC < 0 || xC >= ${t.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xD, xR, xC, ch);
      }

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xDCorner = xCorner.x;
        int xRCorner = xCorner.y;
        int xCCorner = xCorner.z;

        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).
        // ? = to be determined
        vec4 minMaxValue = vec4(${b});
        float avgValue = 0.0;
        count = 0.0;

        for (int wD = 0; wD < ${f};
            wD += ${l}) {
          int xD = xDCorner + wD;

          if (xD < 0 || xD >= ${t.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${p};
            wR += ${d}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${t.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${E}; wC += 4) {
              int xC = xCCorner + wC * ${h};

              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${h}, ch),
                getValue(batch, xD, xR, xC + 2 * ${h}, ch),
                getValue(batch, xD, xR, xC + 3 * ${h}, ch)
              );

              ${S}
            }

            int xC = xCCorner + ${E};
            if (${I===1}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                initializationValue,
                initializationValue,
                initializationValue
              );

              ${S}
            } else if (${I===2}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${h}, ch),
                initializationValue,
                initializationValue
              );

              ${S}
            } else if (${I===3}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${h}, ch),
                getValue(batch, xD, xR, xC + 2 * ${h}, ch),
                initializationValue
              );

              ${S}
            }
          }
        }
        setOutput(${T});
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MK(n){const{inputs:t,backend:e,attrs:s}=n,{x:i}=t;Pl(i,"avgPool");const{filterSize:o,strides:r,pad:a,dimRoundingMode:c}=s,u=1;k(Yn(r,u),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${r} and dilations '${u}'`);const l=ni(i.shape,o,r,u,a,c);if(l.filterWidth===1&&l.filterHeight===1&&Pe(l.inShape,l.outShape))return Is({inputs:{x:i},backend:e});const d=new pu(l,"avg",!1);return e.runWebGLProgram(d,[i],"float32")}const AK={kernelName:Wh,backendName:"webgl",kernelFunc:MK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NK(n){const{inputs:t,backend:e,attrs:s}=n,{x:i}=t,{filterSize:o,strides:r,pad:a,dimRoundingMode:c,dataFormat:u}=s,l=[1,1,1],d=po(i.shape,o,r,l,a,c,u),h=new ay(d,"avg",!1);return e.runWebGLProgram(h,[i],"float32")}const kK={kernelName:Gh,backendName:"webgl",kernelFunc:NK};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class DK{constructor(t){this.variableNames=["dy"],this.outputShape=t.inShape;const e=t.filterHeight,s=t.filterWidth,i=t.strideHeight,o=t.strideWidth,r=t.dilationHeight,a=t.dilationWidth,c=t.effectiveFilterHeight,u=t.effectiveFilterWidth,l=c-1-t.padInfo.top,d=u-1-t.padInfo.left,h=1/(e*s);this.userCode=`
      const ivec2 pads = ivec2(${l}, ${d});
      const float avgMultiplier = float(${h});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${c};
            wR += ${r}) {
          float dyR = float(dyRCorner + wR) / ${i}.0;

          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${u};
            wC+= ${a}) {
            float dyC = float(dyCCorner + wC) / ${o}.0;

            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);

            dotProd += dyValue * avgMultiplier;
          }
        }
        setOutput(dotProd);
      }
    `}}class $K{constructor(t){this.variableNames=["dy"],this.outputShape=t.inShape;const e=t.filterDepth,s=t.filterHeight,i=t.filterWidth,o=t.strideDepth,r=t.strideHeight,a=t.strideWidth,c=t.dilationDepth,u=t.dilationHeight,l=t.dilationWidth,d=t.effectiveFilterDepth,h=t.effectiveFilterHeight,f=t.effectiveFilterWidth,p=d-1-t.padInfo.front,x=h-1-t.padInfo.top,g=f-1-t.padInfo.left,m=1/(e*s*i);this.userCode=`
      const ivec3 pads = ivec3(${p}, ${x}, ${g});
      const float avgMultiplier = float(${m});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${d};
            wD += ${c}) {
          float dyD = float(dyDCorner + wD) / ${o}.0;

          if (dyD < 0.0 || dyD >= ${t.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${h};
              wR += ${u}) {
            float dyR = float(dyRCorner + wR) / ${r}.0;

            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${f};
                wC += ${l}) {
              float dyC = float(dyCCorner + wC) / ${a}.0;

              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);

              dotProd += dyValue * avgMultiplier;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FK(n){const{inputs:t,backend:e,attrs:s}=n,{dy:i,input:o}=t,r=o,{filterSize:a,strides:c,pad:u,dimRoundingMode:l}=s,d=[1,1,1],h=po(r.shape,a,c,d,u,l),f=new $K(h);return e.runWebGLProgram(f,[i],r.dtype)}const PK={kernelName:L1,backendName:"webgl",kernelFunc:FK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LK(n){const{inputs:t,backend:e,attrs:s}=n,{dy:i,input:o}=t,r=o;Pl([i,o],"avgPoolGrad");const{filterSize:a,strides:c,pad:u}=s,l=ni(r.shape,a,c,1,u),d=new DK(l);return e.runWebGLProgram(d,[i],r.dtype)}const OK={kernelName:P1,backendName:"webgl",kernelFunc:LK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UK(n){const{inputs:t,backend:e,attrs:s}=n,{a:i,b:o}=t,{transposeA:r,transposeB:a}=s;return _h({a:i,b:o,transposeA:r,transposeB:a,backend:e})}const BK={kernelName:Hh,backendName:"webgl",kernelFunc:UK};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class zK{constructor(t,e,s,i,o,r){this.outputShape=[],this.variableNames=["x","mean","variance"],de(t,e),de(t,s);let a="0.0";i!=null&&(de(t,i),this.variableNames.push("offset"),a="getOffsetAtOutCoords()");let c="1.0";o!=null&&(de(t,o),this.variableNames.push("scale"),c="getScaleAtOutCoords()"),this.outputShape=t,this.userCode=`
      void main() {
        float x = getXAtOutCoords();
        float mean = getMeanAtOutCoords();
        float variance = getVarianceAtOutCoords();
        float offset = ${a};
        float scale = ${c};
        float inv = scale * inversesqrt(variance + float(${r}));
        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class VK{constructor(t,e,s,i,o,r){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],de(t,e),de(t,s);let a="vec4(0.0)";i!=null&&(de(t,i),this.variableNames.push("offset"),a="getOffsetAtOutCoords()");let c="vec4(1.0)";o!=null&&(de(t,o),this.variableNames.push("scale"),c="getScaleAtOutCoords()"),this.outputShape=t,this.userCode=`
      void main() {
        vec4 offset = ${a};
        vec4 scale = ${c};

        vec4 x = getXAtOutCoords();
        vec4 mean = getMeanAtOutCoords();
        vec4 variance = getVarianceAtOutCoords();

        vec4 inv = scale * inversesqrt(variance + vec4(${r}));

        setOutput((x - mean) * inv + offset);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const WK=({inputs:n,backend:t,attrs:e})=>{const{x:s,mean:i,variance:o,offset:r,scale:a}=n;k(i.shape.length===o.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),k(r==null||i.shape.length===r.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),k(a==null||i.shape.length===a.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let{varianceEpsilon:c}=e;c==null&&(c=.001);const u=[s,i,o];let l=null;r!=null&&(l=r.shape,u.push(r));let d=null;a!=null&&(d=a.shape,u.push(a));const h=nt().getBool("WEBGL_PACK_NORMALIZATION")?new VK(s.shape,i.shape,o.shape,l,d,c):new zK(s.shape,i.shape,o.shape,l,d,c);return t.runWebGLProgram(h,u,u[0].dtype)},GK={kernelName:sf,backendName:"webgl",kernelFunc:WK};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class HK{constructor(t){this.variableNames=["source"],this.outputShape=t,this.rank=t.length;const e=Ve(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const s=XK(this.rank);let i;const o=t.map((r,a)=>`sourceLoc.${G0[a]} = start[${a}] + coords.${G0[a]};`);i=`
        ${e} sourceLoc;
        ${e} coords = getOutputCoords();
        ${o.join(`
`)}
      `,this.userCode=`
      void main() {
        ${i}
        setOutput(getSource(${s}));
      }
    `}}const G0=["x","y","z","w","u","v"];function XK(n){if(n===1)return"sourceLoc";if(n<=6)return G0.slice(0,n).map(t=>"sourceLoc."+t).join(",");throw Error(`Slicing for rank ${n} is not yet supported`)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class qK{constructor(t){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.rank=t.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const e=Ve(this.rank),s=os("coords",this.rank),i=os("sourceLoc",this.rank),o=this.rank===1?"sourceLoc":`vec2(${i.slice(-2).join()})`,r=`getChannel(getSource(${i.join()}), ${o})`,a=`
      result.x = ${r};
      if (++${s[this.rank-1]} < ${t[this.rank-1]}) {
        ++${i[this.rank-1]};
        result.y = ${r};
        --${i[this.rank-1]};
      }
    `,c=this.rank===1?"":`
      --${s[this.rank-1]};
      if (++${s[this.rank-2]} < ${t[this.rank-2]}) {
        ++${i[this.rank-2]};
        result.z = ${r};
        if (++${s[this.rank-1]} < ${t[this.rank-1]}) {
          ++${i[this.rank-1]};
          result.w = ${r};
        }
      }
    `,u=this.rank<=4?`sourceLoc = coords +
            ${e}(${t.map((l,d)=>`start[${d}]`).join()});`:t.map((l,d)=>`${i[d]} = ${s[d]} + start[${d}];`).join(`
`);this.userCode=`
      void main() {
        ${e} coords = getOutputCoords();
        ${e} sourceLoc;
        ${u}
        vec4 result = vec4(0.);
        ${a}
        ${c}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jK(n,t,e,s){const i=s.texData.get(n.dataId),o=s.makeTensorInfo(e,n.dtype),r=s.texData.get(o.dataId);Object.assign(r,i),r.refCount=1,r.shape=e,r.dtype=n.dtype;let a=nx(t,Kt(n.shape));i.slice&&(a+=i.slice.flatOffset),r.slice={flatOffset:a,origDataId:i.slice&&i.slice.origDataId||n.dataId};const c=s.dataRefCount.get(r.slice.origDataId)||1;return s.dataRefCount.set(r.slice.origDataId,c+1),o}function Cc(n){const{inputs:t,backend:e,attrs:s}=n,{x:i}=t,{begin:o,size:r}=s,[a,c]=Yf(i,o,r);if(Qg(i,a,c),ct(c)===0)return e.makeTensorInfo(c,i.dtype,[]);if(e.shouldExecuteOnCPU([i])||i.dtype==="string"){const d=e.texData.get(i.dataId),h=Bq(d.values,a,c,i.shape,i.dtype);return e.makeTensorInfo(c,i.dtype,h)}const{isPacked:u}=e.texData.get(i.dataId),l=ex(i.shape,a,c);if(u||!l){const d=nt().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new qK(c):new HK(c),h=[a];return e.runWebGLProgram(d,[i],i.dtype,h)}return e.uploadToGPU(i.dataId),jK(i,a,c,e)}const KK={kernelName:Df,backendName:"webgl",kernelFunc:Cc};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const YK=n=>{const{inputs:t,backend:e,attrs:s}=n,{x:i}=t,{blockShape:o,crops:r}=s;k(i.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet");const a=o.reduce((y,w)=>y*w),c=Cl(i.shape,o,a),u=Sl(c.length,o.length),l=Tl(i.shape,o,a),d=ax(r,o.length),h=cx(l,r,o.length),f=[],p=Et({inputs:{x:i},backend:e,attrs:{shape:c}}),x=cs({inputs:{x:p},backend:e,attrs:{perm:u}}),g=Et({inputs:{x},backend:e,attrs:{shape:l}}),m=Cc({inputs:{x:g},backend:e,attrs:{begin:d,size:h}});return f.push(p),f.push(x),f.push(g),f.forEach(y=>e.disposeIntermediateTensorInfo(y)),m},ZK={kernelName:Xh,backendName:"webgl",kernelFunc:YK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JK(n){const{inputs:t,backend:e,attrs:s}=n,{x:i,weights:o}=t,{size:r}=s,a=e.readSync(i.dataId),c=e.readSync(o.dataId),u=pI(a,c,o.dtype,o.shape,r);return e.makeTensorInfo([r],o.dtype,u)}const QK={kernelName:O1,backendName:"webgl",kernelFunc:JK};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tY=`
  int r = int(a.r) & int(b.r);
  int g = int(a.g) & int(b.g);
  int rb = int(a.b) & int(b.b);
  int ra = int(a.a) & int(b.a);
  return vec4(r, g, rb, ra);
`,eY=`
  return float(int(a.r) & int(b.r));
`;function nY(n){const{inputs:t,backend:e}=n,{a:s,b:i}=t,o=nt().getBool("WEBGL_PACK_BINARY_OPERATIONS"),r=nt().getNumber("WEBGL_VERSION");if(e.shouldExecuteOnCPU([s,i])||r===1){const c=e.texData.get(s.dataId).values,u=e.texData.get(i.dataId).values,[l,d]=lq(s.shape,i.shape,c,u,s.dtype),h=e.makeTensorInfo(d,s.dtype),f=e.texData.get(h.dataId);return f.values=l,h}let a;return o?a=new vc(tY,s.shape,i.shape,!1):a=new zr(eY,s.shape,i.shape),e.runWebGLProgram(a,[s,i],s.dtype)}const sY={kernelName:U1,backendName:"webgl",kernelFunc:nY};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iY(n){const{inputs:t,backend:e}=n,{s0:s,s1:i}=t,o=e.readSync(s.dataId),r=e.readSync(i.dataId),a=de(Array.from(o),Array.from(r));return e.makeTensorInfo([a.length],"int32",Int32Array.from(a))}const oY={kernelName:v2,backendName:"webgl",kernelFunc:iY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rY="return float(a != b);",RI=zn({opSnippet:rY,cpuKernelImpl:Nq,dtype:"bool"}),aY={kernelName:vf,backendName:"webgl",kernelFunc:RI};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ol(n){const{inputs:t,backend:e}=n,{input:s}=t,i=e.texData.get(s.dataId);return Is({inputs:{x:i.complexTensorInfos.real},backend:e})}const cY={kernelName:lg,backendName:"webgl",kernelFunc:Ol};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uY="return float(int(x));";function lY(n,t){const e=new $i(n.shape,uY),s=t.runWebGLProgram(e,[n],"int32");return{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function H0(n){const{inputs:t,backend:e,attrs:s}=n,{x:i}=t,{dtype:o}=s;if(o==="complex64"){if(i.dtype==="complex64")return Is({inputs:{x:i},backend:e});const r=en(i.shape),a=H0({inputs:{x:i},backend:e,attrs:{dtype:"float32"}}),c=Jo({inputs:{real:a,imag:r},backend:e});return r.dispose(),e.disposeIntermediateTensorInfo(a),c}if(i.dtype==="complex64"){const r=Ol({inputs:{input:i},backend:e}),a=H0({inputs:{x:r},backend:e,attrs:{dtype:o}});return e.disposeIntermediateTensorInfo(r),a}if(!g2(i.dtype,o)){const r=Is({inputs:{x:i},backend:e});return{dataId:r.dataId,shape:r.shape,dtype:o}}if(e.shouldExecuteOnCPU([i])){const r=e.texData.get(i.dataId).values,[a,c,u]=dq(r,i.shape,i.dtype,o);return e.makeTensorInfo(a,c,u)}if(o==="int32")return lY(i,e);if(o==="bool"){const r=e.makeTensorInfo([],"bool",qn("bool",1)),c=RI({inputs:{a:i,b:r},backend:e});return e.disposeIntermediateTensorInfo(r),c}throw new Error(`Error in Cast: failed to cast ${i.dtype} to ${o}`)}const dY={kernelName:Au,backendName:"webgl",kernelFunc:H0};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Zw="return ceil(x);",hY=Ae({opSnippet:Zw,packedOpSnippet:Zw,cpuKernelImpl:hq}),fY={kernelName:Nu,backendName:"webgl",kernelFunc:hY};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class pY{constructor(t){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=t,this.userCode=`

      void main() {
        float value = getAAtOutCoords();
        if (isnan(value)) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, minVal, maxVal));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class mY{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=t,this.userCode=`
      void main() {
        vec4 value = getAAtOutCoords();

        if (any(isnan(value))) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gY(n){const{inputs:t,backend:e,attrs:s}=n,{x:i}=t,{clipValueMin:o,clipValueMax:r}=s;let a;nt().getBool("WEBGL_PACK_CLIP")?a=new mY(i.shape):a=new pY(i.shape);const c=[[o],[r]];return e.runWebGLProgram(a,[i],i.dtype,c)}const xY={kernelName:ku,backendName:"webgl",kernelFunc:gY};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class yY{constructor(t){this.variableNames=["real","imag"],this.outputShape=t,this.userCode=`
      void main() {
        float re = abs(getRealAtOutCoords());
        float im = abs(getImagAtOutCoords());
        float mx = max(re, im);

        // sadly the length function in glsl is not underflow-safe
        // (at least not on Intel GPUs). So the safe solution is
        // to ensure underflow-safety in all cases.
        setOutput(
          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))
        );
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Jw(n,t){return{dataId:t.dataId,dtype:t.dtype,shape:n.shape}}function bY(n){const{inputs:t,backend:e}=n,{x:s}=t,i=e.texData.get(s.dataId),o=new yY(s.shape),r=[Jw(s,i.complexTensorInfos.real),Jw(s,i.complexTensorInfos.imag)];return e.runWebGLProgram(o,r,r[0].dtype)}const wY={kernelName:qh,backendName:"webgl",kernelFunc:bY};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class vY{constructor(t){this.outputShape=[],this.outputShape=Pi(t,1),this.variableNames=t.map((r,a)=>`T${a}`);const e=new Array(t.length-1);e[0]=t[0][1];for(let r=1;r<e.length;r++)e[r]=e[r-1]+t[r][1];const s=[`if (yC < ${e[0]}) setOutput(getT0(yR, yC));`];for(let r=1;r<e.length;r++){const a=e[r-1];s.push(`else if (yC < ${e[r]}) setOutput(getT${r}(yR, yC-${a}));`)}const i=e.length,o=e[e.length-1];s.push(`else setOutput(getT${i}(yR, yC-${o}));`),this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int yR = coords.x;
        int yC = coords.y;

        ${s.join(`
        `)}
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class _Y{constructor(t,e){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=Pi(t,e);const s=this.outputShape,i=s.length,o=Ve(i),r=os("coords",i),a=["x","y","z","w","u","v"].slice(0,i);this.variableNames=t.map((x,g)=>`T${g}`);const c=new Array(t.length-1);c[0]=t[0][e];for(let x=1;x<c.length;x++)c[x]=c[x-1]+t[x][e];const u=a[e],l=a.slice(-2),d=a.join();let h=`if (${u} < ${c[0]}) {
        return getChannel(
            getT0(${d}), vec2(${l.join()}));
        }`;for(let x=1;x<c.length;x++){const g=c[x-1];h+=`
        if (${u} < ${c[x]}  && ${u} >= ${c[x-1]}) {
          return getChannel(
            getT${x}(${Td(a,u,g)}),
            vec2(${Td(l,u,g)}));
        }`}const f=c.length,p=c[c.length-1];h+=`
        return getChannel(
          getT${f}(${Td(a,u,p)}),
          vec2(${Td(l,u,p)}));`,this.userCode=`
      float getValue(${a.map(x=>"int "+x)}) {
        ${h}
      }

      void main() {
        ${o} coords = getOutputCoords();
        vec4 result = vec4(getValue(${r}), 0., 0., 0.);

        ${r[i-1]} = ${r[i-1]} + 1;
        if (${r[i-1]} < ${s[i-1]}) {
          result.g = getValue(${r});
        }

        ${r[i-2]} = ${r[i-2]} + 1;
        if (${r[i-2]} < ${s[i-2]}) {
          result.a = getValue(${r});
        }

        ${r[i-1]} = ${r[i-1]} - 1;
        if (${r[i-2]} < ${s[i-2]} &&
            ${r[i-1]} < ${s[i-1]}) {
          result.b = getValue(${r});
        }
        setOutput(result);
      }
    `}}function Td(n,t,e){const s=n.indexOf(t);return n.map((o,r)=>r===s?`${o} - ${e}`:o).join()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gp(n){const{inputs:t,backend:e}=n,{input:s}=t,i=e.texData.get(s.dataId);return Is({inputs:{x:i.complexTensorInfos.imag},backend:e})}const CY={kernelName:ng,backendName:"webgl",kernelFunc:gp};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Wc(n,t,e){const s=n[0].dtype;if(s==="complex64"){const f=n.map(y=>Ol({inputs:{input:y},backend:e})),p=n.map(y=>gp({inputs:{input:y},backend:e})),x=Wc(f,t,e),g=Wc(p,t,e),m=Jo({inputs:{real:x,imag:g},backend:e});return f.forEach(y=>e.disposeIntermediateTensorInfo(y)),p.forEach(y=>e.disposeIntermediateTensorInfo(y)),e.disposeIntermediateTensorInfo(x),e.disposeIntermediateTensorInfo(g),m}let i=e.shouldExecuteOnCPU(n);if(s==="string"&&(i=!0),i){const f=n.map(b=>{const T=[-1,ct(b.shape.slice(t))];return Et({inputs:{x:b},backend:e,attrs:{shape:T}})}),p=f.map(b=>({vals:e.readSync(b.dataId),shape:b.shape})),x=Pi(f.map(b=>b.shape),1),g=f[0].shape[0]===1,m=fq(p,x,s,g),y=Pi(n.map(b=>b.shape),t),w=e.makeTensorInfo(y,s,m);return f.forEach(b=>e.disposeIntermediateTensorInfo(b)),w}const o=n.filter(f=>ct(f.shape)>0),r=nt().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&o[0].shape.length>1;if(o.length===1){const f=r?new $i(n[0].shape,So):new Ro(n[0].shape,So);return e.runWebGLProgram(f,n,s)}const a=nt().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER");if(o.length>a){const f=[];for(let x=0;x<o.length;x+=a){const g=o.slice(x,x+a);f.push(Wc(g,t,e))}const p=Wc(f,t,e);for(const x of f)e.disposeIntermediateTensorInfo(x);return p}if(r){const f=new _Y(o.map(p=>p.shape),t);return e.runWebGLProgram(f,o,s)}const{tensors2D:c,outShape:u}=SY(o,t,e),l=new vY(c.map(f=>f.shape)),d=e.runWebGLProgram(l,c,s);c.forEach(f=>e.disposeIntermediateTensorInfo(f));const h=Et({inputs:{x:d},attrs:{shape:u},backend:e});return e.disposeIntermediateTensorInfo(d),h}function SY(n,t,e){const s=Pi(n.map(o=>o.shape),t);return{tensors2D:n.map(o=>Et({inputs:{x:o},attrs:{shape:[-1,ct(o.shape.slice(t))]},backend:e})),outShape:s}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MI(n){const{inputs:t,backend:e,attrs:s}=n,{axis:i}=s,o=ve(i,t[0].shape)[0],r=t.map(u=>u.shape);ix(r,o);const a=Pi(t.map(u=>u.shape),o);if(ct(a)===0)return e.makeTensorInfo(a,t[0].dtype,[]);const c=t.filter(u=>ct(u.shape)>0);return c.length===1?Is({inputs:{x:c[0]},backend:e}):Wc(c,o,e)}const TY={kernelName:jh,backendName:"webgl",kernelFunc:MI};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class AI{constructor(t,e=!1,s=null,i=!1,o=!1){this.variableNames=["x","W"],this.outputShape=t.outShape;const r=t.padInfo.top,a=t.padInfo.left,c=t.strideHeight,u=t.strideWidth,l=t.dilationHeight,d=t.dilationWidth,h=t.filterHeight,f=t.filterWidth,p=Math.floor(t.inChannels/4)*4,x=t.inChannels%4,g=t.dataFormat==="channelsLast",m=g?1:2,y=g?2:3,w=g?3:1;let b="",_="";s&&(i?b=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${s}
        }`:o?b=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${s}
        }`:b=`
          float activation(float x) {
            ${s}
          }
        `,_="result = activation(result);");const T=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),i&&this.variableNames.push("preluActivationWeights"),o&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${b}

      const ivec2 strides = ivec2(${c}, ${u});
      const ivec2 pads = ivec2(${r}, ${a});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d2 = coords[${w}];

        ivec2 xRCCorner =
            ivec2(coords[${m}], coords[${y}]) * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${h}; wR++) {
          int xR = xRCorner + wR * ${l};

          if (xR < 0 || xR >= ${t.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${f}; wC++) {
            int xC = xCCorner + wC * ${d};

            if (xC < 0 || xC >= ${t.inWidth}) {
              continue;
            }

            for (int d1 = 0; d1 < ${p}; d1 += 4) {
              vec4 wValues = vec4(
                getW(wR, wC, d1, d2),
                getW(wR, wC, d1 + 1, d2),
                getW(wR, wC, d1 + 2, d2),
                getW(wR, wC, d1 + 3, d2)
              );

              if (${g}) {
                vec4 xValues = vec4(
                  getX(batch, xR, xC, d1),
                  getX(batch, xR, xC, d1 + 1),
                  getX(batch, xR, xC, d1 + 2),
                  getX(batch, xR, xC, d1 + 3)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec4 xValues = vec4(
                  getX(batch, d1, xR, xC),
                  getX(batch, d1 + 1, xR, xC),
                  getX(batch, d1 + 2, xR, xC),
                  getX(batch, d1 + 3, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }
            }

            if (${x===1}) {

              if (${g}) {
                dotProd +=
                    getX(batch, xR, xC, ${p}) *
                    getW(wR, wC, ${p}, d2);
              } else {
                dotProd +=
                    getX(batch, ${p}, xR, xC) *
                    getW(wR, wC, ${p}, d2);
              }

            } else if (${x===2}) {
              vec2 wValues = vec2(
                getW(wR, wC, ${p}, d2),
                getW(wR, wC, ${p} + 1, d2)
              );

              if (${g}) {
                vec2 xValues = vec2(
                  getX(batch, xR, xC, ${p}),
                  getX(batch, xR, xC, ${p} + 1)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec2 xValues = vec2(
                  getX(batch, ${p}, xR, xC),
                  getX(batch, ${p} + 1, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            } else if (${x===3}) {
              vec3 wValues = vec3(
                getW(wR, wC, ${p}, d2),
                getW(wR, wC, ${p} + 1, d2),
                getW(wR, wC, ${p} + 2, d2)
              );

              if (${g}) {
                vec3 xValues = vec3(
                  getX(batch, xR, xC, ${p}),
                  getX(batch, xR, xC, ${p} + 1),
                  getX(batch, xR, xC, ${p} + 2)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec3 xValues = vec3(
                  getX(batch, ${p}, xR, xC),
                  getX(batch, ${p} + 1, xR, xC),
                  getX(batch, ${p} + 2, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            }
          }
        }

        float result = dotProd;
        ${T}
        ${_}
        setOutput(result);
      }
    `}}class EY{constructor(t){this.variableNames=["x","W"],this.outputShape=t.outShape;const e=t.padInfo.front,s=t.padInfo.top,i=t.padInfo.left,o=t.strideDepth,r=t.strideHeight,a=t.strideWidth,c=t.dilationDepth,u=t.dilationHeight,l=t.dilationWidth,d=t.filterDepth,h=t.filterHeight,f=t.filterWidth,p=Math.floor(t.inChannels/4)*4,x=t.inChannels%4;this.userCode=`
      const ivec3 strides = ivec3(${o}, ${r}, ${a});
      const ivec3 pads = ivec3(${e}, ${s}, ${i});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d2 = coords.u;

        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xFCorner = xFRCCorner.x;
        int xRCorner = xFRCCorner.y;
        int xCCorner = xFRCCorner.z;

        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get
        // y(yF, yR, yC, d2). ? = to be determined. : = across all
        // values in that axis.
        float dotProd = 0.0;
        for (int wF = 0; wF < ${d}; wF++) {
          int xF = xFCorner + wF * ${c};

          if (xF < 0 || xF >= ${t.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${h}; wR++) {
            int xR = xRCorner + wR * ${u};

            if (xR < 0 || xR >= ${t.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${f}; wC++) {
              int xC = xCCorner + wC * ${l};

              if (xC < 0 || xC >= ${t.inWidth}) {
                continue;
              }

              for (int d1 = 0; d1 < ${p}; d1 += 4) {
                vec4 xValues = vec4(
                  getX(batch, xF, xR, xC, d1),
                  getX(batch, xF, xR, xC, d1 + 1),
                  getX(batch, xF, xR, xC, d1 + 2),
                  getX(batch, xF, xR, xC, d1 + 3)
                );
                vec4 wValues = vec4(
                  getW(wF, wR, wC, d1, d2),
                  getW(wF, wR, wC, d1 + 1, d2),
                  getW(wF, wR, wC, d1 + 2, d2),
                  getW(wF, wR, wC, d1 + 3, d2)
                );

                dotProd += dot(xValues, wValues);
              }

              if (${x===1}) {
                dotProd +=
                  getX(batch, xF, xR, xC, ${p}) *
                  getW(wF, wR, wC, ${p}, d2);
              } else if (${x===2}) {
                vec2 xValues = vec2(
                  getX(batch, xF, xR, xC, ${p}),
                  getX(batch, xF, xR, xC, ${p} + 1)
                );
                vec2 wValues = vec2(
                  getW(wF, wR, wC, ${p}, d2),
                  getW(wF, wR, wC, ${p} + 1, d2)
                );
                dotProd += dot(xValues, wValues);
              } else if (${x===3}) {
                vec3 xValues = vec3(
                  getX(batch, xF, xR, xC, ${p}),
                  getX(batch, xF, xR, xC, ${p} + 1),
                  getX(batch, xF, xR, xC, ${p} + 2)
                );
                vec3 wValues = vec3(
                  getW(wF, wR, wC, ${p}, d2),
                  getW(wF, wR, wC, ${p} + 1, d2),
                  getW(wF, wR, wC, ${p} + 2, d2)
                );
                dotProd += dot(xValues, wValues);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class NI{constructor(t,e=!1,s=null,i=!1,o=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=t.outShape,this.enableShapeUniforms=Jn(this.outputShape.length);const r=t.padInfo.left,a=t.strideWidth,c=t.dilationWidth,u=t.filterHeight,l=t.filterWidth,d=l;let h=`
       int xR; int xC; int xCOffset;
       vec4 wTexel; vec4 previous; vec4 final;`;for(let g=0;g<l;g++)h+=`
           vec4 xTexelC${g*2};
           int xTexelC${g*2}Ready;
           vec4 xTexelC${g*2+1};
           int xTexelC${g*2+1}Ready;
           vec4 xC${g};`;h+=`
     for (int r = 0; r < ${u}; r++) {
      for (int d1 = 0; d1 < ${t.inChannels}; d1 += 2) {
       `;for(let g=0;g<l;g++)h+=`
           xTexelC${g*2} = vec4(0.0);
           xTexelC${g*2}Ready = 0;
           xTexelC${g*2+1} = vec4(0.0);
           xTexelC${g*2+1}Ready = 0;
           xC${g} = vec4(0.0);`;h+=`
         xR = xRCorner + r * dilations[0];
         if (xR >=0 && xR < inDims[0]) {
       `;for(let g=0;g<(d+1)/2;g++){const m=g*2;if(h+=`
           xC = xCCorner + ${m*c};
           `,a===1){if(m<l&&(r%2===1?(h+=`
                 xCOffset = xC + 1;
                 if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${m}Ready == 0) {
                   xTexelC${m} = getX(batch, xR, xCOffset, d1);

                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${m}.zw = vec2(0.0);
                   }
                   xTexelC${m}Ready = 1;
                 }
               `,c===1&&m>0?h+=`
                 xC${m} = vec4(xTexelC${m-2}.zw, xTexelC${m}.xy);
                 `:h+=`
                   xCOffset = xC + 1 - 2;

                   if (xCOffset >= 0 && xCOffset < inDims[1]) {
                     previous = getX(batch, xR, xCOffset, d1);

                     // Need to manually clear unused channels in case
                     // we're reading from recycled texture.
                     if (xCOffset + 1 >= inDims[1]) {
                       previous.zw = vec2(0.0);
                     }

                     xC${m} = vec4(previous.zw, xTexelC${m}.xy);
                   } else {
                     xC${m} = vec4(0.0, 0.0, xTexelC${m}.xy);
                   }
                   `):h+=`
                 if (xC >= 0 && xC < inDims[1] && xTexelC${m}Ready == 0) {
                   xTexelC${m} = getX(batch, xR, xC, d1);
                   if (xC + 1 >= inDims[1]) {
                     xTexelC${m}.zw = vec2(0.0);
                   }
                   xTexelC${m}Ready = 1;
                 }

                 xC${m} = xTexelC${m};
                 `,m+1<l)){const y=r%2===0?R1(c):c;c%2===0&&r%2===1||c%2!==0&&r%2!==1?(h+=`
                   xCOffset = xC + imod(pads[1], 2) + ${y};

                   if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${m+1}Ready == 0) {
                     xTexelC${m+1} = getX(batch, xR, xCOffset, d1);

                     // Need to manually clear unused channels in case
                     // we're reading from recycled texture.
                     if (xCOffset + 1 >= inDims[1]) {
                       xTexelC${m+1}.zw = vec2(0.0);
                     }
                     xTexelC${m+1}Ready = 1;
                   }
                   `,c>1?h+=`
                     xCOffset -= 2;
                     if (xCOffset >= 0 && xCOffset < inDims[1]) {
                      previous = getX(batch, xR, xCOffset, d1);
                      xC${m+1} = vec4(previous.zw, xTexelC${m+1}.xy);
                     } else {
                      xC${m+1} = vec4(0.0, 0.0, xTexelC${m+1}.xy);
                     }
                     `:h+=`
                     xC${m+1} = vec4(xTexelC${m}.zw, xTexelC${m+1}.xy);
                     `):y===1?h+=`
                     xC${m+1} = xTexelC${m};
                     `:h+=`
                     xCOffset = xC + ${y};

                     if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${m+1}Ready == 0) {
                       xTexelC${m+1} = getX(batch, xR, xCOffset, d1);
                       if (xCOffset + 1 >= inDims[1]) {
                         xTexelC${m+1}.zw = vec2(0.0);
                       }
                       xTexelC${m+1}Ready = 1;
                     }

                     xC${m+1} = xTexelC${m+1};
                     `}}else m<l&&(r%2===1?(h+=`
                 xCOffset = xC + 1 - strides[1];
                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${m}Ready == 0) {
                   xTexelC${m} = getX(batch, xR, xCOffset, d1);
                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${m}.zw = vec2(0.0);
                   }
                   xTexelC${m}Ready = 1;
                 }

                 if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${m+1}Ready == 0) {
                   xTexelC${m+1} = getX(batch, xR, xC + 1, d1);
                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xC + 2 >= inDims[1]) {
                     xTexelC${m+1}.zw = vec2(0.0);
                   }
                   xTexelC${m+1}Ready = 1;
                 }

                 xC${m} = vec4(xTexelC${m}.zw, xTexelC${m+1}.zw);
               `,m+1<l&&(h+=`
                   final = vec4(0.0);
                   xCOffset = xC + 1 + strides[1];
                   if(xCOffset >= 0 && xCOffset < inDims[1]) {
                     final = getX(batch, xR, xCOffset, d1);
                   }
                   xC${m+1} = vec4(xTexelC${m+1}.xy, final.xy);
                 `)):(h+=`
                 if(xC >= 0 && xC < inDims[1] && xTexelC${m}Ready == 0) {
                   xTexelC${m} = getX(batch, xR, xC, d1);
                   if (xC + 1 >= inDims[1]) {
                     xTexelC${m}.zw = vec2(0.0);
                   }
                   xTexelC${m}Ready = 1;
                 }

                 xCOffset = xC + strides[1];
                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${m+1}Ready == 0) {
                   xTexelC${m+1} = getX(batch, xR, xCOffset, d1);
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${m+1}.zw = vec2(0.);
                   }
                   xTexelC${m+1}Ready = 1;
                 }

                 xC${m} = vec4(
                   xTexelC${m}.xy, xTexelC${m+1}.xy);
               `,m+1<l&&(h+=`
                   xC${m+1} = vec4(xTexelC${m}.zw, xTexelC${m+1}.zw);
                 `)));m<l&&(h+=`
             wTexel = getW(r, ${m}, d1, d2);
             dotProd += xC${m}.xxzz * vec4(wTexel.xy, wTexel.xy);
             if(d1 + 1 < ${t.inChannels}) {
               dotProd += xC${m}.yyww * vec4(wTexel.zw, wTexel.zw);
             }
           `,m+1<l&&(h+=`
               wTexel = getW(r, ${m+1}, d1, d2);
               dotProd += xC${m+1}.xxzz * vec4(wTexel.xy, wTexel.xy);
               if(d1 + 1 < ${t.inChannels}) {
                 dotProd += xC${m+1}.yyww * vec4(wTexel.zw, wTexel.zw);
               }
             `))}h+=`
     }
   `,h+=`
     }
   `,h+=`
     }
   `;let f="",p="";s&&(i?f=`vec4 activation(vec4 a) {
           vec4 b = getPreluActivationWeightsAtOutCoords();
           ${s}
         }`:o?f=`vec4 activation(vec4 a) {
           vec4 b = getLeakyreluAlphaAtOutCoords();
           ${s}
         }`:f=`vec4 activation(vec4 x) {
           ${s}
         }`,p="result = activation(result);");const x=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),i&&this.variableNames.push("preluActivationWeights"),o&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
       ${f}

       void main() {
         ivec4 coords = getOutputCoords();
         int batch = coords.x;
         ivec2 xRCCorner = coords.yz * strides - pads;
         int d2 = coords.w;
         int xRCorner = xRCCorner.x;
         int xCCorner = xRCCorner.y;

         //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
         vec4 dotProd = vec4(0.000000000000001);

         ${h}

         vec4 result = dotProd - vec4(0.000000000000001);
         ${x}
         ${p}
         setOutput(result);
       }
     `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class IY{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec4"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=t,this.enableShapeUniforms=Jn(this.outputShape.length);const{dataFormat:s}=e,i=us(),o=s==="channelsLast",r=o?1:2,a=o?2:3,c=this.enableShapeUniforms?"if(blockIndex < outShape[2] && pos < outShape[1]) {":`if(blockIndex < ${t[2]} && pos < ${t[1]}) {`;let u="";for(let l=0;l<=1;l++)for(let d=0;d<=1;d++)u+=`
          blockIndex = rc.z + ${d};
          pos = rc.y + ${l};

          ${c}
            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];
            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);

            if(d0 < inputShape[${r}] && d0 >= 0) {
              // Use custom imod instead mod. On Intel GPU, mod may generate
              // unexpected value.
              // https://github.com/tensorflow/tfjs/issues/5447
              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];
              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /
                  inChannels);

              if(d1 < inputShape[${a}] && d1 >= 0) {

                ch = imod(pos, inChannels);

                if (${o}) {
                  innerDims = vec2(d1, ch);
                  result[${l*2+d}] = getChannel(
                    getA(rc.x, d0, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                } else {
                  innerDims = vec2(d0, d1);
                  result[${l*2+d}] = getChannel(
                    getA(rc.x, ch, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                }
              }
            }
          }
        `;this.userCode=`
      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0);

        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;
        vec2 innerDims;

        ${u}

        ${i.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ch(n,t){const e=n.length;return e>=3?t?[...n.slice(0,-3),n[e-3]*n[e-2],n[e-1]]:[...n.slice(0,-3),n[e-3],n[e-2]*n[e-1]]:!t&&e===1&&n[0]>1?[n[0],1]:null}function kI({x:n,filter:t,convInfo:e,backend:s,bias:i=null,preluActivationWeights:o=null,leakyreluAlpha:r=0,activation:a=null}){const c=n.shape,u=s.texData.get(n.dataId),l=e.inChannels,d=c[0]*c[1]*c[2],h=e.outChannels,f=e.dataFormat==="channelsLast",p=!1,x=!1;let g;const m=[];if(o!=null){const b=Ch(o.shape,f);b!=null&&(o=Et({inputs:{x:o},backend:s,attrs:{shape:b}}),m.push(o))}if(i!=null){const b=Ch(i.shape,f);b!=null&&(i=Et({inputs:{x:i},backend:s,attrs:{shape:b}}),m.push(i))}if(!((d===1||h===1)&&l>SI)&&u.isPacked&&f&&u.texture!=null&&c[2]%2!==0&&Pe(u.shape.slice(-3),c.slice(-3))){const b=c[0]*c[1]*(c[2]+1),_={dataId:n.dataId,shape:[1,b,e.inChannels],dtype:n.dtype},T=u.shape;u.shape=u.shape.slice(),u.shape[u.shape.length-2]++,k(vh(u.shape,_.shape),()=>`packed reshape ${u.shape} to ${_.shape} isn't free`);const E=Et({inputs:{x:t},backend:s,attrs:{shape:[1,e.inChannels,e.outChannels]}});m.push(E);const I=_h({a:_,b:E,backend:s,transposeA:p,transposeB:x,bias:i,activation:a,preluActivationWeights:o,leakyreluAlpha:r}),S=s.texData.get(I.dataId);k(S.isPacked,()=>"batchMatMul result is expected to be packed"),u.shape=T,S.shape=e.outShape,g=Is({inputs:{x:I},backend:s}),g.shape=e.outShape,m.push(I)}else{const b=e.outHeight*e.outWidth,_=Et({inputs:{x:n},backend:s,attrs:{shape:f?[e.batchSize,b,e.inChannels]:[e.batchSize,e.inChannels,b]}}),T=Et({inputs:{x:t},backend:s,attrs:{shape:[1,e.inChannels,e.outChannels]}}),E=_h({a:f?_:T,b:f?T:_,transposeA:!f,transposeB:x,backend:s,bias:i,activation:a,preluActivationWeights:o,leakyreluAlpha:r});g=Et({inputs:{x:E},backend:s,attrs:{shape:e.outShape}}),m.push(_),m.push(T),m.push(E)}for(const b of m)s.disposeIntermediateTensorInfo(b);return g}function DI({x:n,filter:t,convInfo:e,backend:s,bias:i=null,preluActivationWeights:o=null,leakyreluAlpha:r=0,activation:a=null}){const{filterWidth:c,filterHeight:u,inChannels:l,outWidth:d,outHeight:h,dataFormat:f}=e,p=f==="channelsLast",x=c*u*l,g=h*d,m=[e.batchSize,x,g],y=!0,w=!1,b=[];if(o!=null){const P=Ch(o.shape,p);P!=null&&(o=Et({inputs:{x:o},backend:s,attrs:{shape:P}}),b.push(o))}if(i!=null){const P=Ch(i.shape,p);P!=null&&(i=Et({inputs:{x:i},backend:s,attrs:{shape:P}}),b.push(i))}const _=Et({inputs:{x:t},backend:s,attrs:{shape:[1,x,ct(t.shape)/x]}});b.push(_);const T=new IY(m,e),E=[n.shape,[e.padInfo.top,e.padInfo.left],[e.strideHeight,e.strideWidth],[e.dilationHeight,e.dilationWidth],[e.inChannels],[e.filterWidth*e.inChannels],[e.outWidth]],I=s.runWebGLProgram(T,[n],"float32",E),S=Et({inputs:{x:I},backend:s,attrs:{shape:m}});b.push(I),b.push(S);const v=i!=null,C=o!=null,M=a==="leakyrelu",N=a?fu(a,!0):null,D=new CI(p?S.shape:_.shape,p?_.shape:S.shape,p?[e.batchSize,g,e.outChannels]:[e.batchSize,e.outChannels,g],y,w,v,N,C,M),$=p?[S,_]:[_,S];if(i&&$.push(i),C&&$.push(o),M){const P=s.makeTensorInfo([],"float32",Ho(r,"float32"));$.push(P),b.push(P)}const F=s.runWebGLProgram(D,$,"float32"),B=Et({inputs:{x:F},backend:s,attrs:{shape:e.outShape}});b.push(F);for(const P of b)s.disposeIntermediateTensorInfo(P);return B}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RY(n){const{inputs:t,backend:e,attrs:s}=n,{x:i,filter:o}=t,{strides:r,pad:a,dataFormat:c,dilations:u,dimRoundingMode:l}=s,d=mo(c),h=Un(i.shape,o.shape,r,u,a,l,!1,d);let f;if(h.filterHeight===1&&h.filterWidth===1&&h.dilationHeight===1&&h.dilationWidth===1&&h.strideHeight===1&&h.strideWidth===1&&(h.padInfo.type==="SAME"||h.padInfo.type==="VALID"))f=kI({x:i,filter:o,convInfo:h,backend:e});else if(h.strideWidth<=2&&d==="channelsLast"&&nt().getBool("WEBGL_EXP_CONV")){const x=new NI(h),g=[[h.padInfo.top,h.padInfo.left],[h.strideHeight,h.strideWidth],[h.dilationHeight,h.dilationWidth],[h.inHeight,h.inWidth]];f=e.runWebGLProgram(x,[i,o],"float32",g)}else if(nt().getBool("WEBGL_CONV_IM2COL"))f=DI({x:i,filter:o,convInfo:h,backend:e});else{const x=new AI(h);f=e.runWebGLProgram(x,[i,o],"float32")}const p=Et({inputs:{x:f},backend:e,attrs:{shape:h.outShape}});return e.disposeIntermediateTensorInfo(f),p}const MY={kernelName:Kh,backendName:"webgl",kernelFunc:RY};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class AY{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;const e=t.strideHeight,s=t.strideWidth,i=t.padInfo.top,o=t.padInfo.left,r=t.dataFormat==="channelsLast";this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int d2 = coords.w;

        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int b = 0; b < ${t.batchSize}; b++) {
          for (int yR = 0; yR < ${t.outHeight}; yR++) {
            int xR = wR + yR * ${e} - ${i};

            if (xR < 0 || xR >= ${t.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${t.outWidth}; yC++) {
              int xC = wC + yC * ${s} - ${o};

              if (xC < 0 || xC >= ${t.inWidth}) {
                continue;
              }

              ${r?`float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);`:`float dyValue = getDy(b, d2, yR, yC);
              float xValue = getX(b, d1, xR, xC);
              dotProd += (xValue * dyValue);`}
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class NY{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const e=t.filterHeight,s=t.filterWidth,i=t.strideHeight,o=t.strideWidth,r=t.dataFormat==="channelsLast",a=e-1-t.padInfo.top,c=s-1-t.padInfo.left,u=r?1:2,l=r?2:3,d=r?3:1;this.userCode=`
      const ivec2 pads = ivec2(${a}, ${c});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[${d}];

        ivec2 dyCorner = ivec2(coords[${u}], coords[${l}]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${e}; wR++) {
          float dyR = float(dyRCorner + wR) / ${i}.0;

          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${e} - 1 - wR;

          for (int wC = 0; wC < ${s}; wC++) {
            float dyC = float(dyCCorner + wC) / ${o}.0;

            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${s} - 1 - wC;

            for (int d2 = 0; d2 < ${t.outChannels}; d2++) {

              if (${r}) {
                float xValue = getDy(batch, idyR, idyC, d2);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              } else {
                float xValue = getDy(batch, d2, idyR, idyC);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}}class kY{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;const e=t.strideDepth,s=t.strideHeight,i=t.strideWidth,o=t.padInfo.front,r=t.padInfo.top,a=t.padInfo.left;this.userCode=`
      void main() {
        ivec5 coords = getOutputCoords();
        int wF = coords.x;
        int wR = coords.y;
        int wC = coords.z;
        int d1 = coords.w;
        int d2 = coords.u;

        float dotProd = 0.0;

        for (int b = 0; b < ${t.batchSize}; b++) {
          for (int yF = 0; yF < ${t.outDepth}; yF++) {
            int xF = wF + yF * ${e} - ${o};

            if (xF < 0 || xF >= ${t.inDepth}) {
              continue;
            }

            for (int yR = 0; yR < ${t.outHeight}; yR++) {
              int xR = wR + yR * ${s} - ${r};

              if (xR < 0 || xR >= ${t.inHeight}) {
                continue;
              }

              for (int yC = 0; yC < ${t.outWidth}; yC++) {
                int xC = wC + yC * ${i} - ${a};

                if (xC < 0 || xC >= ${t.inWidth}) {
                  continue;
                }

                float dyValue = getDy(b, yF, yR, yC, d2);
                float xValue = getX(b, xF, xR, xC, d1);
                dotProd += (xValue * dyValue);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class DY{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const e=t.filterDepth,s=t.filterHeight,i=t.filterWidth,o=t.strideDepth,r=t.strideHeight,a=t.strideWidth,c=e-1-t.padInfo.front,u=s-1-t.padInfo.top,l=i-1-t.padInfo.left;this.userCode=`
      const ivec3 pads = ivec3(${c}, ${u}, ${l});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.u;


        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyFCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        float dotProd = 0.0;
        for (int wF = 0; wF < ${e}; wF++) {
          float dyF = float(dyFCorner + wF) / ${o}.0;

          if (dyF < 0.0 || dyF >= ${t.outDepth}.0 || fract(dyF) > 0.0) {
            continue;
          }
          int idyF = int(dyF);

          int wFPerm = ${e} - 1 - wF;

          for (int wR = 0; wR < ${s}; wR++) {
            float dyR = float(dyRCorner + wR) / ${r}.0;

            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||
              fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            int wRPerm = ${s} - 1 - wR;

            for (int wC = 0; wC < ${i}; wC++) {
              float dyC = float(dyCCorner + wC) / ${a}.0;

              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              int wCPerm = ${i} - 1 - wC;

              for (int d2 = 0; d2 < ${t.outChannels}; d2++) {
                float xValue = getDy(batch, idyF, idyR, idyC, d2);
                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $Y(n){const{inputs:t,backend:e,attrs:s}=n,{x:i,dy:o}=t,{strides:r,pad:a,dataFormat:c,dimRoundingMode:u,filterShape:l}=s,d=mo(c),h=Un(i.shape,l,r,1,a,u,!1,d),f=new AY(h);return e.runWebGLProgram(f,[i,o],"float32")}const FY={kernelName:z1,backendName:"webgl",kernelFunc:$Y};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class PY{constructor(t){this.variableNames=["dy","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"strides",type:"vec2"}],this.outputShape=t.inShape,this.enableShapeUniforms=Jn(this.outputShape.length);const e=t.filterHeight,s=t.filterWidth,i=e-1-t.padInfo.top,o=s-1-t.padInfo.left;this.userCode=`
      const ivec2 pads = ivec2(${i}, ${o});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];

        ivec2 dyCorner = ivec2(coords[1], coords[2]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        vec4 result = vec4(0.);
        for (int wR = 0; wR < ${e}; wR++) {
          float dyR = float(dyRCorner + wR) / strides[0];
          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);
          int wRPerm = ${e} - 1 - wR;

          for (int wC = 0; wC < ${s}; wC++) {
            int wCPerm = ${s} - 1 - wC;

            float dyC = float(dyCCorner + wC) / strides[1];
            bool idyCVal = (dyC >= 0.0) && (dyC < ${t.outWidth}.0)
              && (fract(dyC) == 0.0);
            int idyC = int(dyC);

            float dyC2 = float(dyCCorner + wC + 1) / strides[1];
            bool idyCVal2 = (dyC2 >= 0.0) && (dyC2 < ${t.outWidth}.0)
              && (fract(dyC2) == 0.0);
            int idyC2 = int(dyC2);

            if (idyCVal && idyCVal2) {
              for (int d2 = 0; d2 < ${t.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC, d2);
                vec4 dySample2 = (idyC / 2 == idyC2 / 2) ?
                  dySample : getDy(batch, idyR, idyC2, d2);

                vec2 dyValue = mod(float(idyC), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.xy += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));

                dyValue = mod(float(idyC2), 2.) == 0. ?
                  dySample2.xy : dySample2.zw;
                result.zw += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            } else if (idyCVal) {
              for (int d2 = 0; d2 < ${t.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC, d2);
                vec2 dyValue = mod(float(idyC), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.xy += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            } else if (idyCVal2) {
              for (int d2 = 0; d2 < ${t.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC2, d2);
                vec2 dyValue = mod(float(idyC2), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.zw += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            }
          }
        }
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LY(n){const{inputs:t,backend:e,attrs:s}=n,{dy:i,filter:o}=t,{inputShape:r,strides:a,pad:c,dataFormat:u,dimRoundingMode:l}=s,d=mo(u),h=Un(r,o.shape,a,1,c,l,!1,d);if(nt().getBool("WEBGL_PACK_CONV2DTRANSPOSE")&&d==="channelsLast"){const f=[[h.strideHeight,h.strideWidth]],p=new PY(h);return e.runWebGLProgram(p,[i,o],"float32",f)}else{const f=new NY(h);return e.runWebGLProgram(f,[i,o],"float32")}}const OY={kernelName:Yh,backendName:"webgl",kernelFunc:LY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UY(n){const{inputs:t,backend:e,attrs:s}=n,{x:i,filter:o}=t,{strides:r,pad:a,dilations:c}=s,u=Xo(i.shape,o.shape,r,c,a),l=new EY(u);return e.runWebGLProgram(l,[i,o],"float32")}const BY={kernelName:Zh,backendName:"webgl",kernelFunc:UY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zY(n){const{inputs:t,backend:e,attrs:s}=n,{x:i,dy:o}=t,{strides:r,pad:a,filterShape:c}=s,u=Xo(i.shape,c,r,1,a),l=new kY(u);return e.runWebGLProgram(l,[i,o],"float32")}const VY={kernelName:V1,backendName:"webgl",kernelFunc:zY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WY(n){const{inputs:t,backend:e,attrs:s}=n,{dy:i,filter:o}=t,{pad:r,strides:a,inputShape:c}=s,u=Xo(c,o.shape,a,1,r),l=new DY(u);return e.runWebGLProgram(l,[i,o],"float32")}const GY={kernelName:W1,backendName:"webgl",kernelFunc:WY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const HY=_c+`
  return cos(x);
`,XY=`
  vec4 result = cos(x);
  bvec4 isNaN = isnan(x);
  ${Jr}
  return result;
`,qY=Ae({opSnippet:HY,packedOpSnippet:XY}),jY={kernelName:Du,backendName:"webgl",kernelFunc:qY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const KY=`
  float e2x = exp(-x);
  return (e2x + 1.0 / e2x) / 2.0;
`,YY=Ae({opSnippet:KY}),ZY={kernelName:$u,backendName:"webgl",kernelFunc:YY};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class JY{constructor(t,e,s,i,o){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[r,a,c,u]=t,[l]=e,[d,h]=s;this.outputShape=[l,d,h,u];const f=i==="bilinear"?1:0,[p,x]=[`${a-1}.0`,`${c-1}.0`],[g,m,y]=d>1?[`${(a-1)/(d-1)}`,"(y2-y1) * height_ratio",`y1*${p} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${p}`],[w,b,_]=h>1?[`${(c-1)/(h-1)}`,"(x2-x1) * width_ratio",`x1*${x} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${x}`];this.userCode=`
      const float height_ratio = float(${g});
      const float width_ratio = float(${w});
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int y = coords[1];
        int x = coords[2];
        int d = coords[3];

        // get box vals
        float y1 = getBoxes(b,0);
        float x1 = getBoxes(b,1);
        float y2 = getBoxes(b,2);
        float x2 = getBoxes(b,3);

        // get image in batch index
        int bInd = round(getBoxInd(b));
        if(bInd < 0 || bInd >= ${r}) {
          return;
        }

        float height_scale = ${m};
        float width_scale = ${b};

        float in_y = ${y};
        if( in_y < 0.0 || in_y > ${p} ) {
          setOutput(float(${o}));
          return;
        }
        float in_x = ${_};
        if( in_x < 0.0 || in_x > ${x} ) {
          setOutput(float(${o}));
          return;
        }

        vec2 sourceFracIndexCR = vec2(in_x,in_y);
        if(${f} == 1) {
          // Compute the four integer indices.
          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);
          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));

          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);
          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);
          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);
          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);

          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);

          float top = topLeft + (topRight - topLeft) * fracCR.x;
          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;
          float newValue = top + (bottom - top) * fracCR.y;
          setOutput(newValue);
        } else {
          // Compute the coordinators of nearest neighbor point.
          ivec2 sourceNearestCR = ivec2(floor(
            sourceFracIndexCR + vec2(0.5,0.5)));
          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);
          setOutput(newValue);
        }
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const QY=n=>{const{inputs:t,backend:e,attrs:s}=n,{image:i,boxes:o,boxInd:r}=t,{cropSize:a,method:c,extrapolationValue:u}=s,l=new JY(i.shape,o.shape,a,c,u);return e.runWebGLProgram(l,[i,o,r],"float32")},tZ={kernelName:H1,backendName:"webgl",kernelFunc:QY};var mu;(function(n){n.Prod="*",n.Sum="+"})(mu||(mu={}));class Qw{constructor(t,e,s,i){this.op=t,this.outputShape=e,this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}];const o=this.outputShape.length,r=this.op===mu.Prod?"1.0":"0.0",a=s?r:`getX(${tv(o,"coords",this.op)})`,c=this.outputShape[this.outputShape.length-1];let u="",l="";s?(u=i?`end != ${c-1}`:"end != 0",l=i?"end + 1":"end - 1"):(u=i?`end + pow2 < ${c}`:"end >= pow2",l=i?"end + pow2":"end - pow2"),this.userCode=`
      void main() {
        ${Ve(o)} coords = getOutputCoords();
        int end = ${ev(o,"coords",this.op)};
        float val = ${a};
        int pow2 = int(pow(2.0, index));
        if (${u}) {
          int idx = ${l};
          ${ev(o,"coords",this.op)} = idx;
          val ${this.op}= getX(${tv(o,"coords",this.op)});
        }
        setOutput(val);
      }
    `}}function tv(n,t,e){if(n===1)return`${t}`;if(n===2)return`${t}.x, ${t}.y`;if(n===3)return`${t}.x, ${t}.y, ${t}.z`;if(n===4)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw new Error(`Cumulative ${e} for rank ${n} is not yet supported`)}function ev(n,t,e){if(n===1)return`${t}`;if(n===2)return`${t}.y`;if(n===3)return`${t}.z`;if(n===4)return`${t}.w`;throw new Error(`Cumulative ${e} for rank ${n} is not yet supported`)}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $I(n,t,e,s,i,o){const r=t.shape.length,a=un([s],r);let c=t;a!=null&&(c=cs({inputs:{x:t},backend:e,attrs:{perm:a}}));const u=mn(1,r)[0];if(u!==r-1)throw new Error(`WebGL cumprod shader expects an inner-most axis=${t.shape.length-1} but got axis=${s}`);const l=c.shape[u];let d=Is({inputs:{x:c},backend:e});for(let h=0;h<=Math.ceil(Math.log2(l))-1;h++){const f=new Qw(n,c.shape,!1,o),p=[[h]],x=d;d=e.runWebGLProgram(f,[d],d.dtype,p),e.disposeIntermediateTensorInfo(x)}if(i){const h=new Qw(n,c.shape,i,o),f=d;d=e.runWebGLProgram(h,[d],d.dtype),e.disposeIntermediateTensorInfo(f)}if(a!=null){const h=qo(a),f=cs({inputs:{x:d},backend:e,attrs:{perm:h}});return e.disposeIntermediateTensorInfo(d),e.disposeIntermediateTensorInfo(c),f}return d}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eZ(n){const{inputs:t,backend:e,attrs:s}=n,{x:i}=t,{axis:o,exclusive:r,reverse:a}=s;return $I(mu.Prod,i,e,o,r,a)}const nZ={kernelName:G1,backendName:"webgl",kernelFunc:eZ};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sZ(n){const{inputs:t,backend:e,attrs:s}=n,{x:i}=t,{axis:o,exclusive:r,reverse:a}=s;return $I(mu.Sum,i,e,o,r,a)}const iZ={kernelName:Jh,backendName:"webgl",kernelFunc:sZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oZ(n){const{inputs:t,backend:e,attrs:s}=n,{x:i,weights:o}=t,{size:r,binaryOutput:a}=s;if(i.shape.length===1){const c=e.readSync(i.dataId),u=e.readSync(o.dataId),l=pI(c,u,o.dtype,o.shape,r);return e.makeTensorInfo([r],o.dtype,l)}else if(i.shape.length===2){const c=e.bufferSync(i),u=e.bufferSync(o),l=uq(c,u,r,a);return e.makeTensorInfo(l.shape,o.dtype,l.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${i.shape.length}.`)}const rZ={kernelName:X1,backendName:"webgl",kernelFunc:oZ};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class aZ{constructor(t,e,s){this.variableNames=["x"],this.outputShape=[],this.outputShape=t,this.blockSize=e,this.dataFormat=s,this.userCode=`
    void main() {
      ivec4 coords = getOutputCoords();
      int b = coords[0];
      int h = ${this.getHeightCoordString()};
      int w = ${this.getWidthCoordString()};
      int d = ${this.getDepthCoordString()};

      int in_h = h / ${e};
      int offset_h = imod(h, ${e});
      int in_w = w / ${e};
      int offset_w = imod(w, ${e});
      int offset_d = (offset_h * ${e} + offset_w) *
        ${this.getOutputDepthSize()};
      int in_d = d + offset_d;

      float result = ${this.getInputSamplingString()};
      setOutput(result);
    }
  `}getHeightCoordString(){return this.dataFormat==="NHWC"?"coords[1]":"coords[2]"}getWidthCoordString(){return this.dataFormat==="NHWC"?"coords[2]":"coords[3]"}getDepthCoordString(){return this.dataFormat==="NHWC"?"coords[3]":"coords[1]"}getOutputDepthSize(){return this.dataFormat==="NHWC"?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return this.dataFormat==="NHWC"?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cZ(n){const{inputs:t,backend:e,attrs:s}=n,{x:i}=t,{blockSize:o,dataFormat:r}=s,a=i.shape[0],c=r==="NHWC"?i.shape[1]:i.shape[2],u=r==="NHWC"?i.shape[2]:i.shape[3],l=r==="NHWC"?i.shape[3]:i.shape[1],d=c*o,h=u*o,f=l/(o*o),p=r==="NHWC"?[a,d,h,f]:[a,f,d,h],x=new aZ(p,o,r);return e.runWebGLProgram(x,[i],i.dtype)}const uZ={kernelName:q1,backendName:"webgl",kernelFunc:cZ};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class FI{constructor(t,e=!1,s=null,i=!1,o=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=t.outShape,this.enableShapeUniforms=Jn(this.outputShape.length);const r=t.filterHeight,a=t.filterWidth,c=t.outChannels/t.inChannels;let u="",l="";s&&(i?u=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${s}
        }`:o?u=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${s}
        }`:u=`
          float activation(float x) {
            ${s}
          }
        `,l="result = activation(result);");const d=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),i&&this.variableNames.push("preluActivationWeights"),o&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${u}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${c};
        int q = d2 - d1 * ${c};

        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.
        for (int wR = 0; wR < ${r}; wR++) {
          int xR = xRCorner + wR * dilations[0];

          if (xR < 0 || xR >= inDims[0]) {
            continue;
          }

          for (int wC = 0; wC < ${a}; wC++) {
            int xC = xCCorner + wC * dilations[1];

            if (xC < 0 || xC >= inDims[1]) {
              continue;
            }

            float xVal = getX(batch, xR, xC, d1);
            float wVal = getW(wR, wC, d1, q);
            dotProd += xVal * wVal;
          }
        }

        float result = dotProd;
        ${d}
        ${l}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class PI{constructor(t,e=!1,s=null,i=!1,o=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=t.outShape,this.enableShapeUniforms=Jn(this.outputShape.length);const r=t.outChannels/t.inChannels,a=t.padInfo.left,c=t.strideWidth,u=t.dilationWidth,l=t.filterHeight,d=t.filterWidth,h=d;let f=`
      int xR; int xC; int xCOffset;
      vec4 wTexel; vec4 previous; vec4 final;`;for(let m=0;m<d;m++)f+=`
          vec4 xTexelC${m*2};
          int xTexelC${m*2}Ready;
          vec4 xTexelC${m*2+1};
          int xTexelC${m*2+1}Ready;
          vec4 xC${m};`;f+=`
    for (int r = 0; r < ${l}; r++) {
      `;for(let m=0;m<d;m++)f+=`
          xTexelC${m*2} = vec4(0.0);
          xTexelC${m*2}Ready = 0;
          xTexelC${m*2+1} = vec4(0.0);
          xTexelC${m*2+1}Ready = 0;
          xC${m} = vec4(0.0);`;f+=`
        xR = xRCorner + r * dilations[0];
        if (xR >=0 && xR < inDims[0]) {
      `;for(let m=0;m<(h+1)/2;m++){const y=m*2;if(f+=`
          xC = xCCorner + ${y*u};
          `,c===1){if(y<d&&(a%2===1?(f+=`
                xCOffset = xC + 1;
                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y}Ready == 0) {
                  xTexelC${y} = getX(batch, xR, xCOffset, d1);

                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${y}.zw = vec2(0.0);
                  }
                  xTexelC${y}Ready = 1;
                }
              `,u===1&&y>0?f+=`
                xC${y} = vec4(xTexelC${y-2}.zw, xTexelC${y}.xy);
                `:f+=`
                  xCOffset = xC + 1 - 2;

                  if (xCOffset >= 0 && xCOffset < inDims[1]) {
                    previous = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      previous.zw = vec2(0.0);
                    }

                    xC${y} = vec4(previous.zw, xTexelC${y}.xy);
                  } else {
                    xC${y} = vec4(0.0, 0.0, xTexelC${y}.xy);
                  }
                  `):f+=`
                if (xC >= 0 && xC < inDims[1] && xTexelC${y}Ready == 0) {
                  xTexelC${y} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${y}.zw = vec2(0.0);
                  }
                  xTexelC${y}Ready = 1;
                }

                xC${y} = xTexelC${y};
                `,y+1<d)){const w=a%2===0?R1(u):u;u%2===0&&a%2===1||u%2!==0&&a%2!==1?(f+=`
                  xCOffset = xC + imod(pads[1], 2) + ${w};

                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y+1}Ready == 0) {
                    xTexelC${y+1} = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      xTexelC${y+1}.zw = vec2(0.0);
                    }
                    xTexelC${y+1}Ready = 1;
                  }
                  `,u>1?f+=`
                    xCOffset -= 2;
                    if (xCOffset >= 0 && xCOffset < inDims[1]) {
                     previous = getX(batch, xR, xCOffset, d1);
                     xC${y+1} = vec4(previous.zw, xTexelC${y+1}.xy);
                    } else {
                     xC${y+1} = vec4(0.0, 0.0, xTexelC${y+1}.xy);
                    }
                    `:f+=`
                    xC${y+1} = vec4(xTexelC${y}.zw, xTexelC${y+1}.xy);
                    `):w===1?f+=`
                    xC${y+1} = xTexelC${y};
                    `:f+=`
                    xCOffset = xC + ${w};

                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y+1}Ready == 0) {
                      xTexelC${y+1} = getX(batch, xR, xCOffset, d1);
                      if (xCOffset + 1 >= inDims[1]) {
                        xTexelC${y+1}.zw = vec2(0.0);
                      }
                      xTexelC${y+1}Ready = 1;
                    }

                    xC${y+1} = xTexelC${y+1};
                    `}}else y<d&&(a%2===1?(f+=`
                xCOffset = xC + 1 - strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y}Ready == 0) {
                  xTexelC${y} = getX(batch, xR, xCOffset, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${y}.zw = vec2(0.0);
                  }
                  xTexelC${y}Ready = 1;
                }

                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${y+1}Ready == 0) {
                  xTexelC${y+1} = getX(batch, xR, xC + 1, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xC + 2 >= inDims[1]) {
                    xTexelC${y+1}.zw = vec2(0.0);
                  }
                  xTexelC${y+1}Ready = 1;
                }

                xC${y} = vec4(xTexelC${y}.zw, xTexelC${y+1}.zw);
              `,y+1<d&&(f+=`
                  final = vec4(0.0);
                  xCOffset = xC + 1 + strides[1];
                  if(xCOffset >= 0 && xCOffset < inDims[1]) {
                    final = getX(batch, xR, xCOffset, d1);
                  }
                  xC${y+1} = vec4(xTexelC${y+1}.xy, final.xy);
                `)):(f+=`
                if(xC >= 0 && xC < inDims[1] && xTexelC${y}Ready == 0) {
                  xTexelC${y} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${y}.zw = vec2(0.0);
                  }
                  xTexelC${y}Ready = 1;
                }

                xCOffset = xC + strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y+1}Ready == 0) {
                  xTexelC${y+1} = getX(batch, xR, xCOffset, d1);
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${y+1}.zw = vec2(0.);
                  }
                  xTexelC${y+1}Ready = 1;
                }

                xC${y} = vec4(
                  xTexelC${y}.xy, xTexelC${y+1}.xy);
              `,y+1<d&&(f+=`
                  xC${y+1} = vec4(xTexelC${y}.zw, xTexelC${y+1}.zw);
                `)));y<d&&(f+=`
            wTexel = getW(r, ${y}, d1, q);
            dotProd += xC${y} * vec4(wTexel.xz, wTexel.xz);
          `,y+1<d&&(f+=`
              wTexel = getW(r, ${y+1}, d1, q);
              dotProd += xC${y+1} * vec4(wTexel.xz, wTexel.xz);
            `))}f+=`
    }
  `,f+=`
      }
    `;let p="",x="";s&&(i?p=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${s}
        }`:o?p=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${s}
        }`:p=`vec4 activation(vec4 x) {
          ${s}
        }`,x="result = activation(result);");const g=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),i&&this.variableNames.push("preluActivationWeights"),o&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${p}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${r};
        int q = d2 - d1 * ${r};
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
        vec4 dotProd = vec4(0.000000000000001);

        ${f}

        vec4 result = dotProd - vec4(0.000000000000001);
        ${g}
        ${x}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lZ(n){const{inputs:t,backend:e,attrs:s}=n,{x:i,filter:o}=t,{strides:r,pad:a,dilations:c,dimRoundingMode:u}=s;let l=c;l==null&&(l=[1,1]),k(Yn(r,l),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${r} and dilations '${l}'`);const d=Un(i.shape,o.shape,r,l,a,u,!0);let h;nt().getBool("WEBGL_PACK_DEPTHWISECONV")&&d.strideWidth<=2&&d.outChannels/d.inChannels===1?h=new PI(d):h=new FI(d);const f=[[d.padInfo.top,d.padInfo.left],[d.strideHeight,d.strideWidth],[d.dilationHeight,d.dilationWidth],[d.inHeight,d.inWidth]];return e.runWebGLProgram(h,[i,o],"float32",f)}const dZ={kernelName:Qh,backendName:"webgl",kernelFunc:lZ};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class hZ{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;const e=t.strideHeight,s=t.strideWidth,i=t.padInfo.top,o=t.padInfo.left,r=t.outChannels/t.inChannels;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int dm = coords.w;
        int d2 = d1 * ${r} + dm;

        float dotProd = 0.0;

        // TO DO: Vec4 over the batch size
        for (int b = 0; b < ${t.batchSize}; b++) {
          for (int yR = 0; yR < ${t.outHeight}; yR++) {
            int xR = wR + yR * ${e} - ${i};

            if (xR < 0 || xR >= ${t.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${t.outWidth}; yC++) {
              int xC = wC + yC * ${s} - ${o};

              if (xC < 0 || xC >= ${t.inWidth}) {
                continue;
              }

              float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class fZ{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const e=t.filterHeight,s=t.filterWidth,i=t.strideHeight,o=t.strideWidth,r=e-1-t.padInfo.top,a=s-1-t.padInfo.left,c=t.outChannels/t.inChannels;this.userCode=`
      const ivec2 pads = ivec2(${r}, ${a});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];
        ivec2 dyCorner = coords.yz - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        float dotProd = 0.0;

        for (int wR = 0; wR < ${e}; wR++) {
          float dyR = float(dyRCorner + wR) / ${i}.0;

          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${e} - 1 - wR;

          for (int wC = 0; wC < ${s}; wC++) {
            float dyC = float(dyCCorner + wC) / ${o}.0;

            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${s} - 1 - wC;

            // TO DO: Vec4 over the channelMul
            for (int dm = 0; dm < ${c}; dm++) {
              int d2 = d1 * ${c} + dm;
              float xValue = getDy(batch, idyR, idyC, d2);
              float wValue = getW(wRPerm, wCPerm, d1, dm);
              dotProd += xValue * wValue;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pZ(n){const{inputs:t,backend:e,attrs:s}=n,{x:i,dy:o}=t,{strides:r,dilations:a,pad:c,dimRoundingMode:u,filterShape:l}=s,d=Un(i.shape,l,r,a,c,u,!0),h=new hZ(d);return e.runWebGLProgram(h,[i,o],"float32")}const mZ={kernelName:j1,backendName:"webgl",kernelFunc:pZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gZ(n){const{inputs:t,backend:e,attrs:s}=n,{dy:i,filter:o}=t,{strides:r,dilations:a,pad:c,dimRoundingMode:u,inputShape:l}=s,d=Un(l,o.shape,r,a,c,u,!0),h=new fZ(d);return e.runWebGLProgram(h,[i,o],"float32")}const xZ={kernelName:K1,backendName:"webgl",kernelFunc:gZ};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class yZ{constructor(t){this.variableNames=["X"],this.outputShape=[t,t],this.userCode=`
      void main() {
          ivec2 coords = getOutputCoords();
          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;
          setOutput(val);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bZ(n){const{inputs:t,backend:e}=n,{x:s}=t,i=[...s.shape,...s.shape],o=ct(s.shape),r=Et({inputs:{x:s},backend:e,attrs:{shape:[o]}}),a=new yZ(o),c=e.runWebGLProgram(a,[r],r.dtype),u=Et({inputs:{x:c},backend:e,attrs:{shape:i}});return e.disposeIntermediateTensorInfo(r),e.disposeIntermediateTensorInfo(c),u}const wZ={kernelName:_2,backendName:"webgl",kernelFunc:bZ};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class vZ{constructor(t){this.variableNames=["x","W"],this.outputShape=t.outShape;const{inHeight:e,inWidth:s,padInfo:i,strideHeight:o,strideWidth:r,filterHeight:a,filterWidth:c,dilationHeight:u,dilationWidth:l}=t,{top:d,left:h}=i;this.userCode=`
      const ivec2 strides = ivec2(${o}, ${r});
      const ivec2 pads = ivec2(${d}, ${h});
      const float neg_infinity = -3.4e38;

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.w;
        ivec2 outTopLeftCorner =
            coords.yz * strides - pads;
        int hBeg = outTopLeftCorner.x;
        int wBeg = outTopLeftCorner.y;

        float curVal = neg_infinity;
        for (int h = 0; h < ${a}; h++) {
          int hIn = hBeg + h * ${u};

          if (hIn >= 0 && hIn < ${e}) {
            for (int w = 0; w < ${c}; w++) {
              int wIn = wBeg + w * ${l};

              if (wIn >= 0 && wIn < ${s}) {
                float xVal = getX(batch, hIn, wIn, d1);
                float wVal = getW(h, w, d1);

                float val = xVal + wVal;
                if (val > curVal) {
                  curVal = val;
                }
              }
            }
          }
        }

        float result = curVal;
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _Z(n){const{inputs:t,backend:e,attrs:s}=n,{x:i,filter:o}=t,{strides:r,pad:a,dilations:c}=s,u=yl(i.shape,o.shape,r,a,"NHWC",c);let l;const d=new vZ(u);l=e.runWebGLProgram(d,[i,o],"float32");const h=Et({inputs:{x:l},backend:e,attrs:{shape:u.outShape}});return e.disposeIntermediateTensorInfo(l),h}const CZ={kernelName:tf,backendName:"webgl",kernelFunc:_Z};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SZ(n){const{inputs:t,backend:e,attrs:s}=n,{equation:i}=s,o=t,{allDims:r,summedDims:a,idDims:c}=gx(i,o.length);yx(r.length,c,o);const{path:u,steps:l}=bx(a,c),d=l.length;let h=null,f=r.length;const p=[];for(let x=0;x<d;++x){for(const g of l[x]){const{permutationIndices:m,expandDims:y}=xx(f,c[g]);let w;wx(m)?w=o[g]:(w=cs({inputs:{x:o[g]},backend:e,attrs:{perm:m}}),p.push(w));const b=w.shape.slice();for(let _=0;_<y.length;++_)b.splice(y[_],0,1);Pe(w.shape,b)||(w=Et({inputs:{x:w},backend:e,attrs:{shape:b}}),p.push(w)),h===null?h=w:(h=ry({inputs:{a:w,b:h},backend:e}),p.push(h))}x<d-1&&(u[x]>=0&&(h=mp({inputs:{x:h},backend:e,attrs:{axis:u[x]-(r.length-f),keepDims:!1}}),p.push(h)),f--)}for(const x of p)x!==h&&e.disposeIntermediateTensorInfo(x);return h}const TZ={kernelName:Y1,backendName:"webgl",kernelFunc:SZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const EZ="return (x >= 0.0) ? x : (exp(x) - 1.0);",IZ=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,RZ=Ae({opSnippet:EZ,packedOpSnippet:IZ}),MZ={kernelName:Pu,backendName:"webgl",kernelFunc:RZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const AZ="return (b >= 0.0) ? a : a * (b + 1.0);",NZ=`
  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));
  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));
`,kZ=n=>{const{inputs:t,backend:e}=n,{dy:s,y:i}=t,o=nt().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new vc(NZ,s.shape,i.shape):new zr(AZ,s.shape,i.shape);return e.runWebGLProgram(o,[s,i],s.dtype)},DZ={kernelName:Z1,backendName:"webgl",kernelFunc:kZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $Z=`
  return vec4(equal(a, b));
`,FZ="return float(a == b);",PZ=zn({opSnippet:FZ,packedOpSnippet:$Z,dtype:"bool",cpuKernelImpl:pq}),LZ={kernelName:ef,backendName:"webgl",kernelFunc:PZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const OZ=`
  // Error function is calculated approximately with elementary function.
  // See "Handbook of Mathematical Functions with Formulas,
  // Graphs, and Mathematical Tables", Abramowitz and Stegun.
  float p = ${ux};
  float a1 = ${lx};
  float a2 = ${dx};
  float a3 = ${hx};
  float a4 = ${fx};
  float a5 = ${px};

  float sign = sign(x);
  x = abs(x);
  float t = 1.0 / (1.0 + p * x);
  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));
`,UZ=Ae({opSnippet:OZ}),BZ={kernelName:Lu,backendName:"webgl",kernelFunc:UZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zZ=_c+`
  return exp(x);
`,VZ=`
  vec4 result = exp(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,LI=Ae({opSnippet:zZ,packedOpSnippet:VZ,cpuKernelImpl:mq,dtype:"float32"}),WZ={kernelName:Ou,backendName:"webgl",kernelFunc:LI};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function X0(n){const{inputs:t,attrs:e,backend:s}=n,{dim:i}=e,{input:o}=t,r=o.shape.length,a=o.shape.slice();let c=i;return i<0&&(k(-(r+1)<=i,()=>`Axis must be in the interval [${-(r+1)}, ${r}]`),c=r+i+1),a.splice(c,0,1),Et({inputs:{x:o},backend:s,attrs:{shape:a}})}const GZ={kernelName:nf,backendName:"webgl",kernelFunc:X0};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nv="return exp(x) - 1.0;",HZ=Ae({opSnippet:nv,packedOpSnippet:nv,cpuKernelImpl:gq}),XZ={kernelName:Uu,backendName:"webgl",kernelFunc:HZ};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class sv{constructor(t,e,s){this.variableNames=["real","imag"];const i=e[1];this.outputShape=e;const o=s?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,r=s?`${i}.0`:"1.0";let a;if(t==="real")a="return real * expR - imag * expI;";else if(t==="imag")a="return real * expI + imag * expR;";else throw new Error(`FFT component must be either "real" or "imag", got ${t}.`);this.userCode=`
      const float exponentMultiplier = ${o};

      float unaryOpComplex(float real, float expR, float imag, float expI) {
        ${a}
      }

      float mulMatDFT(int batch, int index) {
        float indexRatio = float(index) / float(${i});
        float exponentMultiplierTimesIndexRatio =
            exponentMultiplier * indexRatio;

        float result = 0.0;

        for (int i = 0; i < ${i}; i++) {
          // x = (-2|2 * PI / N) * index * i;
          float x = exponentMultiplierTimesIndexRatio * float(i);
          float expR = cos(x);
          float expI = sin(x);
          float real = getReal(batch, i);
          float imag = getImag(batch, i);

          result +=
              unaryOpComplex(real, expR, imag, expI) / ${r};
        }

        return result;
      }

      void main() {
        ivec2 coords = getOutputCoords();
        setOutput(mulMatDFT(coords[0], coords[1]));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OI(n,t,e){const s=e.texData.get(n.dataId),i=ct(n.shape),o=n.shape[n.shape.length-1],r=i/o,a=Et({inputs:{x:n},backend:e,attrs:{shape:[r,o]}}),c=a.shape,u=new sv("real",c,t),l=new sv("imag",c,t),d=[{dataId:s.complexTensorInfos.real.dataId,dtype:s.complexTensorInfos.real.dtype,shape:c},{dataId:s.complexTensorInfos.imag.dataId,dtype:s.complexTensorInfos.imag.dtype,shape:c}],h=e.runWebGLProgram(u,d,"float32"),f=e.runWebGLProgram(l,d,"float32"),p=Jo({inputs:{real:h,imag:f},backend:e});e.disposeIntermediateTensorInfo(h),e.disposeIntermediateTensorInfo(f);const x=Et({inputs:{x:p},backend:e,attrs:{shape:n.shape}});return e.disposeIntermediateTensorInfo(a),e.disposeIntermediateTensorInfo(p),x}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qZ(n){const{inputs:t,backend:e}=n,{input:s}=t;return OI(s,!1,e)}const jZ={kernelName:J1,backendName:"webgl",kernelFunc:qZ};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class KZ{constructor(t,e){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=t,this.userCode=`
      void main() {
        // Input can be obtained from uniform value.
        setOutput(value);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ul(n){const{backend:t,attrs:e}=n,{shape:s,value:i}=e;let{dtype:o}=e;if(o=o||ac(i),o==="string"){const r=fn(o,ct(s));return r.fill(i),t.makeTensorInfo(s,o,r)}else{const r=new KZ(s,i),a=[[i]];return t.runWebGLProgram(r,[],o,a)}}const YZ={kernelName:Q1,backendName:"webgl",kernelFunc:Ul};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ZZ{constructor(t){this.variableNames=["Image"],this.outputShape=[];const e=t[2];this.outputShape=t,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];

          int coordX = ${e} - x - 1;
          float outputValue;
          if(coordX >= 0 && coordX < ${e}) {
            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);
          } else {
            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);
          }
          setOutput(outputValue);
        }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const JZ={kernelName:tg,backendName:"webgl",kernelFunc:({inputs:n,backend:t})=>{const{image:e}=n,s=t,i=new ZZ(e.shape);return s.runWebGLProgram(i,[e],e.dtype)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iv="return floor(x);",QZ=Ae({opSnippet:iv,packedOpSnippet:iv,cpuKernelImpl:xq}),tJ={kernelName:Bu,backendName:"webgl",kernelFunc:QZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eJ=`
  float s = sign(a) * sign(b);
  int ia = round(a);
  int ib = round(b);
  if (ib != 0) {
    // Windows (D3D) wants guaranteed non-zero int division at compile-time.
    return float(idiv(ia, ib, s));
  } else {
    return NAN;
  }
`,nJ=`
  ivec4 ia = round(a);
  ivec4 ib = round(b);
  bvec4 cond = notEqual(ib, ivec4(0));
  ivec4 result = ivec4(0);
  vec4 s = sign(a) * sign(b);

  // Windows (D3D) wants guaranteed non-zero int division at compile-time.
  if (cond[0]) {
    result[0] = idiv(ia[0], ib[0], s[0]);
  }
  if (cond[1]) {
    result[1] = idiv(ia[1], ib[1], s[1]);
  }
  if (cond[2]) {
    result[2] = idiv(ia[2], ib[2], s[2]);
  }
  if (cond[3]) {
    result[3] = idiv(ia[3], ib[3], s[3]);
  }
  return vec4(result);
`,sJ=zn({opSnippet:eJ,packedOpSnippet:nJ,dtype:"int32"}),iJ={kernelName:zu,backendName:"webgl",kernelFunc:sJ};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class oJ{constructor(t){this.variableNames=["A"];const e=us(),[s,i]=t;this.outputShape=t,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${i}.0, ${s}.0);

        vec4 values = ${e.texture2D}(A, uv);
        float value;
        if (depth == 0) {
          value = values.r;
        } else if (depth == 1) {
          value = values.g;
        } else if (depth == 2) {
          value = values.b;
        } else if (depth == 3) {
          value = values.a;
        }

        setOutput(floor(value * 255.0 + 0.5));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class rJ{constructor(t){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const e=us(),[s,i]=t;this.outputShape=t,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];

        vec4 result = vec4(0.);

        for(int row=0; row<=1; row++) {
          for(int col=0; col<=1; col++) {
            texC = coords[1] + row;
            depth = coords[2] + col;

            vec2 uv = (vec2(texC, texR) + halfCR) /
                       vec2(${i}.0, ${s}.0);
            vec4 values = ${e.texture2D}(A, uv);
            float value;
            if (depth == 0) {
              value = values.r;
            } else if (depth == 1) {
              value = values.g;
            } else if (depth == 2) {
              value = values.b;
            } else if (depth == 3) {
              value = values.a;
            }

            result[row * 2 + col] = floor(value * 255.0 + 0.5);
          }
        }

        ${e.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aJ={kernelName:_9,backendName:"webgl",kernelFunc:cJ};let ba,gm=nt().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");function cJ(n){const{inputs:t,backend:e,attrs:s}=n;let{pixels:i}=t;const{numChannels:o}=s,r=typeof HTMLVideoElement<"u"&&i instanceof HTMLVideoElement,a=typeof HTMLImageElement<"u"&&i instanceof HTMLImageElement,[c,u]=r?[i.videoWidth,i.videoHeight]:[i.width,i.height],l=[u,c],d=[u,c,o];if(a||r){const x=nt().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");(ba==null||x!==gm)&&(gm=x,ba=document.createElement("canvas").getContext("2d",{willReadFrequently:gm})),ba.canvas.width=c,ba.canvas.height=u,ba.drawImage(i,0,0,c,u),i=ba.canvas}const h=e.makeTensorInfo(l,"int32");e.texData.get(h.dataId).usage=ks.PIXELS,e.gpgpu.uploadPixelDataToTexture(e.getTexture(h.dataId),i);const f=nt().getBool("WEBGL_PACK")?new rJ(d):new oJ(d),p=e.runWebGLProgram(f,[h],"int32");return e.disposeData(h.dataId),p}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uJ(n){const{inputs:t,backend:e,attrs:s}=n,{x:i,filter:o,bias:r,preluActivationWeights:a}=t,{strides:c,pad:u,dataFormat:l,dilations:d,dimRoundingMode:h,activation:f,leakyreluAlpha:p}=s,x=mo(l),g=Un(i.shape,o.shape,c,d,u,h,!1,x);let m;const y=[],w=r!=null,b=a!=null,_=f==="leakyrelu",T=()=>{const I=[i,o],S=(v,C)=>{if(C==="NCHW"&&v.shape.length===1&&v.shape[0]!==1){const M=Et({inputs:{x:v},backend:e,attrs:{shape:[v.shape[0],1,1]}});return y.push(M),M}return v};if(w&&I.push(S(r,l)),b&&I.push(S(a,l)),_){const v=e.makeTensorInfo([],"float32",Ho(p,"float32"));I.push(v),y.push(v)}return I};if(g.filterHeight===1&&g.filterWidth===1&&g.dilationHeight===1&&g.dilationWidth===1&&g.strideHeight===1&&g.strideWidth===1&&(g.padInfo.type==="SAME"||g.padInfo.type==="VALID"))m=kI({x:i,filter:o,convInfo:g,backend:e,bias:r,activation:f,preluActivationWeights:a,leakyreluAlpha:p});else if(g.strideWidth<=2&&x==="channelsLast"&&nt().getBool("WEBGL_EXP_CONV")){const I=f?fu(f,!0):null,S=new NI(g,w,I,b,_),v=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],C=T();m=e.runWebGLProgram(S,C,"float32",v)}else if(nt().getBool("WEBGL_CONV_IM2COL"))m=DI({x:i,filter:o,convInfo:g,backend:e,bias:r,activation:f,preluActivationWeights:a,leakyreluAlpha:p});else{const I=f?fu(f,!1):null,S=new AI(g,w,I,b,_),v=T();m=e.runWebGLProgram(S,v,"float32")}const E=Et({inputs:{x:m},backend:e,attrs:{shape:g.outShape}});return y.push(m),y.forEach(I=>e.disposeIntermediateTensorInfo(I)),E}const lJ={kernelName:th,backendName:"webgl",kernelFunc:uJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dJ(n){const{inputs:t,backend:e,attrs:s}=n,{x:i,filter:o,bias:r,preluActivationWeights:a}=t,{strides:c,pad:u,dilations:l,dimRoundingMode:d,activation:h,leakyreluAlpha:f}=s,p=[];let x=l;x==null&&(x=[1,1]),k(Yn(c,x),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${c} and dilations '${x}'`);const g=Un(i.shape,o.shape,c,x,u,d,!0),m=nt().getBool("WEBGL_PACK_DEPTHWISECONV")&&g.strideWidth<=2&&g.outChannels/g.inChannels===1,y=h?fu(h,m):null,w=[i,o],b=r!=null,_=a!=null,T=h==="leakyrelu";if(b&&w.push(r),_&&w.push(a),T){const v=e.makeTensorInfo([],"float32",Ho(f,"float32"));w.push(v),p.push(v)}let E;m?E=new PI(g,b,y,_,T):E=new FI(g,b,y,_,T);const I=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],S=e.runWebGLProgram(E,w,"float32",I);return p.forEach(v=>e.disposeIntermediateTensorInfo(v)),S}const hJ={kernelName:z2,backendName:"webgl",kernelFunc:dJ};class fJ{constructor(t,e,s,i){this.sliceDim=t,this.strides=e,this.paramsShape=i,this.variableNames=["x","indices"],this.outputShape=s;const o=Ve(s.length);let r=`
    int index;`;for(let a=0;a<this.sliceDim;a++)r+=`
          index = round(getIndices(coords[0], ${a}));
          out_of_bounds = out_of_bounds || index < 0;
          out_of_bounds = out_of_bounds || index >= ${this.paramsShape[a]};
          flattenIndex += index * ${this.strides[a]};`;this.userCode=`
         void main() {
          ${o} coords = getOutputCoords();
          int flattenIndex = 0;
          bool out_of_bounds = false;

          ${r}

          setOutput(out_of_bounds ? 0.0 : getX(flattenIndex, coords[1]));
        }
      `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pJ(n){const{inputs:t,backend:e}=n,{params:s,indices:i}=t,o=i.shape,r=o[o.length-1],a=ct(s.shape),[c,u,l,d]=Jg(s,i),h=Et({inputs:{x:i},backend:e,attrs:{shape:[u,r]}}),f=Et({inputs:{x:s},backend:e,attrs:{shape:[ct(s.shape)/l,l]}});if(e.shouldExecuteOnCPU([s,i])||s.dtype==="string"){const m=e.readSync(i.dataId),y=e.bufferSync(s),w=yq(m,y,s.dtype,u,r,l,d,s.shape,a);return e.makeTensorInfo(c,s.dtype,w.values)}const p=new fJ(r,d,[u,l],s.shape),x=e.runWebGLProgram(p,[f,h],f.dtype),g=Et({inputs:{x},backend:e,attrs:{shape:c}});return e.disposeIntermediateTensorInfo(h),e.disposeIntermediateTensorInfo(f),e.disposeIntermediateTensorInfo(x),g}const mJ={kernelName:C2,backendName:"webgl",kernelFunc:pJ};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class gJ{constructor(t,e){this.variableNames=["A","indices"],this.outputShape=e,this.rank=e.length;const s=Ve(this.rank),i=xJ(t);this.userCode=`
      void main() {
        ${s} resRC = getOutputCoords();
        int index = int(getIndices(resRC.x, resRC.z));
        float inBounds = (index >= 0) && (index < ${t[2]}) ? 1.0 : 0.0;
        setOutput(inBounds * getA(${i}));
      }
    `}}function xJ(n,t){const e=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[];for(let i=0;i<n.length;i++)i===2?s.push("index"):s.push(`${e[i]}`);return s.join()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UI(n){const{inputs:t,backend:e,attrs:s}=n,{x:i,indices:o}=t,{axis:r,batchDims:a}=s,c=ve(r,i.shape)[0];if(nt().get("DEBUG")){const y=e.readSync(o.dataId),w=i.shape[c];for(let b=0;b<y.length;++b){const _=y[b];k(_<=w-1&&_>=0,()=>`GatherV2: the index value ${_} is not in [0, ${w-1}]`)}}const u=_x(i,o,c,a),l=ct(o.shape),d=[],h=Et({inputs:{x:i},backend:e,attrs:{shape:[u.batchSize,u.outerSize,u.dimSize,u.sliceSize]}}),f=Et({inputs:{x:o},backend:e,attrs:{shape:[u.batchSize,l/u.batchSize]}});d.push(h),d.push(f);const p=[u.batchSize,u.outerSize,l/u.batchSize,u.sliceSize];if(e.shouldExecuteOnCPU([i,o])||i.dtype==="string"){const y=e.bufferSync(f),w=e.bufferSync(h),b=bq(w,y,p);return d.forEach(_=>e.disposeIntermediateTensorInfo(_)),e.makeTensorInfo(u.outputShape,b.dtype,b.values)}const x=new gJ(h.shape,p),g=e.runWebGLProgram(x,[h,f],h.dtype);d.push(g);const m=Et({inputs:{x:g},backend:e,attrs:{shape:u.outputShape}});return d.forEach(y=>e.disposeIntermediateTensorInfo(y)),m}const yJ={kernelName:of,backendName:"webgl",kernelFunc:UI};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bJ="return float(a > b);",wJ=`
  return vec4(greaterThan(a, b));
`,vJ=zn({opSnippet:bJ,packedOpSnippet:wJ,cpuKernelImpl:wq,dtype:"bool"}),_J={kernelName:rf,backendName:"webgl",kernelFunc:vJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CJ="return float(a >= b);",SJ=`
  return vec4(greaterThanEqual(a, b));
`,TJ=zn({opSnippet:CJ,packedOpSnippet:SJ,dtype:"bool",cpuKernelImpl:vq}),EJ={kernelName:Vu,backendName:"webgl",kernelFunc:TJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IJ(n){const{inputs:t,backend:e}=n,{input:s}=t;return OI(s,!0,e)}const RJ={kernelName:eg,backendName:"webgl",kernelFunc:IJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const MJ="return float(!isnan(x) && !isinf(x));",AJ=Ae({opSnippet:MJ,dtype:"bool"}),NJ={kernelName:Gu,backendName:"webgl",kernelFunc:AJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kJ="return float(isinf(x));",DJ=Ae({opSnippet:kJ,dtype:"bool"}),$J={kernelName:Hu,backendName:"webgl",kernelFunc:DJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const FJ="return float(isnan(x));",PJ=Ae({opSnippet:FJ,dtype:"bool"}),LJ={kernelName:Xu,backendName:"webgl",kernelFunc:PJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const OJ="return float(a < b);",UJ=`
  return vec4(lessThan(a, b));
`,BJ=zn({opSnippet:OJ,packedOpSnippet:UJ,cpuKernelImpl:_q,dtype:"bool"}),zJ={kernelName:cf,backendName:"webgl",kernelFunc:BJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const VJ="return float(a <= b);",WJ=`
  return vec4(lessThanEqual(a, b));
`,GJ=zn({opSnippet:VJ,packedOpSnippet:WJ,cpuKernelImpl:Cq,dtype:"bool"}),HJ={kernelName:uf,backendName:"webgl",kernelFunc:GJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XJ(n){const{backend:t,attrs:e}=n,{start:s,stop:i,num:o}=e,r=Sq(s,i,o);return t.makeTensorInfo([r.length],"float32",r)}const qJ={kernelName:S2,backendName:"webgl",kernelFunc:XJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jJ=_c+`
  return x < 0.0 ? 0./0. : log(x);
`,KJ=`
  vec4 result = log(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);
  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);
  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);
  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);
  return result;
`,YJ=Ae({opSnippet:jJ,packedOpSnippet:KJ,cpuKernelImpl:Tq}),ZJ={kernelName:qu,backendName:"webgl",kernelFunc:YJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const JJ=_c+`
  return log(1.0 + x);
`,QJ=Ae({opSnippet:JJ}),tQ={kernelName:ju,backendName:"webgl",kernelFunc:QJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eQ="return float(a >= 1.0 && b >= 1.0);",nQ=`
  return vec4(
    vec4(greaterThanEqual(a, vec4(1.0))) *
    vec4(greaterThanEqual(b, vec4(1.0))));
`,sQ=zn({opSnippet:eQ,packedOpSnippet:nQ,dtype:"bool"}),iQ={kernelName:lf,backendName:"webgl",kernelFunc:sQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oQ="return float(!(x >= 1.0));",rQ=Ae({opSnippet:oQ}),aQ={kernelName:df,backendName:"webgl",kernelFunc:rQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cQ="return float(a >= 1.0 || b >= 1.0);",uQ=`
  return min(
    vec4(greaterThanEqual(a, vec4(1.0))) +
    vec4(greaterThanEqual(b, vec4(1.0))),
    vec4(1.0));
`,lQ=zn({opSnippet:cQ,packedOpSnippet:uQ,dtype:"bool"}),dQ={kernelName:hf,backendName:"webgl",kernelFunc:lQ};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class hQ{constructor(t,e,s,i,o){this.variableNames=["x"],this.outputShape=[];const r=e,a=t[3]-1;this.outputShape=t;let c;const u=`float(${s}) + float(${i}) * sum`;o===.5?c=`inversesqrt(${u})`:o===1?c=`1.0/(${u})`:c=`exp(log(${u}) * float(-${o}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];
        int d = coords[3];
        float x = getX(b, r, c, d);
        float sum = 0.0;
        for (int j = -${r}; j <= ${r}; j++) {
          int idx = d + j;
          if (idx >= 0 && idx <=  ${a}) {
            float z = getX(b, r, c, idx);
            sum += z * z;
          }
        }
        float val = x * ${c};
        setOutput(val);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class fQ{constructor(t,e,s,i,o){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const r=e,a=t[3]-1;this.outputShape=t;let c;const u=`float(${s}) + float(${i}) * sum`;o===.5?c=`inversesqrt(${u})`:o===1?c=`1.0/(${u})`:c=`exp(log(${u}) * float(-${o}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords.x;
        int r = coords.y;
        int c = coords.z;
        int d = coords.w;

        bool hasNextCol = d < ${this.outputShape[3]};
        bool hasNextRow = c < ${this.outputShape[2]};

        vec4 sum = vec4(0.);
        vec4 xFragAtOutputCoords = getX(b, r, c, d);

        vec4 xAtOutputCoords = vec4(
          getChannel(xFragAtOutputCoords, vec2(c, d)),
          hasNextCol ?
            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,
          hasNextRow ?
            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,
          (hasNextRow && hasNextCol) ?
            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0
        );

        int firstChannel = d - ${r};
        vec2 cache = vec2(0.);
        if(firstChannel >= 0){
          vec4 firstChannelFrag = getX(b, r, c, firstChannel);
          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));
            if(hasNextRow){
              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));
            }
        }

        ivec2 depth = ivec2(d, d + 1);
        for (int j = - ${r}; j <= ${r}; j++) {
          ivec2 idx = depth + j;
          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));
          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${a}));

          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;
          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;

          if(depthInRange || depthPlusOneInRange){
            vec4 z = vec4(0.);
            vec4 xFragAtCurrentDepth;
            z.xz = cache.xy;
            if(depthPlusOneInRange && hasNextCol){
              xFragAtCurrentDepth = idx.y != d ?
                getX(b, r, c, idx.y) : xFragAtOutputCoords;
              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));
              if(hasNextRow){
                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));
              }
            }
            cache.xy = z.yw;
            sum += z * z;
          }
        }
        vec4 result = xAtOutputCoords * ${c};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pQ=n=>{const{inputs:t,backend:e,attrs:s}=n,{x:i}=t,{depthRadius:o,bias:r,alpha:a,beta:c}=s,u=nt().getBool("WEBGL_PACK_NORMALIZATION")?new fQ(i.shape,o,r,a,c):new hQ(i.shape,o,r,a,c);return e.runWebGLProgram(u,[i],i.dtype)},mQ={kernelName:ff,backendName:"webgl",kernelFunc:pQ};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class gQ{constructor(t,e,s,i,o){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=t,this.depth=t[3],this.depthRadius=e,this.bias=s,this.alpha=i,this.beta=o,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];

        float result = 0.0;
        for (int d = 0; d < ${this.depth}; ++d) {
          int depthBegin = int(max(0.0, float(d - ${e})));
          int depthEnd = int(min(float(${this.depth}),
              float(d + ${e} + 1)));

          const int MIN_DEPTH_BEGIN = 0;
          const int MAX_DEPTH_END = ${this.depth};

          float norm = 0.0;
          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd) {
              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);
            }
            else {
              break;
            }
          }

          norm = float(${i}) * norm + float(${s});

          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd){
              float dyi = -2.0 * float(${i})
                * float(${o})
                * getInputImage(b, r, c, k) * getOutputImage(b, r, c, d)
                / norm;
              if (k == d) {
                dyi += pow(norm, -1.0 * ${o});
              }
              if (k == coords[3]) {
                dyi *= getDy(b, r, c, d);
                result += dyi;
              }
            }
            else {
              break;
            }
          }
      }
      setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xQ=n=>{const{inputs:t,backend:e,attrs:s}=n,{x:i,y:o,dy:r}=t,{depthRadius:a,bias:c,alpha:u,beta:l}=s,d=new gQ(i.shape,a,c,u,l);return e.runWebGLProgram(d,[i,o,r],i.dtype)},yQ={kernelName:sg,backendName:"webgl",kernelFunc:xQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bQ(n,t,e,s){const i=ct(t),r=ct(n.shape)/i,a=Et({inputs:{x:n},attrs:{shape:[r,i]},backend:s}),c=Qr(a,n.dtype,"max",s),u=Et({inputs:{x:c},attrs:{shape:e},backend:s});return s.disposeIntermediateTensorInfo(a),s.disposeIntermediateTensorInfo(c),u}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BI(n){const{inputs:t,backend:e,attrs:s}=n,{x:i}=t,{reductionIndices:o,keepDims:r}=s,a=i.shape.length,c=ve(o,i.shape);let u=c;const l=un(u,a),d=l!=null,h=e.shouldExecuteOnCPU([i]);let f=i;if(d){if(h){const w=e.texData.get(f.dataId).values,b=new Array(a);for(let E=0;E<b.length;E++)b[E]=i.shape[l[E]];const _=iy(w,i.shape,i.dtype,l,b);f=e.makeTensorInfo(b,i.dtype);const T=e.texData.get(f.dataId);T.values=_}else f=pp(i,l,e);u=mn(u.length,a)}Bn("max",u,a);const[p,x]=$n(f.shape,u);let g=p;r&&(g=wn(p,c));let m;if(h){const w=e.texData.get(f.dataId).values,b=Eq(w,ct(x),g,i.dtype);m=e.makeTensorInfo(g,i.dtype);const _=e.texData.get(m.dataId);_.values=b}else m=bQ(f,x,g,e);return d&&e.disposeIntermediateTensorInfo(f),m}const wQ={kernelName:pf,backendName:"webgl",kernelFunc:BI};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vQ=oy+`
  return max(a, b);
`,_Q=`
  vec4 result = vec4(max(a, b));
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+Jr+`
  return result;
`,CQ=zn({opSnippet:vQ,packedOpSnippet:_Q,cpuKernelImpl:Iq}),SQ={kernelName:Ku,backendName:"webgl",kernelFunc:CQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TQ(n){const{inputs:t,backend:e,attrs:s}=n,{x:i}=t;Pl(i,"maxPool");const{filterSize:o,strides:r,pad:a,dimRoundingMode:c}=s,u=1;k(Yn(r,u),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${r} and dilations '${u}'`);const l=ni(i.shape,o,r,u,a,c);if(l.filterWidth===1&&l.filterHeight===1&&Pe(l.inShape,l.outShape))return Is({inputs:{x:i},backend:e});const d=new pu(l,"max",!1);return e.runWebGLProgram(d,[i],i.dtype)}const EQ={kernelName:mf,backendName:"webgl",kernelFunc:TQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IQ(n){const{inputs:t,backend:e,attrs:s}=n,{x:i}=t,{filterSize:o,strides:r,pad:a,dataFormat:c,dimRoundingMode:u}=s,l=[1,1,1],d=po(i.shape,o,r,l,a,u,c),h=new ay(d,"max",!1);return e.runWebGLProgram(h,[i],i.dtype)}const RQ={kernelName:gf,backendName:"webgl",kernelFunc:IQ};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class MQ{constructor(t){this.variableNames=["dy","maxPos"],this.outputShape=t.inShape;const e=t.strideHeight,s=t.strideWidth,i=t.dilationHeight,o=t.effectiveFilterHeight,r=t.effectiveFilterWidth,a=o-1-t.padInfo.top,c=r-1-t.padInfo.left,u=o*r-1;this.userCode=`
      const ivec2 pads = ivec2(${a}, ${c});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${o};
          wR += ${i}) {
          float dyR = float(dyRCorner + wR) / ${e}.0;

          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${r}; wC++) {
            float dyC = float(dyCCorner + wC) / ${s}.0;

            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);
            int maxPosValue = ${u} - int(getMaxPos(b, idyR, idyC, d));

            // Get the current value, check it against the value from the
            // position matrix.
            int curPosValue = wR * ${r} + wC;
            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

            dotProd += dyValue * mask;
          }
        }
        setOutput(dotProd);
      }
    `}}class AQ{constructor(t){this.variableNames=["dy","maxPos"],this.outputShape=t.inShape;const e=t.strideDepth,s=t.strideHeight,i=t.strideWidth,o=t.dilationDepth,r=t.dilationHeight,a=t.dilationWidth,c=t.effectiveFilterDepth,u=t.effectiveFilterHeight,l=t.effectiveFilterWidth,d=c-1-t.padInfo.front,h=u-1-t.padInfo.top,f=l-1-t.padInfo.left,p=c*u*l-1;this.userCode=`
      const ivec3 pads = ivec3(${d}, ${h}, ${f});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${c};
           wD += ${o}) {
          float dyD = float(dyDCorner + wD) / ${e}.0;

          if (dyD < 0.0 || dyD >= ${t.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${u};
              wR += ${r}) {
            float dyR = float(dyRCorner + wR) / ${s}.0;

            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${l};
                wC += ${a}) {
              float dyC = float(dyCCorner + wC) / ${i}.0;

              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);
              int maxPosValue = ${p} -
                  int(getMaxPos(batch, idyD, idyR, idyC, ch));

              // Get the current value, check it against the value from the
              // position matrix.
              int curPosValue =
                  wD * ${u} * ${l} +
                  wR * ${l} + wC;
              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

              dotProd += dyValue * mask;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NQ(n){const{inputs:t,backend:e,attrs:s}=n,{dy:i,input:o}=t,r=o,{filterSize:a,strides:c,pad:u,dimRoundingMode:l}=s,d=[1,1,1],h=po(r.shape,a,c,d,u,l),f=new ay(h,"max",!0),p=e.runWebGLProgram(f,[r],r.dtype),x=new AQ(h),g=e.runWebGLProgram(x,[i,p],r.dtype);return e.disposeIntermediateTensorInfo(p),g}const kQ={kernelName:og,backendName:"webgl",kernelFunc:NQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DQ(n){const{inputs:t,backend:e,attrs:s}=n,{dy:i,input:o,output:r}=t,a=o;Pl([o,r],"maxPoolGrad");const{filterSize:c,strides:u,pad:l,dimRoundingMode:d}=s,h=ni(a.shape,c,u,1,l,d),f=!0,p=new pu(h,"max",f),x=e.runWebGLProgram(p,[a],a.dtype),g=new MQ(h),m=e.runWebGLProgram(g,[i,x],a.dtype);return e.disposeIntermediateTensorInfo(x),m}const $Q={kernelName:ig,backendName:"webgl",kernelFunc:DQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FQ(n,t,e,s){let i=new pu(e,"max",!1);const o=s.runWebGLProgram(i,[n],"float32");i=new pu(e,"max",!0,!0,t);const r=s.runWebGLProgram(i,[n],"float32");return[o,r]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PQ={kernelName:T2,backendName:"webgl",kernelFunc:({inputs:n,attrs:t,backend:e})=>{const{x:s}=n,{filterSize:i,strides:o,pad:r,includeBatchInIndex:a}=t,c=e;k(s.shape.length===4,()=>`Error in maxPool: input must be rank 4 but got rank ${s.shape.length}.`);const u=[1,1];k(Yn(o,u),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${o} and dilations '${u}'`);const l=ni(s.shape,i,o,u,r),[d,h]=FQ(s,a,l,c);return[d,h]}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LQ(n,t,e,s){const i=ct(t),r=ct(n.shape)/i,a=Et({inputs:{x:n},attrs:{shape:[r,i]},backend:s}),c=Qr(a,"float32","mean",s),u=Et({inputs:{x:c},attrs:{shape:e},backend:s});return s.disposeIntermediateTensorInfo(a),s.disposeIntermediateTensorInfo(c),u}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const OQ={kernelName:xf,backendName:"webgl",kernelFunc:({inputs:n,attrs:t,backend:e})=>{const{x:s}=n,{keepDims:i,axis:o}=t,r=e,a=s.shape.length,c=ve(o,s.shape);let u=c;const l=un(u,a),d=l!=null,h=r.shouldExecuteOnCPU([s]),f=[];let p=s;if(d){if(h){const b=r.texData.get(p.dataId).values,_=new Array(a);for(let I=0;I<_.length;I++)_[I]=s.shape[l[I]];const T=iy(b,s.shape,s.dtype,l,_);p=r.makeTensorInfo(_,s.dtype);const E=r.texData.get(p.dataId);E.values=T}else p=pp(s,l,r);f.push(p),u=mn(u.length,a)}Bn("sum",u,a);const[x,g]=$n(p.shape,u);let m=x;i&&(m=wn(x,c));const y=LQ(p,g,m,r);for(const w of f)r.disposeIntermediateTensorInfo(w);return y}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UQ(n){const{inputs:t,backend:e,attrs:s}=n,{x:i}=t,{axis:o,keepDims:r}=s,a=i.shape.length,c=ve(o,i.shape);let u=c;const l=un(u,a);let d=i;l!=null&&(d=cs({inputs:{x:i},backend:e,attrs:{perm:l}}),u=mn(u.length,i.shape.length)),Bn("min",u,a);const[h,f]=$n(d.shape,u),p=ct(f),x=Et({inputs:{x:d},backend:e,attrs:{shape:[-1,p]}}),g=Qr(x,x.dtype,"min",e);let m;if(r){const y=wn(h,c);m=Et({inputs:{x:g},backend:e,attrs:{shape:y}})}else m=Et({inputs:{x:g},backend:e,attrs:{shape:h}});return e.disposeIntermediateTensorInfo(x),e.disposeIntermediateTensorInfo(g),l!=null&&e.disposeIntermediateTensorInfo(d),m}const BQ={kernelName:yf,backendName:"webgl",kernelFunc:UQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zQ=oy+`
  return min(a, b);
`,VQ=`
  vec4 result = vec4(min(a, b));
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+Jr+`
  return result;
`,WQ=zn({opSnippet:zQ,packedOpSnippet:VQ,cpuKernelImpl:Rq}),GQ={kernelName:Yu,backendName:"webgl",kernelFunc:WQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class HQ{constructor(t,e,s){this.variableNames=["x"],this.outputShape=e.map((l,d)=>l[0]+t[d]+l[1]);const i=t.length,o=Ve(i),r=e.map(l=>l[0]).join(","),a=e.map((l,d)=>l[0]+t[d]).join(","),c=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,i),u=s==="reflect"?0:1;if(i===1){this.userCode=`
        int start = ${r};
        int end = ${a};

        void main() {
          int outC = getOutputCoords();
          if (outC < start) {
            outC = start * 2 - outC - ${u};
          } else if(outC >= end) {
            outC = (end - 1) * 2 - outC + ${u};
          }
          setOutput(getX(outC - start));
        }
      `;return}this.userCode=`
      ${o} start = ${o}(${r});
      ${o} end = ${o}(${a});

      void main() {
        ${o} outC = getOutputCoords();
        for (int i = 0; i < ${i}; i++) {
          if (outC[i] < start[i]) {
            outC[i] = start[i] * 2 - outC[i] - ${u};
          } else if(outC[i] >= end[i]) {
            outC[i] = (end[i] - 1) * 2 - outC[i] + ${u};
          }
        }
        ${o} coords = outC - start;
        setOutput(getX(${c}));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class XQ{constructor(t,e,s){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e.map((p,x)=>p[0]+t[x]+p[1]);const i=t.length,o=Ve(i),r=e.map(p=>p[0]).join(","),a=e.map((p,x)=>p[0]+t[x]).join(","),c=os("rc",i),u=os("source",i),l=`${c[i-1]} < ${this.outputShape[i-1]}`,d=i===1?"source":`vec2(${u.slice(-2).join()})`,h=s==="reflect"?0:1;let f="";if(i===1){const p=`
        ${o} source = rc;
        if (source < start) {
          source = start * 2 - source - ${h};
        } else if (source >= end) {
          source = (end - 1) * 2 - source + ${h};
        }
        source -= start;
      `;f=`
        ${o} rc = outputLoc;
        ${p}
        result[0] = getChannel(getX(${u.join()}), ${d});
        ${c[i-1]} += 1;
        if(${l}) {
          ${p}
          result[1] = getChannel(getX(${u.join()}), ${d});
        }
      `}else{const p=`
        ${o} source = rc;
        ${o} lt = ${o}(lessThan(source, start));
        ${o} gte = ${o}(greaterThanEqual(source, end));
        ${o} orig = 1 - (lt + gte);
        source = orig * source +
                lt * (start * 2 - source - ${h}) +
                gte * ((end - 1) * 2 - source + ${h});
        source -= start;
      `;f=`
        ${o} rc = outputLoc;
        ${p}
        result[0] = getChannel(getX(${u.join()}), ${d});
        ${c[i-1]} += 1;
        if(${l}) {
          ${p}
          result[1] = getChannel(getX(${u.join()}), ${d});
        }
        rc = outputLoc;
        ${c[i-2]} += 1;
        if(${c[i-2]} < ${this.outputShape[i-2]}) {
          ${p}
          result[2] = getChannel(getX(${u.join()}), ${d});
          ${c[i-1]} += 1;
          if(${l}) {
            ${p}
            result[3] = getChannel(getX(${u.join()}), ${d});
          }
        }
      `}this.userCode=`
      const ${o} start = ${o}(${r});
      const ${o} end = ${o}(${a});

      void main() {
        ${o} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${f}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qQ=({inputs:n,backend:t,attrs:e})=>{const{x:s}=n,{paddings:i,mode:o}=e,r=nt().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new XQ(s.shape,i,o):new HQ(s.shape,i,o);return t.runWebGLProgram(r,[s],s.dtype)},jQ={kernelName:bf,backendName:"webgl",kernelFunc:qQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const KQ=`if (b == 0.0) return NAN;
  return mod(a, b);`,YQ=`
  vec4 result = mod(a, b);
  bvec4 isNaN = equal(b, vec4(0.0));
  `+Jr+`
  return result;
`,ZQ=zn({opSnippet:KQ,packedOpSnippet:YQ}),JQ={kernelName:Zu,backendName:"webgl",kernelFunc:ZQ};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class QQ{constructor(t,e,s){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[t,s],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];

        float r = random(seed);
        float cdf = 0.0;

        for (int i = 0; i < ${e-1}; i++) {
          cdf += getProbs(batch, i);

          if (r < cdf) {
            setOutput(float(i));
            return;
          }
        }

        // If no other event happened, last event happened.
        setOutput(float(${e-1}));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ttt=`
if (a == b) {
  return 1.0;
};
return a / b;`,ett=`
  // vec4 one = vec4(equal(a, b));
  // return one + (vec4(1.0) - one) * a / b;
  vec4 result = a / b;
  if(a.x == b.x) {
    result.x = 1.;
  }
  if(a.y == b.y) {
    result.y = 1.;
  }
  if(a.z == b.z) {
    result.z = 1.;
  }
  if(a.w == b.w) {
    result.w = 1.;
  }

  return result;
`,zI=zn({opSnippet:ttt,packedOpSnippet:ett,checkOutOfBounds:!0}),ntt={kernelName:Fu,backendName:"webgl",kernelFunc:zI};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ov="return a - b;",VI=zn({opSnippet:ov,packedOpSnippet:ov,supportsComplex:!0,cpuKernelImpl:Kq}),stt={kernelName:fl,backendName:"webgl",kernelFunc:VI};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WI(n){const{inputs:t,backend:e,attrs:s}=n,{logits:i}=t,{dim:o}=s,r=ve([o],i.shape),a=BI({inputs:{x:i},backend:e,attrs:{reductionIndices:r,keepDims:!1}}),c=wn(a.shape,r),u=Et({inputs:{x:a},backend:e,attrs:{shape:c}}),l=VI({inputs:{a:i,b:u},backend:e}),d=LI({inputs:{x:l},backend:e}),h=mp({inputs:{x:d},backend:e,attrs:{axis:r,keepDims:!1}}),f=Et({inputs:{x:h},backend:e,attrs:{shape:c}}),p=zI({inputs:{a:d,b:f},backend:e});return e.disposeIntermediateTensorInfo(a),e.disposeIntermediateTensorInfo(u),e.disposeIntermediateTensorInfo(l),e.disposeIntermediateTensorInfo(d),e.disposeIntermediateTensorInfo(h),e.disposeIntermediateTensorInfo(f),p}const itt={kernelName:Lf,backendName:"webgl",kernelFunc:WI};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ott(n){const{inputs:t,backend:e,attrs:s}=n,{logits:i}=t,{numSamples:o,seed:r,normalized:a}=s,c=a?i:WI({inputs:{logits:i},backend:e,attrs:{dim:i.shape.length-1}}),u=c.shape[0],l=c.shape[1],d=new QQ(u,l,o),h=[[r]],f=e.runWebGLProgram(d,[c],"int32",h);return a||e.disposeIntermediateTensorInfo(c),f}const rtt={kernelName:E2,backendName:"webgl",kernelFunc:ott};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const att=ii+`
  return -x;
`,ctt=`
  vec4 result = -x;
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`;function utt(n){const{inputs:t,backend:e}=n,{x:s}=t;if(e.shouldExecuteOnCPU([s])){const o=e.texData.get(s.dataId),[r,a]=Aq(o.values,s.shape,s.dtype);return e.makeTensorInfo(a,s.dtype,r)}let i;return nt().getBool("WEBGL_PACK_UNARY_OPERATIONS")?i=new Ro(s.shape,ctt):i=new $i(s.shape,att),e.runWebGLProgram(i,[s],s.dtype)}const ltt={kernelName:wf,backendName:"webgl",kernelFunc:utt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dtt=qg;function htt(n){Ns("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:e,attrs:s}=n,{boxes:i,scores:o}=t,{maxOutputSize:r,iouThreshold:a,scoreThreshold:c}=s,u=e.readSync(i.dataId),l=e.readSync(o.dataId),{selectedIndices:d}=dtt(u,l,r,a,c);return e.makeTensorInfo([d.length],"int32",new Int32Array(d))}const ftt={kernelName:rg,backendName:"webgl",kernelFunc:htt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ptt=jg;function mtt(n){Ns("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:e,attrs:s}=n,{boxes:i,scores:o}=t,{maxOutputSize:r,iouThreshold:a,scoreThreshold:c,padToMaxOutputSize:u}=s,l=e.readSync(i.dataId),d=e.readSync(o.dataId),{selectedIndices:h,validOutputs:f}=ptt(l,d,r,a,c,u);return[e.makeTensorInfo([h.length],"int32",new Int32Array(h)),e.makeTensorInfo([],"int32",new Int32Array([f]))]}const gtt={kernelName:ag,backendName:"webgl",kernelFunc:mtt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xtt=Kg;function ytt(n){Ns("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:e,attrs:s}=n,{boxes:i,scores:o}=t,{maxOutputSize:r,iouThreshold:a,scoreThreshold:c,softNmsSigma:u}=s,l=e.readSync(i.dataId),d=e.readSync(o.dataId),h=r,f=a,p=c,x=u,{selectedIndices:g,selectedScores:m}=xtt(l,d,h,f,p,x);return[e.makeTensorInfo([g.length],"int32",new Int32Array(g)),e.makeTensorInfo([m.length],"float32",new Float32Array(m))]}const btt={kernelName:cg,backendName:"webgl",kernelFunc:ytt};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class wtt{constructor(t,e,s,i){this.variableNames=["indices"],this.outputShape=[t,e],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int index = round(getIndices(coords.x));
        setOutput(mix(float(${i}), float(${s}),
                      float(index == coords.y)));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vtt=n=>{const{inputs:t,backend:e,attrs:s}=n,{indices:i}=t,{dtype:o,depth:r,onValue:a,offValue:c}=s,u=ct(i.shape),l=new wtt(u,r,a,c),d=Et({inputs:{x:i},backend:e,attrs:{shape:[u]}}),h=e.runWebGLProgram(l,[d],o);e.disposeIntermediateTensorInfo(d);const f=[...i.shape,r],p=Et({inputs:{x:h},backend:e,attrs:{shape:f}});return e.disposeIntermediateTensorInfo(h),p},_tt={kernelName:Cf,backendName:"webgl",kernelFunc:vtt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Sh(n){const{inputs:t,backend:e}=n,{x:s}=t;if(s.dtype==="complex64"){const i=Ol({inputs:{input:s},backend:e}),o=Sh({inputs:{x:i},backend:e}),r=gp({inputs:{input:s},backend:e}),a=Sh({inputs:{x:r},backend:e}),c=Jo({inputs:{real:o,imag:a},backend:e});return e.disposeIntermediateTensorInfo(i),e.disposeIntermediateTensorInfo(o),e.disposeIntermediateTensorInfo(r),e.disposeIntermediateTensorInfo(a),c}else return Ul({attrs:{shape:s.shape,dtype:s.dtype,value:s.dtype==="string"?"":0},backend:e})}const Ctt={kernelName:Bf,backendName:"webgl",kernelFunc:Sh};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GI(n){const{inputs:t,backend:e}=n,{x:s}=t;if(s.dtype==="string")throw new Error("onesLike is not supported under string dtype");if(s.dtype==="complex64"){const i=Ol({inputs:{input:s},backend:e}),o=GI({inputs:{x:i},backend:e}),r=gp({inputs:{input:s},backend:e}),a=Sh({inputs:{x:r},backend:e}),c=Jo({inputs:{real:o,imag:a},backend:e});return e.disposeIntermediateTensorInfo(i),e.disposeIntermediateTensorInfo(o),e.disposeIntermediateTensorInfo(r),e.disposeIntermediateTensorInfo(a),c}else return Ul({attrs:{shape:s.shape,dtype:s.dtype,value:1},backend:e})}const Stt={kernelName:_f,backendName:"webgl",kernelFunc:GI};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ttt(n){const{inputs:t,backend:e,attrs:s}=n,{axis:i}=s;if(t.length===1)return X0({inputs:{input:t[0]},backend:e,attrs:{dim:i}});const o=t[0].shape,r=t[0].dtype;t.forEach(l=>{M1(o,l.shape,"All tensors passed to stack must have matching shapes"),k(r===l.dtype,()=>"All tensors passed to stack must have matching dtypes")});const a=[],c=t.map(l=>{const d=X0({inputs:{input:l},backend:e,attrs:{dim:i}});return a.push(d),d}),u=MI({inputs:c,backend:e,attrs:{axis:i}});return a.forEach(l=>e.disposeIntermediateTensorInfo(l)),u}const Ett={kernelName:Sf,backendName:"webgl",kernelFunc:Ttt};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Itt{constructor(t,e,s){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=e.map((u,l)=>u[0]+t[l]+u[1]);const i=t.length,o=Ve(i),r=e.map(u=>u[0]).join(","),a=e.map((u,l)=>u[0]+t[l]).join(","),c=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,i);if(i===1){this.userCode=`
        int start = ${r};
        int end = ${a};

        void main() {
          int outC = getOutputCoords();
          if (outC < start || outC >= end) {
            setOutput(value);
          } else {
            setOutput(getX(outC - start));
          }
        }
      `;return}this.userCode=`
      ${o} start = ${o}(${r});
      ${o} end = ${o}(${a});

      void main() {
        ${o} outC = getOutputCoords();
        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {
          setOutput(value);
        } else {
          ${o} coords = outC - start;
          setOutput(getX(${c}));
        }
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Rtt{constructor(t,e,s){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=e.map((x,g)=>x[0]+t[g]+x[1]);const i=t.length,o=Ve(i),r=e.map(x=>x[0]).join(","),a=e.map((x,g)=>x[0]+t[g]).join(","),c=os("rc",i),u=os("source",i),l=`${c[i-1]} < ${this.outputShape[i-1]}`,d=i===1?"source":`vec2(${u.slice(-2).join()})`,h=[`${o} rc = outputLoc;`,`${c[i-1]} += 1;
       if(${l}) {
      `,i===1?"":`}
       rc = outputLoc;
       ${c[i-2]} += 1;
       if(${c[i-2]} < ${this.outputShape[i-2]}) {`,i===1?"":`  ${c[i-1]} += 1;
         if(${l}) {`],f=i===1?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let p="";for(let x=0,g=i===1?2:4;x<g;x++)p+=`
        ${h[x]}
        if (${f}) {
          result[${x}] = float(value);
        } else {
          ${o} source = rc - start;
          result[${x}] = getChannel(getX(${u.join()}), ${d});
        }
      `;p+=i===1?"} ":"}}",this.userCode=`
      const ${o} start = ${o}(${r});
      const ${o} end = ${o}(${a});

      void main() {
        ${o} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${p}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const HI=n=>{const{inputs:t,backend:e,attrs:s}=n,{x:i}=t,{paddings:o,constantValue:r}=s;if(ct(i.shape)===0){const u=o.map((l,d)=>l[0]+i.shape[d]+l[1]);return Ul({backend:e,attrs:{shape:u,value:r,dtype:i.dtype}})}const a=nt().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Rtt(i.shape,o,r):new Itt(i.shape,o,r),c=[[r]];return e.runWebGLProgram(a,[i],i.dtype,c)},Mtt={kernelName:Tf,backendName:"webgl",kernelFunc:HI};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Att=`
  if(a < 0.0 && floor(b) < b){
    return NAN;
  }
  if (b == 0.0) {
    return 1.0;
  }
  return (round(mod(b, 2.0)) != 1) ?
      pow(abs(a), b) : sign(a) * pow(abs(a), b);
`,Ntt=`
  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.
  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));
  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);
  vec4 result = multiplier * pow(abs(a), b);

  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS
  bvec4 isExpZero = equal(b, vec4(0.0));
  result.r = isExpZero.r ? 1.0 : result.r;
  result.g = isExpZero.g ? 1.0 : result.g;
  result.b = isExpZero.b ? 1.0 : result.b;
  result.a = isExpZero.a ? 1.0 : result.a;

  bvec4 isNaN1 = lessThan(a, vec4(0.0));
  bvec4 isNaN2 = lessThan(floor(b), b);
  bvec4 isNaN = bvec4(isNaN1.x && isNaN2.x, isNaN1.y && isNaN2.y, isNaN1.z && isNaN2.z, isNaN1.w && isNaN2.w);
  `+Jr+`
  return result;
`,ktt=zn({opSnippet:Att,packedOpSnippet:Ntt}),Dtt={kernelName:Qu,backendName:"webgl",kernelFunc:ktt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $tt(n){const{inputs:t,backend:e,attrs:s}=n,{x:i}=t,{axis:o,keepDims:r}=s,a=i.shape.length,c=[],u=ve(o,i.shape);let l=u;const d=un(l,a);let h=i;d!=null&&(h=cs({inputs:{x:i},backend:e,attrs:{perm:d}}),l=mn(l.length,a),c.push(h)),Bn("prod",l,a);let f;if(e.shouldExecuteOnCPU([h])){const p=e.texData.get(h.dataId).values,{outVals:x,outShape:g,outDtype:m}=kq(h.shape,h.dtype,p,l);f=e.makeTensorInfo(g,m,x)}else{const[p,x]=$n(h.shape,l),g=ct(x),m=Et({inputs:{x:h},backend:e,attrs:{shape:[-1,g]}}),y=wg(i.dtype),w=Qr(m,y,"prod",e);f=Et({inputs:{x:w},backend:e,attrs:{shape:p}}),c.push(m),c.push(w)}if(r){c.push(f);const p=wn(f.shape,u);f=Et({inputs:{x:f},backend:e,attrs:{shape:p}})}return c.forEach(p=>e.disposeIntermediateTensorInfo(p)),f}const Ftt={kernelName:If,backendName:"webgl",kernelFunc:$tt};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ptt(n){const{inputs:t,backend:e,attrs:s}=n,{paramsNestedSplits:i,paramsDenseValues:o,indices:r}=t,{outputRaggedRank:a}=s,c=i.map(m=>e.readSync(m.dataId)),u=i.map(m=>m.shape),l=e.readSync(o.dataId),d=e.readSync(r.dataId),[h,f,p]=Dq(c,u,l,o.shape,o.dtype,d,r.shape,a),x=h.map(m=>e.makeTensorInfo([m.length],"int32",m)),g=e.makeTensorInfo(p,o.dtype,f);return x.concat([g])}const Ltt={kernelName:I2,backendName:"webgl",kernelFunc:Ptt};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ott(n){const{inputs:t,backend:e}=n,{starts:s,limits:i,deltas:o}=t,r=e.readSync(s.dataId),a=e.readSync(i.dataId),c=e.readSync(o.dataId),[u,l]=$q(r,s.shape,s.dtype,a,i.shape,c,o.shape),d=e.makeTensorInfo([u.length],"int32",u),h=e.makeTensorInfo([l.length],s.dtype,l);return[d,h]}const Utt={kernelName:R2,backendName:"webgl",kernelFunc:Ott};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Btt(n){const{inputs:t,backend:e,attrs:s}=n,{shape:i,values:o,defaultValue:r,rowPartitionTensors:a}=t,{rowPartitionTypes:c}=s,u=e.readSync(i.dataId),l=e.readSync(o.dataId),d=e.readSync(r.dataId),h=a.map(g=>e.readSync(g.dataId)),f=a.map(g=>g.shape),[p,x]=Fq(u,i.shape,l,o.shape,o.dtype,d,r.shape,h,f,c);return e.makeTensorInfo(p,o.dtype,x)}const ztt={kernelName:M2,backendName:"webgl",kernelFunc:Btt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const XI=n=>{const{backend:t,attrs:e}=n,{start:s,stop:i,step:o,dtype:r}=e,a=Pq(s,i,o,r);return t.makeTensorInfo([a.length],r,a)},Vtt={kernelName:ug,backendName:"webgl",kernelFunc:XI};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Wtt="return 1.0 / x;",Gtt=Ae({opSnippet:Wtt}),Htt={kernelName:tl,backendName:"webgl",kernelFunc:Gtt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Xtt=ii+`
  return (x < 0.0) ? 0.0 : x;
`,qtt=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,jtt=Ae({opSnippet:Xtt,packedOpSnippet:qtt}),Ktt={kernelName:el,backendName:"webgl",kernelFunc:jtt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ytt=ii+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,Ztt=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,Jtt=Ae({opSnippet:Ytt,packedOpSnippet:Ztt}),Qtt={kernelName:nl,backendName:"webgl",kernelFunc:Jtt};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class tet{constructor(t,e,s,i,o){this.variableNames=["A"],this.outputShape=[];const[r,a,c,u]=t;this.outputShape=[r,e,s,u];const l=[i&&e>1?a-1:a,i&&s>1?c-1:c],d=[i&&e>1?e-1:e,i&&s>1?s-1:s];let h;o?h="(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":h="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${l[0]/d[0]},
          ${l[1]/d[1]});
      const vec2 inputShapeRC = vec2(${a}.0, ${c}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${h};

        // Compute the four integer indices.
        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));
        ivec2 sourceCeilRC = ivec2(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);
        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);
        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);
        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);

        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);

        float top = topLeft + (topRight - topLeft) * fracRC.y;
        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;
        float newValue = top + (bottom - top) * fracRC.x;

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class eet{constructor(t,e,s,i,o){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[r,a,c,u]=t;this.outputShape=[r,e,s,u];const l=[i&&e>1?a-1:a,i&&s>1?c-1:c],d=[i&&e>1?e-1:e,i&&s>1?s-1:s];let h;o?h="(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":h="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${l[0]/d[0]},
          ${l[1]/d[1]},
          ${l[1]/d[1]});
      const vec3 inputShapeRC = vec3(${a}.0, ${c}.0,
                                     ${c}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${h};

        // Compute the four integer indices.
        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));
        ivec3 sourceCeilRC = ivec3(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${u-1};
        bool hasNextRow = coords.z < ${s-1};

        // In parallel, construct four corners for all four components in
        // packed 2x2 cell.
        vec4 topLeft = vec4(
          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 bottomLeft = vec4(
          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 topRight = vec4(
          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec4 bottomRight = vec4(
          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);

        vec4 top = mix(topLeft, topRight, fracRC.yyzz);
        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);
        vec4 newValue = mix(top, bottom, fracRC.x);

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function net(n){const{inputs:t,backend:e,attrs:s}=n,{images:i}=t,{alignCorners:o,halfPixelCenters:r,size:a}=s,[c,u]=a,l=nt().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new eet(i.shape,c,u,o,r):new tet(i.shape,c,u,o,r);return e.runWebGLProgram(l,[i],"float32")}const set={kernelName:Af,backendName:"webgl",kernelFunc:net};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class iet{constructor(t,e,s){this.variableNames=["dy"],this.outputShape=[],this.outputShape=e;const[,i,o]=e,[,r,a]=t,c=[s&&r>1?i-1:i,s&&a>1?o-1:o],u=[s&&r>1?r-1:r,s&&a>1?a-1:a],l=c[0]/u[0],d=c[1]/u[1],h=1/l,f=1/d,p=Math.ceil(h)*2+2,x=Math.ceil(f)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${l});
        const float widthScale = float(${d});

        const float invHeightScale = float(${h});
        const float invWidthScale = float(${f});

        const int winHeight = int(${p});
        const int winWidth = int(${x});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(startRLerp - float(winHeight / 2));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(startCLerp - float(winWidth / 2));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${r}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${a}) {
              continue;
            }

            float dxR = float(dyR) * heightScale;
            int topDxRIndex = int(floor(dxR));
            int bottomDxRIndex = int(min(ceil(dxR), ${i-1}.0));
            float dxRLerp = dxR - float(topDxRIndex);
            float inverseDxRLerp = 1.0 - dxRLerp;

            float dxC = float(dyC) * widthScale;
            int leftDxCIndex = int(floor(dxC));
            int rightDxCIndex = int(min(ceil(dxC), ${o-1}.0));
            float dxCLerp = dxC - float(leftDxCIndex);
            float inverseDxCLerp = 1.0 - dxCLerp;

            if (r == topDxRIndex && c == leftDxCIndex) {
              // topLeft
              accumulator +=
                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;
            }

            if (r == topDxRIndex && c == rightDxCIndex) {
              // topRight
              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;
            }

            if (r == bottomDxRIndex && c == leftDxCIndex) {
              // bottomLeft
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;
            }

            if (r == bottomDxRIndex && c == rightDxCIndex) {
              // bottomRight
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oet(n){const{inputs:t,backend:e,attrs:s}=n,{images:i,dy:o}=t,{alignCorners:r}=s,a=new iet(o.shape,i.shape,r);return e.runWebGLProgram(a,[o],o.dtype)}const ret={kernelName:hg,backendName:"webgl",kernelFunc:oet};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class aet{constructor(t,e,s,i,o){this.variableNames=["A"],this.outputShape=[];const[r,a,c,u]=t;this.outputShape=[r,e,s,u];const l=[i&&e>1?a-1:a,i&&s>1?c-1:c],d=[i&&e>1?e-1:e,i&&s>1?s-1:s],h=i?"0.5":"0.0";let f;o?f="max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":f="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${l[0]/d[0]},
          ${l[1]/d[1]});
      const vec2 inputShapeRC = vec2(${a}.0, ${c}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${f};

        // Compute the coordinators of nearest neighbor point.
        ivec2 sourceNearestRC = ivec2(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${h})));
        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class cet{constructor(t,e,s,i,o){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[r,a,c,u]=t;this.outputShape=[r,e,s,u];const l=[i&&e>1?a-1:a,i&&s>1?c-1:c],d=[i&&e>1?e-1:e,i&&s>1?s-1:s],h=i?"0.5":"0.0";let f;o?f="max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":f="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${l[0]/d[0]},
          ${l[1]/d[1]},
          ${l[1]/d[1]});
      const vec3 inputShapeRC = vec3(${a}.0, ${c}.0,
                                     ${c}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${f};

        // Compute the coordinators of nearest neighbor point.
        ivec3 sourceNearestRC = ivec3(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${h})));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${u-1};
        bool hasNextRow = coords.z < ${s-1};

        vec4 newValue = vec4(
          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),
          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uet(n){const{inputs:t,backend:e,attrs:s}=n,{images:i}=t,{alignCorners:o,halfPixelCenters:r,size:a}=s,[c,u]=a,l=nt().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new cet(i.shape,c,u,o,r):new aet(i.shape,c,u,o,r);return e.runWebGLProgram(l,[i],i.dtype)}const det={kernelName:Mf,backendName:"webgl",kernelFunc:uet};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class het{constructor(t,e,s){this.variableNames=["dy"],this.outputShape=[],this.outputShape=e;const[,i,o]=e,[,r,a]=t,c=[s&&r>1?i-1:i,s&&a>1?o-1:o],u=[s&&r>1?r-1:r,s&&a>1?a-1:a],l=c[0]/u[0],d=c[1]/u[1],h=1/l,f=1/d,p=Math.ceil(h)*2+2,x=Math.ceil(f)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${l});
        const float widthScale = float(${d});

        const float invHeightScale = float(${h});
        const float invWidthScale = float(${f});

        const int winHeight = int(${p});
        const int winWidth = int(${x});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(floor(startRLerp - float(winHeight / 2)));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(floor(startCLerp - float(winWidth / 2)));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${r}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${a}) {
              continue;
            }

            float sourceFracRow =
              float(${c[0]}) *
                (float(dyR) / float(${u[0]}));

            float sourceFracCol =
                float(${c[1]}) *
                  (float(dyC) / float(${u[1]}));

            int sourceNearestRow = int(min(
                float(int(${i}) - 1),
                ${s} ? float(round(sourceFracRow)) :
                                  float(floor(sourceFracRow))));

            int sourceNearestCol = int(min(
                float(int(${o}) - 1),
                ${s} ? float(round(sourceFracCol)) :
                                  float(floor(sourceFracCol))));

            if (r == sourceNearestRow && c == sourceNearestCol) {
              accumulator += getDy(b, dyR, dyC, d);
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fet(n){const{inputs:t,backend:e,attrs:s}=n,{images:i,dy:o}=t,{alignCorners:r}=s,a=new het(o.shape,i.shape,r);return e.runWebGLProgram(a,[o],o.dtype)}const pet={kernelName:dg,backendName:"webgl",kernelFunc:fet};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class met{constructor(t,e){this.variableNames=["x"];const s=t.length;if(s>4)throw new Error(`WebGL backend: Reverse of rank-${s} tensor is not yet supported`);if(this.outputShape=t,s===1){this.userCode=`
        void main() {
          int coord = getOutputCoords();
          setOutput(getX(${t[0]} - coord - 1));
        }
      `;return}const i=a=>e.indexOf(a)!==-1&&t[a]!==1?`${t[a]} - coords[${a}] - 1`:`coords[${a}]`,o=t.map((a,c)=>i(c)).join(","),r=Ve(s);this.userCode=`
      void main() {
        ${r} coords = getOutputCoords();
        setOutput(getX(${o}));
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class get{constructor(t,e){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const s=t.length;if(s>4)throw new Error(`WebGL backend: Reverse of rank-${s} tensor is not yet supported`);this.outputShape=t;const i=os("rc",s),o=`${i[s-1]} + 1 < ${this.outputShape[s-1]}`,r=`${i[s-2]} + 1 < ${this.outputShape[s-2]}`,a=Ve(s);s===1?this.userCode=`
        void main(){
          int rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = getChannel(getX(${t[0]} - rc - 1),
            ${t[0]} - rc - 1);
          if(${o}){
              result.g = getChannel(getX(${t[0]} - (rc  + 1) - 1),
                ${t[0]} - (rc  + 1) - 1);
          }
          setOutput(result);
        }
      `:this.userCode=`
        void main() {
          ${a} rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = ${c(i.slice())};
          if(${o}){
            result.g = ${u(i.slice())};
          }
          if(${r}) {
            result.b = ${l(i.slice())};
            if(${o}) {
              result.a = ${d(i.slice())};
            }
          }
          setOutput(result);
        }
    `;function c(p){return h(p)}function u(p){return p[s-1]="("+p[s-1]+" + 1)",h(p)}function l(p){return p[s-2]="("+p[s-2]+" + 1)",h(p)}function d(p){return p[s-1]="("+p[s-1]+" + 1)",p[s-2]="("+p[s-2]+" + 1)",h(p)}function h(p){const x=t.map((y,w)=>f(w,p)),g=x.join(","),m=x.slice(-2).join(",");return`getChannel(getX(${g}), vec2(${m}))`}function f(p,x){return e.indexOf(p)!==-1&&t[p]!==1?`${t[p]} - ${x[p]} - 1`:`${x[p]}`}}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xet(n){const{inputs:t,backend:e,attrs:s}=n,{x:i}=t,{dims:o}=s,r=i.shape.length,a=ve(o,i.shape);if(r===0)return Is({inputs:{x:i},backend:e});const c=nt().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new get(i.shape,a):new met(i.shape,a);return e.runWebGLProgram(c,[i],i.dtype)}const yet={kernelName:Nf,backendName:"webgl",kernelFunc:xet};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class bet{constructor(t,e){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];const s=t[1],i=t[2];this.outputShape=t;let o="";typeof e=="number"?o=`float outputValue = ${e.toFixed(2)};`:o=`
        vec3 fill = vec3(${e.join(",")});
        float outputValue = fill[coords[3]];`,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];
          int y = coords[1];
          float coordXFloat = (float(x) - params[0]) * params[3] -
            (float(y) - params[1]) * params[2];
          float coordYFloat = (float(x) - params[0]) * params[2] +
            (float(y) - params[1]) * params[3];
          int coordX = int(round(coordXFloat + params[0]));
          int coordY = int(round(coordYFloat + params[1]));
          ${o}
          if(coordX >= 0 && coordX < ${i} && coordY >= 0 && coordY < ${s}) {
            outputValue = getImage(coords[0], coordY, coordX, coords[3]);
          }
          setOutput(outputValue);
        }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wet={kernelName:bg,backendName:"webgl",kernelFunc:({inputs:n,attrs:t,backend:e})=>{const{image:s}=n,{radians:i,fillValue:o,center:r}=t,a=e,c=new bet(s.shape,o),[u,l]=rx(r,s.shape[1],s.shape[2]),d=[[u,l,Math.sin(i),Math.cos(i)]];return a.runWebGLProgram(c,[s],s.dtype,d)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vet=`
  // OpenGL ES does not support round function.
  // The algorithm is based on banker's rounding.
  float base = floor(x);
  if ((x - base) < 0.5) {
    return floor(x);
  } else if ((x - base) > 0.5) {
    return ceil(x);
  } else {
    if (mod(base, 2.0) == 0.0) {
      return base;
    } else {
      return base + 1.0;
    }
  }
`,_et=Ae({opSnippet:vet}),Cet={kernelName:sl,backendName:"webgl",kernelFunc:_et};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Tet="return inversesqrt(x);",Eet=Ae({opSnippet:Tet,cpuKernelImpl:Lq}),Iet={kernelName:il,backendName:"webgl",kernelFunc:Eet};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class cy{constructor(t,e,s,i,o,r,a=!0,c=!1){this.variableNames=["updates","indices","defaultValue"],this.outputShape=r;const u=Ve(o.length),l=Ve(r.length);let d="";s===1?d="i":s===2&&(d="i, j");const h=`getIndices(${d})`;let f="";i===1?f="i":i===2&&(f="i, coords[1]");const p=`getUpdates(${f})`;let x="";c&&(x="coords[0], coords[1]");const g=`getDefaultValue(${x})`,m=e>1?"strides[j]":"strides";this.userCode=`
        ${u} strides = ${u}(${o});

        void main() {
          ${l} coords = getOutputCoords();
          float sum = 0.0;
          bool found = false;
          for (int i = 0; i < ${t}; i++) {
            int flattenedIndex = 0;
            for (int j = 0; j < ${e}; j++) {
              int index = round(${h});
              flattenedIndex += index * ${m};
            }
            if (flattenedIndex == coords[0]) {
              sum += ${p};
              found = true;
            }
          }
          setOutput(mix(${g}, sum, float(found)));
        }
      `}}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ret{constructor(t,e,s,i,o,r,a=!0,c=!1){this.variableNames=["updates","indices","defaultValue"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=r;const u=Ve(o.length),l=Ve(r.length);let d="";s===1?d="i":s===2&&(d="i, j");const h=`getIndices(${d})`;let f="";i===1?f="i":i===2&&(f="i, coords[1]");const p=`getUpdates(${f})`;let x="";c&&(x="coords[0], coords[1]");const g=`getDefaultValue(${x})`,m=e>1?"strides[j]":"strides",y=e>1?"strides[j + 1]":"strides";this.userCode=`
        ${u} strides = ${u}(${o});

        void main() {
          ${l} coords = getOutputCoords();
          vec4 sum = vec4(0.);
          vec4 found = vec4(0.);
          for (int i = 0; i < ${t}; i+=2) {
            ivec2 flattenedIndex = ivec2(0);
            for (int j = 0; j < ${e}; j+=2) {
              ivec4 index = round(${h});
              flattenedIndex += index.xz * ${m};
              if (j + 1 < ${e}) {
                flattenedIndex += index.yw * ${y};
              }
            }
            if (flattenedIndex[0] == coords[0] || flattenedIndex[1] == coords[0] ||
                flattenedIndex[0] == coords[0] + 1 || flattenedIndex[1] == coords[0] + 1) {
              vec4 updVals = ${p};
              if (flattenedIndex[0] == coords[0]) {
                sum.xy += updVals.xy;
                found.xy = vec2(1.);
              } else if (flattenedIndex[0] == coords[0] + 1) {
                sum.zw += updVals.xy;
                found.zw = vec2(1.);
              }
              if (flattenedIndex[1] == coords[0]) {
                sum.xy += updVals.zw;
                found.xy = vec2(1.);
              } else if (flattenedIndex[1] == coords[0] + 1) {
                sum.zw += updVals.zw;
                found.zw = vec2(1.);
              }
            }
          }
          setOutput(mix(${g}, sum, found));
        }
      `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Met(n){const{inputs:t,backend:e,attrs:s}=n,{indices:i,updates:o}=t,{shape:r}=s,{sliceRank:a,numUpdates:c,sliceSize:u,strides:l,outputSize:d}=qr(o,i,r),h=[d/u,u];if(d===0)return e.makeTensorInfo(r,i.dtype);const f=Et({inputs:{x:i},backend:e,attrs:{shape:[c,a]}}),p=Et({inputs:{x:o},backend:e,attrs:{shape:[c,u]}}),x=e.makeTensorInfo([],"float32",new Float32Array([0]));let g;nt().getBool("WEBGL_PACK")?g=new Ret(c,a,f.shape.length,p.shape.length,l,h):g=new cy(c,a,f.shape.length,p.shape.length,l,h);const m=e.runWebGLProgram(g,[p,f,x],p.dtype),y=Et({inputs:{x:m},backend:e,attrs:{shape:r}});return e.disposeIntermediateTensorInfo(f),e.disposeIntermediateTensorInfo(p),e.disposeIntermediateTensorInfo(m),e.disposeIntermediateTensorInfo(x),y}const Aet={kernelName:A2,backendName:"webgl",kernelFunc:Met};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Net{constructor(t,e,s,i){this.variableNames=["sortedSequence","values"],this.customUniforms=[{name:"numInputs",type:"int"}],this.outputShape=[t,s];const o="while (left < right) {",r=`for (int i = 0; i < ${Math.ceil(Math.log2(e+1))}; ++i) { if (left >= right) break;`,a=nt().getNumber("WEBGL_VERSION")===2?o:r,c=i==="left"?"<":"<=";this.userCode=`
       int findBound(int batch, float value) {
         int left = 0;
         int right = numInputs;
         int mid;
         ${a}
           mid = (left + right) / 2;
           if (getSortedSequence(batch, mid) ${c} value) {
             left = mid + 1;
           } else {
             right = mid;
           }
         }
         return right;
       }

       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int valueIndex = coords[1];

         float value = getValues(batch, valueIndex);

         setOutput(float(findBound(batch, value)));
       }
     `}}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ket(n){const{inputs:t,backend:e,attrs:s}=n,{sortedSequence:i,values:o}=t,{side:r}=s,a=new Net(i.shape[0],i.shape[1],o.shape[1],r),c=[[i.shape[1]]];return e.runWebGLProgram(a,[i,o],"int32",c)}const Det={kernelName:k2,backendName:"webgl",kernelFunc:ket};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class $et{constructor(t,e,s){this.variableNames=["c","a","b"],this.outputShape=e;let i,o;if(s>4)throw Error(`Where for rank ${s} is not yet supported`);if(s===1)o="resRC",i="resRC";else{const a=["resRC.x","resRC.y","resRC.z","resRC.w"],c=[],u=[];for(let l=0;l<e.length;l++)u.push(`${a[l]}`),l<t&&c.push(`${a[l]}`);i=c.join(),o=u.join()}const r=Ve(s);this.userCode=`
      void main() {
        ${r} resRC = getOutputCoords();
        float cVal = getC(${i});
        if (cVal >= 1.0) {
          setOutput(getA(${o}));
        } else {
          setOutput(getB(${o}));
        }
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fet(n){const{inputs:t,backend:e}=n,{condition:s,t:i,e:o}=t,r=new $et(s.shape.length,i.shape,i.shape.length);return e.runWebGLProgram(r,[s,i,o],Ts(i.dtype,o.dtype))}const Pet={kernelName:kf,backendName:"webgl",kernelFunc:Fet};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Let=`
  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.
  // see: https://arxiv.org/abs/1706.02515
  float scaleAlpha = ${Jf};
  float scale = ${Qf};
  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);
`,Oet=Ae({opSnippet:Let}),Uet={kernelName:ol,backendName:"webgl",kernelFunc:Oet};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Bet=_c+`
  return 1.0 / (1.0 + exp(-1.0 * x));
`,zet=`
  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,Vet=Ae({opSnippet:Bet,packedOpSnippet:zet,cpuKernelImpl:Uq}),Wet={kernelName:ul,backendName:"webgl",kernelFunc:Vet};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Get=`
  if (isnan(x)) { return 0.0; }
  return sign(x);
`,Het=Ae({opSnippet:Get}),Xet={kernelName:cl,backendName:"webgl",kernelFunc:Het};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qet=_c+`
  return sin(x);
`,jet=`
  vec4 result = sin(x);
  bvec4 isNaN = isnan(x);
  ${Jr}
  return result;
`,Ket=Ae({opSnippet:qet,packedOpSnippet:jet}),Yet={kernelName:rl,backendName:"webgl",kernelFunc:Ket};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Zet=`
  float e2x = exp(x);
  return (e2x - 1.0 / e2x) / 2.0;
`,Jet=Ae({opSnippet:Zet}),Qet={kernelName:al,backendName:"webgl",kernelFunc:Jet};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tnt=`
  float epsilon = 1.1920928955078125e-7;
  float threshold = log(epsilon) + 2.0;

  bool too_large = x > -threshold;
  bool too_small = x < threshold;

  float result;
  float exp_x = exp(x);

  if (too_large){
    result = x;
  }
  else if (too_small){
    result = exp_x;
  }
  else{
    result = log(exp_x + 1.0);
  }
  return result;
`,ent=Ae({opSnippet:tnt}),nnt={kernelName:ll,backendName:"webgl",kernelFunc:ent};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const snt=n=>{const{inputs:t,backend:e,attrs:s}=n,{x:i}=t,{blockShape:o,paddings:r}=s;k(i.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet");const a=o.reduce((m,y)=>m*y),c=[[0,0]];c.push(...r);for(let m=1+o.length;m<i.shape.length;++m)c.push([0,0]);const u=[],l=HI({inputs:{x:i},backend:e,attrs:{paddings:c,constantValue:0}}),d=Cl(l.shape,o,a,!1),h=Sl(d.length,o.length,!1),f=Tl(l.shape,o,a,!1),p=Et({inputs:{x:l},backend:e,attrs:{shape:d}}),x=cs({inputs:{x:p},backend:e,attrs:{perm:h}}),g=Et({inputs:{x},backend:e,attrs:{shape:f}});return u.push(l),u.push(p),u.push(x),u.forEach(m=>e.disposeIntermediateTensorInfo(m)),g},int={kernelName:Ff,backendName:"webgl",kernelFunc:snt};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ont(n){const{inputs:t,backend:e}=n,{indices:s,values:i,denseShape:o,defaultValue:r}=t;if(o.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
         ${o.shape}`);if(s.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
         ${s.shape}`);if(i.shape.length!==1)throw new Error(`Values must be a vector, saw:
         ${i.shape}`);if(r.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${r.shape}`);const a=e.readSync(s.dataId),c=e.readSync(i.dataId),u=e.readSync(o.dataId),l=e.readSync(r.dataId)[0],[d,h,f,p,x]=zq(a,s.shape,s.dtype,c,i.dtype,u,l);return[e.makeTensorInfo(h,s.dtype,d),e.makeTensorInfo([h[0]],i.dtype,f),e.makeTensorInfo([p.length],"bool",new Uint8Array(p.map(g=>Number(g)))),e.makeTensorInfo([x.length],s.dtype,new Int32Array(x))]}const rnt={kernelName:D2,backendName:"webgl",kernelFunc:ont};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ant(n){const{inputs:t,backend:e}=n,{inputIndices:s,inputShape:i,newShape:o}=t;if(s.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape ${s.shape}`);if(i.shape.length!==1)throw new Error(`Input shape should be a vector but received shape ${i.shape}`);if(o.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${o.shape}`);const r=Array.from(e.readSync(i.dataId)),a=e.readSync(s.dataId),c=Array.from(e.readSync(o.dataId)),[u,l,d]=Vq(a,s.shape,s.dtype,r,c);return[e.makeTensorInfo(l,s.dtype,u),e.makeTensorInfo([d.length],o.dtype,new Int32Array(d))]}const cnt={kernelName:$2,backendName:"webgl",kernelFunc:ant};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function unt(n){const{inputs:t,backend:e}=n,{data:s,indices:i,segmentIds:o}=t;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(i.shape.length!==1)throw new Error(`Indices should be a vector but received shape
              ${i.shape}`);if(o.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
              ${o.shape}`);const r=e.readSync(s.dataId),a=e.readSync(i.dataId),c=e.readSync(o.dataId),[u,l]=gI(r,s.shape,s.dtype,a,c,!0);return e.makeTensorInfo(l,s.dtype,u)}const lnt={kernelName:F2,backendName:"webgl",kernelFunc:unt};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dnt(n){const{inputs:t,backend:e}=n,{data:s,indices:i,segmentIds:o}=t;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(i.shape.length!==1)throw new Error(`Indices should be a vector but received shape
             ${i.shape}`);if(o.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
             ${o.shape}`);const r=e.readSync(s.dataId),a=e.readSync(i.dataId),c=e.readSync(o.dataId),[u,l]=gI(r,s.shape,s.dtype,a,c);return e.makeTensorInfo(l,s.dtype,u)}const hnt={kernelName:P2,backendName:"webgl",kernelFunc:dnt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fnt(n){const{inputs:t,backend:e,attrs:s}=n,{sparseIndices:i,sparseValues:o,defaultValue:r}=t,{outputShape:a}=s,{sliceRank:c,numUpdates:u,sliceSize:l,strides:d,outputSize:h}=qr(o,i,a),f=!1;if(o.dtype==="string"){const m=e.bufferSync(i),y=e.bufferSync(o),w=Lo(e.readSync(r.dataId)[0]),b=Oq(m,y,a,h,l,u,c,d,w,f);return e.makeTensorInfo(a,b.dtype,b.values)}const p=new cy(u,c,i.shape.length,o.shape.length,d,[h,1],f),x=e.runWebGLProgram(p,[o,i,r],o.dtype),g=Et({inputs:{x},backend:e,attrs:{shape:a}});return e.disposeIntermediateTensorInfo(x),g}const pnt={kernelName:L2,backendName:"webgl",kernelFunc:fnt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mnt(n){const{inputs:t,backend:e,attrs:s}=n,{x:i}=t,{numOrSizeSplits:o,axis:r}=s,a=ve(r,i.shape)[0],c=vx(i,o,a),u=i.shape.length,l=new Array(u).fill(0),d=i.shape.slice();return c.map(h=>{const f=[...d];f[a]=h;const p=Cc({inputs:{x:i},backend:e,attrs:{begin:l,size:f}});return l[a]+=h,p})}const gnt={kernelName:Pf,backendName:"webgl",kernelFunc:mnt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rv="return sqrt(x);",xnt=Ae({opSnippet:rv,packedOpSnippet:rv,cpuKernelImpl:Wq}),ynt={kernelName:dl,backendName:"webgl",kernelFunc:xnt};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bnt="return x * x;",wnt=Ae({opSnippet:bnt}),vnt={kernelName:fg,backendName:"webgl",kernelFunc:wnt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const av="return (a - b) * (a - b);",_nt=zn({opSnippet:av,packedOpSnippet:av}),Cnt={kernelName:hl,backendName:"webgl",kernelFunc:_nt};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Snt(n){const{inputs:t,backend:e,attrs:s}=n,{x:i}=t;if(i.dtype!=="string")throw new Error("Input must be of datatype string");const o=e.readSync(i.dataId),r=ho(o),a=Gq(r,"string",s);return e.makeTensorInfo(i.shape,"string",a)}const Tnt={kernelName:pg,backendName:"webgl",kernelFunc:Snt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ent({inputs:n,attrs:t,backend:e}){const{x:s}=n,i=ii+`
    return x > 0.0 ? 1.0 : float(${t.alpha});
  `,o=new $i(s.shape,i);return e.runWebGLProgram(o,[s],s.dtype)}const Int={kernelName:xl,backendName:"webgl",kernelFunc:Ent};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Rnt{constructor(t,e,s){this.variableNames=["x"],this.outputShape=s;const i=s.length,o=Ve(s.length),r=Ve(s.length);let a="";if(i===1)a="coords * strides + begin";else{let c=0;a=s.map((u,l)=>(c++,s.length===1?`coords * strides[${l}] + begin[${l}]`:`coords[${c-1}] * strides[${l}] + begin[${l}]`)).join(",")}this.userCode=`
      ${o} begin = ${o}(${t});
      ${o} strides = ${o}(${e});

      void main() {
        ${r} coords = getOutputCoords();
        setOutput(getX(${a}));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Mnt(n){const{inputs:t,backend:e,attrs:s}=n,{x:i}=t,{begin:o,end:r,strides:a,beginMask:c,endMask:u,ellipsisMask:l,newAxisMask:d,shrinkAxisMask:h}=s,{finalShapeSparse:f,finalShape:p,isIdentity:x,sliceDim0:g,isSimpleSlice:m,begin:y,end:w,strides:b}=sx(i.shape,o,r,a,c,u,l,d,h);let _;if(x)_=Et({inputs:{x:i},backend:e,attrs:{shape:p}});else if(g||m){k(i.shape.length>=1,()=>`Input must have rank at least 1, got: ${i.shape.length}`);const E=tx(y,w,b),I=Cc({inputs:{x:i},backend:e,attrs:{begin:y,size:E}});_=Et({inputs:{x:I},backend:e,attrs:{shape:p}}),e.disposeIntermediateTensorInfo(I)}else if(e.shouldExecuteOnCPU([i])){const I=e.readSync(i.dataId),S=we(i.shape,i.dtype,I),v=Hq(f,S,b,y);_=e.makeTensorInfo(p,i.dtype,v.values)}else{const I=new Rnt(y,b,f);_=e.runWebGLProgram(I,[i],i.dtype)}const T=Et({inputs:{x:_},backend:e,attrs:{shape:p}});return e.disposeIntermediateTensorInfo(_),T}const Ant={kernelName:mg,backendName:"webgl",kernelFunc:Mnt};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Nnt(n){const{inputs:t,backend:e,attrs:s}=n,{separator:i,nGramWidths:o,leftPad:r,rightPad:a,padWidth:c,preserveShortSequences:u}=s,{data:l,dataSplits:d}=t,h=e.readSync(l.dataId),f=e.readSync(d.dataId),[p,x]=Xq(h,f,i,o,r,a,c,u);return[e.makeTensorInfo([p.length],"string",p),e.makeTensorInfo(d.shape,"int32",x)]}const knt={kernelName:O2,backendName:"webgl",kernelFunc:Nnt};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Dnt(n){const{inputs:t,backend:e,attrs:s}=n,{skipEmpty:i}=s,{input:o,delimiter:r}=t;if(o.dtype!=="string")throw new Error("Input must be of datatype string");if(o.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${o.shape}`);if(r.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${r.shape}`);const a=e.readSync(o.dataId),c=e.readSync(r.dataId)[0],[u,l,d]=qq(a,c,i),h=l.length;return[e.makeTensorInfo([h,2],"int32",u),e.makeTensorInfo([h],"string",l),e.makeTensorInfo([2],"int32",new Int32Array(d))]}const $nt={kernelName:U2,backendName:"webgl",kernelFunc:Dnt};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fnt(n){const{inputs:t,backend:e,attrs:s}=n,{numBuckets:i}=s,{input:o}=t;if(o.dtype!=="string")throw new Error("Input must be of datatype string");if(i<=0)throw new Error("Number of buckets must be at least 1");const r=e.readSync(o.dataId),a=jq(r,i);return e.makeTensorInfo(o.shape,"int32",a)}const Pnt={kernelName:B2,backendName:"webgl",kernelFunc:Fnt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Lnt="return tan(x);",Ont=Ae({opSnippet:Lnt}),Unt={kernelName:pl,backendName:"webgl",kernelFunc:Ont};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Bnt=`
  float e2x = exp(-2.0 * abs(x));
  return sign(x) * (1.0 - e2x) / (1.0 + e2x);
`,znt=Ae({opSnippet:Bnt}),Vnt={kernelName:ml,backendName:"webgl",kernelFunc:znt};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Wnt(n){const{inputs:t,backend:e,attrs:s}=n,{tensor:i,indices:o,updates:r}=t,{sliceRank:a,numUpdates:c,sliceSize:u,strides:l,outputSize:d}=qr(r,o,i.shape),h=[d/u,u];if(d===0)return e.makeTensorInfo(i.shape,o.dtype);const f=Et({inputs:{x:o},backend:e,attrs:{shape:[c,a]}}),p=Et({inputs:{x:r},backend:e,attrs:{shape:[c,u]}}),x=Et({inputs:{x:i},backend:e,attrs:{shape:h}}),g=new cy(c,a,f.shape.length,p.shape.length,l,h,!1,!0),m=e.runWebGLProgram(g,[p,f,x],x.dtype),y=Et({inputs:{x:m},backend:e,attrs:{shape:i.shape}});return e.disposeIntermediateTensorInfo(f),e.disposeIntermediateTensorInfo(p),e.disposeIntermediateTensorInfo(x),e.disposeIntermediateTensorInfo(m),y}const Gnt={kernelName:N2,backendName:"webgl",kernelFunc:Wnt};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Hnt{constructor(t,e){this.variableNames=["A"];const s=new Array(t.length);for(let r=0;r<s.length;r++)s[r]=t[r]*e[r];this.outputShape=s,this.rank=s.length;const i=Ve(this.rank),o=Xnt(t);this.userCode=`
      void main() {
        ${i} resRC = getOutputCoords();
        setOutput(getA(${o}));
      }
    `}}function Xnt(n){const t=n.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(t===1)return`imod(resRC, ${n[0]})`;const e=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],s=[];for(let i=0;i<n.length;i++)s.push(`imod(${e[i]}, ${n[i]})`);return s.join()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qI(n){const{inputs:t,backend:e,attrs:s}=n,{x:i}=t,{reps:o}=s;if(i.dtype==="string"||i.shape.length>5){const c=e.readSync(i.dataId),u=i.dtype==="string"?c.map(h=>Lo(h)):c,l=we(i.shape,i.dtype,u),d=Yq(l,o);return e.makeTensorInfo(d.shape,d.dtype,d.values)}const r=new Hnt(i.shape,o);return e.runWebGLProgram(r,[i],i.dtype)}const qnt={kernelName:gl,backendName:"webgl",kernelFunc:qI};class jnt{constructor(t){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=t,this.userCode=`
       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // We compare elements pair-wise within a group of size 2 * inc.
         // The comparing rule for each group alternates between ascending
         // and descending. Within each group, we compare each pair at
         // positions i and i+inc. To decide whether an element at position i
         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than
         // inc, it is in the first half of the group, we denote it as x0,
         // otherwise we denote it as x1.
         // For example, as shown in the Bitonic top K paper referenced above,
         // Figure5(a) shows that element[1] is in the
         // second half of the group when group size is 2, but it is in the
         // first half of the group when group size is 4.

         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;
         int i = isFirstInPair ? elemIdx : elemIdx - inc;

         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));
         float x0 = i0 < n ? getX(batch, i0) : negativeInf;
         float x1 = i1 < n ? getX(batch, i1) : negativeInf;

         // Denotes which direction indices are in (ascending or descending).
         bool reverse = imod(elemIdx, 2 * dir) >= dir;
         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);
         if (reverse == isGreater) { // Elements in opposite order of direction
           int iTemp = i0;
           i0 = i1;
           i1 = iTemp;
         }
         if (isFirstInPair) {
            setOutput(float(i0));
         } else {
            setOutput(float(i1));
         }
       }
     `}}class Knt{constructor(t){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=t,this.userCode=`
    void main() {
         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // The output size is half of the previous size.
         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),
         // we only need to output the indices at positions |, the indices at
         // positions _ can be thrown away, see Figure5(b) After Phase 2
         // (Merge phase) in the Bitonic Top K paper referenced above.
         // For example, the paper shows we only need to output the orange bars.
         // The output sequence should look like this | | | | | | | |.
         // Because the sequence is halved, to map the output index back
         // to the previous sequence to find the corresponding value,
         // we need to double the index. When we double the index,
         // we basically interpolate a position, so 2i looks like
         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position
         // of each 2k positions by - elemIdx % k. E.g. for output at
         // index 4,5,6,7, we want to get the corresponding element at
         // original index 8,9,10,11, for output at index 8,9,10,11,
         // we want to get the corresponding element at original index
         // 16,17,18,19, so on and so forth.

         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));
         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));

         float x0 = getX(batch, i0);
         float x1 = i1 < n ? getX(batch, i1) : x0;

         setOutput(x0 >= x1 ? float(i0) : float(i1));
       }
     `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cr(n,t){t!==null&&n.disposeIntermediateTensorInfo(t)}function cv(n){let t=1;for(;t<n;)t*=2;return t}function Ynt(n){const{inputs:t,backend:e,attrs:s}=n,{x:i}=t,{k:o,sorted:r}=s,a=nt().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),c=nt().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),u=i.shape,l=u[u.length-1];if(e.shouldExecuteOnCPU([i])||l<a||o>c){const v=e.readSync(i.dataId),[C,M]=Zq(v,u,i.dtype,o,r);return[e.makeTensorInfo(C.shape,C.dtype,C.values),e.makeTensorInfo(M.shape,M.dtype,M.values)]}if(o===0)return u[u.length-1]=0,[e.makeTensorInfo(u,i.dtype,[]),e.makeTensorInfo(u,"int32",[])];if(l===1)return[i,Ul({attrs:{shape:u,dtype:"int32",value:0},backend:e})];const d=e.texData.get(i.dataId),h=d!==null&&d.isPacked,f=h?e.unpackTensor(i):i,x=ct(u)/l,g=Et({inputs:{x:f},attrs:{shape:[x,l]},backend:e});h&&cr(e,f);const m=cv(o),y=cv(l);let w=null;const b=()=>w===null?[g,g]:[g,w],_=(v,C,M)=>{const N=b(),D=new jnt(M),F=[[l],[w===null?1:0],[Number.NEGATIVE_INFINITY],[v],[C]],B=w;w=e.runWebGLProgram(D,N,"int32",F),cr(e,B)};for(let v=1;v<m;v*=2){const C=v*2;for(let M=v;M>=1;M/=2)_(C,M,[x,y])}for(let v=y;v>m;v/=2){const C=b(),M=new Knt([x,v/2]),D=[[l],[w===null?1:0],[m]],$=w;w=e.runWebGLProgram(M,C,"int32",D),cr(e,$);const F=m/2,B=F*2;for(let P=F;P>=1;P/=2)_(B,P,w.shape)}let T=w;w=Cc({inputs:{x:w},backend:e,attrs:{begin:0,size:[x,o]}}),cr(e,T);let E=UI({inputs:{x:g,indices:w},backend:e,attrs:{axis:1,batchDims:1}});cr(e,g);const I=u.slice(0,-1);I.push(o),T=w,w=Et({inputs:{x:w},attrs:{shape:I},backend:e}),cr(e,T);const S=E;return E=Et({inputs:{x:E},attrs:{shape:I},backend:e}),cr(e,S),[E,w]}const Znt={kernelName:gg,backendName:"webgl",kernelFunc:Ynt};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Jnt{constructor(t,e,s,i,o,r){this.variableNames=["Image","Transforms"],this.outputShape=r;const a=s==="nearest"?1:2;let c;switch(i){case"constant":c=1;break;case"reflect":c=2;break;case"wrap":c=3;break;case"nearest":c=4;break;default:c=1;break}this.userCode=`
            float mapCoord(float outCoord, float len) {
              float inCoord = outCoord;
              if(${c} == 2) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    if (inCoord < sz2) {
                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +
                      inCoord;
                    }
                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    inCoord -= sz2 * float(int(float(inCoord / sz2)));
                    if (inCoord >= len) {
                      inCoord = sz2 - inCoord - 1.0;
                    }
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${c} == 3) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord -= len * float(int(float(inCoord / sz)));
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${c} == 4) {
                return clamp(outCoord, 0.0, len - 1.0);
              } else {
                return outCoord;
              }
            }

            float readWithFillValue(int batch, int coordY, int coordX,
              int channel) {
              float outputValue;
              if (0 <= coordY && coordY < ${t} && 0 <= coordX && coordX < ${e}) {
                  outputValue = getImage(batch, coordY, coordX, channel);
              } else {
                outputValue = float(${o});
              }
              return outputValue;
            }

            void main() {
              ivec4 coords = getOutputCoords();
              float outputValue;
              int batch = coords[0];
              int x = coords[2];
              int y = coords[1];
              int channel = coords[3];
              float xf = float(x);
              float yf = float(y);
              float a1 = getTransforms(batch, 0);
              float a2 = getTransforms(batch, 1);
              float a3 = getTransforms(batch, 2);
              float b1 = getTransforms(batch, 3);
              float b2 = getTransforms(batch, 4);
              float b3 = getTransforms(batch, 5);
              float c1 = getTransforms(batch, 6);
              float c2 = getTransforms(batch, 7);
              float projection = c1 * xf + c2 * yf + 1.0;
              if (projection == 0.0) {
                outputValue = float(${o});
              } else {
                float inX = (a1 * xf + a2 * yf + a3) / projection;
                float inY = (b1 * xf + b2 * yf + b3) / projection;
                float mapX = mapCoord(inX, float(${e}));
                float mapY = mapCoord(inY, float(${t}));

                if (${a} == 1) {
                  int coordY = int(round(mapY));
                  int coordX = int(round(mapX));
                  outputValue = readWithFillValue(batch, coordY, coordX,
                    channel);
                } else {
                  float yFloor = floor(mapY);
                  float xFloor = floor(mapX);
                  float yCeil = yFloor + 1.0;
                  float xCeil = xFloor + 1.0;
                  float valueYFloor = (xCeil - mapX) *
                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);
                  float valueYCeil = (xCeil - mapX) *
                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);
                  outputValue = (yCeil - mapY) * valueYFloor +
                  (mapY - yFloor) * valueYCeil;
                }
              }
              setOutput(outputValue);
            }
        `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Qnt(n){const{inputs:t,backend:e,attrs:s}=n,{image:i,transforms:o}=t,{interpolation:r,fillMode:a,fillValue:c,outputShape:u}=s,[l,d,h,f]=i.shape,[p,x]=u??[d,h],g=[l,p,x,f],m=new Jnt(d,h,r,a,c,g);return e.runWebGLProgram(m,[i,o],"float32")}const tst={kernelName:xg,backendName:"webgl",kernelFunc:Qnt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function est(n){const{inputs:t,attrs:e,backend:s}=n,{axis:i}=e,{x:o}=t;Pl(o,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const r=s.readSync(o.dataId),{outputValues:a,outputShape:c,indices:u}=Jq(r,i,o.shape,o.dtype);return[s.makeTensorInfo(c,o.dtype,a),s.makeTensorInfo([u.length],"int32",u)]}const nst={kernelName:yg,backendName:"webgl",kernelFunc:est};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sst(n){const{inputs:t,backend:e,attrs:s}=n,{value:i}=t;let{axis:o}=s;o<0&&(o+=i.shape.length);const r=i,a=r.shape.length,c=i.shape[o],u=new Array(a-1);let l=0;for(let x=0;x<a;x++)x!==o&&(u[l++]=r.shape[x]);const d=[],h=new Array(a).fill(0),f=r.shape.slice();f[o]=1;const p=new Array(c);for(let x=0;x<p.length;x++){h[o]=x;const g=Cc({inputs:{x:r},backend:e,attrs:{begin:h,size:f}}),m=Et({inputs:{x:g},backend:e,attrs:{shape:u}});p[x]=m,d.push(g)}return d.forEach(x=>e.disposeIntermediateTensorInfo(x)),p}const ist={kernelName:Of,backendName:"webgl",kernelFunc:sst};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ost{constructor(t,e){this.variableNames=["x","segmentIds"];const s=t.windowSize,i=t.batchSize,o=t.inSize,r=t.numSegments,a=r*Math.ceil(o/s);this.outputShape=[i,a];const c="0.0",u="sumValue",l=Math.floor(s/4)*4,d=s%4,h=`
        sumValue += dot(values, segFilter);
    `;let f="";o%s>0&&(f=`
        if (inIdx < 0 || inIdx >= ${o}) {
          return initializationValue;
        }
      `);let p="";o%s>0&&(p=`
        if (inIdx < 0 || inIdx >= ${o}) {
          return -1.0;
        }
      `),this.userCode=`
      const float initializationValue = ${c};

      float getValue(int batch, int inIdx) {
        ${f}
        return getX(batch, inIdx);
      }

      float getSegmentIdAtIndex(int inIdx) {
        ${p}
        return getSegmentIds(inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = int(floor(float(outIdx) / float(
          ${r})) * float(${s}));
        int currentSeg = int(mod(float(outIdx), float(${r})));

        float sumValue = 0.0;

        for (int i = 0; i < ${l}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0
          );

          ${h}
        }

        int inIdx = inOffset + ${l};
        if (${d===1}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            0,
            0,
            0
          );

          ${h}
        } else if (${d===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
              0,
              0
          );

          ${h}
        } else if (${d===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            0
          );

          ${h}
        }
        setOutput(${u});
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rst(n){const{inputs:t,backend:e,attrs:s}=n,{x:i,segmentIds:o}=t,{numSegments:r}=s,a=i.shape.length,c=[];let u=0;const l=un([u],a);let d=i;l!=null&&(d=cs({inputs:{x:i},backend:e,attrs:{perm:l}}),c.push(d),u=mn(1,a)[0]);const h=RC(d.shape,u,r),f=ct([d.shape[u]]),p=Et({inputs:{x:d},backend:e,attrs:{shape:[-1,f]}});c.push(p);const x=wg(i.dtype),g=(b,_,T,E,I)=>{const S=b.shape[0],v=b.shape[1],C=IC(v,I),M={windowSize:C,inSize:v,batchSize:S,numSegments:I},N=new ost(M,_),D=e.compileAndRun(N,[b,T],E);if(c.push(D),D.shape[1]===I)return D;const $=XI({backend:e,attrs:{start:0,stop:I,step:1,dtype:"float32"}}),F=qI({inputs:{x:$},backend:e,attrs:{reps:[v/C]}});return c.push($),c.push(F),g(D,_,F,E,I)},m=g(p,"unsortedSegmentSum",o,x,r),y=Et({inputs:{x:m},backend:e,attrs:{shape:h}});let w=y;if(l!=null){c.push(y);const b=qo(l);w=cs({inputs:{x:w},backend:e,attrs:{perm:b}})}return c.forEach(b=>e.disposeIntermediateTensorInfo(b)),w}const ast={kernelName:Uf,backendName:"webgl",kernelFunc:rst};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cst=[Wj,Hj,jj,Zj,Qj,nK,iK,rK,lK,hK,mK,yK,vK,TK,RK,AK,kK,PK,OK,BK,GK,ZK,QK,sY,oY,dY,fY,xY,Ej,wY,TY,MY,FY,OY,BY,VY,GY,jY,ZY,tZ,nZ,iZ,rZ,uZ,dZ,mZ,xZ,wZ,CZ,TZ,MZ,DZ,LZ,BZ,WZ,GZ,XZ,jZ,YZ,JZ,tJ,iJ,aJ,lJ,hJ,mJ,yJ,_J,EJ,Tj,RJ,CY,NJ,$J,LJ,Rj,zJ,HJ,qJ,ZJ,tQ,iQ,aQ,dQ,mQ,yQ,wQ,SQ,EQ,RQ,kQ,$Q,PQ,OQ,BQ,GQ,jQ,JQ,rtt,Nj,ltt,ftt,gtt,btt,aY,_tt,Stt,Ett,Mtt,Dtt,Aj,Ftt,Ltt,Utt,ztt,Vtt,cY,ntt,Htt,Ktt,Qtt,Dj,set,ret,det,pet,yet,wet,Cet,Iet,Aet,Det,Pet,Uet,Wet,Xet,Yet,Qet,KK,itt,nnt,int,rnt,cnt,lnt,hnt,pnt,gnt,ynt,vnt,Cnt,Tnt,Int,Ant,knt,$nt,Pnt,stt,Bj,Unt,Vnt,Gnt,qnt,Znt,tst,zj,nst,ist,ast,Ctt];for(const n of cst)V2(n);const ust=["Roboto-Regular.png"],lst=JSON.parse(`[{"id":40,"index":12,"char":"(","width":15,"height":47,"xoffset":1,"yoffset":0,"xadvance":14,"chnl":15,"x":0,"y":0,"page":0},{"id":41,"index":13,"char":")","width":15,"height":47,"xoffset":-1,"yoffset":0,"xadvance":15,"chnl":15,"x":0,"y":48,"page":0},{"id":91,"index":63,"char":"[","width":12,"height":45,"xoffset":1,"yoffset":0,"xadvance":11,"chnl":15,"x":0,"y":96,"page":0},{"id":93,"index":65,"char":"]","width":12,"height":45,"xoffset":-2,"yoffset":0,"xadvance":11,"chnl":15,"x":0,"y":142,"page":0},{"id":123,"index":95,"char":"{","width":16,"height":44,"xoffset":-1,"yoffset":1,"xadvance":14,"chnl":15,"x":0,"y":188,"page":0},{"id":125,"index":97,"char":"}","width":16,"height":44,"xoffset":-2,"yoffset":1,"xadvance":14,"chnl":15,"x":13,"y":96,"page":0},{"id":1092,"index":247,"char":"ф","width":30,"height":44,"xoffset":0,"yoffset":3,"xadvance":30,"chnl":15,"x":13,"y":141,"page":0},{"id":197,"index":644,"char":"Å","width":30,"height":44,"xoffset":-1,"yoffset":-6,"xadvance":27,"chnl":15,"x":16,"y":0,"page":0},{"id":106,"index":78,"char":"j","width":12,"height":43,"xoffset":-3,"yoffset":4,"xadvance":10,"chnl":15,"x":16,"y":45,"page":0},{"id":36,"index":8,"char":"$","width":23,"height":43,"xoffset":0,"yoffset":-1,"xadvance":24,"chnl":15,"x":29,"y":45,"page":0},{"id":64,"index":36,"char":"@","width":37,"height":43,"xoffset":0,"yoffset":5,"xadvance":38,"chnl":15,"x":47,"y":0,"page":0},{"id":198,"index":129,"char":"Æ","width":43,"height":34,"xoffset":-2,"yoffset":4,"xadvance":39,"chnl":15,"x":30,"y":89,"page":0},{"id":958,"index":197,"char":"ξ","width":21,"height":42,"xoffset":0,"yoffset":4,"xadvance":21,"chnl":15,"x":53,"y":44,"page":0},{"id":950,"index":192,"char":"ζ","width":22,"height":42,"xoffset":0,"yoffset":4,"xadvance":22,"chnl":15,"x":0,"y":233,"page":0},{"id":946,"index":188,"char":"β","width":23,"height":42,"xoffset":1,"yoffset":4,"xadvance":25,"chnl":15,"x":17,"y":186,"page":0},{"id":1044,"index":217,"char":"Д","width":33,"height":41,"xoffset":-1,"yoffset":4,"xadvance":32,"chnl":15,"x":0,"y":276,"page":0},{"id":1025,"index":941,"char":"Ё","width":23,"height":41,"xoffset":1,"yoffset":-3,"xadvance":24,"chnl":15,"x":23,"y":229,"page":0},{"id":1046,"index":218,"char":"Ж","width":41,"height":34,"xoffset":-1,"yoffset":4,"xadvance":38,"chnl":15,"x":41,"y":186,"page":0},{"id":1049,"index":954,"char":"Й","width":27,"height":41,"xoffset":2,"yoffset":-3,"xadvance":30,"chnl":15,"x":44,"y":124,"page":0},{"id":1062,"index":224,"char":"Ц","width":30,"height":41,"xoffset":2,"yoffset":4,"xadvance":31,"chnl":15,"x":72,"y":124,"page":0},{"id":1065,"index":227,"char":"Щ","width":39,"height":41,"xoffset":2,"yoffset":4,"xadvance":41,"chnl":15,"x":75,"y":44,"page":0},{"id":220,"index":664,"char":"Ü","width":26,"height":41,"xoffset":1,"yoffset":-3,"xadvance":27,"chnl":15,"x":85,"y":0,"page":0},{"id":214,"index":660,"char":"Ö","width":28,"height":41,"xoffset":0,"yoffset":-3,"xadvance":29,"chnl":15,"x":112,"y":0,"page":0},{"id":196,"index":643,"char":"Ä","width":30,"height":41,"xoffset":-1,"yoffset":-3,"xadvance":27,"chnl":15,"x":0,"y":318,"page":0},{"id":209,"index":655,"char":"Ñ","width":27,"height":41,"xoffset":1,"yoffset":-3,"xadvance":30,"chnl":15,"x":0,"y":360,"page":0},{"id":81,"index":53,"char":"Q","width":28,"height":39,"xoffset":0,"yoffset":4,"xadvance":29,"chnl":15,"x":0,"y":402,"page":0},{"id":87,"index":59,"char":"W","width":39,"height":34,"xoffset":-1,"yoffset":4,"xadvance":37,"chnl":15,"x":74,"y":87,"page":0},{"id":124,"index":96,"char":"|","width":7,"height":39,"xoffset":2,"yoffset":4,"xadvance":10,"chnl":15,"x":28,"y":360,"page":0},{"id":229,"index":671,"char":"å","width":22,"height":38,"xoffset":0,"yoffset":1,"xadvance":23,"chnl":15,"x":31,"y":318,"page":0},{"id":216,"index":131,"char":"Ø","width":28,"height":37,"xoffset":0,"yoffset":3,"xadvance":29,"chnl":15,"x":34,"y":271,"page":0},{"id":100,"index":72,"char":"d","width":23,"height":36,"xoffset":0,"yoffset":3,"xadvance":24,"chnl":15,"x":47,"y":221,"page":0},{"id":102,"index":74,"char":"f","width":17,"height":36,"xoffset":-1,"yoffset":2,"xadvance":15,"chnl":15,"x":0,"y":442,"page":0},{"id":104,"index":76,"char":"h","width":21,"height":36,"xoffset":1,"yoffset":3,"xadvance":23,"chnl":15,"x":18,"y":442,"page":0},{"id":107,"index":79,"char":"k","width":22,"height":36,"xoffset":1,"yoffset":3,"xadvance":21,"chnl":15,"x":29,"y":400,"page":0},{"id":108,"index":80,"char":"l","width":8,"height":36,"xoffset":1,"yoffset":3,"xadvance":10,"chnl":15,"x":36,"y":357,"page":0},{"id":98,"index":70,"char":"b","width":23,"height":36,"xoffset":1,"yoffset":3,"xadvance":24,"chnl":15,"x":45,"y":357,"page":0},{"id":47,"index":19,"char":"/","width":20,"height":36,"xoffset":-2,"yoffset":4,"xadvance":17,"chnl":15,"x":54,"y":309,"page":0},{"id":92,"index":64,"char":"\\\\","width":20,"height":36,"xoffset":-1,"yoffset":4,"xadvance":17,"chnl":15,"x":63,"y":258,"page":0},{"id":1073,"index":234,"char":"б","width":24,"height":36,"xoffset":0,"yoffset":2,"xadvance":23,"chnl":15,"x":71,"y":221,"page":0},{"id":1060,"index":223,"char":"Ф","width":33,"height":36,"xoffset":0,"yoffset":3,"xadvance":32,"chnl":15,"x":83,"y":166,"page":0},{"id":1064,"index":226,"char":"Ш","width":36,"height":34,"xoffset":2,"yoffset":4,"xadvance":40,"chnl":15,"x":103,"y":122,"page":0},{"id":1070,"index":232,"char":"Ю","width":36,"height":35,"xoffset":2,"yoffset":4,"xadvance":38,"chnl":15,"x":114,"y":86,"page":0},{"id":948,"index":190,"char":"δ","width":24,"height":36,"xoffset":0,"yoffset":2,"xadvance":24,"chnl":15,"x":115,"y":42,"page":0},{"id":966,"index":204,"char":"φ","width":30,"height":36,"xoffset":0,"yoffset":12,"xadvance":30,"chnl":15,"x":140,"y":42,"page":0},{"id":968,"index":205,"char":"ψ","width":30,"height":36,"xoffset":0,"yoffset":12,"xadvance":29,"chnl":15,"x":141,"y":0,"page":0},{"id":230,"index":134,"char":"æ","width":36,"height":27,"xoffset":0,"yoffset":11,"xadvance":35,"chnl":15,"x":0,"y":479,"page":0},{"id":121,"index":93,"char":"y","width":23,"height":35,"xoffset":-2,"yoffset":12,"xadvance":20,"chnl":15,"x":40,"y":437,"page":0},{"id":112,"index":84,"char":"p","width":23,"height":35,"xoffset":1,"yoffset":11,"xadvance":24,"chnl":15,"x":40,"y":473,"page":0},{"id":113,"index":85,"char":"q","width":23,"height":35,"xoffset":0,"yoffset":11,"xadvance":24,"chnl":15,"x":52,"y":394,"page":0},{"id":103,"index":75,"char":"g","width":23,"height":35,"xoffset":0,"yoffset":11,"xadvance":24,"chnl":15,"x":69,"y":346,"page":0},{"id":109,"index":81,"char":"m","width":35,"height":27,"xoffset":1,"yoffset":11,"xadvance":37,"chnl":15,"x":75,"y":295,"page":0},{"id":79,"index":51,"char":"O","width":28,"height":35,"xoffset":0,"yoffset":4,"xadvance":29,"chnl":15,"x":84,"y":258,"page":0},{"id":83,"index":55,"char":"S","width":26,"height":35,"xoffset":0,"yoffset":4,"xadvance":25,"chnl":15,"x":96,"y":203,"page":0},{"id":71,"index":43,"char":"G","width":27,"height":35,"xoffset":1,"yoffset":4,"xadvance":29,"chnl":15,"x":117,"y":157,"page":0},{"id":67,"index":39,"char":"C","width":27,"height":35,"xoffset":0,"yoffset":4,"xadvance":27,"chnl":15,"x":64,"y":430,"page":0},{"id":56,"index":28,"char":"8","width":23,"height":35,"xoffset":0,"yoffset":4,"xadvance":24,"chnl":15,"x":64,"y":466,"page":0},{"id":51,"index":23,"char":"3","width":23,"height":35,"xoffset":0,"yoffset":4,"xadvance":24,"chnl":15,"x":88,"y":466,"page":0},{"id":48,"index":20,"char":"0","width":23,"height":35,"xoffset":0,"yoffset":4,"xadvance":24,"chnl":15,"x":76,"y":382,"page":0},{"id":37,"index":9,"char":"%","width":31,"height":35,"xoffset":0,"yoffset":4,"xadvance":31,"chnl":15,"x":92,"y":418,"page":0},{"id":8364,"index":413,"char":"€","width":24,"height":35,"xoffset":0,"yoffset":4,"xadvance":24,"chnl":15,"x":93,"y":323,"page":0},{"id":38,"index":10,"char":"&","width":28,"height":35,"xoffset":0,"yoffset":4,"xadvance":26,"chnl":15,"x":112,"y":454,"page":0},{"id":1105,"index":971,"char":"ё","width":23,"height":35,"xoffset":0,"yoffset":4,"xadvance":22,"chnl":15,"x":100,"y":359,"page":0},{"id":1078,"index":238,"char":"ж","width":35,"height":26,"xoffset":-2,"yoffset":12,"xadvance":32,"chnl":15,"x":111,"y":294,"page":0},{"id":1047,"index":219,"char":"З","width":26,"height":35,"xoffset":0,"yoffset":4,"xadvance":25,"chnl":15,"x":118,"y":321,"page":0},{"id":1054,"index":957,"char":"О","width":28,"height":35,"xoffset":0,"yoffset":4,"xadvance":29,"chnl":15,"x":113,"y":239,"page":0},{"id":1088,"index":967,"char":"р","width":23,"height":35,"xoffset":1,"yoffset":11,"xadvance":24,"chnl":15,"x":123,"y":193,"page":0},{"id":1057,"index":960,"char":"С","width":27,"height":35,"xoffset":0,"yoffset":4,"xadvance":27,"chnl":15,"x":142,"y":229,"page":0},{"id":1091,"index":969,"char":"у","width":23,"height":35,"xoffset":-2,"yoffset":12,"xadvance":20,"chnl":15,"x":145,"y":122,"page":0},{"id":1097,"index":251,"char":"щ","width":35,"height":33,"xoffset":1,"yoffset":12,"xadvance":35,"chnl":15,"x":145,"y":158,"page":0},{"id":1069,"index":231,"char":"Э","width":27,"height":35,"xoffset":1,"yoffset":4,"xadvance":28,"chnl":15,"x":147,"y":192,"page":0},{"id":252,"index":691,"char":"ü","width":21,"height":35,"xoffset":1,"yoffset":4,"xadvance":23,"chnl":15,"x":151,"y":79,"page":0},{"id":246,"index":687,"char":"ö","width":24,"height":35,"xoffset":0,"yoffset":4,"xadvance":24,"chnl":15,"x":171,"y":37,"page":0},{"id":228,"index":670,"char":"ä","width":22,"height":35,"xoffset":0,"yoffset":4,"xadvance":23,"chnl":15,"x":172,"y":0,"page":0},{"id":241,"index":682,"char":"ñ","width":21,"height":35,"xoffset":1,"yoffset":3,"xadvance":23,"chnl":15,"x":195,"y":0,"page":0},{"id":961,"index":199,"char":"ρ","width":23,"height":35,"xoffset":1,"yoffset":11,"xadvance":24,"chnl":15,"x":169,"y":115,"page":0},{"id":952,"index":194,"char":"θ","width":23,"height":35,"xoffset":1,"yoffset":4,"xadvance":24,"chnl":15,"x":173,"y":73,"page":0},{"id":947,"index":189,"char":"γ","width":23,"height":35,"xoffset":-1,"yoffset":12,"xadvance":21,"chnl":15,"x":196,"y":36,"page":0},{"id":951,"index":193,"char":"η","width":22,"height":35,"xoffset":1,"yoffset":11,"xadvance":24,"chnl":15,"x":217,"y":0,"page":0},{"id":955,"index":196,"char":"λ","width":25,"height":35,"xoffset":-1,"yoffset":3,"xadvance":23,"chnl":15,"x":124,"y":357,"page":0},{"id":967,"index":935,"char":"χ","width":26,"height":35,"xoffset":0,"yoffset":12,"xadvance":21,"chnl":15,"x":145,"y":321,"page":0},{"id":956,"index":933,"char":"μ","width":21,"height":35,"xoffset":1,"yoffset":12,"xadvance":24,"chnl":15,"x":147,"y":265,"page":0},{"id":920,"index":179,"char":"Θ","width":28,"height":35,"xoffset":0,"yoffset":4,"xadvance":29,"chnl":15,"x":169,"y":265,"page":0},{"id":927,"index":919,"char":"Ο","width":28,"height":35,"xoffset":0,"yoffset":4,"xadvance":29,"chnl":15,"x":170,"y":228,"page":0},{"id":105,"index":77,"char":"i","width":8,"height":34,"xoffset":1,"yoffset":4,"xadvance":10,"chnl":15,"x":175,"y":192,"page":0},{"id":119,"index":91,"char":"w","width":34,"height":26,"xoffset":-1,"yoffset":12,"xadvance":32,"chnl":15,"x":181,"y":151,"page":0},{"id":65,"index":37,"char":"A","width":30,"height":34,"xoffset":-1,"yoffset":4,"xadvance":27,"chnl":15,"x":193,"y":109,"page":0},{"id":90,"index":62,"char":"Z","width":26,"height":34,"xoffset":0,"yoffset":4,"xadvance":25,"chnl":15,"x":197,"y":72,"page":0},{"id":69,"index":41,"char":"E","width":23,"height":34,"xoffset":1,"yoffset":4,"xadvance":24,"chnl":15,"x":220,"y":36,"page":0},{"id":82,"index":54,"char":"R","width":26,"height":34,"xoffset":1,"yoffset":4,"xadvance":26,"chnl":15,"x":240,"y":0,"page":0},{"id":84,"index":56,"char":"T","width":27,"height":34,"xoffset":-1,"yoffset":4,"xadvance":25,"chnl":15,"x":184,"y":178,"page":0},{"id":89,"index":61,"char":"Y","width":29,"height":34,"xoffset":-2,"yoffset":4,"xadvance":25,"chnl":15,"x":124,"y":393,"page":0},{"id":85,"index":57,"char":"U","width":26,"height":34,"xoffset":1,"yoffset":4,"xadvance":27,"chnl":15,"x":150,"y":357,"page":0},{"id":73,"index":45,"char":"I","width":8,"height":34,"xoffset":2,"yoffset":4,"xadvance":11,"chnl":15,"x":172,"y":301,"page":0},{"id":80,"index":52,"char":"P","width":25,"height":34,"xoffset":1,"yoffset":4,"xadvance":26,"chnl":15,"x":141,"y":428,"page":0},{"id":68,"index":40,"char":"D","width":26,"height":34,"xoffset":1,"yoffset":4,"xadvance":28,"chnl":15,"x":154,"y":392,"page":0},{"id":70,"index":42,"char":"F","width":22,"height":34,"xoffset":1,"yoffset":4,"xadvance":23,"chnl":15,"x":141,"y":463,"page":0},{"id":72,"index":44,"char":"H","width":27,"height":34,"xoffset":1,"yoffset":4,"xadvance":30,"chnl":15,"x":164,"y":463,"page":0},{"id":74,"index":46,"char":"J","width":23,"height":34,"xoffset":-1,"yoffset":4,"xadvance":23,"chnl":15,"x":167,"y":427,"page":0},{"id":75,"index":47,"char":"K","width":27,"height":34,"xoffset":1,"yoffset":4,"xadvance":26,"chnl":15,"x":177,"y":336,"page":0},{"id":76,"index":48,"char":"L","width":22,"height":34,"xoffset":1,"yoffset":4,"xadvance":23,"chnl":15,"x":181,"y":301,"page":0},{"id":77,"index":49,"char":"M","width":34,"height":34,"xoffset":1,"yoffset":4,"xadvance":37,"chnl":15,"x":198,"y":264,"page":0},{"id":88,"index":60,"char":"X","width":28,"height":34,"xoffset":-1,"yoffset":4,"xadvance":26,"chnl":15,"x":204,"y":299,"page":0},{"id":86,"index":58,"char":"V","width":30,"height":34,"xoffset":-1,"yoffset":4,"xadvance":27,"chnl":15,"x":199,"y":213,"page":0},{"id":66,"index":38,"char":"B","width":24,"height":34,"xoffset":1,"yoffset":4,"xadvance":26,"chnl":15,"x":212,"y":178,"page":0},{"id":78,"index":50,"char":"N","width":27,"height":34,"xoffset":1,"yoffset":4,"xadvance":30,"chnl":15,"x":230,"y":213,"page":0},{"id":55,"index":27,"char":"7","width":24,"height":34,"xoffset":0,"yoffset":4,"xadvance":24,"chnl":15,"x":181,"y":371,"page":0},{"id":57,"index":29,"char":"9","width":23,"height":34,"xoffset":0,"yoffset":4,"xadvance":24,"chnl":15,"x":205,"y":334,"page":0},{"id":52,"index":24,"char":"4","width":26,"height":34,"xoffset":-1,"yoffset":4,"xadvance":24,"chnl":15,"x":191,"y":406,"page":0},{"id":53,"index":25,"char":"5","width":23,"height":34,"xoffset":1,"yoffset":4,"xadvance":24,"chnl":15,"x":206,"y":369,"page":0},{"id":54,"index":26,"char":"6","width":23,"height":34,"xoffset":1,"yoffset":4,"xadvance":24,"chnl":15,"x":229,"y":334,"page":0},{"id":49,"index":21,"char":"1","width":15,"height":34,"xoffset":1,"yoffset":4,"xadvance":24,"chnl":15,"x":192,"y":441,"page":0},{"id":50,"index":22,"char":"2","width":24,"height":34,"xoffset":0,"yoffset":4,"xadvance":24,"chnl":15,"x":192,"y":476,"page":0},{"id":33,"index":5,"char":"!","width":8,"height":34,"xoffset":1,"yoffset":4,"xadvance":11,"chnl":15,"x":208,"y":441,"page":0},{"id":63,"index":35,"char":"?","width":21,"height":34,"xoffset":0,"yoffset":4,"xadvance":20,"chnl":15,"x":217,"y":441,"page":0},{"id":163,"index":101,"char":"£","width":25,"height":34,"xoffset":0,"yoffset":4,"xadvance":24,"chnl":15,"x":218,"y":404,"page":0},{"id":35,"index":7,"char":"#","width":27,"height":34,"xoffset":0,"yoffset":4,"xadvance":26,"chnl":15,"x":230,"y":369,"page":0},{"id":1040,"index":950,"char":"А","width":30,"height":34,"xoffset":-1,"yoffset":4,"xadvance":27,"chnl":15,"x":217,"y":476,"page":0},{"id":1041,"index":216,"char":"Б","width":25,"height":34,"xoffset":1,"yoffset":4,"xadvance":26,"chnl":15,"x":239,"y":439,"page":0},{"id":1042,"index":951,"char":"В","width":24,"height":34,"xoffset":1,"yoffset":4,"xadvance":26,"chnl":15,"x":244,"y":404,"page":0},{"id":1043,"index":952,"char":"Г","width":22,"height":34,"xoffset":2,"yoffset":4,"xadvance":23,"chnl":15,"x":248,"y":474,"page":0},{"id":1045,"index":953,"char":"Е","width":23,"height":34,"xoffset":1,"yoffset":4,"xadvance":24,"chnl":15,"x":265,"y":439,"page":0},{"id":1048,"index":220,"char":"И","width":27,"height":34,"xoffset":2,"yoffset":4,"xadvance":30,"chnl":15,"x":271,"y":474,"page":0},{"id":1081,"index":965,"char":"й","width":22,"height":34,"xoffset":1,"yoffset":4,"xadvance":24,"chnl":15,"x":233,"y":248,"page":0},{"id":1050,"index":947,"char":"К","width":27,"height":34,"xoffset":2,"yoffset":4,"xadvance":27,"chnl":15,"x":233,"y":283,"page":0},{"id":1051,"index":221,"char":"Л","width":29,"height":34,"xoffset":-1,"yoffset":4,"xadvance":30,"chnl":15,"x":256,"y":248,"page":0},{"id":1052,"index":955,"char":"М","width":34,"height":34,"xoffset":1,"yoffset":4,"xadvance":37,"chnl":15,"x":253,"y":318,"page":0},{"id":1053,"index":956,"char":"Н","width":27,"height":34,"xoffset":1,"yoffset":4,"xadvance":30,"chnl":15,"x":261,"y":283,"page":0},{"id":1055,"index":958,"char":"П","width":27,"height":34,"xoffset":2,"yoffset":4,"xadvance":30,"chnl":15,"x":258,"y":353,"page":0},{"id":1056,"index":959,"char":"Р","width":25,"height":34,"xoffset":1,"yoffset":4,"xadvance":26,"chnl":15,"x":269,"y":388,"page":0},{"id":1058,"index":961,"char":"Т","width":27,"height":34,"xoffset":-1,"yoffset":4,"xadvance":25,"chnl":15,"x":286,"y":353,"page":0},{"id":1059,"index":222,"char":"У","width":28,"height":34,"xoffset":0,"yoffset":4,"xadvance":26,"chnl":15,"x":288,"y":318,"page":0},{"id":1061,"index":962,"char":"Х","width":28,"height":34,"xoffset":-1,"yoffset":4,"xadvance":26,"chnl":15,"x":289,"y":423,"page":0},{"id":1063,"index":225,"char":"Ч","width":26,"height":34,"xoffset":1,"yoffset":4,"xadvance":29,"chnl":15,"x":295,"y":388,"page":0},{"id":1066,"index":228,"char":"Ъ","width":34,"height":34,"xoffset":-2,"yoffset":4,"xadvance":32,"chnl":15,"x":314,"y":353,"page":0},{"id":1067,"index":229,"char":"Ы","width":33,"height":34,"xoffset":2,"yoffset":4,"xadvance":36,"chnl":15,"x":299,"y":458,"page":0},{"id":1068,"index":230,"char":"Ь","width":25,"height":34,"xoffset":1,"yoffset":4,"xadvance":26,"chnl":15,"x":318,"y":423,"page":0},{"id":1071,"index":233,"char":"Я","width":25,"height":34,"xoffset":0,"yoffset":4,"xadvance":27,"chnl":15,"x":322,"y":388,"page":0},{"id":962,"index":200,"char":"ς","width":22,"height":34,"xoffset":0,"yoffset":11,"xadvance":23,"chnl":15,"x":333,"y":458,"page":0},{"id":969,"index":206,"char":"ω","width":34,"height":27,"xoffset":1,"yoffset":12,"xadvance":35,"chnl":15,"x":216,"y":144,"page":0},{"id":917,"index":912,"char":"Ε","width":23,"height":34,"xoffset":1,"yoffset":4,"xadvance":24,"chnl":15,"x":344,"y":423,"page":0},{"id":929,"index":920,"char":"Ρ","width":25,"height":34,"xoffset":1,"yoffset":4,"xadvance":26,"chnl":15,"x":348,"y":388,"page":0},{"id":932,"index":921,"char":"Τ","width":27,"height":34,"xoffset":-1,"yoffset":4,"xadvance":25,"chnl":15,"x":237,"y":172,"page":0},{"id":933,"index":922,"char":"Υ","width":29,"height":34,"xoffset":-2,"yoffset":4,"xadvance":25,"chnl":15,"x":258,"y":207,"page":0},{"id":921,"index":915,"char":"Ι","width":8,"height":34,"xoffset":2,"yoffset":4,"xadvance":11,"chnl":15,"x":286,"y":242,"page":0},{"id":928,"index":182,"char":"Π","width":27,"height":34,"xoffset":2,"yoffset":4,"xadvance":30,"chnl":15,"x":289,"y":277,"page":0},{"id":913,"index":910,"char":"Α","width":30,"height":34,"xoffset":-1,"yoffset":4,"xadvance":27,"chnl":15,"x":356,"y":458,"page":0},{"id":931,"index":183,"char":"Σ","width":25,"height":34,"xoffset":-1,"yoffset":4,"xadvance":24,"chnl":15,"x":368,"y":423,"page":0},{"id":916,"index":178,"char":"Δ","width":32,"height":34,"xoffset":-1,"yoffset":4,"xadvance":30,"chnl":15,"x":387,"y":458,"page":0},{"id":934,"index":184,"char":"Φ","width":31,"height":34,"xoffset":0,"yoffset":4,"xadvance":30,"chnl":15,"x":224,"y":71,"page":0},{"id":915,"index":177,"char":"Γ","width":22,"height":34,"xoffset":2,"yoffset":4,"xadvance":23,"chnl":15,"x":244,"y":35,"page":0},{"id":919,"index":914,"char":"Η","width":27,"height":34,"xoffset":1,"yoffset":4,"xadvance":30,"chnl":15,"x":224,"y":106,"page":0},{"id":926,"index":181,"char":"Ξ","width":23,"height":34,"xoffset":0,"yoffset":4,"xadvance":24,"chnl":15,"x":252,"y":106,"page":0},{"id":922,"index":916,"char":"Κ","width":27,"height":34,"xoffset":1,"yoffset":4,"xadvance":26,"chnl":15,"x":256,"y":70,"page":0},{"id":923,"index":180,"char":"Λ","width":29,"height":34,"xoffset":-1,"yoffset":4,"xadvance":28,"chnl":15,"x":265,"y":141,"page":0},{"id":918,"index":913,"char":"Ζ","width":26,"height":34,"xoffset":0,"yoffset":4,"xadvance":25,"chnl":15,"x":276,"y":105,"page":0},{"id":935,"index":923,"char":"Χ","width":28,"height":34,"xoffset":-1,"yoffset":4,"xadvance":26,"chnl":15,"x":288,"y":176,"page":0},{"id":936,"index":185,"char":"Ψ","width":29,"height":34,"xoffset":0,"yoffset":4,"xadvance":29,"chnl":15,"x":295,"y":140,"page":0},{"id":937,"index":186,"char":"Ω","width":27,"height":34,"xoffset":0,"yoffset":4,"xadvance":28,"chnl":15,"x":295,"y":211,"page":0},{"id":914,"index":911,"char":"Β","width":24,"height":34,"xoffset":1,"yoffset":4,"xadvance":26,"chnl":15,"x":317,"y":175,"page":0},{"id":925,"index":918,"char":"Ν","width":27,"height":34,"xoffset":1,"yoffset":4,"xadvance":30,"chnl":15,"x":267,"y":0,"page":0},{"id":924,"index":917,"char":"Μ","width":34,"height":34,"xoffset":1,"yoffset":4,"xadvance":37,"chnl":15,"x":267,"y":35,"page":0},{"id":1076,"index":237,"char":"д","width":27,"height":33,"xoffset":-1,"yoffset":12,"xadvance":25,"chnl":15,"x":284,"y":70,"page":0},{"id":1094,"index":248,"char":"ц","width":24,"height":33,"xoffset":1,"yoffset":12,"xadvance":25,"chnl":15,"x":295,"y":0,"page":0},{"id":1102,"index":256,"char":"ю","width":33,"height":27,"xoffset":1,"yoffset":11,"xadvance":34,"chnl":15,"x":295,"y":246,"page":0},{"id":116,"index":88,"char":"t","width":16,"height":32,"xoffset":-2,"yoffset":6,"xadvance":14,"chnl":15,"x":303,"y":104,"page":0},{"id":59,"index":31,"char":";","width":10,"height":32,"xoffset":-1,"yoffset":12,"xadvance":9,"chnl":15,"x":302,"y":34,"page":0},{"id":1096,"index":250,"char":"ш","width":32,"height":26,"xoffset":1,"yoffset":12,"xadvance":34,"chnl":15,"x":323,"y":210,"page":0},{"id":248,"index":137,"char":"ø","width":24,"height":32,"xoffset":0,"yoffset":9,"xadvance":24,"chnl":15,"x":312,"y":67,"page":0},{"id":1099,"index":253,"char":"ы","width":30,"height":26,"xoffset":1,"yoffset":12,"xadvance":33,"chnl":15,"x":313,"y":34,"page":0},{"id":1084,"index":243,"char":"м","width":29,"height":26,"xoffset":1,"yoffset":12,"xadvance":31,"chnl":15,"x":320,"y":0,"page":0},{"id":1098,"index":252,"char":"ъ","width":28,"height":26,"xoffset":-1,"yoffset":12,"xadvance":26,"chnl":15,"x":320,"y":100,"page":0},{"id":960,"index":198,"char":"π","width":28,"height":26,"xoffset":-1,"yoffset":12,"xadvance":25,"chnl":15,"x":337,"y":61,"page":0},{"id":97,"index":69,"char":"a","width":22,"height":27,"xoffset":0,"yoffset":11,"xadvance":23,"chnl":15,"x":265,"y":176,"page":0},{"id":101,"index":73,"char":"e","width":23,"height":27,"xoffset":0,"yoffset":11,"xadvance":22,"chnl":15,"x":344,"y":27,"page":0},{"id":114,"index":86,"char":"r","width":15,"height":27,"xoffset":1,"yoffset":11,"xadvance":14,"chnl":15,"x":325,"y":127,"page":0},{"id":117,"index":89,"char":"u","width":21,"height":27,"xoffset":1,"yoffset":12,"xadvance":23,"chnl":15,"x":341,"y":127,"page":0},{"id":111,"index":83,"char":"o","width":24,"height":27,"xoffset":0,"yoffset":11,"xadvance":24,"chnl":15,"x":349,"y":88,"page":0},{"id":115,"index":87,"char":"s","width":22,"height":27,"xoffset":0,"yoffset":11,"xadvance":22,"chnl":15,"x":366,"y":55,"page":0},{"id":99,"index":71,"char":"c","width":23,"height":27,"xoffset":0,"yoffset":11,"xadvance":22,"chnl":15,"x":342,"y":155,"page":0},{"id":110,"index":82,"char":"n","width":21,"height":27,"xoffset":1,"yoffset":11,"xadvance":23,"chnl":15,"x":363,"y":116,"page":0},{"id":58,"index":30,"char":":","width":9,"height":27,"xoffset":1,"yoffset":12,"xadvance":10,"chnl":15,"x":251,"y":141,"page":0},{"id":126,"index":98,"char":"~","width":27,"height":12,"xoffset":1,"yoffset":18,"xadvance":29,"chnl":15,"x":112,"y":490,"page":0},{"id":1072,"index":963,"char":"а","width":22,"height":27,"xoffset":0,"yoffset":11,"xadvance":23,"chnl":15,"x":374,"y":83,"page":0},{"id":1077,"index":964,"char":"е","width":23,"height":27,"xoffset":0,"yoffset":11,"xadvance":22,"chnl":15,"x":368,"y":0,"page":0},{"id":1079,"index":239,"char":"з","width":21,"height":27,"xoffset":0,"yoffset":11,"xadvance":21,"chnl":15,"x":389,"y":28,"page":0},{"id":1086,"index":966,"char":"о","width":24,"height":27,"xoffset":0,"yoffset":11,"xadvance":24,"chnl":15,"x":392,"y":0,"page":0},{"id":1089,"index":968,"char":"с","width":23,"height":27,"xoffset":0,"yoffset":11,"xadvance":22,"chnl":15,"x":317,"y":274,"page":0},{"id":1101,"index":255,"char":"э","width":22,"height":27,"xoffset":0,"yoffset":11,"xadvance":23,"chnl":15,"x":329,"y":237,"page":0},{"id":949,"index":191,"char":"ε","width":23,"height":27,"xoffset":0,"yoffset":11,"xadvance":23,"chnl":15,"x":317,"y":302,"page":0},{"id":964,"index":202,"char":"τ","width":23,"height":27,"xoffset":0,"yoffset":12,"xadvance":22,"chnl":15,"x":341,"y":265,"page":0},{"id":965,"index":203,"char":"υ","width":22,"height":27,"xoffset":1,"yoffset":12,"xadvance":23,"chnl":15,"x":352,"y":237,"page":0},{"id":959,"index":932,"char":"ο","width":24,"height":27,"xoffset":0,"yoffset":11,"xadvance":24,"chnl":15,"x":356,"y":183,"page":0},{"id":945,"index":187,"char":"α","width":25,"height":27,"xoffset":0,"yoffset":11,"xadvance":24,"chnl":15,"x":366,"y":144,"page":0},{"id":963,"index":201,"char":"σ","width":26,"height":27,"xoffset":0,"yoffset":12,"xadvance":24,"chnl":15,"x":385,"y":111,"page":0},{"id":122,"index":94,"char":"z","width":22,"height":26,"xoffset":0,"yoffset":12,"xadvance":21,"chnl":15,"x":389,"y":56,"page":0},{"id":120,"index":92,"char":"x","width":23,"height":26,"xoffset":-1,"yoffset":12,"xadvance":21,"chnl":15,"x":397,"y":83,"page":0},{"id":118,"index":90,"char":"v","width":23,"height":26,"xoffset":-1,"yoffset":12,"xadvance":20,"chnl":15,"x":411,"y":28,"page":0},{"id":43,"index":15,"char":"+","width":24,"height":26,"xoffset":0,"yoffset":9,"xadvance":24,"chnl":15,"x":417,"y":0,"page":0},{"id":1074,"index":235,"char":"в","width":23,"height":26,"xoffset":1,"yoffset":12,"xadvance":24,"chnl":15,"x":412,"y":55,"page":0},{"id":1075,"index":236,"char":"г","width":18,"height":26,"xoffset":1,"yoffset":12,"xadvance":18,"chnl":15,"x":368,"y":28,"page":0},{"id":1080,"index":240,"char":"и","width":22,"height":26,"xoffset":1,"yoffset":12,"xadvance":24,"chnl":15,"x":435,"y":27,"page":0},{"id":1082,"index":241,"char":"к","width":23,"height":26,"xoffset":1,"yoffset":12,"xadvance":23,"chnl":15,"x":442,"y":0,"page":0},{"id":1083,"index":242,"char":"л","width":24,"height":26,"xoffset":-1,"yoffset":12,"xadvance":24,"chnl":15,"x":466,"y":0,"page":0},{"id":1085,"index":244,"char":"н","width":22,"height":26,"xoffset":1,"yoffset":12,"xadvance":24,"chnl":15,"x":458,"y":27,"page":0},{"id":1087,"index":245,"char":"п","width":22,"height":26,"xoffset":1,"yoffset":12,"xadvance":24,"chnl":15,"x":481,"y":27,"page":0},{"id":1090,"index":246,"char":"т","width":23,"height":26,"xoffset":-1,"yoffset":12,"xadvance":20,"chnl":15,"x":341,"y":293,"page":0},{"id":1093,"index":970,"char":"х","width":23,"height":26,"xoffset":-1,"yoffset":12,"xadvance":21,"chnl":15,"x":341,"y":320,"page":0},{"id":1095,"index":249,"char":"ч","width":22,"height":26,"xoffset":0,"yoffset":12,"xadvance":23,"chnl":15,"x":349,"y":347,"page":0},{"id":1100,"index":254,"char":"ь","width":22,"height":26,"xoffset":1,"yoffset":12,"xadvance":23,"chnl":15,"x":436,"y":54,"page":0},{"id":1103,"index":257,"char":"я","width":23,"height":26,"xoffset":-1,"yoffset":12,"xadvance":23,"chnl":15,"x":459,"y":54,"page":0},{"id":953,"index":195,"char":"ι","width":12,"height":26,"xoffset":2,"yoffset":12,"xadvance":14,"chnl":15,"x":350,"y":0,"page":0},{"id":954,"index":931,"char":"κ","width":23,"height":26,"xoffset":1,"yoffset":12,"xadvance":23,"chnl":15,"x":483,"y":54,"page":0},{"id":957,"index":934,"char":"ν","width":23,"height":26,"xoffset":-1,"yoffset":12,"xadvance":20,"chnl":15,"x":436,"y":81,"page":0},{"id":8211,"index":385,"char":"–","width":25,"height":7,"xoffset":1,"yoffset":18,"xadvance":28,"chnl":15,"x":64,"y":503,"page":0},{"id":95,"index":67,"char":"_","width":23,"height":7,"xoffset":-2,"yoffset":34,"xadvance":19,"chnl":15,"x":100,"y":395,"page":0},{"id":42,"index":14,"char":"*","width":21,"height":21,"xoffset":-1,"yoffset":4,"xadvance":18,"chnl":15,"x":491,"y":0,"page":0},{"id":61,"index":33,"char":"=","width":21,"height":16,"xoffset":1,"yoffset":14,"xadvance":23,"chnl":15,"x":113,"y":275,"page":0},{"id":176,"index":113,"char":"°","width":14,"height":15,"xoffset":1,"yoffset":4,"xadvance":16,"chnl":15,"x":199,"y":248,"page":0},{"id":45,"index":17,"char":"-","width":14,"height":7,"xoffset":-1,"yoffset":20,"xadvance":12,"chnl":15,"x":54,"y":346,"page":0},{"id":44,"index":16,"char":",","width":10,"height":14,"xoffset":-1,"yoffset":30,"xadvance":8,"chnl":15,"x":184,"y":213,"page":0},{"id":34,"index":6,"char":"\\"","width":12,"height":14,"xoffset":1,"yoffset":3,"xadvance":13,"chnl":15,"x":83,"y":203,"page":0},{"id":39,"index":11,"char":"'","width":7,"height":14,"xoffset":0,"yoffset":3,"xadvance":7,"chnl":15,"x":140,"y":498,"page":0},{"id":46,"index":18,"char":".","width":9,"height":9,"xoffset":1,"yoffset":30,"xadvance":11,"chnl":15,"x":123,"y":229,"page":0}]`),dst={face:"Roboto-Regular",size:42,bold:0,italic:0,charset:["a","z","e","r","t","y","u","i","o","p","q","s","d","f","g","h","j","k","l","m","w","x","c","v","b","n","A","Z","E","R","T","Y","U","I","O","P","Q","S","D","F","G","H","J","K","L","M","W","X","C","V","B","N","/","\\","*","-","–","+","7","8","9","4","5","6","1","2","3","0",",",";",":","!","?",".","%","$","£","€","=","{","}","(",")","[","]","&","~",'"',"'","#","_","|","°","@","А","а","Б","б","В","в","Г","г","Д","д","Е","е","Ё","ё","Ж","ж","З","з","И","и","Й","й","К","к","Л","л","М","м","Н","н","О","о","П","п","Р","р","С","с","Т","т","У","у","Ф","ф","Х","х","Ц","ц","Ч","ч","Ш","ш","Щ","щ","Ъ","ъ","Ы","ы","Ь","ь","Э","э","Ю","ю","Я","я","ü","Ü","ö","Ö","ä","Ä","ñ","Ñ","ς","ε","ρ","τ","υ","θ","ι","ο","π","α","σ","δ","φ","γ","η","ξ","κ","λ","ζ","χ","ψ","ω","β","ν","μ","Ε","Ρ","Τ","Υ","Θ","Ι","Ο","Π","Α","Σ","Δ","Φ","Γ","Η","Ξ","Κ","Λ","Ζ","Χ","Ψ","Ω","Β","Ν","Μ","å","Å","æ","Æ","ø","Ø"],unicode:1,stretchH:100,smooth:1,aa:1,padding:[2,2,2,2],spacing:[0,0]},hst={lineHeight:44,base:34,scaleW:512,scaleH:512,pages:1,packed:0,alphaChnl:0,redChnl:0,greenChnl:0,blueChnl:0},fst={fieldType:"msdf",distanceRange:4},pst=JSON.parse('[{"first":97,"second":121,"amount":0},{"first":97,"second":118,"amount":0},{"first":97,"second":34,"amount":-1},{"first":97,"second":39,"amount":-1},{"first":97,"second":1090,"amount":0},{"first":97,"second":1091,"amount":0},{"first":97,"second":947,"amount":0},{"first":97,"second":957,"amount":0},{"first":122,"second":101,"amount":0},{"first":122,"second":111,"amount":0},{"first":122,"second":113,"amount":0},{"first":122,"second":100,"amount":0},{"first":122,"second":103,"amount":0},{"first":122,"second":99,"amount":0},{"first":122,"second":1077,"amount":0},{"first":122,"second":1105,"amount":0},{"first":122,"second":1086,"amount":0},{"first":122,"second":1089,"amount":0},{"first":122,"second":1092,"amount":0},{"first":122,"second":246,"amount":0},{"first":122,"second":962,"amount":0},{"first":122,"second":959,"amount":0},{"first":122,"second":945,"amount":0},{"first":122,"second":963,"amount":0},{"first":101,"second":121,"amount":0},{"first":101,"second":118,"amount":0},{"first":101,"second":34,"amount":0},{"first":101,"second":39,"amount":0},{"first":101,"second":1090,"amount":0},{"first":101,"second":1091,"amount":0},{"first":101,"second":947,"amount":0},{"first":101,"second":957,"amount":0},{"first":114,"second":97,"amount":-1},{"first":114,"second":101,"amount":0},{"first":114,"second":116,"amount":1},{"first":114,"second":121,"amount":0},{"first":114,"second":111,"amount":0},{"first":114,"second":113,"amount":0},{"first":114,"second":100,"amount":0},{"first":114,"second":102,"amount":0},{"first":114,"second":103,"amount":0},{"first":114,"second":119,"amount":0},{"first":114,"second":99,"amount":0},{"first":114,"second":118,"amount":0},{"first":114,"second":44,"amount":-3},{"first":114,"second":46,"amount":-3},{"first":114,"second":34,"amount":0},{"first":114,"second":39,"amount":0},{"first":114,"second":1072,"amount":-1},{"first":114,"second":1077,"amount":0},{"first":114,"second":1105,"amount":0},{"first":114,"second":1086,"amount":0},{"first":114,"second":1089,"amount":0},{"first":114,"second":1091,"amount":0},{"first":114,"second":1092,"amount":0},{"first":114,"second":246,"amount":0},{"first":114,"second":228,"amount":-1},{"first":114,"second":962,"amount":0},{"first":114,"second":959,"amount":0},{"first":114,"second":945,"amount":0},{"first":114,"second":963,"amount":0},{"first":114,"second":947,"amount":0},{"first":114,"second":957,"amount":0},{"first":114,"second":229,"amount":-1},{"first":116,"second":111,"amount":0},{"first":116,"second":1086,"amount":0},{"first":116,"second":246,"amount":0},{"first":116,"second":959,"amount":0},{"first":121,"second":97,"amount":0},{"first":121,"second":101,"amount":0},{"first":121,"second":111,"amount":0},{"first":121,"second":113,"amount":0},{"first":121,"second":100,"amount":0},{"first":121,"second":102,"amount":0},{"first":121,"second":103,"amount":0},{"first":121,"second":99,"amount":0},{"first":121,"second":44,"amount":-2},{"first":121,"second":46,"amount":-2},{"first":121,"second":34,"amount":0},{"first":121,"second":39,"amount":0},{"first":121,"second":1072,"amount":0},{"first":121,"second":1076,"amount":-1},{"first":121,"second":1077,"amount":0},{"first":121,"second":1105,"amount":0},{"first":121,"second":1083,"amount":-1},{"first":121,"second":1086,"amount":0},{"first":121,"second":1089,"amount":0},{"first":121,"second":1092,"amount":0},{"first":121,"second":246,"amount":0},{"first":121,"second":228,"amount":0},{"first":121,"second":962,"amount":0},{"first":121,"second":961,"amount":0},{"first":121,"second":964,"amount":0},{"first":121,"second":959,"amount":0},{"first":121,"second":960,"amount":0},{"first":121,"second":945,"amount":0},{"first":121,"second":963,"amount":0},{"first":121,"second":948,"amount":0},{"first":121,"second":229,"amount":0},{"first":111,"second":122,"amount":0},{"first":111,"second":121,"amount":0},{"first":111,"second":120,"amount":0},{"first":111,"second":118,"amount":0},{"first":111,"second":34,"amount":-3},{"first":111,"second":39,"amount":-3},{"first":111,"second":1076,"amount":-1},{"first":111,"second":1078,"amount":0},{"first":111,"second":1083,"amount":0},{"first":111,"second":1090,"amount":0},{"first":111,"second":1091,"amount":0},{"first":111,"second":1093,"amount":0},{"first":111,"second":964,"amount":0},{"first":111,"second":947,"amount":0},{"first":111,"second":957,"amount":0},{"first":112,"second":122,"amount":0},{"first":112,"second":121,"amount":0},{"first":112,"second":120,"amount":0},{"first":112,"second":118,"amount":0},{"first":112,"second":34,"amount":-1},{"first":112,"second":39,"amount":-1},{"first":112,"second":1076,"amount":0},{"first":112,"second":1078,"amount":0},{"first":112,"second":1083,"amount":0},{"first":112,"second":1090,"amount":-2},{"first":112,"second":1091,"amount":0},{"first":112,"second":1093,"amount":0},{"first":112,"second":964,"amount":0},{"first":112,"second":947,"amount":0},{"first":112,"second":957,"amount":0},{"first":102,"second":101,"amount":0},{"first":102,"second":113,"amount":0},{"first":102,"second":100,"amount":0},{"first":102,"second":103,"amount":0},{"first":102,"second":99,"amount":0},{"first":102,"second":125,"amount":0},{"first":102,"second":41,"amount":0},{"first":102,"second":93,"amount":0},{"first":102,"second":34,"amount":0},{"first":102,"second":39,"amount":0},{"first":102,"second":1077,"amount":0},{"first":102,"second":1105,"amount":0},{"first":102,"second":1089,"amount":0},{"first":102,"second":1092,"amount":0},{"first":102,"second":962,"amount":0},{"first":102,"second":945,"amount":0},{"first":102,"second":963,"amount":0},{"first":104,"second":34,"amount":-2},{"first":104,"second":39,"amount":-2},{"first":104,"second":1090,"amount":-1},{"first":107,"second":101,"amount":0},{"first":107,"second":113,"amount":0},{"first":107,"second":100,"amount":0},{"first":107,"second":103,"amount":0},{"first":107,"second":99,"amount":0},{"first":107,"second":1077,"amount":0},{"first":107,"second":1105,"amount":0},{"first":107,"second":1089,"amount":0},{"first":107,"second":1092,"amount":0},{"first":107,"second":962,"amount":0},{"first":107,"second":945,"amount":0},{"first":107,"second":963,"amount":0},{"first":109,"second":34,"amount":-2},{"first":109,"second":39,"amount":-2},{"first":109,"second":1090,"amount":-1},{"first":119,"second":44,"amount":-3},{"first":119,"second":46,"amount":-3},{"first":120,"second":101,"amount":0},{"first":120,"second":111,"amount":0},{"first":120,"second":113,"amount":0},{"first":120,"second":100,"amount":0},{"first":120,"second":103,"amount":0},{"first":120,"second":99,"amount":0},{"first":120,"second":1077,"amount":0},{"first":120,"second":1105,"amount":0},{"first":120,"second":1086,"amount":0},{"first":120,"second":1089,"amount":0},{"first":120,"second":1092,"amount":0},{"first":120,"second":246,"amount":0},{"first":120,"second":962,"amount":0},{"first":120,"second":959,"amount":0},{"first":120,"second":945,"amount":0},{"first":120,"second":963,"amount":0},{"first":99,"second":34,"amount":0},{"first":99,"second":39,"amount":0},{"first":118,"second":97,"amount":0},{"first":118,"second":101,"amount":0},{"first":118,"second":111,"amount":0},{"first":118,"second":113,"amount":0},{"first":118,"second":100,"amount":0},{"first":118,"second":102,"amount":0},{"first":118,"second":103,"amount":0},{"first":118,"second":99,"amount":0},{"first":118,"second":44,"amount":-2},{"first":118,"second":46,"amount":-2},{"first":118,"second":34,"amount":0},{"first":118,"second":39,"amount":0},{"first":118,"second":1072,"amount":0},{"first":118,"second":1076,"amount":-1},{"first":118,"second":1077,"amount":0},{"first":118,"second":1105,"amount":0},{"first":118,"second":1083,"amount":-1},{"first":118,"second":1086,"amount":0},{"first":118,"second":1089,"amount":0},{"first":118,"second":1092,"amount":0},{"first":118,"second":246,"amount":0},{"first":118,"second":228,"amount":0},{"first":118,"second":962,"amount":0},{"first":118,"second":961,"amount":0},{"first":118,"second":964,"amount":0},{"first":118,"second":959,"amount":0},{"first":118,"second":960,"amount":0},{"first":118,"second":945,"amount":0},{"first":118,"second":963,"amount":0},{"first":118,"second":948,"amount":0},{"first":118,"second":229,"amount":0},{"first":98,"second":122,"amount":0},{"first":98,"second":121,"amount":0},{"first":98,"second":120,"amount":0},{"first":98,"second":118,"amount":0},{"first":98,"second":34,"amount":-1},{"first":98,"second":39,"amount":-1},{"first":98,"second":1076,"amount":0},{"first":98,"second":1078,"amount":0},{"first":98,"second":1083,"amount":0},{"first":98,"second":1090,"amount":-2},{"first":98,"second":1091,"amount":0},{"first":98,"second":1093,"amount":0},{"first":98,"second":964,"amount":0},{"first":98,"second":947,"amount":0},{"first":98,"second":957,"amount":0},{"first":110,"second":34,"amount":-2},{"first":110,"second":39,"amount":-2},{"first":110,"second":1090,"amount":-1},{"first":65,"second":122,"amount":0},{"first":65,"second":116,"amount":0},{"first":65,"second":121,"amount":-1},{"first":65,"second":117,"amount":0},{"first":65,"second":111,"amount":0},{"first":65,"second":119,"amount":-1},{"first":65,"second":118,"amount":-1},{"first":65,"second":84,"amount":-3},{"first":65,"second":89,"amount":-2},{"first":65,"second":85,"amount":0},{"first":65,"second":79,"amount":0},{"first":65,"second":81,"amount":0},{"first":65,"second":71,"amount":0},{"first":65,"second":87,"amount":-1},{"first":65,"second":67,"amount":0},{"first":65,"second":86,"amount":-2},{"first":65,"second":63,"amount":-1},{"first":65,"second":34,"amount":-2},{"first":65,"second":39,"amount":-2},{"first":65,"second":1044,"amount":0},{"first":65,"second":1051,"amount":0},{"first":65,"second":1083,"amount":0},{"first":65,"second":1054,"amount":0},{"first":65,"second":1086,"amount":0},{"first":65,"second":1057,"amount":0},{"first":65,"second":1058,"amount":-3},{"first":65,"second":1090,"amount":-1},{"first":65,"second":1091,"amount":-1},{"first":65,"second":1063,"amount":-1},{"first":65,"second":1095,"amount":-2},{"first":65,"second":1068,"amount":-1},{"first":65,"second":252,"amount":0},{"first":65,"second":220,"amount":0},{"first":65,"second":246,"amount":0},{"first":65,"second":214,"amount":0},{"first":65,"second":964,"amount":-1},{"first":65,"second":965,"amount":0},{"first":65,"second":959,"amount":0},{"first":65,"second":947,"amount":-1},{"first":65,"second":955,"amount":0},{"first":65,"second":957,"amount":-1},{"first":65,"second":933,"amount":-2},{"first":65,"second":920,"amount":0},{"first":65,"second":927,"amount":0},{"first":65,"second":934,"amount":-1},{"first":65,"second":936,"amount":-1},{"first":65,"second":216,"amount":0},{"first":90,"second":101,"amount":0},{"first":90,"second":121,"amount":-1},{"first":90,"second":117,"amount":0},{"first":90,"second":111,"amount":0},{"first":90,"second":113,"amount":0},{"first":90,"second":100,"amount":0},{"first":90,"second":103,"amount":0},{"first":90,"second":119,"amount":-1},{"first":90,"second":99,"amount":0},{"first":90,"second":118,"amount":-1},{"first":90,"second":65,"amount":0},{"first":90,"second":79,"amount":-1},{"first":90,"second":81,"amount":-1},{"first":90,"second":71,"amount":-1},{"first":90,"second":67,"amount":-1},{"first":90,"second":1040,"amount":0},{"first":90,"second":1077,"amount":0},{"first":90,"second":1105,"amount":0},{"first":90,"second":1054,"amount":-1},{"first":90,"second":1086,"amount":0},{"first":90,"second":1057,"amount":-1},{"first":90,"second":1089,"amount":0},{"first":90,"second":1091,"amount":-1},{"first":90,"second":1092,"amount":0},{"first":90,"second":252,"amount":0},{"first":90,"second":246,"amount":0},{"first":90,"second":214,"amount":-1},{"first":90,"second":196,"amount":0},{"first":90,"second":962,"amount":0},{"first":90,"second":965,"amount":0},{"first":90,"second":959,"amount":0},{"first":90,"second":945,"amount":0},{"first":90,"second":963,"amount":0},{"first":90,"second":947,"amount":-1},{"first":90,"second":968,"amount":-1},{"first":90,"second":957,"amount":-1},{"first":90,"second":920,"amount":-1},{"first":90,"second":927,"amount":-1},{"first":90,"second":913,"amount":0},{"first":90,"second":916,"amount":0},{"first":90,"second":934,"amount":-1},{"first":90,"second":923,"amount":0},{"first":90,"second":197,"amount":0},{"first":90,"second":216,"amount":-1},{"first":69,"second":101,"amount":0},{"first":69,"second":121,"amount":-1},{"first":69,"second":117,"amount":0},{"first":69,"second":111,"amount":0},{"first":69,"second":113,"amount":0},{"first":69,"second":100,"amount":0},{"first":69,"second":102,"amount":0},{"first":69,"second":103,"amount":0},{"first":69,"second":119,"amount":0},{"first":69,"second":99,"amount":0},{"first":69,"second":118,"amount":-1},{"first":69,"second":84,"amount":0},{"first":69,"second":1077,"amount":0},{"first":69,"second":1105,"amount":0},{"first":69,"second":1086,"amount":0},{"first":69,"second":1089,"amount":0},{"first":69,"second":1058,"amount":0},{"first":69,"second":1091,"amount":-1},{"first":69,"second":1092,"amount":0},{"first":69,"second":252,"amount":0},{"first":69,"second":246,"amount":0},{"first":69,"second":962,"amount":0},{"first":69,"second":965,"amount":0},{"first":69,"second":959,"amount":0},{"first":69,"second":945,"amount":0},{"first":69,"second":963,"amount":0},{"first":69,"second":947,"amount":-1},{"first":69,"second":957,"amount":-1},{"first":82,"second":84,"amount":-2},{"first":82,"second":89,"amount":-1},{"first":82,"second":86,"amount":0},{"first":82,"second":1058,"amount":-2},{"first":82,"second":933,"amount":-1},{"first":84,"second":97,"amount":-2},{"first":84,"second":122,"amount":-1},{"first":84,"second":101,"amount":-2},{"first":84,"second":114,"amount":-2},{"first":84,"second":121,"amount":-1},{"first":84,"second":117,"amount":-2},{"first":84,"second":111,"amount":-2},{"first":84,"second":112,"amount":-2},{"first":84,"second":113,"amount":-2},{"first":84,"second":115,"amount":-2},{"first":84,"second":100,"amount":-2},{"first":84,"second":103,"amount":-2},{"first":84,"second":109,"amount":-2},{"first":84,"second":119,"amount":-1},{"first":84,"second":120,"amount":-2},{"first":84,"second":99,"amount":-2},{"first":84,"second":118,"amount":-1},{"first":84,"second":110,"amount":-2},{"first":84,"second":65,"amount":-2},{"first":84,"second":84,"amount":0},{"first":84,"second":89,"amount":0},{"first":84,"second":79,"amount":-1},{"first":84,"second":81,"amount":-1},{"first":84,"second":83,"amount":0},{"first":84,"second":71,"amount":-1},{"first":84,"second":74,"amount":-5},{"first":84,"second":87,"amount":0},{"first":84,"second":67,"amount":-1},{"first":84,"second":86,"amount":0},{"first":84,"second":45,"amount":-5},{"first":84,"second":8211,"amount":-5},{"first":84,"second":44,"amount":-4},{"first":84,"second":46,"amount":-4},{"first":84,"second":1040,"amount":-2},{"first":84,"second":1072,"amount":-2},{"first":84,"second":1073,"amount":-1},{"first":84,"second":1074,"amount":-2},{"first":84,"second":1075,"amount":-2},{"first":84,"second":1044,"amount":-2},{"first":84,"second":1076,"amount":-3},{"first":84,"second":1077,"amount":-2},{"first":84,"second":1105,"amount":-2},{"first":84,"second":1078,"amount":-2},{"first":84,"second":1079,"amount":-3},{"first":84,"second":1080,"amount":-2},{"first":84,"second":1081,"amount":-2},{"first":84,"second":1082,"amount":-2},{"first":84,"second":1051,"amount":-1},{"first":84,"second":1083,"amount":-3},{"first":84,"second":1084,"amount":-2},{"first":84,"second":1085,"amount":-2},{"first":84,"second":1054,"amount":-1},{"first":84,"second":1086,"amount":-2},{"first":84,"second":1087,"amount":-2},{"first":84,"second":1088,"amount":-2},{"first":84,"second":1057,"amount":-1},{"first":84,"second":1089,"amount":-2},{"first":84,"second":1058,"amount":0},{"first":84,"second":1090,"amount":-2},{"first":84,"second":1091,"amount":-1},{"first":84,"second":1092,"amount":-2},{"first":84,"second":1093,"amount":-2},{"first":84,"second":1094,"amount":-2},{"first":84,"second":1095,"amount":-3},{"first":84,"second":1096,"amount":-2},{"first":84,"second":1097,"amount":-2},{"first":84,"second":1099,"amount":-3},{"first":84,"second":1068,"amount":0},{"first":84,"second":1100,"amount":-2},{"first":84,"second":1101,"amount":-3},{"first":84,"second":1102,"amount":-2},{"first":84,"second":1103,"amount":-3},{"first":84,"second":252,"amount":-2},{"first":84,"second":246,"amount":-2},{"first":84,"second":214,"amount":-1},{"first":84,"second":228,"amount":-2},{"first":84,"second":196,"amount":-2},{"first":84,"second":241,"amount":-2},{"first":84,"second":962,"amount":-2},{"first":84,"second":949,"amount":-3},{"first":84,"second":961,"amount":-3},{"first":84,"second":964,"amount":-2},{"first":84,"second":965,"amount":-2},{"first":84,"second":953,"amount":-3},{"first":84,"second":959,"amount":-2},{"first":84,"second":960,"amount":-2},{"first":84,"second":945,"amount":-2},{"first":84,"second":963,"amount":-2},{"first":84,"second":948,"amount":-1},{"first":84,"second":966,"amount":-3},{"first":84,"second":947,"amount":-1},{"first":84,"second":951,"amount":-2},{"first":84,"second":968,"amount":-3},{"first":84,"second":969,"amount":-3},{"first":84,"second":957,"amount":-1},{"first":84,"second":933,"amount":0},{"first":84,"second":920,"amount":-1},{"first":84,"second":927,"amount":-1},{"first":84,"second":913,"amount":-2},{"first":84,"second":916,"amount":-2},{"first":84,"second":934,"amount":-2},{"first":84,"second":923,"amount":-2},{"first":84,"second":229,"amount":-2},{"first":84,"second":197,"amount":-2},{"first":84,"second":230,"amount":-2},{"first":84,"second":198,"amount":-4},{"first":84,"second":248,"amount":-2},{"first":84,"second":216,"amount":-1},{"first":89,"second":97,"amount":-1},{"first":89,"second":122,"amount":-1},{"first":89,"second":101,"amount":-1},{"first":89,"second":114,"amount":-1},{"first":89,"second":116,"amount":0},{"first":89,"second":121,"amount":0},{"first":89,"second":117,"amount":-1},{"first":89,"second":111,"amount":-1},{"first":89,"second":112,"amount":-1},{"first":89,"second":113,"amount":-1},{"first":89,"second":115,"amount":-1},{"first":89,"second":100,"amount":-1},{"first":89,"second":102,"amount":0},{"first":89,"second":103,"amount":-1},{"first":89,"second":109,"amount":-1},{"first":89,"second":120,"amount":0},{"first":89,"second":99,"amount":-1},{"first":89,"second":118,"amount":0},{"first":89,"second":110,"amount":-1},{"first":89,"second":65,"amount":-2},{"first":89,"second":84,"amount":0},{"first":89,"second":89,"amount":0},{"first":89,"second":85,"amount":-2},{"first":89,"second":79,"amount":-1},{"first":89,"second":81,"amount":-1},{"first":89,"second":83,"amount":0},{"first":89,"second":71,"amount":-1},{"first":89,"second":74,"amount":-2},{"first":89,"second":87,"amount":0},{"first":89,"second":88,"amount":0},{"first":89,"second":67,"amount":-1},{"first":89,"second":86,"amount":0},{"first":89,"second":42,"amount":-1},{"first":89,"second":45,"amount":-1},{"first":89,"second":8211,"amount":-1},{"first":89,"second":44,"amount":-4},{"first":89,"second":46,"amount":-4},{"first":89,"second":125,"amount":0},{"first":89,"second":41,"amount":0},{"first":89,"second":93,"amount":0},{"first":89,"second":38,"amount":-1},{"first":89,"second":1040,"amount":-2},{"first":89,"second":1072,"amount":-1},{"first":89,"second":1075,"amount":-1},{"first":89,"second":1077,"amount":-1},{"first":89,"second":1105,"amount":-1},{"first":89,"second":1046,"amount":0},{"first":89,"second":1078,"amount":0},{"first":89,"second":1080,"amount":-1},{"first":89,"second":1081,"amount":-1},{"first":89,"second":1082,"amount":-1},{"first":89,"second":1084,"amount":-1},{"first":89,"second":1085,"amount":-1},{"first":89,"second":1054,"amount":-1},{"first":89,"second":1086,"amount":-1},{"first":89,"second":1087,"amount":-1},{"first":89,"second":1088,"amount":-1},{"first":89,"second":1057,"amount":-1},{"first":89,"second":1089,"amount":-1},{"first":89,"second":1058,"amount":0},{"first":89,"second":1091,"amount":0},{"first":89,"second":1092,"amount":-1},{"first":89,"second":1061,"amount":0},{"first":89,"second":1093,"amount":0},{"first":89,"second":1094,"amount":-1},{"first":89,"second":1096,"amount":-1},{"first":89,"second":1097,"amount":-1},{"first":89,"second":1100,"amount":-1},{"first":89,"second":1102,"amount":-1},{"first":89,"second":252,"amount":-1},{"first":89,"second":220,"amount":-2},{"first":89,"second":246,"amount":-1},{"first":89,"second":214,"amount":-1},{"first":89,"second":228,"amount":-1},{"first":89,"second":196,"amount":-2},{"first":89,"second":241,"amount":-1},{"first":89,"second":962,"amount":-1},{"first":89,"second":949,"amount":-1},{"first":89,"second":961,"amount":-1},{"first":89,"second":964,"amount":0},{"first":89,"second":965,"amount":-1},{"first":89,"second":952,"amount":0},{"first":89,"second":953,"amount":-1},{"first":89,"second":959,"amount":-1},{"first":89,"second":960,"amount":0},{"first":89,"second":945,"amount":-1},{"first":89,"second":963,"amount":-1},{"first":89,"second":948,"amount":0},{"first":89,"second":966,"amount":-1},{"first":89,"second":947,"amount":0},{"first":89,"second":951,"amount":-1},{"first":89,"second":950,"amount":0},{"first":89,"second":968,"amount":-1},{"first":89,"second":969,"amount":-1},{"first":89,"second":946,"amount":0},{"first":89,"second":957,"amount":0},{"first":89,"second":933,"amount":0},{"first":89,"second":920,"amount":-1},{"first":89,"second":927,"amount":-1},{"first":89,"second":913,"amount":-2},{"first":89,"second":916,"amount":-2},{"first":89,"second":934,"amount":-1},{"first":89,"second":923,"amount":-2},{"first":89,"second":935,"amount":0},{"first":89,"second":229,"amount":-1},{"first":89,"second":197,"amount":-2},{"first":89,"second":230,"amount":-1},{"first":89,"second":198,"amount":-2},{"first":89,"second":248,"amount":-1},{"first":89,"second":216,"amount":-1},{"first":85,"second":65,"amount":0},{"first":85,"second":1040,"amount":0},{"first":85,"second":196,"amount":0},{"first":85,"second":913,"amount":0},{"first":85,"second":916,"amount":0},{"first":85,"second":923,"amount":0},{"first":85,"second":197,"amount":0},{"first":73,"second":65,"amount":0},{"first":73,"second":84,"amount":-1},{"first":73,"second":89,"amount":-1},{"first":73,"second":88,"amount":0},{"first":73,"second":1040,"amount":0},{"first":73,"second":1044,"amount":0},{"first":73,"second":1076,"amount":0},{"first":73,"second":1046,"amount":0},{"first":73,"second":1051,"amount":0},{"first":73,"second":1083,"amount":0},{"first":73,"second":1058,"amount":-1},{"first":73,"second":1061,"amount":0},{"first":73,"second":1063,"amount":-1},{"first":73,"second":1095,"amount":-1},{"first":73,"second":196,"amount":0},{"first":73,"second":933,"amount":-1},{"first":73,"second":913,"amount":0},{"first":73,"second":916,"amount":0},{"first":73,"second":923,"amount":0},{"first":73,"second":935,"amount":0},{"first":73,"second":197,"amount":0},{"first":79,"second":65,"amount":0},{"first":79,"second":90,"amount":0},{"first":79,"second":84,"amount":-1},{"first":79,"second":89,"amount":-1},{"first":79,"second":88,"amount":0},{"first":79,"second":86,"amount":0},{"first":79,"second":44,"amount":-2},{"first":79,"second":46,"amount":-2},{"first":79,"second":1040,"amount":0},{"first":79,"second":1044,"amount":-1},{"first":79,"second":1046,"amount":0},{"first":79,"second":1051,"amount":-1},{"first":79,"second":1058,"amount":-1},{"first":79,"second":1061,"amount":0},{"first":79,"second":1068,"amount":-1},{"first":79,"second":196,"amount":0},{"first":79,"second":955,"amount":0},{"first":79,"second":933,"amount":-1},{"first":79,"second":913,"amount":0},{"first":79,"second":931,"amount":0},{"first":79,"second":916,"amount":0},{"first":79,"second":926,"amount":0},{"first":79,"second":923,"amount":0},{"first":79,"second":918,"amount":0},{"first":79,"second":935,"amount":0},{"first":79,"second":197,"amount":0},{"first":79,"second":198,"amount":-1},{"first":80,"second":97,"amount":0},{"first":80,"second":101,"amount":0},{"first":80,"second":116,"amount":0},{"first":80,"second":121,"amount":0},{"first":80,"second":111,"amount":0},{"first":80,"second":113,"amount":0},{"first":80,"second":100,"amount":0},{"first":80,"second":103,"amount":0},{"first":80,"second":99,"amount":0},{"first":80,"second":118,"amount":0},{"first":80,"second":65,"amount":-3},{"first":80,"second":90,"amount":-1},{"first":80,"second":74,"amount":-4},{"first":80,"second":88,"amount":-1},{"first":80,"second":44,"amount":-7},{"first":80,"second":46,"amount":-7},{"first":80,"second":1040,"amount":-3},{"first":80,"second":1072,"amount":0},{"first":80,"second":1044,"amount":-2},{"first":80,"second":1076,"amount":-1},{"first":80,"second":1077,"amount":0},{"first":80,"second":1105,"amount":0},{"first":80,"second":1046,"amount":-1},{"first":80,"second":1051,"amount":-1},{"first":80,"second":1083,"amount":-1},{"first":80,"second":1086,"amount":0},{"first":80,"second":1089,"amount":0},{"first":80,"second":1091,"amount":0},{"first":80,"second":1092,"amount":0},{"first":80,"second":1061,"amount":-1},{"first":80,"second":246,"amount":0},{"first":80,"second":228,"amount":0},{"first":80,"second":196,"amount":-3},{"first":80,"second":962,"amount":0},{"first":80,"second":961,"amount":-1},{"first":80,"second":959,"amount":0},{"first":80,"second":945,"amount":0},{"first":80,"second":963,"amount":0},{"first":80,"second":948,"amount":0},{"first":80,"second":947,"amount":0},{"first":80,"second":955,"amount":-1},{"first":80,"second":957,"amount":0},{"first":80,"second":913,"amount":-3},{"first":80,"second":916,"amount":-3},{"first":80,"second":923,"amount":-3},{"first":80,"second":918,"amount":-1},{"first":80,"second":935,"amount":-1},{"first":80,"second":229,"amount":0},{"first":80,"second":197,"amount":-3},{"first":80,"second":198,"amount":-2},{"first":81,"second":84,"amount":-1},{"first":81,"second":89,"amount":-1},{"first":81,"second":87,"amount":0},{"first":81,"second":86,"amount":-1},{"first":81,"second":1058,"amount":-1},{"first":81,"second":933,"amount":-1},{"first":68,"second":65,"amount":0},{"first":68,"second":90,"amount":0},{"first":68,"second":84,"amount":-1},{"first":68,"second":89,"amount":-1},{"first":68,"second":88,"amount":0},{"first":68,"second":86,"amount":0},{"first":68,"second":44,"amount":-2},{"first":68,"second":46,"amount":-2},{"first":68,"second":1040,"amount":0},{"first":68,"second":1044,"amount":-1},{"first":68,"second":1046,"amount":0},{"first":68,"second":1051,"amount":-1},{"first":68,"second":1058,"amount":-1},{"first":68,"second":1061,"amount":0},{"first":68,"second":1068,"amount":-1},{"first":68,"second":196,"amount":0},{"first":68,"second":955,"amount":0},{"first":68,"second":933,"amount":-1},{"first":68,"second":913,"amount":0},{"first":68,"second":931,"amount":0},{"first":68,"second":916,"amount":0},{"first":68,"second":926,"amount":0},{"first":68,"second":923,"amount":0},{"first":68,"second":918,"amount":0},{"first":68,"second":935,"amount":0},{"first":68,"second":197,"amount":0},{"first":68,"second":198,"amount":-1},{"first":70,"second":97,"amount":-1},{"first":70,"second":101,"amount":0},{"first":70,"second":114,"amount":-1},{"first":70,"second":121,"amount":0},{"first":70,"second":117,"amount":0},{"first":70,"second":111,"amount":0},{"first":70,"second":113,"amount":0},{"first":70,"second":100,"amount":0},{"first":70,"second":103,"amount":0},{"first":70,"second":99,"amount":0},{"first":70,"second":118,"amount":0},{"first":70,"second":65,"amount":-3},{"first":70,"second":84,"amount":0},{"first":70,"second":74,"amount":-5},{"first":70,"second":44,"amount":-5},{"first":70,"second":46,"amount":-5},{"first":70,"second":1040,"amount":-3},{"first":70,"second":1072,"amount":-1},{"first":70,"second":1077,"amount":0},{"first":70,"second":1105,"amount":0},{"first":70,"second":1086,"amount":0},{"first":70,"second":1089,"amount":0},{"first":70,"second":1058,"amount":0},{"first":70,"second":1091,"amount":0},{"first":70,"second":1092,"amount":0},{"first":70,"second":252,"amount":0},{"first":70,"second":246,"amount":0},{"first":70,"second":228,"amount":-1},{"first":70,"second":196,"amount":-3},{"first":70,"second":962,"amount":0},{"first":70,"second":965,"amount":0},{"first":70,"second":959,"amount":0},{"first":70,"second":945,"amount":0},{"first":70,"second":963,"amount":0},{"first":70,"second":947,"amount":0},{"first":70,"second":957,"amount":0},{"first":70,"second":913,"amount":-3},{"first":70,"second":916,"amount":-3},{"first":70,"second":923,"amount":-3},{"first":70,"second":229,"amount":-1},{"first":70,"second":197,"amount":-3},{"first":72,"second":65,"amount":0},{"first":72,"second":84,"amount":-1},{"first":72,"second":89,"amount":-1},{"first":72,"second":88,"amount":0},{"first":72,"second":1040,"amount":0},{"first":72,"second":1044,"amount":0},{"first":72,"second":1076,"amount":0},{"first":72,"second":1046,"amount":0},{"first":72,"second":1051,"amount":0},{"first":72,"second":1083,"amount":0},{"first":72,"second":1058,"amount":-1},{"first":72,"second":1061,"amount":0},{"first":72,"second":1063,"amount":-1},{"first":72,"second":1095,"amount":-1},{"first":72,"second":196,"amount":0},{"first":72,"second":933,"amount":-1},{"first":72,"second":913,"amount":0},{"first":72,"second":916,"amount":0},{"first":72,"second":923,"amount":0},{"first":72,"second":935,"amount":0},{"first":72,"second":197,"amount":0},{"first":74,"second":65,"amount":0},{"first":74,"second":1040,"amount":0},{"first":74,"second":196,"amount":0},{"first":74,"second":913,"amount":0},{"first":74,"second":916,"amount":0},{"first":74,"second":923,"amount":0},{"first":74,"second":197,"amount":0},{"first":75,"second":101,"amount":-1},{"first":75,"second":121,"amount":-1},{"first":75,"second":117,"amount":0},{"first":75,"second":111,"amount":-1},{"first":75,"second":112,"amount":0},{"first":75,"second":113,"amount":-1},{"first":75,"second":100,"amount":-1},{"first":75,"second":103,"amount":-1},{"first":75,"second":109,"amount":0},{"first":75,"second":119,"amount":-1},{"first":75,"second":99,"amount":-1},{"first":75,"second":118,"amount":-1},{"first":75,"second":110,"amount":0},{"first":75,"second":79,"amount":-1},{"first":75,"second":81,"amount":-1},{"first":75,"second":71,"amount":-1},{"first":75,"second":67,"amount":-1},{"first":75,"second":45,"amount":-1},{"first":75,"second":8211,"amount":-1},{"first":75,"second":1073,"amount":-1},{"first":75,"second":1075,"amount":0},{"first":75,"second":1077,"amount":-1},{"first":75,"second":1105,"amount":-1},{"first":75,"second":1080,"amount":0},{"first":75,"second":1081,"amount":0},{"first":75,"second":1082,"amount":0},{"first":75,"second":1084,"amount":0},{"first":75,"second":1085,"amount":0},{"first":75,"second":1054,"amount":-1},{"first":75,"second":1086,"amount":-1},{"first":75,"second":1087,"amount":0},{"first":75,"second":1088,"amount":0},{"first":75,"second":1057,"amount":-1},{"first":75,"second":1089,"amount":-1},{"first":75,"second":1090,"amount":-1},{"first":75,"second":1091,"amount":-1},{"first":75,"second":1092,"amount":-1},{"first":75,"second":1094,"amount":0},{"first":75,"second":1095,"amount":-2},{"first":75,"second":1096,"amount":0},{"first":75,"second":1097,"amount":0},{"first":75,"second":1100,"amount":0},{"first":75,"second":1102,"amount":0},{"first":75,"second":252,"amount":0},{"first":75,"second":246,"amount":-1},{"first":75,"second":214,"amount":-1},{"first":75,"second":241,"amount":0},{"first":75,"second":962,"amount":-1},{"first":75,"second":964,"amount":-2},{"first":75,"second":965,"amount":0},{"first":75,"second":959,"amount":-1},{"first":75,"second":945,"amount":-1},{"first":75,"second":963,"amount":-1},{"first":75,"second":947,"amount":-1},{"first":75,"second":951,"amount":0},{"first":75,"second":957,"amount":-1},{"first":75,"second":920,"amount":-1},{"first":75,"second":927,"amount":-1},{"first":75,"second":934,"amount":-1},{"first":75,"second":216,"amount":-1},{"first":76,"second":121,"amount":-3},{"first":76,"second":117,"amount":-1},{"first":76,"second":119,"amount":-2},{"first":76,"second":118,"amount":-3},{"first":76,"second":65,"amount":0},{"first":76,"second":84,"amount":-6},{"first":76,"second":89,"amount":-5},{"first":76,"second":85,"amount":-1},{"first":76,"second":79,"amount":-1},{"first":76,"second":81,"amount":-1},{"first":76,"second":71,"amount":-1},{"first":76,"second":87,"amount":-3},{"first":76,"second":67,"amount":-1},{"first":76,"second":86,"amount":-4},{"first":76,"second":34,"amount":-7},{"first":76,"second":39,"amount":-7},{"first":76,"second":1040,"amount":0},{"first":76,"second":1054,"amount":-1},{"first":76,"second":1057,"amount":-1},{"first":76,"second":1058,"amount":-6},{"first":76,"second":1091,"amount":-3},{"first":76,"second":252,"amount":-1},{"first":76,"second":220,"amount":-1},{"first":76,"second":214,"amount":-1},{"first":76,"second":196,"amount":0},{"first":76,"second":965,"amount":-1},{"first":76,"second":947,"amount":-3},{"first":76,"second":957,"amount":-3},{"first":76,"second":933,"amount":-5},{"first":76,"second":920,"amount":-1},{"first":76,"second":927,"amount":-1},{"first":76,"second":913,"amount":0},{"first":76,"second":916,"amount":0},{"first":76,"second":923,"amount":0},{"first":76,"second":197,"amount":0},{"first":76,"second":216,"amount":-1},{"first":77,"second":65,"amount":0},{"first":77,"second":84,"amount":-1},{"first":77,"second":89,"amount":-1},{"first":77,"second":88,"amount":0},{"first":77,"second":1040,"amount":0},{"first":77,"second":1044,"amount":0},{"first":77,"second":1076,"amount":0},{"first":77,"second":1046,"amount":0},{"first":77,"second":1051,"amount":0},{"first":77,"second":1083,"amount":0},{"first":77,"second":1058,"amount":-1},{"first":77,"second":1061,"amount":0},{"first":77,"second":1063,"amount":-1},{"first":77,"second":1095,"amount":-1},{"first":77,"second":196,"amount":0},{"first":77,"second":933,"amount":-1},{"first":77,"second":913,"amount":0},{"first":77,"second":916,"amount":0},{"first":77,"second":923,"amount":0},{"first":77,"second":935,"amount":0},{"first":77,"second":197,"amount":0},{"first":87,"second":97,"amount":-1},{"first":87,"second":101,"amount":-1},{"first":87,"second":114,"amount":0},{"first":87,"second":117,"amount":0},{"first":87,"second":111,"amount":-1},{"first":87,"second":113,"amount":-1},{"first":87,"second":100,"amount":-1},{"first":87,"second":103,"amount":-1},{"first":87,"second":99,"amount":-1},{"first":87,"second":65,"amount":-1},{"first":87,"second":84,"amount":0},{"first":87,"second":45,"amount":-1},{"first":87,"second":8211,"amount":-1},{"first":87,"second":44,"amount":-3},{"first":87,"second":46,"amount":-3},{"first":87,"second":125,"amount":0},{"first":87,"second":41,"amount":0},{"first":87,"second":93,"amount":0},{"first":87,"second":1040,"amount":-1},{"first":87,"second":1072,"amount":-1},{"first":87,"second":1077,"amount":-1},{"first":87,"second":1105,"amount":-1},{"first":87,"second":1086,"amount":-1},{"first":87,"second":1089,"amount":-1},{"first":87,"second":1058,"amount":0},{"first":87,"second":1092,"amount":-1},{"first":87,"second":252,"amount":0},{"first":87,"second":246,"amount":-1},{"first":87,"second":228,"amount":-1},{"first":87,"second":196,"amount":-1},{"first":87,"second":962,"amount":-1},{"first":87,"second":965,"amount":0},{"first":87,"second":959,"amount":-1},{"first":87,"second":945,"amount":-1},{"first":87,"second":963,"amount":-1},{"first":87,"second":913,"amount":-1},{"first":87,"second":916,"amount":-1},{"first":87,"second":923,"amount":-1},{"first":87,"second":229,"amount":-1},{"first":87,"second":197,"amount":-1},{"first":88,"second":101,"amount":-1},{"first":88,"second":121,"amount":-1},{"first":88,"second":117,"amount":0},{"first":88,"second":111,"amount":0},{"first":88,"second":113,"amount":-1},{"first":88,"second":100,"amount":-1},{"first":88,"second":103,"amount":-1},{"first":88,"second":99,"amount":-1},{"first":88,"second":118,"amount":-1},{"first":88,"second":79,"amount":-1},{"first":88,"second":81,"amount":-1},{"first":88,"second":71,"amount":-1},{"first":88,"second":67,"amount":-1},{"first":88,"second":86,"amount":0},{"first":88,"second":45,"amount":-1},{"first":88,"second":8211,"amount":-1},{"first":88,"second":1073,"amount":0},{"first":88,"second":1044,"amount":0},{"first":88,"second":1077,"amount":-1},{"first":88,"second":1105,"amount":-1},{"first":88,"second":1051,"amount":0},{"first":88,"second":1083,"amount":0},{"first":88,"second":1054,"amount":-1},{"first":88,"second":1086,"amount":0},{"first":88,"second":1057,"amount":-1},{"first":88,"second":1089,"amount":-1},{"first":88,"second":1090,"amount":-1},{"first":88,"second":1091,"amount":-1},{"first":88,"second":1092,"amount":-1},{"first":88,"second":1095,"amount":-1},{"first":88,"second":252,"amount":0},{"first":88,"second":246,"amount":0},{"first":88,"second":214,"amount":-1},{"first":88,"second":962,"amount":-1},{"first":88,"second":964,"amount":-1},{"first":88,"second":965,"amount":0},{"first":88,"second":952,"amount":0},{"first":88,"second":959,"amount":0},{"first":88,"second":945,"amount":-1},{"first":88,"second":963,"amount":-1},{"first":88,"second":948,"amount":0},{"first":88,"second":966,"amount":-1},{"first":88,"second":947,"amount":-1},{"first":88,"second":955,"amount":0},{"first":88,"second":968,"amount":-1},{"first":88,"second":969,"amount":0},{"first":88,"second":957,"amount":-1},{"first":88,"second":920,"amount":-1},{"first":88,"second":927,"amount":-1},{"first":88,"second":934,"amount":-1},{"first":88,"second":216,"amount":-1},{"first":67,"second":84,"amount":-1},{"first":67,"second":125,"amount":0},{"first":67,"second":41,"amount":-1},{"first":67,"second":93,"amount":0},{"first":67,"second":1058,"amount":-1},{"first":86,"second":97,"amount":-1},{"first":86,"second":101,"amount":-1},{"first":86,"second":114,"amount":-1},{"first":86,"second":121,"amount":0},{"first":86,"second":117,"amount":-1},{"first":86,"second":111,"amount":-1},{"first":86,"second":113,"amount":-1},{"first":86,"second":100,"amount":-1},{"first":86,"second":103,"amount":-1},{"first":86,"second":99,"amount":-1},{"first":86,"second":118,"amount":0},{"first":86,"second":65,"amount":-2},{"first":86,"second":79,"amount":0},{"first":86,"second":81,"amount":0},{"first":86,"second":71,"amount":0},{"first":86,"second":67,"amount":0},{"first":86,"second":45,"amount":-1},{"first":86,"second":8211,"amount":-1},{"first":86,"second":44,"amount":-5},{"first":86,"second":46,"amount":-5},{"first":86,"second":125,"amount":0},{"first":86,"second":41,"amount":0},{"first":86,"second":93,"amount":0},{"first":86,"second":1040,"amount":-2},{"first":86,"second":1072,"amount":-1},{"first":86,"second":1077,"amount":-1},{"first":86,"second":1105,"amount":-1},{"first":86,"second":1054,"amount":0},{"first":86,"second":1086,"amount":-1},{"first":86,"second":1057,"amount":0},{"first":86,"second":1089,"amount":-1},{"first":86,"second":1091,"amount":0},{"first":86,"second":1092,"amount":-1},{"first":86,"second":252,"amount":-1},{"first":86,"second":246,"amount":-1},{"first":86,"second":214,"amount":0},{"first":86,"second":228,"amount":-1},{"first":86,"second":196,"amount":-2},{"first":86,"second":962,"amount":-1},{"first":86,"second":965,"amount":-1},{"first":86,"second":959,"amount":-1},{"first":86,"second":945,"amount":-1},{"first":86,"second":963,"amount":-1},{"first":86,"second":947,"amount":0},{"first":86,"second":957,"amount":0},{"first":86,"second":920,"amount":0},{"first":86,"second":927,"amount":0},{"first":86,"second":913,"amount":-2},{"first":86,"second":916,"amount":-2},{"first":86,"second":923,"amount":-2},{"first":86,"second":229,"amount":-1},{"first":86,"second":197,"amount":-2},{"first":86,"second":216,"amount":0},{"first":66,"second":84,"amount":-1},{"first":66,"second":89,"amount":-1},{"first":66,"second":86,"amount":0},{"first":66,"second":1058,"amount":-1},{"first":66,"second":1059,"amount":0},{"first":66,"second":933,"amount":-1},{"first":78,"second":65,"amount":0},{"first":78,"second":84,"amount":-1},{"first":78,"second":89,"amount":-1},{"first":78,"second":88,"amount":0},{"first":78,"second":1040,"amount":0},{"first":78,"second":1044,"amount":0},{"first":78,"second":1076,"amount":0},{"first":78,"second":1046,"amount":0},{"first":78,"second":1051,"amount":0},{"first":78,"second":1083,"amount":0},{"first":78,"second":1058,"amount":-1},{"first":78,"second":1061,"amount":0},{"first":78,"second":1063,"amount":-1},{"first":78,"second":1095,"amount":-1},{"first":78,"second":196,"amount":0},{"first":78,"second":933,"amount":-1},{"first":78,"second":913,"amount":0},{"first":78,"second":916,"amount":0},{"first":78,"second":923,"amount":0},{"first":78,"second":935,"amount":0},{"first":78,"second":197,"amount":0},{"first":47,"second":47,"amount":-5},{"first":44,"second":34,"amount":-3},{"first":44,"second":39,"amount":-3},{"first":46,"second":34,"amount":-3},{"first":46,"second":39,"amount":-3},{"first":123,"second":85,"amount":0},{"first":123,"second":74,"amount":0},{"first":123,"second":220,"amount":0},{"first":40,"second":89,"amount":0},{"first":40,"second":87,"amount":0},{"first":40,"second":86,"amount":0},{"first":40,"second":933,"amount":0},{"first":91,"second":85,"amount":0},{"first":91,"second":74,"amount":0},{"first":91,"second":220,"amount":0},{"first":34,"second":97,"amount":-1},{"first":34,"second":101,"amount":-1},{"first":34,"second":111,"amount":-1},{"first":34,"second":112,"amount":0},{"first":34,"second":113,"amount":-1},{"first":34,"second":115,"amount":-2},{"first":34,"second":100,"amount":-1},{"first":34,"second":103,"amount":-1},{"first":34,"second":109,"amount":0},{"first":34,"second":119,"amount":0},{"first":34,"second":99,"amount":-1},{"first":34,"second":110,"amount":0},{"first":34,"second":65,"amount":-2},{"first":34,"second":34,"amount":-2},{"first":34,"second":39,"amount":-2},{"first":34,"second":1040,"amount":-2},{"first":34,"second":1072,"amount":-1},{"first":34,"second":1075,"amount":0},{"first":34,"second":1077,"amount":-1},{"first":34,"second":1105,"amount":-1},{"first":34,"second":1080,"amount":0},{"first":34,"second":1081,"amount":0},{"first":34,"second":1082,"amount":0},{"first":34,"second":1084,"amount":0},{"first":34,"second":1085,"amount":0},{"first":34,"second":1086,"amount":-1},{"first":34,"second":1087,"amount":0},{"first":34,"second":1088,"amount":0},{"first":34,"second":1089,"amount":-1},{"first":34,"second":1092,"amount":-1},{"first":34,"second":1094,"amount":0},{"first":34,"second":1096,"amount":0},{"first":34,"second":1097,"amount":0},{"first":34,"second":1100,"amount":0},{"first":34,"second":1102,"amount":0},{"first":34,"second":246,"amount":-1},{"first":34,"second":228,"amount":-1},{"first":34,"second":196,"amount":-2},{"first":34,"second":241,"amount":0},{"first":34,"second":962,"amount":-1},{"first":34,"second":959,"amount":-1},{"first":34,"second":945,"amount":-1},{"first":34,"second":963,"amount":-1},{"first":34,"second":951,"amount":0},{"first":34,"second":913,"amount":-2},{"first":34,"second":916,"amount":-2},{"first":34,"second":923,"amount":-2},{"first":34,"second":229,"amount":-1},{"first":34,"second":197,"amount":-2},{"first":39,"second":97,"amount":-1},{"first":39,"second":101,"amount":-1},{"first":39,"second":111,"amount":-1},{"first":39,"second":112,"amount":0},{"first":39,"second":113,"amount":-1},{"first":39,"second":115,"amount":-2},{"first":39,"second":100,"amount":-1},{"first":39,"second":103,"amount":-1},{"first":39,"second":109,"amount":0},{"first":39,"second":119,"amount":0},{"first":39,"second":99,"amount":-1},{"first":39,"second":110,"amount":0},{"first":39,"second":65,"amount":-2},{"first":39,"second":34,"amount":-2},{"first":39,"second":39,"amount":-2},{"first":39,"second":1040,"amount":-2},{"first":39,"second":1072,"amount":-1},{"first":39,"second":1075,"amount":0},{"first":39,"second":1077,"amount":-1},{"first":39,"second":1105,"amount":-1},{"first":39,"second":1080,"amount":0},{"first":39,"second":1081,"amount":0},{"first":39,"second":1082,"amount":0},{"first":39,"second":1084,"amount":0},{"first":39,"second":1085,"amount":0},{"first":39,"second":1086,"amount":-1},{"first":39,"second":1087,"amount":0},{"first":39,"second":1088,"amount":0},{"first":39,"second":1089,"amount":-1},{"first":39,"second":1092,"amount":-1},{"first":39,"second":1094,"amount":0},{"first":39,"second":1096,"amount":0},{"first":39,"second":1097,"amount":0},{"first":39,"second":1100,"amount":0},{"first":39,"second":1102,"amount":0},{"first":39,"second":246,"amount":-1},{"first":39,"second":228,"amount":-1},{"first":39,"second":196,"amount":-2},{"first":39,"second":241,"amount":0},{"first":39,"second":962,"amount":-1},{"first":39,"second":959,"amount":-1},{"first":39,"second":945,"amount":-1},{"first":39,"second":963,"amount":-1},{"first":39,"second":951,"amount":0},{"first":39,"second":913,"amount":-2},{"first":39,"second":916,"amount":-2},{"first":39,"second":923,"amount":-2},{"first":39,"second":229,"amount":-1},{"first":39,"second":197,"amount":-2},{"first":1040,"second":122,"amount":0},{"first":1040,"second":116,"amount":0},{"first":1040,"second":121,"amount":-1},{"first":1040,"second":117,"amount":0},{"first":1040,"second":111,"amount":0},{"first":1040,"second":119,"amount":-1},{"first":1040,"second":118,"amount":-1},{"first":1040,"second":84,"amount":-3},{"first":1040,"second":89,"amount":-2},{"first":1040,"second":85,"amount":0},{"first":1040,"second":79,"amount":0},{"first":1040,"second":81,"amount":0},{"first":1040,"second":71,"amount":0},{"first":1040,"second":87,"amount":-1},{"first":1040,"second":67,"amount":0},{"first":1040,"second":86,"amount":-2},{"first":1040,"second":63,"amount":-1},{"first":1040,"second":34,"amount":-2},{"first":1040,"second":39,"amount":-2},{"first":1040,"second":1044,"amount":0},{"first":1040,"second":1051,"amount":0},{"first":1040,"second":1083,"amount":0},{"first":1040,"second":1054,"amount":0},{"first":1040,"second":1086,"amount":0},{"first":1040,"second":1057,"amount":0},{"first":1040,"second":1058,"amount":-3},{"first":1040,"second":1090,"amount":-1},{"first":1040,"second":1091,"amount":-1},{"first":1040,"second":1063,"amount":-1},{"first":1040,"second":1095,"amount":-2},{"first":1040,"second":1068,"amount":-1},{"first":1040,"second":252,"amount":0},{"first":1040,"second":220,"amount":0},{"first":1040,"second":246,"amount":0},{"first":1040,"second":214,"amount":0},{"first":1040,"second":964,"amount":-1},{"first":1040,"second":965,"amount":0},{"first":1040,"second":959,"amount":0},{"first":1040,"second":947,"amount":-1},{"first":1040,"second":955,"amount":0},{"first":1040,"second":957,"amount":-1},{"first":1040,"second":933,"amount":-2},{"first":1040,"second":920,"amount":0},{"first":1040,"second":927,"amount":0},{"first":1040,"second":934,"amount":-1},{"first":1040,"second":936,"amount":-1},{"first":1040,"second":216,"amount":0},{"first":1072,"second":121,"amount":0},{"first":1072,"second":118,"amount":0},{"first":1072,"second":34,"amount":-1},{"first":1072,"second":39,"amount":-1},{"first":1072,"second":1090,"amount":0},{"first":1072,"second":1091,"amount":0},{"first":1072,"second":947,"amount":0},{"first":1072,"second":957,"amount":0},{"first":1041,"second":120,"amount":0},{"first":1041,"second":84,"amount":-1},{"first":1041,"second":89,"amount":-1},{"first":1041,"second":88,"amount":0},{"first":1041,"second":86,"amount":-1},{"first":1041,"second":1046,"amount":0},{"first":1041,"second":1078,"amount":0},{"first":1041,"second":1058,"amount":-1},{"first":1041,"second":1090,"amount":-1},{"first":1041,"second":1059,"amount":0},{"first":1041,"second":1061,"amount":0},{"first":1041,"second":1093,"amount":0},{"first":1041,"second":1063,"amount":0},{"first":1041,"second":1068,"amount":-1},{"first":1041,"second":933,"amount":-1},{"first":1041,"second":935,"amount":0},{"first":1073,"second":112,"amount":0},{"first":1073,"second":109,"amount":0},{"first":1073,"second":120,"amount":0},{"first":1073,"second":110,"amount":0},{"first":1073,"second":1075,"amount":0},{"first":1073,"second":1076,"amount":0},{"first":1073,"second":1078,"amount":0},{"first":1073,"second":1080,"amount":0},{"first":1073,"second":1081,"amount":0},{"first":1073,"second":1082,"amount":0},{"first":1073,"second":1084,"amount":0},{"first":1073,"second":1085,"amount":0},{"first":1073,"second":1087,"amount":0},{"first":1073,"second":1088,"amount":0},{"first":1073,"second":1090,"amount":0},{"first":1073,"second":1093,"amount":0},{"first":1073,"second":1094,"amount":0},{"first":1073,"second":1096,"amount":0},{"first":1073,"second":1097,"amount":0},{"first":1073,"second":1100,"amount":0},{"first":1073,"second":1102,"amount":0},{"first":1073,"second":241,"amount":0},{"first":1073,"second":951,"amount":0},{"first":1042,"second":84,"amount":-1},{"first":1042,"second":89,"amount":-1},{"first":1042,"second":86,"amount":0},{"first":1042,"second":1058,"amount":-1},{"first":1042,"second":1059,"amount":0},{"first":1042,"second":933,"amount":-1},{"first":1074,"second":121,"amount":0},{"first":1074,"second":118,"amount":0},{"first":1074,"second":34,"amount":0},{"first":1074,"second":39,"amount":0},{"first":1074,"second":1090,"amount":0},{"first":1074,"second":1091,"amount":0},{"first":1074,"second":947,"amount":0},{"first":1074,"second":957,"amount":0},{"first":1043,"second":97,"amount":-4},{"first":1043,"second":122,"amount":-3},{"first":1043,"second":101,"amount":-4},{"first":1043,"second":114,"amount":-3},{"first":1043,"second":121,"amount":-3},{"first":1043,"second":117,"amount":-4},{"first":1043,"second":111,"amount":-4},{"first":1043,"second":112,"amount":-4},{"first":1043,"second":113,"amount":-4},{"first":1043,"second":115,"amount":-4},{"first":1043,"second":100,"amount":-4},{"first":1043,"second":103,"amount":-4},{"first":1043,"second":109,"amount":-4},{"first":1043,"second":119,"amount":-2},{"first":1043,"second":120,"amount":-3},{"first":1043,"second":99,"amount":-4},{"first":1043,"second":118,"amount":-3},{"first":1043,"second":110,"amount":-4},{"first":1043,"second":65,"amount":-4},{"first":1043,"second":84,"amount":0},{"first":1043,"second":89,"amount":0},{"first":1043,"second":79,"amount":-1},{"first":1043,"second":81,"amount":-1},{"first":1043,"second":83,"amount":-1},{"first":1043,"second":71,"amount":-1},{"first":1043,"second":87,"amount":0},{"first":1043,"second":67,"amount":-1},{"first":1043,"second":86,"amount":0},{"first":1043,"second":45,"amount":-8},{"first":1043,"second":8211,"amount":-8},{"first":1043,"second":44,"amount":-8},{"first":1043,"second":46,"amount":-8},{"first":1043,"second":1040,"amount":-4},{"first":1043,"second":1072,"amount":-4},{"first":1043,"second":1073,"amount":-1},{"first":1043,"second":1074,"amount":-4},{"first":1043,"second":1075,"amount":-4},{"first":1043,"second":1044,"amount":-4},{"first":1043,"second":1076,"amount":-5},{"first":1043,"second":1077,"amount":-4},{"first":1043,"second":1105,"amount":-4},{"first":1043,"second":1078,"amount":-3},{"first":1043,"second":1079,"amount":-5},{"first":1043,"second":1080,"amount":-4},{"first":1043,"second":1081,"amount":-4},{"first":1043,"second":1082,"amount":-4},{"first":1043,"second":1051,"amount":-2},{"first":1043,"second":1083,"amount":-5},{"first":1043,"second":1084,"amount":-4},{"first":1043,"second":1085,"amount":-4},{"first":1043,"second":1054,"amount":-1},{"first":1043,"second":1086,"amount":-4},{"first":1043,"second":1087,"amount":-4},{"first":1043,"second":1088,"amount":-4},{"first":1043,"second":1057,"amount":-1},{"first":1043,"second":1089,"amount":-4},{"first":1043,"second":1058,"amount":0},{"first":1043,"second":1090,"amount":-3},{"first":1043,"second":1091,"amount":-3},{"first":1043,"second":1092,"amount":-4},{"first":1043,"second":1093,"amount":-3},{"first":1043,"second":1094,"amount":-4},{"first":1043,"second":1095,"amount":-5},{"first":1043,"second":1096,"amount":-4},{"first":1043,"second":1097,"amount":-4},{"first":1043,"second":1099,"amount":-5},{"first":1043,"second":1068,"amount":0},{"first":1043,"second":1100,"amount":-4},{"first":1043,"second":1101,"amount":-5},{"first":1043,"second":1102,"amount":-4},{"first":1043,"second":1103,"amount":-5},{"first":1043,"second":252,"amount":-4},{"first":1043,"second":246,"amount":-4},{"first":1043,"second":214,"amount":-1},{"first":1043,"second":228,"amount":-4},{"first":1043,"second":196,"amount":-4},{"first":1043,"second":241,"amount":-4},{"first":1043,"second":962,"amount":-4},{"first":1043,"second":949,"amount":-5},{"first":1043,"second":961,"amount":-6},{"first":1043,"second":964,"amount":-4},{"first":1043,"second":965,"amount":-4},{"first":1043,"second":953,"amount":-6},{"first":1043,"second":959,"amount":-4},{"first":1043,"second":960,"amount":-5},{"first":1043,"second":945,"amount":-4},{"first":1043,"second":963,"amount":-4},{"first":1043,"second":948,"amount":-2},{"first":1043,"second":966,"amount":-6},{"first":1043,"second":947,"amount":-3},{"first":1043,"second":951,"amount":-4},{"first":1043,"second":968,"amount":-5},{"first":1043,"second":969,"amount":-6},{"first":1043,"second":957,"amount":-3},{"first":1043,"second":933,"amount":0},{"first":1043,"second":920,"amount":-1},{"first":1043,"second":927,"amount":-1},{"first":1043,"second":913,"amount":-4},{"first":1043,"second":916,"amount":-4},{"first":1043,"second":934,"amount":-3},{"first":1043,"second":923,"amount":-4},{"first":1043,"second":229,"amount":-4},{"first":1043,"second":197,"amount":-4},{"first":1043,"second":230,"amount":-4},{"first":1043,"second":198,"amount":-7},{"first":1043,"second":248,"amount":-4},{"first":1043,"second":216,"amount":-1},{"first":1075,"second":101,"amount":0},{"first":1075,"second":111,"amount":0},{"first":1075,"second":113,"amount":0},{"first":1075,"second":100,"amount":0},{"first":1075,"second":103,"amount":0},{"first":1075,"second":99,"amount":0},{"first":1075,"second":1076,"amount":-1},{"first":1075,"second":1077,"amount":0},{"first":1075,"second":1105,"amount":0},{"first":1075,"second":1083,"amount":-1},{"first":1075,"second":1086,"amount":0},{"first":1075,"second":1089,"amount":0},{"first":1075,"second":1092,"amount":0},{"first":1075,"second":246,"amount":0},{"first":1075,"second":962,"amount":0},{"first":1075,"second":959,"amount":0},{"first":1075,"second":945,"amount":0},{"first":1075,"second":963,"amount":0},{"first":1044,"second":65,"amount":0},{"first":1044,"second":84,"amount":-1},{"first":1044,"second":89,"amount":-1},{"first":1044,"second":79,"amount":0},{"first":1044,"second":81,"amount":0},{"first":1044,"second":71,"amount":0},{"first":1044,"second":67,"amount":0},{"first":1044,"second":86,"amount":-1},{"first":1044,"second":1040,"amount":0},{"first":1044,"second":1044,"amount":0},{"first":1044,"second":1076,"amount":0},{"first":1044,"second":1051,"amount":0},{"first":1044,"second":1083,"amount":0},{"first":1044,"second":1054,"amount":0},{"first":1044,"second":1057,"amount":0},{"first":1044,"second":1058,"amount":-1},{"first":1044,"second":1063,"amount":-1},{"first":1044,"second":1095,"amount":-1},{"first":1044,"second":1068,"amount":-1},{"first":1044,"second":214,"amount":0},{"first":1044,"second":196,"amount":0},{"first":1044,"second":933,"amount":-1},{"first":1044,"second":920,"amount":0},{"first":1044,"second":927,"amount":0},{"first":1044,"second":913,"amount":0},{"first":1044,"second":916,"amount":0},{"first":1044,"second":923,"amount":0},{"first":1044,"second":197,"amount":0},{"first":1044,"second":216,"amount":0},{"first":1076,"second":1076,"amount":0},{"first":1076,"second":1090,"amount":0},{"first":1076,"second":1095,"amount":0},{"first":1076,"second":1098,"amount":-1},{"first":1045,"second":101,"amount":0},{"first":1045,"second":121,"amount":-1},{"first":1045,"second":117,"amount":0},{"first":1045,"second":111,"amount":0},{"first":1045,"second":113,"amount":0},{"first":1045,"second":100,"amount":0},{"first":1045,"second":102,"amount":0},{"first":1045,"second":103,"amount":0},{"first":1045,"second":119,"amount":0},{"first":1045,"second":99,"amount":0},{"first":1045,"second":118,"amount":-1},{"first":1045,"second":84,"amount":0},{"first":1045,"second":1077,"amount":0},{"first":1045,"second":1105,"amount":0},{"first":1045,"second":1086,"amount":0},{"first":1045,"second":1089,"amount":0},{"first":1045,"second":1058,"amount":0},{"first":1045,"second":1091,"amount":-1},{"first":1045,"second":1092,"amount":0},{"first":1045,"second":252,"amount":0},{"first":1045,"second":246,"amount":0},{"first":1045,"second":962,"amount":0},{"first":1045,"second":965,"amount":0},{"first":1045,"second":959,"amount":0},{"first":1045,"second":945,"amount":0},{"first":1045,"second":963,"amount":0},{"first":1045,"second":947,"amount":-1},{"first":1045,"second":957,"amount":-1},{"first":1077,"second":121,"amount":0},{"first":1077,"second":118,"amount":0},{"first":1077,"second":34,"amount":0},{"first":1077,"second":39,"amount":0},{"first":1077,"second":1090,"amount":0},{"first":1077,"second":1091,"amount":0},{"first":1077,"second":947,"amount":0},{"first":1077,"second":957,"amount":0},{"first":1025,"second":101,"amount":0},{"first":1025,"second":121,"amount":-1},{"first":1025,"second":117,"amount":0},{"first":1025,"second":111,"amount":0},{"first":1025,"second":113,"amount":0},{"first":1025,"second":100,"amount":0},{"first":1025,"second":102,"amount":0},{"first":1025,"second":103,"amount":0},{"first":1025,"second":119,"amount":0},{"first":1025,"second":99,"amount":0},{"first":1025,"second":118,"amount":-1},{"first":1025,"second":84,"amount":0},{"first":1025,"second":1077,"amount":0},{"first":1025,"second":1105,"amount":0},{"first":1025,"second":1086,"amount":0},{"first":1025,"second":1089,"amount":0},{"first":1025,"second":1058,"amount":0},{"first":1025,"second":1091,"amount":-1},{"first":1025,"second":1092,"amount":0},{"first":1025,"second":252,"amount":0},{"first":1025,"second":246,"amount":0},{"first":1025,"second":962,"amount":0},{"first":1025,"second":965,"amount":0},{"first":1025,"second":959,"amount":0},{"first":1025,"second":945,"amount":0},{"first":1025,"second":963,"amount":0},{"first":1025,"second":947,"amount":-1},{"first":1025,"second":957,"amount":-1},{"first":1105,"second":121,"amount":0},{"first":1105,"second":118,"amount":0},{"first":1105,"second":34,"amount":0},{"first":1105,"second":39,"amount":0},{"first":1105,"second":1090,"amount":0},{"first":1105,"second":1091,"amount":0},{"first":1105,"second":947,"amount":0},{"first":1105,"second":957,"amount":0},{"first":1046,"second":101,"amount":-1},{"first":1046,"second":121,"amount":-1},{"first":1046,"second":117,"amount":0},{"first":1046,"second":111,"amount":0},{"first":1046,"second":113,"amount":-1},{"first":1046,"second":100,"amount":-1},{"first":1046,"second":103,"amount":-1},{"first":1046,"second":99,"amount":-1},{"first":1046,"second":118,"amount":-1},{"first":1046,"second":79,"amount":-1},{"first":1046,"second":81,"amount":-1},{"first":1046,"second":71,"amount":-1},{"first":1046,"second":67,"amount":-1},{"first":1046,"second":86,"amount":0},{"first":1046,"second":45,"amount":-1},{"first":1046,"second":8211,"amount":-1},{"first":1046,"second":1073,"amount":0},{"first":1046,"second":1044,"amount":0},{"first":1046,"second":1077,"amount":-1},{"first":1046,"second":1105,"amount":-1},{"first":1046,"second":1051,"amount":0},{"first":1046,"second":1083,"amount":0},{"first":1046,"second":1054,"amount":-1},{"first":1046,"second":1086,"amount":0},{"first":1046,"second":1057,"amount":-1},{"first":1046,"second":1089,"amount":-1},{"first":1046,"second":1090,"amount":-1},{"first":1046,"second":1091,"amount":-1},{"first":1046,"second":1092,"amount":-1},{"first":1046,"second":1095,"amount":-1},{"first":1046,"second":252,"amount":0},{"first":1046,"second":246,"amount":0},{"first":1046,"second":214,"amount":-1},{"first":1046,"second":962,"amount":-1},{"first":1046,"second":964,"amount":-1},{"first":1046,"second":965,"amount":0},{"first":1046,"second":952,"amount":0},{"first":1046,"second":959,"amount":0},{"first":1046,"second":945,"amount":-1},{"first":1046,"second":963,"amount":-1},{"first":1046,"second":948,"amount":0},{"first":1046,"second":966,"amount":-1},{"first":1046,"second":947,"amount":-1},{"first":1046,"second":955,"amount":0},{"first":1046,"second":968,"amount":-1},{"first":1046,"second":969,"amount":0},{"first":1046,"second":957,"amount":-1},{"first":1046,"second":920,"amount":-1},{"first":1046,"second":927,"amount":-1},{"first":1046,"second":934,"amount":-1},{"first":1046,"second":216,"amount":-1},{"first":1078,"second":101,"amount":0},{"first":1078,"second":111,"amount":0},{"first":1078,"second":113,"amount":0},{"first":1078,"second":100,"amount":0},{"first":1078,"second":103,"amount":0},{"first":1078,"second":99,"amount":0},{"first":1078,"second":1077,"amount":0},{"first":1078,"second":1105,"amount":0},{"first":1078,"second":1086,"amount":0},{"first":1078,"second":1089,"amount":0},{"first":1078,"second":1092,"amount":0},{"first":1078,"second":246,"amount":0},{"first":1078,"second":962,"amount":0},{"first":1078,"second":959,"amount":0},{"first":1078,"second":945,"amount":0},{"first":1078,"second":963,"amount":0},{"first":1047,"second":84,"amount":0},{"first":1047,"second":89,"amount":0},{"first":1047,"second":88,"amount":0},{"first":1047,"second":86,"amount":0},{"first":1047,"second":55,"amount":0},{"first":1047,"second":1046,"amount":0},{"first":1047,"second":1051,"amount":0},{"first":1047,"second":1058,"amount":0},{"first":1047,"second":1059,"amount":0},{"first":1047,"second":1061,"amount":0},{"first":1047,"second":1068,"amount":0},{"first":1047,"second":933,"amount":0},{"first":1047,"second":935,"amount":0},{"first":1079,"second":34,"amount":0},{"first":1079,"second":39,"amount":0},{"first":1048,"second":65,"amount":0},{"first":1048,"second":84,"amount":-1},{"first":1048,"second":89,"amount":-1},{"first":1048,"second":88,"amount":0},{"first":1048,"second":1040,"amount":0},{"first":1048,"second":1044,"amount":0},{"first":1048,"second":1076,"amount":0},{"first":1048,"second":1046,"amount":0},{"first":1048,"second":1051,"amount":0},{"first":1048,"second":1083,"amount":0},{"first":1048,"second":1058,"amount":-1},{"first":1048,"second":1061,"amount":0},{"first":1048,"second":1063,"amount":-1},{"first":1048,"second":1095,"amount":-1},{"first":1048,"second":196,"amount":0},{"first":1048,"second":933,"amount":-1},{"first":1048,"second":913,"amount":0},{"first":1048,"second":916,"amount":0},{"first":1048,"second":923,"amount":0},{"first":1048,"second":935,"amount":0},{"first":1048,"second":197,"amount":0},{"first":1050,"second":101,"amount":-1},{"first":1050,"second":121,"amount":-1},{"first":1050,"second":117,"amount":0},{"first":1050,"second":111,"amount":-1},{"first":1050,"second":112,"amount":0},{"first":1050,"second":113,"amount":-1},{"first":1050,"second":100,"amount":-1},{"first":1050,"second":103,"amount":-1},{"first":1050,"second":109,"amount":0},{"first":1050,"second":119,"amount":-1},{"first":1050,"second":99,"amount":-1},{"first":1050,"second":118,"amount":-1},{"first":1050,"second":110,"amount":0},{"first":1050,"second":79,"amount":-1},{"first":1050,"second":81,"amount":-1},{"first":1050,"second":71,"amount":-1},{"first":1050,"second":67,"amount":-1},{"first":1050,"second":45,"amount":-1},{"first":1050,"second":8211,"amount":-1},{"first":1050,"second":1073,"amount":-1},{"first":1050,"second":1075,"amount":0},{"first":1050,"second":1077,"amount":-1},{"first":1050,"second":1105,"amount":-1},{"first":1050,"second":1080,"amount":0},{"first":1050,"second":1081,"amount":0},{"first":1050,"second":1082,"amount":0},{"first":1050,"second":1084,"amount":0},{"first":1050,"second":1085,"amount":0},{"first":1050,"second":1054,"amount":-1},{"first":1050,"second":1086,"amount":-1},{"first":1050,"second":1087,"amount":0},{"first":1050,"second":1088,"amount":0},{"first":1050,"second":1057,"amount":-1},{"first":1050,"second":1089,"amount":-1},{"first":1050,"second":1090,"amount":-1},{"first":1050,"second":1091,"amount":-1},{"first":1050,"second":1092,"amount":-1},{"first":1050,"second":1094,"amount":0},{"first":1050,"second":1095,"amount":-2},{"first":1050,"second":1096,"amount":0},{"first":1050,"second":1097,"amount":0},{"first":1050,"second":1100,"amount":0},{"first":1050,"second":1102,"amount":0},{"first":1050,"second":252,"amount":0},{"first":1050,"second":246,"amount":-1},{"first":1050,"second":214,"amount":-1},{"first":1050,"second":241,"amount":0},{"first":1050,"second":962,"amount":-1},{"first":1050,"second":964,"amount":-2},{"first":1050,"second":965,"amount":0},{"first":1050,"second":959,"amount":-1},{"first":1050,"second":945,"amount":-1},{"first":1050,"second":963,"amount":-1},{"first":1050,"second":947,"amount":-1},{"first":1050,"second":951,"amount":0},{"first":1050,"second":957,"amount":-1},{"first":1050,"second":920,"amount":-1},{"first":1050,"second":927,"amount":-1},{"first":1050,"second":934,"amount":-1},{"first":1050,"second":216,"amount":-1},{"first":1082,"second":101,"amount":0},{"first":1082,"second":111,"amount":0},{"first":1082,"second":113,"amount":0},{"first":1082,"second":100,"amount":0},{"first":1082,"second":103,"amount":0},{"first":1082,"second":99,"amount":0},{"first":1082,"second":1077,"amount":0},{"first":1082,"second":1105,"amount":0},{"first":1082,"second":1086,"amount":0},{"first":1082,"second":1089,"amount":0},{"first":1082,"second":1092,"amount":0},{"first":1082,"second":246,"amount":0},{"first":1082,"second":962,"amount":0},{"first":1082,"second":959,"amount":0},{"first":1082,"second":945,"amount":0},{"first":1082,"second":963,"amount":0},{"first":1051,"second":65,"amount":0},{"first":1051,"second":84,"amount":-1},{"first":1051,"second":89,"amount":-1},{"first":1051,"second":88,"amount":0},{"first":1051,"second":1040,"amount":0},{"first":1051,"second":1044,"amount":0},{"first":1051,"second":1076,"amount":0},{"first":1051,"second":1046,"amount":0},{"first":1051,"second":1051,"amount":0},{"first":1051,"second":1083,"amount":0},{"first":1051,"second":1058,"amount":-1},{"first":1051,"second":1061,"amount":0},{"first":1051,"second":1063,"amount":-1},{"first":1051,"second":1095,"amount":-1},{"first":1051,"second":196,"amount":0},{"first":1051,"second":933,"amount":-1},{"first":1051,"second":913,"amount":0},{"first":1051,"second":916,"amount":0},{"first":1051,"second":923,"amount":0},{"first":1051,"second":935,"amount":0},{"first":1051,"second":197,"amount":0},{"first":1052,"second":65,"amount":0},{"first":1052,"second":84,"amount":-1},{"first":1052,"second":89,"amount":-1},{"first":1052,"second":88,"amount":0},{"first":1052,"second":1040,"amount":0},{"first":1052,"second":1044,"amount":0},{"first":1052,"second":1076,"amount":0},{"first":1052,"second":1046,"amount":0},{"first":1052,"second":1051,"amount":0},{"first":1052,"second":1083,"amount":0},{"first":1052,"second":1058,"amount":-1},{"first":1052,"second":1061,"amount":0},{"first":1052,"second":1063,"amount":-1},{"first":1052,"second":1095,"amount":-1},{"first":1052,"second":196,"amount":0},{"first":1052,"second":933,"amount":-1},{"first":1052,"second":913,"amount":0},{"first":1052,"second":916,"amount":0},{"first":1052,"second":923,"amount":0},{"first":1052,"second":935,"amount":0},{"first":1052,"second":197,"amount":0},{"first":1053,"second":65,"amount":0},{"first":1053,"second":84,"amount":-1},{"first":1053,"second":89,"amount":-1},{"first":1053,"second":88,"amount":0},{"first":1053,"second":1040,"amount":0},{"first":1053,"second":1044,"amount":0},{"first":1053,"second":1076,"amount":0},{"first":1053,"second":1046,"amount":0},{"first":1053,"second":1051,"amount":0},{"first":1053,"second":1083,"amount":0},{"first":1053,"second":1058,"amount":-1},{"first":1053,"second":1061,"amount":0},{"first":1053,"second":1063,"amount":-1},{"first":1053,"second":1095,"amount":-1},{"first":1053,"second":196,"amount":0},{"first":1053,"second":933,"amount":-1},{"first":1053,"second":913,"amount":0},{"first":1053,"second":916,"amount":0},{"first":1053,"second":923,"amount":0},{"first":1053,"second":935,"amount":0},{"first":1053,"second":197,"amount":0},{"first":1054,"second":65,"amount":0},{"first":1054,"second":90,"amount":0},{"first":1054,"second":84,"amount":-1},{"first":1054,"second":89,"amount":-1},{"first":1054,"second":88,"amount":0},{"first":1054,"second":86,"amount":0},{"first":1054,"second":44,"amount":-2},{"first":1054,"second":46,"amount":-2},{"first":1054,"second":1040,"amount":0},{"first":1054,"second":1044,"amount":-1},{"first":1054,"second":1046,"amount":0},{"first":1054,"second":1051,"amount":-1},{"first":1054,"second":1058,"amount":-1},{"first":1054,"second":1061,"amount":0},{"first":1054,"second":1068,"amount":-1},{"first":1054,"second":196,"amount":0},{"first":1054,"second":955,"amount":0},{"first":1054,"second":933,"amount":-1},{"first":1054,"second":913,"amount":0},{"first":1054,"second":931,"amount":0},{"first":1054,"second":916,"amount":0},{"first":1054,"second":926,"amount":0},{"first":1054,"second":923,"amount":0},{"first":1054,"second":918,"amount":0},{"first":1054,"second":935,"amount":0},{"first":1054,"second":197,"amount":0},{"first":1054,"second":198,"amount":-1},{"first":1086,"second":122,"amount":0},{"first":1086,"second":121,"amount":0},{"first":1086,"second":120,"amount":0},{"first":1086,"second":118,"amount":0},{"first":1086,"second":34,"amount":-3},{"first":1086,"second":39,"amount":-3},{"first":1086,"second":1076,"amount":-1},{"first":1086,"second":1078,"amount":0},{"first":1086,"second":1083,"amount":0},{"first":1086,"second":1090,"amount":0},{"first":1086,"second":1091,"amount":0},{"first":1086,"second":1093,"amount":0},{"first":1086,"second":964,"amount":0},{"first":1086,"second":947,"amount":0},{"first":1086,"second":957,"amount":0},{"first":1056,"second":97,"amount":0},{"first":1056,"second":101,"amount":0},{"first":1056,"second":116,"amount":0},{"first":1056,"second":121,"amount":0},{"first":1056,"second":111,"amount":0},{"first":1056,"second":113,"amount":0},{"first":1056,"second":100,"amount":0},{"first":1056,"second":103,"amount":0},{"first":1056,"second":99,"amount":0},{"first":1056,"second":118,"amount":0},{"first":1056,"second":65,"amount":-3},{"first":1056,"second":90,"amount":-1},{"first":1056,"second":74,"amount":-4},{"first":1056,"second":88,"amount":-1},{"first":1056,"second":44,"amount":-7},{"first":1056,"second":46,"amount":-7},{"first":1056,"second":1040,"amount":-3},{"first":1056,"second":1072,"amount":0},{"first":1056,"second":1044,"amount":-2},{"first":1056,"second":1076,"amount":-1},{"first":1056,"second":1077,"amount":0},{"first":1056,"second":1105,"amount":0},{"first":1056,"second":1046,"amount":-1},{"first":1056,"second":1051,"amount":-1},{"first":1056,"second":1083,"amount":-1},{"first":1056,"second":1086,"amount":0},{"first":1056,"second":1089,"amount":0},{"first":1056,"second":1091,"amount":0},{"first":1056,"second":1092,"amount":0},{"first":1056,"second":1061,"amount":-1},{"first":1056,"second":246,"amount":0},{"first":1056,"second":228,"amount":0},{"first":1056,"second":196,"amount":-3},{"first":1056,"second":962,"amount":0},{"first":1056,"second":961,"amount":-1},{"first":1056,"second":959,"amount":0},{"first":1056,"second":945,"amount":0},{"first":1056,"second":963,"amount":0},{"first":1056,"second":948,"amount":0},{"first":1056,"second":947,"amount":0},{"first":1056,"second":955,"amount":-1},{"first":1056,"second":957,"amount":0},{"first":1056,"second":913,"amount":-3},{"first":1056,"second":916,"amount":-3},{"first":1056,"second":923,"amount":-3},{"first":1056,"second":918,"amount":-1},{"first":1056,"second":935,"amount":-1},{"first":1056,"second":229,"amount":0},{"first":1056,"second":197,"amount":-3},{"first":1056,"second":198,"amount":-2},{"first":1088,"second":122,"amount":0},{"first":1088,"second":121,"amount":0},{"first":1088,"second":120,"amount":0},{"first":1088,"second":118,"amount":0},{"first":1088,"second":34,"amount":-1},{"first":1088,"second":39,"amount":-1},{"first":1088,"second":1076,"amount":0},{"first":1088,"second":1078,"amount":0},{"first":1088,"second":1083,"amount":0},{"first":1088,"second":1090,"amount":-2},{"first":1088,"second":1091,"amount":0},{"first":1088,"second":1093,"amount":0},{"first":1088,"second":964,"amount":0},{"first":1088,"second":947,"amount":0},{"first":1088,"second":957,"amount":0},{"first":1057,"second":84,"amount":-1},{"first":1057,"second":125,"amount":0},{"first":1057,"second":41,"amount":-1},{"first":1057,"second":93,"amount":0},{"first":1057,"second":1058,"amount":-1},{"first":1089,"second":34,"amount":0},{"first":1089,"second":39,"amount":0},{"first":1058,"second":97,"amount":-2},{"first":1058,"second":122,"amount":-1},{"first":1058,"second":101,"amount":-2},{"first":1058,"second":114,"amount":-2},{"first":1058,"second":121,"amount":-1},{"first":1058,"second":117,"amount":-2},{"first":1058,"second":111,"amount":-2},{"first":1058,"second":112,"amount":-2},{"first":1058,"second":113,"amount":-2},{"first":1058,"second":115,"amount":-2},{"first":1058,"second":100,"amount":-2},{"first":1058,"second":103,"amount":-2},{"first":1058,"second":109,"amount":-2},{"first":1058,"second":119,"amount":-1},{"first":1058,"second":120,"amount":-2},{"first":1058,"second":99,"amount":-2},{"first":1058,"second":118,"amount":-1},{"first":1058,"second":110,"amount":-2},{"first":1058,"second":65,"amount":-2},{"first":1058,"second":84,"amount":0},{"first":1058,"second":89,"amount":0},{"first":1058,"second":79,"amount":-1},{"first":1058,"second":81,"amount":-1},{"first":1058,"second":83,"amount":0},{"first":1058,"second":71,"amount":-1},{"first":1058,"second":74,"amount":-5},{"first":1058,"second":87,"amount":0},{"first":1058,"second":67,"amount":-1},{"first":1058,"second":86,"amount":0},{"first":1058,"second":45,"amount":-5},{"first":1058,"second":8211,"amount":-5},{"first":1058,"second":44,"amount":-4},{"first":1058,"second":46,"amount":-4},{"first":1058,"second":1040,"amount":-2},{"first":1058,"second":1072,"amount":-2},{"first":1058,"second":1073,"amount":-1},{"first":1058,"second":1074,"amount":-2},{"first":1058,"second":1075,"amount":-2},{"first":1058,"second":1044,"amount":-2},{"first":1058,"second":1076,"amount":-3},{"first":1058,"second":1077,"amount":-2},{"first":1058,"second":1105,"amount":-2},{"first":1058,"second":1078,"amount":-2},{"first":1058,"second":1079,"amount":-3},{"first":1058,"second":1080,"amount":-2},{"first":1058,"second":1081,"amount":-2},{"first":1058,"second":1082,"amount":-2},{"first":1058,"second":1051,"amount":-1},{"first":1058,"second":1083,"amount":-3},{"first":1058,"second":1084,"amount":-2},{"first":1058,"second":1085,"amount":-2},{"first":1058,"second":1054,"amount":-1},{"first":1058,"second":1086,"amount":-2},{"first":1058,"second":1087,"amount":-2},{"first":1058,"second":1088,"amount":-2},{"first":1058,"second":1057,"amount":-1},{"first":1058,"second":1089,"amount":-2},{"first":1058,"second":1058,"amount":0},{"first":1058,"second":1090,"amount":-2},{"first":1058,"second":1091,"amount":-1},{"first":1058,"second":1092,"amount":-2},{"first":1058,"second":1093,"amount":-2},{"first":1058,"second":1094,"amount":-2},{"first":1058,"second":1095,"amount":-3},{"first":1058,"second":1096,"amount":-2},{"first":1058,"second":1097,"amount":-2},{"first":1058,"second":1099,"amount":-3},{"first":1058,"second":1068,"amount":0},{"first":1058,"second":1100,"amount":-2},{"first":1058,"second":1101,"amount":-3},{"first":1058,"second":1102,"amount":-2},{"first":1058,"second":1103,"amount":-3},{"first":1058,"second":252,"amount":-2},{"first":1058,"second":246,"amount":-2},{"first":1058,"second":214,"amount":-1},{"first":1058,"second":228,"amount":-2},{"first":1058,"second":196,"amount":-2},{"first":1058,"second":241,"amount":-2},{"first":1058,"second":962,"amount":-2},{"first":1058,"second":949,"amount":-3},{"first":1058,"second":961,"amount":-3},{"first":1058,"second":964,"amount":-2},{"first":1058,"second":965,"amount":-2},{"first":1058,"second":953,"amount":-3},{"first":1058,"second":959,"amount":-2},{"first":1058,"second":960,"amount":-2},{"first":1058,"second":945,"amount":-2},{"first":1058,"second":963,"amount":-2},{"first":1058,"second":948,"amount":-1},{"first":1058,"second":966,"amount":-3},{"first":1058,"second":947,"amount":-1},{"first":1058,"second":951,"amount":-2},{"first":1058,"second":968,"amount":-3},{"first":1058,"second":969,"amount":-3},{"first":1058,"second":957,"amount":-1},{"first":1058,"second":933,"amount":0},{"first":1058,"second":920,"amount":-1},{"first":1058,"second":927,"amount":-1},{"first":1058,"second":913,"amount":-2},{"first":1058,"second":916,"amount":-2},{"first":1058,"second":934,"amount":-2},{"first":1058,"second":923,"amount":-2},{"first":1058,"second":229,"amount":-2},{"first":1058,"second":197,"amount":-2},{"first":1058,"second":230,"amount":-2},{"first":1058,"second":198,"amount":-4},{"first":1058,"second":248,"amount":-2},{"first":1058,"second":216,"amount":-1},{"first":1090,"second":97,"amount":0},{"first":1090,"second":101,"amount":-2},{"first":1090,"second":121,"amount":0},{"first":1090,"second":111,"amount":-1},{"first":1090,"second":113,"amount":-2},{"first":1090,"second":100,"amount":-2},{"first":1090,"second":102,"amount":0},{"first":1090,"second":103,"amount":-2},{"first":1090,"second":99,"amount":-2},{"first":1090,"second":118,"amount":0},{"first":1090,"second":34,"amount":0},{"first":1090,"second":39,"amount":0},{"first":1090,"second":1072,"amount":0},{"first":1090,"second":1076,"amount":-2},{"first":1090,"second":1077,"amount":-2},{"first":1090,"second":1105,"amount":-2},{"first":1090,"second":1083,"amount":-2},{"first":1090,"second":1086,"amount":-1},{"first":1090,"second":1089,"amount":-2},{"first":1090,"second":1091,"amount":0},{"first":1090,"second":1092,"amount":-2},{"first":1090,"second":246,"amount":-1},{"first":1090,"second":228,"amount":0},{"first":1090,"second":962,"amount":-1},{"first":1090,"second":961,"amount":-2},{"first":1090,"second":959,"amount":-1},{"first":1090,"second":945,"amount":-2},{"first":1090,"second":963,"amount":-2},{"first":1090,"second":948,"amount":-2},{"first":1090,"second":966,"amount":-1},{"first":1090,"second":947,"amount":0},{"first":1090,"second":957,"amount":0},{"first":1090,"second":229,"amount":0},{"first":1059,"second":97,"amount":-2},{"first":1059,"second":101,"amount":-1},{"first":1059,"second":111,"amount":-1},{"first":1059,"second":112,"amount":-2},{"first":1059,"second":113,"amount":-1},{"first":1059,"second":115,"amount":-1},{"first":1059,"second":100,"amount":-1},{"first":1059,"second":103,"amount":-1},{"first":1059,"second":109,"amount":-2},{"first":1059,"second":99,"amount":-1},{"first":1059,"second":110,"amount":-2},{"first":1059,"second":65,"amount":-2},{"first":1059,"second":84,"amount":0},{"first":1059,"second":89,"amount":0},{"first":1059,"second":79,"amount":0},{"first":1059,"second":81,"amount":0},{"first":1059,"second":71,"amount":0},{"first":1059,"second":67,"amount":0},{"first":1059,"second":45,"amount":-2},{"first":1059,"second":8211,"amount":-2},{"first":1059,"second":44,"amount":-8},{"first":1059,"second":46,"amount":-8},{"first":1059,"second":1040,"amount":-2},{"first":1059,"second":1072,"amount":-2},{"first":1059,"second":1074,"amount":-1},{"first":1059,"second":1075,"amount":-2},{"first":1059,"second":1044,"amount":-2},{"first":1059,"second":1076,"amount":-2},{"first":1059,"second":1077,"amount":-1},{"first":1059,"second":1105,"amount":-1},{"first":1059,"second":1079,"amount":-1},{"first":1059,"second":1080,"amount":-2},{"first":1059,"second":1081,"amount":-2},{"first":1059,"second":1082,"amount":-2},{"first":1059,"second":1051,"amount":-1},{"first":1059,"second":1083,"amount":-1},{"first":1059,"second":1084,"amount":-2},{"first":1059,"second":1085,"amount":-2},{"first":1059,"second":1054,"amount":0},{"first":1059,"second":1086,"amount":-1},{"first":1059,"second":1087,"amount":-2},{"first":1059,"second":1088,"amount":-2},{"first":1059,"second":1057,"amount":0},{"first":1059,"second":1089,"amount":-1},{"first":1059,"second":1058,"amount":0},{"first":1059,"second":1092,"amount":-1},{"first":1059,"second":1094,"amount":-2},{"first":1059,"second":1095,"amount":0},{"first":1059,"second":1096,"amount":-2},{"first":1059,"second":1097,"amount":-2},{"first":1059,"second":1099,"amount":-1},{"first":1059,"second":1068,"amount":0},{"first":1059,"second":1100,"amount":-2},{"first":1059,"second":1102,"amount":-2},{"first":1059,"second":1103,"amount":-1},{"first":1059,"second":246,"amount":-1},{"first":1059,"second":214,"amount":0},{"first":1059,"second":228,"amount":-2},{"first":1059,"second":196,"amount":-2},{"first":1059,"second":241,"amount":-2},{"first":1059,"second":962,"amount":-1},{"first":1059,"second":959,"amount":-1},{"first":1059,"second":945,"amount":-1},{"first":1059,"second":963,"amount":-1},{"first":1059,"second":951,"amount":-2},{"first":1059,"second":933,"amount":0},{"first":1059,"second":920,"amount":0},{"first":1059,"second":927,"amount":0},{"first":1059,"second":913,"amount":-2},{"first":1059,"second":916,"amount":-2},{"first":1059,"second":923,"amount":-2},{"first":1059,"second":229,"amount":-2},{"first":1059,"second":197,"amount":-2},{"first":1059,"second":216,"amount":0},{"first":1091,"second":97,"amount":0},{"first":1091,"second":101,"amount":0},{"first":1091,"second":111,"amount":0},{"first":1091,"second":113,"amount":0},{"first":1091,"second":100,"amount":0},{"first":1091,"second":102,"amount":0},{"first":1091,"second":103,"amount":0},{"first":1091,"second":99,"amount":0},{"first":1091,"second":44,"amount":-2},{"first":1091,"second":46,"amount":-2},{"first":1091,"second":34,"amount":0},{"first":1091,"second":39,"amount":0},{"first":1091,"second":1072,"amount":0},{"first":1091,"second":1076,"amount":-1},{"first":1091,"second":1077,"amount":0},{"first":1091,"second":1105,"amount":0},{"first":1091,"second":1083,"amount":-1},{"first":1091,"second":1086,"amount":0},{"first":1091,"second":1089,"amount":0},{"first":1091,"second":1092,"amount":0},{"first":1091,"second":246,"amount":0},{"first":1091,"second":228,"amount":0},{"first":1091,"second":962,"amount":0},{"first":1091,"second":961,"amount":0},{"first":1091,"second":964,"amount":0},{"first":1091,"second":959,"amount":0},{"first":1091,"second":960,"amount":0},{"first":1091,"second":945,"amount":0},{"first":1091,"second":963,"amount":0},{"first":1091,"second":948,"amount":0},{"first":1091,"second":229,"amount":0},{"first":1092,"second":122,"amount":0},{"first":1092,"second":121,"amount":0},{"first":1092,"second":120,"amount":0},{"first":1092,"second":118,"amount":0},{"first":1092,"second":34,"amount":-1},{"first":1092,"second":39,"amount":-1},{"first":1092,"second":1076,"amount":0},{"first":1092,"second":1078,"amount":0},{"first":1092,"second":1083,"amount":0},{"first":1092,"second":1090,"amount":-2},{"first":1092,"second":1091,"amount":0},{"first":1092,"second":1093,"amount":0},{"first":1092,"second":964,"amount":0},{"first":1092,"second":947,"amount":0},{"first":1092,"second":957,"amount":0},{"first":1061,"second":101,"amount":-1},{"first":1061,"second":121,"amount":-1},{"first":1061,"second":117,"amount":0},{"first":1061,"second":111,"amount":0},{"first":1061,"second":113,"amount":-1},{"first":1061,"second":100,"amount":-1},{"first":1061,"second":103,"amount":-1},{"first":1061,"second":99,"amount":-1},{"first":1061,"second":118,"amount":-1},{"first":1061,"second":79,"amount":-1},{"first":1061,"second":81,"amount":-1},{"first":1061,"second":71,"amount":-1},{"first":1061,"second":67,"amount":-1},{"first":1061,"second":86,"amount":0},{"first":1061,"second":45,"amount":-1},{"first":1061,"second":8211,"amount":-1},{"first":1061,"second":1073,"amount":0},{"first":1061,"second":1044,"amount":0},{"first":1061,"second":1077,"amount":-1},{"first":1061,"second":1105,"amount":-1},{"first":1061,"second":1051,"amount":0},{"first":1061,"second":1083,"amount":0},{"first":1061,"second":1054,"amount":-1},{"first":1061,"second":1086,"amount":0},{"first":1061,"second":1057,"amount":-1},{"first":1061,"second":1089,"amount":-1},{"first":1061,"second":1090,"amount":-1},{"first":1061,"second":1091,"amount":-1},{"first":1061,"second":1092,"amount":-1},{"first":1061,"second":1095,"amount":-1},{"first":1061,"second":252,"amount":0},{"first":1061,"second":246,"amount":0},{"first":1061,"second":214,"amount":-1},{"first":1061,"second":962,"amount":-1},{"first":1061,"second":964,"amount":-1},{"first":1061,"second":965,"amount":0},{"first":1061,"second":952,"amount":0},{"first":1061,"second":959,"amount":0},{"first":1061,"second":945,"amount":-1},{"first":1061,"second":963,"amount":-1},{"first":1061,"second":948,"amount":0},{"first":1061,"second":966,"amount":-1},{"first":1061,"second":947,"amount":-1},{"first":1061,"second":955,"amount":0},{"first":1061,"second":968,"amount":-1},{"first":1061,"second":969,"amount":0},{"first":1061,"second":957,"amount":-1},{"first":1061,"second":920,"amount":-1},{"first":1061,"second":927,"amount":-1},{"first":1061,"second":934,"amount":-1},{"first":1061,"second":216,"amount":-1},{"first":1093,"second":101,"amount":0},{"first":1093,"second":111,"amount":0},{"first":1093,"second":113,"amount":0},{"first":1093,"second":100,"amount":0},{"first":1093,"second":103,"amount":0},{"first":1093,"second":99,"amount":0},{"first":1093,"second":1077,"amount":0},{"first":1093,"second":1105,"amount":0},{"first":1093,"second":1086,"amount":0},{"first":1093,"second":1089,"amount":0},{"first":1093,"second":1092,"amount":0},{"first":1093,"second":246,"amount":0},{"first":1093,"second":962,"amount":0},{"first":1093,"second":959,"amount":0},{"first":1093,"second":945,"amount":0},{"first":1093,"second":963,"amount":0},{"first":1062,"second":65,"amount":0},{"first":1062,"second":84,"amount":-1},{"first":1062,"second":89,"amount":-1},{"first":1062,"second":88,"amount":0},{"first":1062,"second":1040,"amount":0},{"first":1062,"second":1044,"amount":0},{"first":1062,"second":1076,"amount":0},{"first":1062,"second":1046,"amount":0},{"first":1062,"second":1051,"amount":0},{"first":1062,"second":1083,"amount":0},{"first":1062,"second":1058,"amount":-1},{"first":1062,"second":1061,"amount":0},{"first":1062,"second":1063,"amount":-1},{"first":1062,"second":1095,"amount":-1},{"first":1062,"second":196,"amount":0},{"first":1062,"second":933,"amount":-1},{"first":1062,"second":913,"amount":0},{"first":1062,"second":916,"amount":0},{"first":1062,"second":923,"amount":0},{"first":1062,"second":935,"amount":0},{"first":1062,"second":197,"amount":0},{"first":1094,"second":1076,"amount":0},{"first":1094,"second":1083,"amount":0},{"first":1094,"second":1090,"amount":0},{"first":1094,"second":1095,"amount":0},{"first":1094,"second":1103,"amount":0},{"first":1063,"second":65,"amount":0},{"first":1063,"second":84,"amount":-1},{"first":1063,"second":89,"amount":-1},{"first":1063,"second":88,"amount":0},{"first":1063,"second":1040,"amount":0},{"first":1063,"second":1044,"amount":0},{"first":1063,"second":1076,"amount":0},{"first":1063,"second":1046,"amount":0},{"first":1063,"second":1051,"amount":0},{"first":1063,"second":1083,"amount":0},{"first":1063,"second":1058,"amount":-1},{"first":1063,"second":1061,"amount":0},{"first":1063,"second":1063,"amount":-1},{"first":1063,"second":1095,"amount":-1},{"first":1063,"second":196,"amount":0},{"first":1063,"second":933,"amount":-1},{"first":1063,"second":913,"amount":0},{"first":1063,"second":916,"amount":0},{"first":1063,"second":923,"amount":0},{"first":1063,"second":935,"amount":0},{"first":1063,"second":197,"amount":0},{"first":1064,"second":65,"amount":0},{"first":1064,"second":84,"amount":-1},{"first":1064,"second":89,"amount":-1},{"first":1064,"second":88,"amount":0},{"first":1064,"second":1040,"amount":0},{"first":1064,"second":1044,"amount":0},{"first":1064,"second":1076,"amount":0},{"first":1064,"second":1046,"amount":0},{"first":1064,"second":1051,"amount":0},{"first":1064,"second":1083,"amount":0},{"first":1064,"second":1058,"amount":-1},{"first":1064,"second":1061,"amount":0},{"first":1064,"second":1063,"amount":-1},{"first":1064,"second":1095,"amount":-1},{"first":1064,"second":196,"amount":0},{"first":1064,"second":933,"amount":-1},{"first":1064,"second":913,"amount":0},{"first":1064,"second":916,"amount":0},{"first":1064,"second":923,"amount":0},{"first":1064,"second":935,"amount":0},{"first":1064,"second":197,"amount":0},{"first":1065,"second":65,"amount":0},{"first":1065,"second":84,"amount":-1},{"first":1065,"second":89,"amount":-1},{"first":1065,"second":88,"amount":0},{"first":1065,"second":86,"amount":-1},{"first":1065,"second":1040,"amount":0},{"first":1065,"second":1044,"amount":0},{"first":1065,"second":1076,"amount":0},{"first":1065,"second":1046,"amount":0},{"first":1065,"second":1051,"amount":0},{"first":1065,"second":1083,"amount":0},{"first":1065,"second":1058,"amount":-1},{"first":1065,"second":1090,"amount":-1},{"first":1065,"second":1059,"amount":0},{"first":1065,"second":1061,"amount":0},{"first":1065,"second":1063,"amount":-1},{"first":1065,"second":1095,"amount":0},{"first":1065,"second":1068,"amount":-1},{"first":1065,"second":1069,"amount":0},{"first":1065,"second":196,"amount":0},{"first":1065,"second":933,"amount":-1},{"first":1065,"second":913,"amount":0},{"first":1065,"second":916,"amount":0},{"first":1065,"second":923,"amount":0},{"first":1065,"second":935,"amount":0},{"first":1065,"second":197,"amount":0},{"first":1097,"second":101,"amount":0},{"first":1097,"second":113,"amount":0},{"first":1097,"second":100,"amount":0},{"first":1097,"second":103,"amount":0},{"first":1097,"second":99,"amount":0},{"first":1097,"second":1076,"amount":1},{"first":1097,"second":1077,"amount":0},{"first":1097,"second":1105,"amount":0},{"first":1097,"second":1083,"amount":0},{"first":1097,"second":1089,"amount":0},{"first":1097,"second":1090,"amount":-1},{"first":1097,"second":1092,"amount":0},{"first":1097,"second":1095,"amount":0},{"first":1097,"second":962,"amount":0},{"first":1097,"second":945,"amount":0},{"first":1097,"second":963,"amount":0},{"first":1066,"second":120,"amount":-1},{"first":1066,"second":84,"amount":-5},{"first":1066,"second":89,"amount":-2},{"first":1066,"second":88,"amount":0},{"first":1066,"second":86,"amount":-1},{"first":1066,"second":34,"amount":-1},{"first":1066,"second":39,"amount":-1},{"first":1066,"second":1046,"amount":0},{"first":1066,"second":1078,"amount":-1},{"first":1066,"second":1051,"amount":0},{"first":1066,"second":1058,"amount":-5},{"first":1066,"second":1090,"amount":-1},{"first":1066,"second":1059,"amount":0},{"first":1066,"second":1061,"amount":0},{"first":1066,"second":1093,"amount":-1},{"first":1066,"second":1063,"amount":-1},{"first":1066,"second":1068,"amount":-1},{"first":1066,"second":933,"amount":-2},{"first":1066,"second":935,"amount":0},{"first":1098,"second":121,"amount":-1},{"first":1098,"second":120,"amount":0},{"first":1098,"second":118,"amount":-1},{"first":1098,"second":34,"amount":-3},{"first":1098,"second":39,"amount":-3},{"first":1098,"second":1078,"amount":0},{"first":1098,"second":1090,"amount":-1},{"first":1098,"second":1091,"amount":-1},{"first":1098,"second":1093,"amount":0},{"first":1098,"second":1095,"amount":-1},{"first":1098,"second":947,"amount":-1},{"first":1098,"second":957,"amount":-1},{"first":1067,"second":65,"amount":0},{"first":1067,"second":84,"amount":-1},{"first":1067,"second":89,"amount":-1},{"first":1067,"second":88,"amount":0},{"first":1067,"second":1040,"amount":0},{"first":1067,"second":1044,"amount":0},{"first":1067,"second":1076,"amount":0},{"first":1067,"second":1046,"amount":0},{"first":1067,"second":1051,"amount":0},{"first":1067,"second":1083,"amount":0},{"first":1067,"second":1058,"amount":-1},{"first":1067,"second":1061,"amount":0},{"first":1067,"second":1063,"amount":-1},{"first":1067,"second":1095,"amount":-1},{"first":1067,"second":196,"amount":0},{"first":1067,"second":933,"amount":-1},{"first":1067,"second":913,"amount":0},{"first":1067,"second":916,"amount":0},{"first":1067,"second":923,"amount":0},{"first":1067,"second":935,"amount":0},{"first":1067,"second":197,"amount":0},{"first":1068,"second":120,"amount":-1},{"first":1068,"second":84,"amount":-5},{"first":1068,"second":89,"amount":-2},{"first":1068,"second":88,"amount":0},{"first":1068,"second":86,"amount":-1},{"first":1068,"second":34,"amount":-1},{"first":1068,"second":39,"amount":-1},{"first":1068,"second":1046,"amount":0},{"first":1068,"second":1078,"amount":-1},{"first":1068,"second":1051,"amount":0},{"first":1068,"second":1058,"amount":-5},{"first":1068,"second":1090,"amount":-1},{"first":1068,"second":1059,"amount":0},{"first":1068,"second":1061,"amount":0},{"first":1068,"second":1093,"amount":-1},{"first":1068,"second":1063,"amount":-1},{"first":1068,"second":1068,"amount":-1},{"first":1068,"second":933,"amount":-2},{"first":1068,"second":935,"amount":0},{"first":1100,"second":121,"amount":-1},{"first":1100,"second":120,"amount":0},{"first":1100,"second":118,"amount":-1},{"first":1100,"second":34,"amount":-3},{"first":1100,"second":39,"amount":-3},{"first":1100,"second":1078,"amount":0},{"first":1100,"second":1090,"amount":-1},{"first":1100,"second":1091,"amount":-1},{"first":1100,"second":1093,"amount":0},{"first":1100,"second":1095,"amount":-1},{"first":1100,"second":947,"amount":-1},{"first":1100,"second":957,"amount":-1},{"first":1069,"second":84,"amount":-1},{"first":1069,"second":89,"amount":-1},{"first":1069,"second":88,"amount":-1},{"first":1069,"second":1044,"amount":-1},{"first":1069,"second":1046,"amount":-1},{"first":1069,"second":1051,"amount":-1},{"first":1069,"second":1083,"amount":0},{"first":1069,"second":1058,"amount":-1},{"first":1069,"second":1059,"amount":0},{"first":1069,"second":1061,"amount":-1},{"first":1069,"second":933,"amount":-1},{"first":1069,"second":935,"amount":-1},{"first":1101,"second":122,"amount":0},{"first":1101,"second":121,"amount":0},{"first":1101,"second":120,"amount":0},{"first":1101,"second":118,"amount":0},{"first":1101,"second":34,"amount":-1},{"first":1101,"second":39,"amount":-1},{"first":1101,"second":1076,"amount":0},{"first":1101,"second":1078,"amount":0},{"first":1101,"second":1083,"amount":0},{"first":1101,"second":1090,"amount":-2},{"first":1101,"second":1091,"amount":0},{"first":1101,"second":1093,"amount":0},{"first":1101,"second":964,"amount":0},{"first":1101,"second":947,"amount":0},{"first":1101,"second":957,"amount":0},{"first":1070,"second":84,"amount":-1},{"first":1070,"second":88,"amount":-1},{"first":1070,"second":1044,"amount":-1},{"first":1070,"second":1076,"amount":-1},{"first":1070,"second":1046,"amount":-1},{"first":1070,"second":1051,"amount":-1},{"first":1070,"second":1083,"amount":0},{"first":1070,"second":1058,"amount":-1},{"first":1070,"second":1059,"amount":0},{"first":1070,"second":1061,"amount":-1},{"first":1070,"second":935,"amount":-1},{"first":1102,"second":121,"amount":0},{"first":1102,"second":120,"amount":0},{"first":1102,"second":118,"amount":0},{"first":1102,"second":1076,"amount":0},{"first":1102,"second":1078,"amount":0},{"first":1102,"second":1083,"amount":0},{"first":1102,"second":1091,"amount":0},{"first":1102,"second":1093,"amount":0},{"first":1102,"second":947,"amount":0},{"first":1102,"second":957,"amount":0},{"first":1071,"second":84,"amount":0},{"first":1071,"second":89,"amount":0},{"first":1071,"second":1058,"amount":0},{"first":1071,"second":933,"amount":0},{"first":220,"second":65,"amount":0},{"first":220,"second":1040,"amount":0},{"first":220,"second":196,"amount":0},{"first":220,"second":913,"amount":0},{"first":220,"second":916,"amount":0},{"first":220,"second":923,"amount":0},{"first":220,"second":197,"amount":0},{"first":246,"second":122,"amount":0},{"first":246,"second":121,"amount":0},{"first":246,"second":120,"amount":0},{"first":246,"second":118,"amount":0},{"first":246,"second":34,"amount":-3},{"first":246,"second":39,"amount":-3},{"first":246,"second":1076,"amount":-1},{"first":246,"second":1078,"amount":0},{"first":246,"second":1083,"amount":0},{"first":246,"second":1090,"amount":0},{"first":246,"second":1091,"amount":0},{"first":246,"second":1093,"amount":0},{"first":246,"second":964,"amount":0},{"first":246,"second":947,"amount":0},{"first":246,"second":957,"amount":0},{"first":214,"second":65,"amount":0},{"first":214,"second":90,"amount":0},{"first":214,"second":84,"amount":-1},{"first":214,"second":89,"amount":-1},{"first":214,"second":88,"amount":0},{"first":214,"second":86,"amount":0},{"first":214,"second":44,"amount":-2},{"first":214,"second":46,"amount":-2},{"first":214,"second":1040,"amount":0},{"first":214,"second":1044,"amount":-1},{"first":214,"second":1046,"amount":0},{"first":214,"second":1051,"amount":-1},{"first":214,"second":1058,"amount":-1},{"first":214,"second":1061,"amount":0},{"first":214,"second":1068,"amount":-1},{"first":214,"second":196,"amount":0},{"first":214,"second":955,"amount":0},{"first":214,"second":933,"amount":-1},{"first":214,"second":913,"amount":0},{"first":214,"second":931,"amount":0},{"first":214,"second":916,"amount":0},{"first":214,"second":926,"amount":0},{"first":214,"second":923,"amount":0},{"first":214,"second":918,"amount":0},{"first":214,"second":935,"amount":0},{"first":214,"second":197,"amount":0},{"first":214,"second":198,"amount":-1},{"first":228,"second":121,"amount":0},{"first":228,"second":118,"amount":0},{"first":228,"second":34,"amount":-1},{"first":228,"second":39,"amount":-1},{"first":228,"second":1090,"amount":0},{"first":228,"second":1091,"amount":0},{"first":228,"second":947,"amount":0},{"first":228,"second":957,"amount":0},{"first":196,"second":122,"amount":0},{"first":196,"second":116,"amount":0},{"first":196,"second":121,"amount":-1},{"first":196,"second":117,"amount":0},{"first":196,"second":111,"amount":0},{"first":196,"second":119,"amount":-1},{"first":196,"second":118,"amount":-1},{"first":196,"second":84,"amount":-3},{"first":196,"second":89,"amount":-2},{"first":196,"second":85,"amount":0},{"first":196,"second":79,"amount":0},{"first":196,"second":81,"amount":0},{"first":196,"second":71,"amount":0},{"first":196,"second":87,"amount":-1},{"first":196,"second":67,"amount":0},{"first":196,"second":86,"amount":-2},{"first":196,"second":63,"amount":-1},{"first":196,"second":34,"amount":-2},{"first":196,"second":39,"amount":-2},{"first":196,"second":1044,"amount":0},{"first":196,"second":1051,"amount":0},{"first":196,"second":1083,"amount":0},{"first":196,"second":1054,"amount":0},{"first":196,"second":1086,"amount":0},{"first":196,"second":1057,"amount":0},{"first":196,"second":1058,"amount":-3},{"first":196,"second":1090,"amount":-1},{"first":196,"second":1091,"amount":-1},{"first":196,"second":1063,"amount":-1},{"first":196,"second":1095,"amount":-2},{"first":196,"second":1068,"amount":-1},{"first":196,"second":252,"amount":0},{"first":196,"second":220,"amount":0},{"first":196,"second":246,"amount":0},{"first":196,"second":214,"amount":0},{"first":196,"second":964,"amount":-1},{"first":196,"second":965,"amount":0},{"first":196,"second":959,"amount":0},{"first":196,"second":947,"amount":-1},{"first":196,"second":955,"amount":0},{"first":196,"second":957,"amount":-1},{"first":196,"second":933,"amount":-2},{"first":196,"second":920,"amount":0},{"first":196,"second":927,"amount":0},{"first":196,"second":934,"amount":-1},{"first":196,"second":936,"amount":-1},{"first":196,"second":216,"amount":0},{"first":241,"second":34,"amount":-2},{"first":241,"second":39,"amount":-2},{"first":241,"second":1090,"amount":-1},{"first":209,"second":65,"amount":0},{"first":209,"second":84,"amount":-1},{"first":209,"second":89,"amount":-1},{"first":209,"second":88,"amount":0},{"first":209,"second":1040,"amount":0},{"first":209,"second":1044,"amount":0},{"first":209,"second":1076,"amount":0},{"first":209,"second":1046,"amount":0},{"first":209,"second":1051,"amount":0},{"first":209,"second":1083,"amount":0},{"first":209,"second":1058,"amount":-1},{"first":209,"second":1061,"amount":0},{"first":209,"second":1063,"amount":-1},{"first":209,"second":1095,"amount":-1},{"first":209,"second":196,"amount":0},{"first":209,"second":933,"amount":-1},{"first":209,"second":913,"amount":0},{"first":209,"second":916,"amount":0},{"first":209,"second":923,"amount":0},{"first":209,"second":935,"amount":0},{"first":209,"second":197,"amount":0},{"first":962,"second":1090,"amount":-1},{"first":961,"second":122,"amount":0},{"first":961,"second":121,"amount":0},{"first":961,"second":120,"amount":0},{"first":961,"second":118,"amount":0},{"first":961,"second":34,"amount":-1},{"first":961,"second":39,"amount":-1},{"first":961,"second":1076,"amount":0},{"first":961,"second":1078,"amount":0},{"first":961,"second":1083,"amount":0},{"first":961,"second":1090,"amount":-2},{"first":961,"second":1091,"amount":0},{"first":961,"second":1093,"amount":0},{"first":961,"second":964,"amount":0},{"first":961,"second":947,"amount":0},{"first":961,"second":957,"amount":0},{"first":964,"second":101,"amount":0},{"first":964,"second":121,"amount":0},{"first":964,"second":111,"amount":0},{"first":964,"second":113,"amount":0},{"first":964,"second":100,"amount":0},{"first":964,"second":102,"amount":0},{"first":964,"second":103,"amount":0},{"first":964,"second":99,"amount":0},{"first":964,"second":118,"amount":0},{"first":964,"second":34,"amount":0},{"first":964,"second":39,"amount":0},{"first":964,"second":1077,"amount":0},{"first":964,"second":1105,"amount":0},{"first":964,"second":1086,"amount":0},{"first":964,"second":1089,"amount":0},{"first":964,"second":1091,"amount":0},{"first":964,"second":1092,"amount":0},{"first":964,"second":246,"amount":0},{"first":964,"second":962,"amount":0},{"first":964,"second":964,"amount":0},{"first":964,"second":959,"amount":0},{"first":964,"second":960,"amount":0},{"first":964,"second":945,"amount":0},{"first":964,"second":963,"amount":0},{"first":964,"second":948,"amount":0},{"first":964,"second":947,"amount":0},{"first":964,"second":957,"amount":0},{"first":965,"second":1090,"amount":-1},{"first":953,"second":101,"amount":0},{"first":953,"second":121,"amount":-1},{"first":953,"second":117,"amount":0},{"first":953,"second":113,"amount":0},{"first":953,"second":100,"amount":0},{"first":953,"second":103,"amount":0},{"first":953,"second":99,"amount":0},{"first":953,"second":118,"amount":-1},{"first":953,"second":34,"amount":-1},{"first":953,"second":39,"amount":-1},{"first":953,"second":1077,"amount":0},{"first":953,"second":1105,"amount":0},{"first":953,"second":1089,"amount":0},{"first":953,"second":1091,"amount":-1},{"first":953,"second":1092,"amount":0},{"first":953,"second":252,"amount":0},{"first":953,"second":962,"amount":0},{"first":953,"second":964,"amount":-1},{"first":953,"second":965,"amount":0},{"first":953,"second":952,"amount":0},{"first":953,"second":960,"amount":0},{"first":953,"second":945,"amount":0},{"first":953,"second":963,"amount":0},{"first":953,"second":966,"amount":-1},{"first":953,"second":947,"amount":-1},{"first":953,"second":955,"amount":0},{"first":953,"second":957,"amount":-1},{"first":959,"second":122,"amount":0},{"first":959,"second":121,"amount":0},{"first":959,"second":120,"amount":0},{"first":959,"second":118,"amount":0},{"first":959,"second":34,"amount":-3},{"first":959,"second":39,"amount":-3},{"first":959,"second":1076,"amount":-1},{"first":959,"second":1078,"amount":0},{"first":959,"second":1083,"amount":0},{"first":959,"second":1090,"amount":0},{"first":959,"second":1091,"amount":0},{"first":959,"second":1093,"amount":0},{"first":959,"second":964,"amount":0},{"first":959,"second":947,"amount":0},{"first":959,"second":957,"amount":0},{"first":945,"second":955,"amount":0},{"first":963,"second":964,"amount":0},{"first":948,"second":1090,"amount":-1},{"first":948,"second":964,"amount":0},{"first":966,"second":122,"amount":0},{"first":966,"second":120,"amount":0},{"first":966,"second":1078,"amount":0},{"first":966,"second":1090,"amount":-2},{"first":966,"second":1093,"amount":0},{"first":947,"second":97,"amount":0},{"first":947,"second":101,"amount":0},{"first":947,"second":111,"amount":0},{"first":947,"second":113,"amount":0},{"first":947,"second":100,"amount":0},{"first":947,"second":102,"amount":0},{"first":947,"second":103,"amount":0},{"first":947,"second":99,"amount":0},{"first":947,"second":44,"amount":-2},{"first":947,"second":46,"amount":-2},{"first":947,"second":34,"amount":0},{"first":947,"second":39,"amount":0},{"first":947,"second":1072,"amount":0},{"first":947,"second":1076,"amount":-1},{"first":947,"second":1077,"amount":0},{"first":947,"second":1105,"amount":0},{"first":947,"second":1083,"amount":-1},{"first":947,"second":1086,"amount":0},{"first":947,"second":1089,"amount":0},{"first":947,"second":1092,"amount":0},{"first":947,"second":246,"amount":0},{"first":947,"second":228,"amount":0},{"first":947,"second":962,"amount":0},{"first":947,"second":961,"amount":0},{"first":947,"second":964,"amount":0},{"first":947,"second":959,"amount":0},{"first":947,"second":960,"amount":0},{"first":947,"second":945,"amount":0},{"first":947,"second":963,"amount":0},{"first":947,"second":948,"amount":0},{"first":947,"second":229,"amount":0},{"first":951,"second":34,"amount":-2},{"first":951,"second":39,"amount":-2},{"first":951,"second":1090,"amount":-1},{"first":958,"second":101,"amount":-1},{"first":958,"second":113,"amount":-1},{"first":958,"second":100,"amount":-1},{"first":958,"second":103,"amount":-1},{"first":958,"second":99,"amount":-1},{"first":958,"second":1077,"amount":-1},{"first":958,"second":1105,"amount":-1},{"first":958,"second":1089,"amount":-1},{"first":958,"second":1092,"amount":-1},{"first":958,"second":962,"amount":-1},{"first":958,"second":945,"amount":-1},{"first":958,"second":963,"amount":-1},{"first":958,"second":955,"amount":0},{"first":955,"second":121,"amount":-1},{"first":955,"second":117,"amount":0},{"first":955,"second":102,"amount":0},{"first":955,"second":118,"amount":-1},{"first":955,"second":34,"amount":-2},{"first":955,"second":39,"amount":-2},{"first":955,"second":1091,"amount":-1},{"first":955,"second":252,"amount":0},{"first":955,"second":964,"amount":-5},{"first":955,"second":965,"amount":0},{"first":955,"second":952,"amount":0},{"first":955,"second":960,"amount":0},{"first":955,"second":947,"amount":-1},{"first":955,"second":955,"amount":0},{"first":955,"second":957,"amount":-1},{"first":950,"second":101,"amount":-1},{"first":950,"second":121,"amount":-1},{"first":950,"second":117,"amount":-1},{"first":950,"second":111,"amount":-1},{"first":950,"second":112,"amount":0},{"first":950,"second":113,"amount":-1},{"first":950,"second":100,"amount":-1},{"first":950,"second":103,"amount":-1},{"first":950,"second":109,"amount":0},{"first":950,"second":99,"amount":-1},{"first":950,"second":118,"amount":-1},{"first":950,"second":110,"amount":0},{"first":950,"second":1075,"amount":0},{"first":950,"second":1077,"amount":-1},{"first":950,"second":1105,"amount":-1},{"first":950,"second":1080,"amount":0},{"first":950,"second":1081,"amount":0},{"first":950,"second":1082,"amount":0},{"first":950,"second":1084,"amount":0},{"first":950,"second":1085,"amount":0},{"first":950,"second":1086,"amount":-1},{"first":950,"second":1087,"amount":0},{"first":950,"second":1088,"amount":0},{"first":950,"second":1089,"amount":-1},{"first":950,"second":1091,"amount":-1},{"first":950,"second":1092,"amount":-1},{"first":950,"second":1094,"amount":0},{"first":950,"second":1096,"amount":0},{"first":950,"second":1097,"amount":0},{"first":950,"second":1100,"amount":0},{"first":950,"second":1102,"amount":0},{"first":950,"second":252,"amount":-1},{"first":950,"second":246,"amount":-1},{"first":950,"second":241,"amount":0},{"first":950,"second":962,"amount":-1},{"first":950,"second":949,"amount":-1},{"first":950,"second":964,"amount":-1},{"first":950,"second":965,"amount":-1},{"first":950,"second":952,"amount":0},{"first":950,"second":953,"amount":0},{"first":950,"second":959,"amount":-1},{"first":950,"second":960,"amount":-1},{"first":950,"second":945,"amount":-1},{"first":950,"second":963,"amount":-1},{"first":950,"second":948,"amount":0},{"first":950,"second":966,"amount":-1},{"first":950,"second":947,"amount":-1},{"first":950,"second":951,"amount":0},{"first":950,"second":958,"amount":0},{"first":950,"second":968,"amount":-1},{"first":950,"second":969,"amount":-1},{"first":950,"second":957,"amount":-1},{"first":968,"second":122,"amount":0},{"first":968,"second":120,"amount":0},{"first":968,"second":1078,"amount":0},{"first":968,"second":1093,"amount":0},{"first":969,"second":122,"amount":0},{"first":969,"second":121,"amount":0},{"first":969,"second":120,"amount":0},{"first":969,"second":118,"amount":0},{"first":969,"second":1078,"amount":0},{"first":969,"second":1091,"amount":0},{"first":969,"second":1093,"amount":0},{"first":969,"second":947,"amount":0},{"first":969,"second":957,"amount":0},{"first":957,"second":97,"amount":0},{"first":957,"second":101,"amount":0},{"first":957,"second":111,"amount":0},{"first":957,"second":113,"amount":0},{"first":957,"second":100,"amount":0},{"first":957,"second":102,"amount":0},{"first":957,"second":103,"amount":0},{"first":957,"second":99,"amount":0},{"first":957,"second":44,"amount":-2},{"first":957,"second":46,"amount":-2},{"first":957,"second":34,"amount":0},{"first":957,"second":39,"amount":0},{"first":957,"second":1072,"amount":0},{"first":957,"second":1076,"amount":-1},{"first":957,"second":1077,"amount":0},{"first":957,"second":1105,"amount":0},{"first":957,"second":1083,"amount":-1},{"first":957,"second":1086,"amount":0},{"first":957,"second":1089,"amount":0},{"first":957,"second":1092,"amount":0},{"first":957,"second":246,"amount":0},{"first":957,"second":228,"amount":0},{"first":957,"second":962,"amount":0},{"first":957,"second":961,"amount":0},{"first":957,"second":964,"amount":0},{"first":957,"second":959,"amount":0},{"first":957,"second":960,"amount":0},{"first":957,"second":945,"amount":0},{"first":957,"second":963,"amount":0},{"first":957,"second":948,"amount":0},{"first":957,"second":229,"amount":0},{"first":917,"second":101,"amount":0},{"first":917,"second":121,"amount":-1},{"first":917,"second":117,"amount":0},{"first":917,"second":111,"amount":0},{"first":917,"second":113,"amount":0},{"first":917,"second":100,"amount":0},{"first":917,"second":102,"amount":0},{"first":917,"second":103,"amount":0},{"first":917,"second":119,"amount":0},{"first":917,"second":99,"amount":0},{"first":917,"second":118,"amount":-1},{"first":917,"second":84,"amount":0},{"first":917,"second":1077,"amount":0},{"first":917,"second":1105,"amount":0},{"first":917,"second":1086,"amount":0},{"first":917,"second":1089,"amount":0},{"first":917,"second":1058,"amount":0},{"first":917,"second":1091,"amount":-1},{"first":917,"second":1092,"amount":0},{"first":917,"second":252,"amount":0},{"first":917,"second":246,"amount":0},{"first":917,"second":962,"amount":0},{"first":917,"second":965,"amount":0},{"first":917,"second":959,"amount":0},{"first":917,"second":945,"amount":0},{"first":917,"second":963,"amount":0},{"first":917,"second":947,"amount":-1},{"first":917,"second":957,"amount":-1},{"first":929,"second":97,"amount":0},{"first":929,"second":101,"amount":0},{"first":929,"second":116,"amount":0},{"first":929,"second":121,"amount":0},{"first":929,"second":111,"amount":0},{"first":929,"second":113,"amount":0},{"first":929,"second":100,"amount":0},{"first":929,"second":103,"amount":0},{"first":929,"second":99,"amount":0},{"first":929,"second":118,"amount":0},{"first":929,"second":65,"amount":-3},{"first":929,"second":90,"amount":-1},{"first":929,"second":74,"amount":-4},{"first":929,"second":88,"amount":-1},{"first":929,"second":44,"amount":-7},{"first":929,"second":46,"amount":-7},{"first":929,"second":1040,"amount":-3},{"first":929,"second":1072,"amount":0},{"first":929,"second":1044,"amount":-2},{"first":929,"second":1076,"amount":-1},{"first":929,"second":1077,"amount":0},{"first":929,"second":1105,"amount":0},{"first":929,"second":1046,"amount":-1},{"first":929,"second":1051,"amount":-1},{"first":929,"second":1083,"amount":-1},{"first":929,"second":1086,"amount":0},{"first":929,"second":1089,"amount":0},{"first":929,"second":1091,"amount":0},{"first":929,"second":1092,"amount":0},{"first":929,"second":1061,"amount":-1},{"first":929,"second":246,"amount":0},{"first":929,"second":228,"amount":0},{"first":929,"second":196,"amount":-3},{"first":929,"second":962,"amount":0},{"first":929,"second":961,"amount":-1},{"first":929,"second":959,"amount":0},{"first":929,"second":945,"amount":0},{"first":929,"second":963,"amount":0},{"first":929,"second":948,"amount":0},{"first":929,"second":947,"amount":0},{"first":929,"second":955,"amount":-1},{"first":929,"second":957,"amount":0},{"first":929,"second":913,"amount":-3},{"first":929,"second":916,"amount":-3},{"first":929,"second":923,"amount":-3},{"first":929,"second":918,"amount":-1},{"first":929,"second":935,"amount":-1},{"first":929,"second":229,"amount":0},{"first":929,"second":197,"amount":-3},{"first":929,"second":198,"amount":-2},{"first":932,"second":97,"amount":-2},{"first":932,"second":122,"amount":-1},{"first":932,"second":101,"amount":-2},{"first":932,"second":114,"amount":-2},{"first":932,"second":121,"amount":-1},{"first":932,"second":117,"amount":-2},{"first":932,"second":111,"amount":-2},{"first":932,"second":112,"amount":-2},{"first":932,"second":113,"amount":-2},{"first":932,"second":115,"amount":-2},{"first":932,"second":100,"amount":-2},{"first":932,"second":103,"amount":-2},{"first":932,"second":109,"amount":-2},{"first":932,"second":119,"amount":-1},{"first":932,"second":120,"amount":-2},{"first":932,"second":99,"amount":-2},{"first":932,"second":118,"amount":-1},{"first":932,"second":110,"amount":-2},{"first":932,"second":65,"amount":-2},{"first":932,"second":84,"amount":0},{"first":932,"second":89,"amount":0},{"first":932,"second":79,"amount":-1},{"first":932,"second":81,"amount":-1},{"first":932,"second":83,"amount":0},{"first":932,"second":71,"amount":-1},{"first":932,"second":74,"amount":-5},{"first":932,"second":87,"amount":0},{"first":932,"second":67,"amount":-1},{"first":932,"second":86,"amount":0},{"first":932,"second":45,"amount":-5},{"first":932,"second":8211,"amount":-5},{"first":932,"second":44,"amount":-4},{"first":932,"second":46,"amount":-4},{"first":932,"second":1040,"amount":-2},{"first":932,"second":1072,"amount":-2},{"first":932,"second":1073,"amount":-1},{"first":932,"second":1074,"amount":-2},{"first":932,"second":1075,"amount":-2},{"first":932,"second":1044,"amount":-2},{"first":932,"second":1076,"amount":-3},{"first":932,"second":1077,"amount":-2},{"first":932,"second":1105,"amount":-2},{"first":932,"second":1078,"amount":-2},{"first":932,"second":1079,"amount":-3},{"first":932,"second":1080,"amount":-2},{"first":932,"second":1081,"amount":-2},{"first":932,"second":1082,"amount":-2},{"first":932,"second":1051,"amount":-1},{"first":932,"second":1083,"amount":-3},{"first":932,"second":1084,"amount":-2},{"first":932,"second":1085,"amount":-2},{"first":932,"second":1054,"amount":-1},{"first":932,"second":1086,"amount":-2},{"first":932,"second":1087,"amount":-2},{"first":932,"second":1088,"amount":-2},{"first":932,"second":1057,"amount":-1},{"first":932,"second":1089,"amount":-2},{"first":932,"second":1058,"amount":0},{"first":932,"second":1090,"amount":-2},{"first":932,"second":1091,"amount":-1},{"first":932,"second":1092,"amount":-2},{"first":932,"second":1093,"amount":-2},{"first":932,"second":1094,"amount":-2},{"first":932,"second":1095,"amount":-3},{"first":932,"second":1096,"amount":-2},{"first":932,"second":1097,"amount":-2},{"first":932,"second":1099,"amount":-3},{"first":932,"second":1068,"amount":0},{"first":932,"second":1100,"amount":-2},{"first":932,"second":1101,"amount":-3},{"first":932,"second":1102,"amount":-2},{"first":932,"second":1103,"amount":-3},{"first":932,"second":252,"amount":-2},{"first":932,"second":246,"amount":-2},{"first":932,"second":214,"amount":-1},{"first":932,"second":228,"amount":-2},{"first":932,"second":196,"amount":-2},{"first":932,"second":241,"amount":-2},{"first":932,"second":962,"amount":-2},{"first":932,"second":949,"amount":-3},{"first":932,"second":961,"amount":-3},{"first":932,"second":964,"amount":-2},{"first":932,"second":965,"amount":-2},{"first":932,"second":953,"amount":-3},{"first":932,"second":959,"amount":-2},{"first":932,"second":960,"amount":-2},{"first":932,"second":945,"amount":-2},{"first":932,"second":963,"amount":-2},{"first":932,"second":948,"amount":-1},{"first":932,"second":966,"amount":-3},{"first":932,"second":947,"amount":-1},{"first":932,"second":951,"amount":-2},{"first":932,"second":968,"amount":-3},{"first":932,"second":969,"amount":-3},{"first":932,"second":957,"amount":-1},{"first":932,"second":933,"amount":0},{"first":932,"second":920,"amount":-1},{"first":932,"second":927,"amount":-1},{"first":932,"second":913,"amount":-2},{"first":932,"second":916,"amount":-2},{"first":932,"second":934,"amount":-2},{"first":932,"second":923,"amount":-2},{"first":932,"second":229,"amount":-2},{"first":932,"second":197,"amount":-2},{"first":932,"second":230,"amount":-2},{"first":932,"second":198,"amount":-4},{"first":932,"second":248,"amount":-2},{"first":932,"second":216,"amount":-1},{"first":933,"second":97,"amount":-1},{"first":933,"second":122,"amount":-1},{"first":933,"second":101,"amount":-1},{"first":933,"second":114,"amount":-1},{"first":933,"second":116,"amount":0},{"first":933,"second":121,"amount":0},{"first":933,"second":117,"amount":-1},{"first":933,"second":111,"amount":-1},{"first":933,"second":112,"amount":-1},{"first":933,"second":113,"amount":-1},{"first":933,"second":115,"amount":-1},{"first":933,"second":100,"amount":-1},{"first":933,"second":102,"amount":0},{"first":933,"second":103,"amount":-1},{"first":933,"second":109,"amount":-1},{"first":933,"second":120,"amount":0},{"first":933,"second":99,"amount":-1},{"first":933,"second":118,"amount":0},{"first":933,"second":110,"amount":-1},{"first":933,"second":65,"amount":-2},{"first":933,"second":84,"amount":0},{"first":933,"second":89,"amount":0},{"first":933,"second":85,"amount":-2},{"first":933,"second":79,"amount":-1},{"first":933,"second":81,"amount":-1},{"first":933,"second":83,"amount":0},{"first":933,"second":71,"amount":-1},{"first":933,"second":74,"amount":-2},{"first":933,"second":87,"amount":0},{"first":933,"second":88,"amount":0},{"first":933,"second":67,"amount":-1},{"first":933,"second":86,"amount":0},{"first":933,"second":42,"amount":-1},{"first":933,"second":45,"amount":-1},{"first":933,"second":8211,"amount":-1},{"first":933,"second":44,"amount":-4},{"first":933,"second":46,"amount":-4},{"first":933,"second":125,"amount":0},{"first":933,"second":41,"amount":0},{"first":933,"second":93,"amount":0},{"first":933,"second":38,"amount":-1},{"first":933,"second":1040,"amount":-2},{"first":933,"second":1072,"amount":-1},{"first":933,"second":1075,"amount":-1},{"first":933,"second":1077,"amount":-1},{"first":933,"second":1105,"amount":-1},{"first":933,"second":1046,"amount":0},{"first":933,"second":1078,"amount":0},{"first":933,"second":1080,"amount":-1},{"first":933,"second":1081,"amount":-1},{"first":933,"second":1082,"amount":-1},{"first":933,"second":1084,"amount":-1},{"first":933,"second":1085,"amount":-1},{"first":933,"second":1054,"amount":-1},{"first":933,"second":1086,"amount":-1},{"first":933,"second":1087,"amount":-1},{"first":933,"second":1088,"amount":-1},{"first":933,"second":1057,"amount":-1},{"first":933,"second":1089,"amount":-1},{"first":933,"second":1058,"amount":0},{"first":933,"second":1091,"amount":0},{"first":933,"second":1092,"amount":-1},{"first":933,"second":1061,"amount":0},{"first":933,"second":1093,"amount":0},{"first":933,"second":1094,"amount":-1},{"first":933,"second":1096,"amount":-1},{"first":933,"second":1097,"amount":-1},{"first":933,"second":1100,"amount":-1},{"first":933,"second":1102,"amount":-1},{"first":933,"second":252,"amount":-1},{"first":933,"second":220,"amount":-2},{"first":933,"second":246,"amount":-1},{"first":933,"second":214,"amount":-1},{"first":933,"second":228,"amount":-1},{"first":933,"second":196,"amount":-2},{"first":933,"second":241,"amount":-1},{"first":933,"second":962,"amount":-1},{"first":933,"second":949,"amount":-1},{"first":933,"second":961,"amount":-1},{"first":933,"second":964,"amount":0},{"first":933,"second":965,"amount":-1},{"first":933,"second":952,"amount":0},{"first":933,"second":953,"amount":-1},{"first":933,"second":959,"amount":-1},{"first":933,"second":960,"amount":0},{"first":933,"second":945,"amount":-1},{"first":933,"second":963,"amount":-1},{"first":933,"second":948,"amount":0},{"first":933,"second":966,"amount":-1},{"first":933,"second":947,"amount":0},{"first":933,"second":951,"amount":-1},{"first":933,"second":950,"amount":0},{"first":933,"second":968,"amount":-1},{"first":933,"second":969,"amount":-1},{"first":933,"second":946,"amount":0},{"first":933,"second":957,"amount":0},{"first":933,"second":933,"amount":0},{"first":933,"second":920,"amount":-1},{"first":933,"second":927,"amount":-1},{"first":933,"second":913,"amount":-2},{"first":933,"second":916,"amount":-2},{"first":933,"second":934,"amount":-1},{"first":933,"second":923,"amount":-2},{"first":933,"second":935,"amount":0},{"first":933,"second":229,"amount":-1},{"first":933,"second":197,"amount":-2},{"first":933,"second":230,"amount":-1},{"first":933,"second":198,"amount":-2},{"first":933,"second":248,"amount":-1},{"first":933,"second":216,"amount":-1},{"first":920,"second":65,"amount":0},{"first":920,"second":90,"amount":0},{"first":920,"second":84,"amount":-1},{"first":920,"second":89,"amount":-1},{"first":920,"second":88,"amount":0},{"first":920,"second":86,"amount":0},{"first":920,"second":44,"amount":-2},{"first":920,"second":46,"amount":-2},{"first":920,"second":1040,"amount":0},{"first":920,"second":1044,"amount":-1},{"first":920,"second":1046,"amount":0},{"first":920,"second":1051,"amount":-1},{"first":920,"second":1058,"amount":-1},{"first":920,"second":1061,"amount":0},{"first":920,"second":1068,"amount":-1},{"first":920,"second":196,"amount":0},{"first":920,"second":955,"amount":0},{"first":920,"second":933,"amount":-1},{"first":920,"second":913,"amount":0},{"first":920,"second":931,"amount":0},{"first":920,"second":916,"amount":0},{"first":920,"second":926,"amount":0},{"first":920,"second":923,"amount":0},{"first":920,"second":918,"amount":0},{"first":920,"second":935,"amount":0},{"first":920,"second":197,"amount":0},{"first":920,"second":198,"amount":-1},{"first":921,"second":65,"amount":0},{"first":921,"second":84,"amount":-1},{"first":921,"second":89,"amount":-1},{"first":921,"second":88,"amount":0},{"first":921,"second":1040,"amount":0},{"first":921,"second":1044,"amount":0},{"first":921,"second":1076,"amount":0},{"first":921,"second":1046,"amount":0},{"first":921,"second":1051,"amount":0},{"first":921,"second":1083,"amount":0},{"first":921,"second":1058,"amount":-1},{"first":921,"second":1061,"amount":0},{"first":921,"second":1063,"amount":-1},{"first":921,"second":1095,"amount":-1},{"first":921,"second":196,"amount":0},{"first":921,"second":933,"amount":-1},{"first":921,"second":913,"amount":0},{"first":921,"second":916,"amount":0},{"first":921,"second":923,"amount":0},{"first":921,"second":935,"amount":0},{"first":921,"second":197,"amount":0},{"first":927,"second":65,"amount":0},{"first":927,"second":90,"amount":0},{"first":927,"second":84,"amount":-1},{"first":927,"second":89,"amount":-1},{"first":927,"second":88,"amount":0},{"first":927,"second":86,"amount":0},{"first":927,"second":44,"amount":-2},{"first":927,"second":46,"amount":-2},{"first":927,"second":1040,"amount":0},{"first":927,"second":1044,"amount":-1},{"first":927,"second":1046,"amount":0},{"first":927,"second":1051,"amount":-1},{"first":927,"second":1058,"amount":-1},{"first":927,"second":1061,"amount":0},{"first":927,"second":1068,"amount":-1},{"first":927,"second":196,"amount":0},{"first":927,"second":955,"amount":0},{"first":927,"second":933,"amount":-1},{"first":927,"second":913,"amount":0},{"first":927,"second":931,"amount":0},{"first":927,"second":916,"amount":0},{"first":927,"second":926,"amount":0},{"first":927,"second":923,"amount":0},{"first":927,"second":918,"amount":0},{"first":927,"second":935,"amount":0},{"first":927,"second":197,"amount":0},{"first":927,"second":198,"amount":-1},{"first":913,"second":122,"amount":0},{"first":913,"second":116,"amount":0},{"first":913,"second":121,"amount":-1},{"first":913,"second":117,"amount":0},{"first":913,"second":111,"amount":0},{"first":913,"second":119,"amount":-1},{"first":913,"second":118,"amount":-1},{"first":913,"second":84,"amount":-3},{"first":913,"second":89,"amount":-2},{"first":913,"second":85,"amount":0},{"first":913,"second":79,"amount":0},{"first":913,"second":81,"amount":0},{"first":913,"second":71,"amount":0},{"first":913,"second":87,"amount":-1},{"first":913,"second":67,"amount":0},{"first":913,"second":86,"amount":-2},{"first":913,"second":63,"amount":-1},{"first":913,"second":34,"amount":-2},{"first":913,"second":39,"amount":-2},{"first":913,"second":1044,"amount":0},{"first":913,"second":1051,"amount":0},{"first":913,"second":1083,"amount":0},{"first":913,"second":1054,"amount":0},{"first":913,"second":1086,"amount":0},{"first":913,"second":1057,"amount":0},{"first":913,"second":1058,"amount":-3},{"first":913,"second":1090,"amount":-1},{"first":913,"second":1091,"amount":-1},{"first":913,"second":1063,"amount":-1},{"first":913,"second":1095,"amount":-2},{"first":913,"second":1068,"amount":-1},{"first":913,"second":252,"amount":0},{"first":913,"second":220,"amount":0},{"first":913,"second":246,"amount":0},{"first":913,"second":214,"amount":0},{"first":913,"second":964,"amount":-1},{"first":913,"second":965,"amount":0},{"first":913,"second":959,"amount":0},{"first":913,"second":947,"amount":-1},{"first":913,"second":955,"amount":0},{"first":913,"second":957,"amount":-1},{"first":913,"second":933,"amount":-2},{"first":913,"second":920,"amount":0},{"first":913,"second":927,"amount":0},{"first":913,"second":934,"amount":-1},{"first":913,"second":936,"amount":-1},{"first":913,"second":216,"amount":0},{"first":931,"second":79,"amount":-1},{"first":931,"second":81,"amount":-1},{"first":931,"second":71,"amount":-1},{"first":931,"second":67,"amount":-1},{"first":931,"second":1054,"amount":-1},{"first":931,"second":1057,"amount":-1},{"first":931,"second":214,"amount":-1},{"first":931,"second":955,"amount":0},{"first":931,"second":920,"amount":-1},{"first":931,"second":927,"amount":-1},{"first":931,"second":934,"amount":-1},{"first":931,"second":216,"amount":-1},{"first":916,"second":122,"amount":0},{"first":916,"second":116,"amount":0},{"first":916,"second":121,"amount":-1},{"first":916,"second":117,"amount":0},{"first":916,"second":111,"amount":0},{"first":916,"second":119,"amount":-1},{"first":916,"second":118,"amount":-1},{"first":916,"second":84,"amount":-3},{"first":916,"second":89,"amount":-2},{"first":916,"second":85,"amount":0},{"first":916,"second":79,"amount":0},{"first":916,"second":81,"amount":0},{"first":916,"second":71,"amount":0},{"first":916,"second":87,"amount":-1},{"first":916,"second":67,"amount":0},{"first":916,"second":86,"amount":-2},{"first":916,"second":63,"amount":-1},{"first":916,"second":34,"amount":-2},{"first":916,"second":39,"amount":-2},{"first":916,"second":1044,"amount":0},{"first":916,"second":1051,"amount":0},{"first":916,"second":1083,"amount":0},{"first":916,"second":1054,"amount":0},{"first":916,"second":1086,"amount":0},{"first":916,"second":1057,"amount":0},{"first":916,"second":1058,"amount":-3},{"first":916,"second":1090,"amount":-1},{"first":916,"second":1091,"amount":-1},{"first":916,"second":1063,"amount":-1},{"first":916,"second":1095,"amount":-2},{"first":916,"second":1068,"amount":-1},{"first":916,"second":252,"amount":0},{"first":916,"second":220,"amount":0},{"first":916,"second":246,"amount":0},{"first":916,"second":214,"amount":0},{"first":916,"second":964,"amount":-1},{"first":916,"second":965,"amount":0},{"first":916,"second":959,"amount":0},{"first":916,"second":947,"amount":-1},{"first":916,"second":955,"amount":0},{"first":916,"second":957,"amount":-1},{"first":916,"second":933,"amount":-2},{"first":916,"second":920,"amount":0},{"first":916,"second":927,"amount":0},{"first":916,"second":934,"amount":-1},{"first":916,"second":936,"amount":-1},{"first":916,"second":216,"amount":0},{"first":934,"second":65,"amount":-1},{"first":934,"second":89,"amount":-1},{"first":934,"second":88,"amount":-1},{"first":934,"second":1040,"amount":-1},{"first":934,"second":1046,"amount":-1},{"first":934,"second":1061,"amount":-1},{"first":934,"second":196,"amount":-1},{"first":934,"second":955,"amount":-1},{"first":934,"second":933,"amount":-1},{"first":934,"second":913,"amount":-1},{"first":934,"second":916,"amount":-1},{"first":934,"second":923,"amount":-1},{"first":934,"second":935,"amount":-1},{"first":934,"second":197,"amount":-1},{"first":915,"second":97,"amount":-4},{"first":915,"second":122,"amount":-3},{"first":915,"second":101,"amount":-4},{"first":915,"second":114,"amount":-3},{"first":915,"second":121,"amount":-3},{"first":915,"second":117,"amount":-4},{"first":915,"second":111,"amount":-4},{"first":915,"second":112,"amount":-4},{"first":915,"second":113,"amount":-4},{"first":915,"second":115,"amount":-4},{"first":915,"second":100,"amount":-4},{"first":915,"second":103,"amount":-4},{"first":915,"second":109,"amount":-4},{"first":915,"second":119,"amount":-2},{"first":915,"second":120,"amount":-3},{"first":915,"second":99,"amount":-4},{"first":915,"second":118,"amount":-3},{"first":915,"second":110,"amount":-4},{"first":915,"second":65,"amount":-4},{"first":915,"second":84,"amount":0},{"first":915,"second":89,"amount":0},{"first":915,"second":79,"amount":-1},{"first":915,"second":81,"amount":-1},{"first":915,"second":83,"amount":-1},{"first":915,"second":71,"amount":-1},{"first":915,"second":87,"amount":0},{"first":915,"second":67,"amount":-1},{"first":915,"second":86,"amount":0},{"first":915,"second":45,"amount":-8},{"first":915,"second":8211,"amount":-8},{"first":915,"second":44,"amount":-8},{"first":915,"second":46,"amount":-8},{"first":915,"second":1040,"amount":-4},{"first":915,"second":1072,"amount":-4},{"first":915,"second":1073,"amount":-1},{"first":915,"second":1074,"amount":-4},{"first":915,"second":1075,"amount":-4},{"first":915,"second":1044,"amount":-4},{"first":915,"second":1076,"amount":-5},{"first":915,"second":1077,"amount":-4},{"first":915,"second":1105,"amount":-4},{"first":915,"second":1078,"amount":-3},{"first":915,"second":1079,"amount":-5},{"first":915,"second":1080,"amount":-4},{"first":915,"second":1081,"amount":-4},{"first":915,"second":1082,"amount":-4},{"first":915,"second":1051,"amount":-2},{"first":915,"second":1083,"amount":-5},{"first":915,"second":1084,"amount":-4},{"first":915,"second":1085,"amount":-4},{"first":915,"second":1054,"amount":-1},{"first":915,"second":1086,"amount":-4},{"first":915,"second":1087,"amount":-4},{"first":915,"second":1088,"amount":-4},{"first":915,"second":1057,"amount":-1},{"first":915,"second":1089,"amount":-4},{"first":915,"second":1058,"amount":0},{"first":915,"second":1090,"amount":-3},{"first":915,"second":1091,"amount":-3},{"first":915,"second":1092,"amount":-4},{"first":915,"second":1093,"amount":-3},{"first":915,"second":1094,"amount":-4},{"first":915,"second":1095,"amount":-5},{"first":915,"second":1096,"amount":-4},{"first":915,"second":1097,"amount":-4},{"first":915,"second":1099,"amount":-5},{"first":915,"second":1068,"amount":0},{"first":915,"second":1100,"amount":-4},{"first":915,"second":1101,"amount":-5},{"first":915,"second":1102,"amount":-4},{"first":915,"second":1103,"amount":-5},{"first":915,"second":252,"amount":-4},{"first":915,"second":246,"amount":-4},{"first":915,"second":214,"amount":-1},{"first":915,"second":228,"amount":-4},{"first":915,"second":196,"amount":-4},{"first":915,"second":241,"amount":-4},{"first":915,"second":962,"amount":-4},{"first":915,"second":949,"amount":-5},{"first":915,"second":961,"amount":-6},{"first":915,"second":964,"amount":-4},{"first":915,"second":965,"amount":-4},{"first":915,"second":953,"amount":-6},{"first":915,"second":959,"amount":-4},{"first":915,"second":960,"amount":-5},{"first":915,"second":945,"amount":-4},{"first":915,"second":963,"amount":-4},{"first":915,"second":948,"amount":-2},{"first":915,"second":966,"amount":-6},{"first":915,"second":947,"amount":-3},{"first":915,"second":951,"amount":-4},{"first":915,"second":968,"amount":-5},{"first":915,"second":969,"amount":-6},{"first":915,"second":957,"amount":-3},{"first":915,"second":933,"amount":0},{"first":915,"second":920,"amount":-1},{"first":915,"second":927,"amount":-1},{"first":915,"second":913,"amount":-4},{"first":915,"second":916,"amount":-4},{"first":915,"second":934,"amount":-3},{"first":915,"second":923,"amount":-4},{"first":915,"second":229,"amount":-4},{"first":915,"second":197,"amount":-4},{"first":915,"second":230,"amount":-4},{"first":915,"second":198,"amount":-7},{"first":915,"second":248,"amount":-4},{"first":915,"second":216,"amount":-1},{"first":919,"second":65,"amount":0},{"first":919,"second":84,"amount":-1},{"first":919,"second":89,"amount":-1},{"first":919,"second":88,"amount":0},{"first":919,"second":1040,"amount":0},{"first":919,"second":1044,"amount":0},{"first":919,"second":1076,"amount":0},{"first":919,"second":1046,"amount":0},{"first":919,"second":1051,"amount":0},{"first":919,"second":1083,"amount":0},{"first":919,"second":1058,"amount":-1},{"first":919,"second":1061,"amount":0},{"first":919,"second":1063,"amount":-1},{"first":919,"second":1095,"amount":-1},{"first":919,"second":196,"amount":0},{"first":919,"second":933,"amount":-1},{"first":919,"second":913,"amount":0},{"first":919,"second":916,"amount":0},{"first":919,"second":923,"amount":0},{"first":919,"second":935,"amount":0},{"first":919,"second":197,"amount":0},{"first":926,"second":79,"amount":0},{"first":926,"second":81,"amount":0},{"first":926,"second":71,"amount":0},{"first":926,"second":67,"amount":0},{"first":926,"second":1054,"amount":0},{"first":926,"second":1057,"amount":0},{"first":926,"second":214,"amount":0},{"first":926,"second":955,"amount":0},{"first":926,"second":920,"amount":0},{"first":926,"second":927,"amount":0},{"first":926,"second":216,"amount":0},{"first":922,"second":101,"amount":-1},{"first":922,"second":121,"amount":-1},{"first":922,"second":117,"amount":0},{"first":922,"second":111,"amount":-1},{"first":922,"second":112,"amount":0},{"first":922,"second":113,"amount":-1},{"first":922,"second":100,"amount":-1},{"first":922,"second":103,"amount":-1},{"first":922,"second":109,"amount":0},{"first":922,"second":119,"amount":-1},{"first":922,"second":99,"amount":-1},{"first":922,"second":118,"amount":-1},{"first":922,"second":110,"amount":0},{"first":922,"second":79,"amount":-1},{"first":922,"second":81,"amount":-1},{"first":922,"second":71,"amount":-1},{"first":922,"second":67,"amount":-1},{"first":922,"second":45,"amount":-1},{"first":922,"second":8211,"amount":-1},{"first":922,"second":1073,"amount":-1},{"first":922,"second":1075,"amount":0},{"first":922,"second":1077,"amount":-1},{"first":922,"second":1105,"amount":-1},{"first":922,"second":1080,"amount":0},{"first":922,"second":1081,"amount":0},{"first":922,"second":1082,"amount":0},{"first":922,"second":1084,"amount":0},{"first":922,"second":1085,"amount":0},{"first":922,"second":1054,"amount":-1},{"first":922,"second":1086,"amount":-1},{"first":922,"second":1087,"amount":0},{"first":922,"second":1088,"amount":0},{"first":922,"second":1057,"amount":-1},{"first":922,"second":1089,"amount":-1},{"first":922,"second":1090,"amount":-1},{"first":922,"second":1091,"amount":-1},{"first":922,"second":1092,"amount":-1},{"first":922,"second":1094,"amount":0},{"first":922,"second":1095,"amount":-2},{"first":922,"second":1096,"amount":0},{"first":922,"second":1097,"amount":0},{"first":922,"second":1100,"amount":0},{"first":922,"second":1102,"amount":0},{"first":922,"second":252,"amount":0},{"first":922,"second":246,"amount":-1},{"first":922,"second":214,"amount":-1},{"first":922,"second":241,"amount":0},{"first":922,"second":962,"amount":-1},{"first":922,"second":964,"amount":-2},{"first":922,"second":965,"amount":0},{"first":922,"second":959,"amount":-1},{"first":922,"second":945,"amount":-1},{"first":922,"second":963,"amount":-1},{"first":922,"second":947,"amount":-1},{"first":922,"second":951,"amount":0},{"first":922,"second":957,"amount":-1},{"first":922,"second":920,"amount":-1},{"first":922,"second":927,"amount":-1},{"first":922,"second":934,"amount":-1},{"first":922,"second":216,"amount":-1},{"first":923,"second":122,"amount":0},{"first":923,"second":116,"amount":0},{"first":923,"second":121,"amount":-1},{"first":923,"second":117,"amount":0},{"first":923,"second":111,"amount":0},{"first":923,"second":119,"amount":-1},{"first":923,"second":118,"amount":-1},{"first":923,"second":84,"amount":-3},{"first":923,"second":89,"amount":-2},{"first":923,"second":85,"amount":0},{"first":923,"second":79,"amount":0},{"first":923,"second":81,"amount":0},{"first":923,"second":71,"amount":0},{"first":923,"second":87,"amount":-1},{"first":923,"second":67,"amount":0},{"first":923,"second":86,"amount":-2},{"first":923,"second":63,"amount":-1},{"first":923,"second":34,"amount":-2},{"first":923,"second":39,"amount":-2},{"first":923,"second":1044,"amount":0},{"first":923,"second":1051,"amount":0},{"first":923,"second":1083,"amount":0},{"first":923,"second":1054,"amount":0},{"first":923,"second":1086,"amount":0},{"first":923,"second":1057,"amount":0},{"first":923,"second":1058,"amount":-3},{"first":923,"second":1090,"amount":-1},{"first":923,"second":1091,"amount":-1},{"first":923,"second":1063,"amount":-1},{"first":923,"second":1095,"amount":-2},{"first":923,"second":1068,"amount":-1},{"first":923,"second":252,"amount":0},{"first":923,"second":220,"amount":0},{"first":923,"second":246,"amount":0},{"first":923,"second":214,"amount":0},{"first":923,"second":964,"amount":-1},{"first":923,"second":965,"amount":0},{"first":923,"second":959,"amount":0},{"first":923,"second":947,"amount":-1},{"first":923,"second":955,"amount":0},{"first":923,"second":957,"amount":-1},{"first":923,"second":933,"amount":-2},{"first":923,"second":920,"amount":0},{"first":923,"second":927,"amount":0},{"first":923,"second":934,"amount":-1},{"first":923,"second":936,"amount":-1},{"first":923,"second":216,"amount":0},{"first":918,"second":101,"amount":0},{"first":918,"second":121,"amount":-1},{"first":918,"second":117,"amount":0},{"first":918,"second":111,"amount":0},{"first":918,"second":113,"amount":0},{"first":918,"second":100,"amount":0},{"first":918,"second":103,"amount":0},{"first":918,"second":119,"amount":-1},{"first":918,"second":99,"amount":0},{"first":918,"second":118,"amount":-1},{"first":918,"second":65,"amount":0},{"first":918,"second":79,"amount":-1},{"first":918,"second":81,"amount":-1},{"first":918,"second":71,"amount":-1},{"first":918,"second":67,"amount":-1},{"first":918,"second":1040,"amount":0},{"first":918,"second":1077,"amount":0},{"first":918,"second":1105,"amount":0},{"first":918,"second":1054,"amount":-1},{"first":918,"second":1086,"amount":0},{"first":918,"second":1057,"amount":-1},{"first":918,"second":1089,"amount":0},{"first":918,"second":1091,"amount":-1},{"first":918,"second":1092,"amount":0},{"first":918,"second":252,"amount":0},{"first":918,"second":246,"amount":0},{"first":918,"second":214,"amount":-1},{"first":918,"second":196,"amount":0},{"first":918,"second":962,"amount":0},{"first":918,"second":965,"amount":0},{"first":918,"second":959,"amount":0},{"first":918,"second":945,"amount":0},{"first":918,"second":963,"amount":0},{"first":918,"second":947,"amount":-1},{"first":918,"second":968,"amount":-1},{"first":918,"second":957,"amount":-1},{"first":918,"second":920,"amount":-1},{"first":918,"second":927,"amount":-1},{"first":918,"second":913,"amount":0},{"first":918,"second":916,"amount":0},{"first":918,"second":934,"amount":-1},{"first":918,"second":923,"amount":0},{"first":918,"second":197,"amount":0},{"first":918,"second":216,"amount":-1},{"first":935,"second":101,"amount":-1},{"first":935,"second":121,"amount":-1},{"first":935,"second":117,"amount":0},{"first":935,"second":111,"amount":0},{"first":935,"second":113,"amount":-1},{"first":935,"second":100,"amount":-1},{"first":935,"second":103,"amount":-1},{"first":935,"second":99,"amount":-1},{"first":935,"second":118,"amount":-1},{"first":935,"second":79,"amount":-1},{"first":935,"second":81,"amount":-1},{"first":935,"second":71,"amount":-1},{"first":935,"second":67,"amount":-1},{"first":935,"second":86,"amount":0},{"first":935,"second":45,"amount":-1},{"first":935,"second":8211,"amount":-1},{"first":935,"second":1073,"amount":0},{"first":935,"second":1044,"amount":0},{"first":935,"second":1077,"amount":-1},{"first":935,"second":1105,"amount":-1},{"first":935,"second":1051,"amount":0},{"first":935,"second":1083,"amount":0},{"first":935,"second":1054,"amount":-1},{"first":935,"second":1086,"amount":0},{"first":935,"second":1057,"amount":-1},{"first":935,"second":1089,"amount":-1},{"first":935,"second":1090,"amount":-1},{"first":935,"second":1091,"amount":-1},{"first":935,"second":1092,"amount":-1},{"first":935,"second":1095,"amount":-1},{"first":935,"second":252,"amount":0},{"first":935,"second":246,"amount":0},{"first":935,"second":214,"amount":-1},{"first":935,"second":962,"amount":-1},{"first":935,"second":964,"amount":-1},{"first":935,"second":965,"amount":0},{"first":935,"second":952,"amount":0},{"first":935,"second":959,"amount":0},{"first":935,"second":945,"amount":-1},{"first":935,"second":963,"amount":-1},{"first":935,"second":948,"amount":0},{"first":935,"second":966,"amount":-1},{"first":935,"second":947,"amount":-1},{"first":935,"second":955,"amount":0},{"first":935,"second":968,"amount":-1},{"first":935,"second":969,"amount":0},{"first":935,"second":957,"amount":-1},{"first":935,"second":920,"amount":-1},{"first":935,"second":927,"amount":-1},{"first":935,"second":934,"amount":-1},{"first":935,"second":216,"amount":-1},{"first":936,"second":65,"amount":-1},{"first":936,"second":44,"amount":-5},{"first":936,"second":46,"amount":-5},{"first":936,"second":1040,"amount":-1},{"first":936,"second":196,"amount":-1},{"first":936,"second":961,"amount":0},{"first":936,"second":913,"amount":-1},{"first":936,"second":916,"amount":-1},{"first":936,"second":923,"amount":-1},{"first":936,"second":197,"amount":-1},{"first":914,"second":84,"amount":-1},{"first":914,"second":89,"amount":-1},{"first":914,"second":86,"amount":0},{"first":914,"second":1058,"amount":-1},{"first":914,"second":1059,"amount":0},{"first":914,"second":933,"amount":-1},{"first":925,"second":65,"amount":0},{"first":925,"second":84,"amount":-1},{"first":925,"second":89,"amount":-1},{"first":925,"second":88,"amount":0},{"first":925,"second":1040,"amount":0},{"first":925,"second":1044,"amount":0},{"first":925,"second":1076,"amount":0},{"first":925,"second":1046,"amount":0},{"first":925,"second":1051,"amount":0},{"first":925,"second":1083,"amount":0},{"first":925,"second":1058,"amount":-1},{"first":925,"second":1061,"amount":0},{"first":925,"second":1063,"amount":-1},{"first":925,"second":1095,"amount":-1},{"first":925,"second":196,"amount":0},{"first":925,"second":933,"amount":-1},{"first":925,"second":913,"amount":0},{"first":925,"second":916,"amount":0},{"first":925,"second":923,"amount":0},{"first":925,"second":935,"amount":0},{"first":925,"second":197,"amount":0},{"first":924,"second":65,"amount":0},{"first":924,"second":84,"amount":-1},{"first":924,"second":89,"amount":-1},{"first":924,"second":88,"amount":0},{"first":924,"second":1040,"amount":0},{"first":924,"second":1044,"amount":0},{"first":924,"second":1076,"amount":0},{"first":924,"second":1046,"amount":0},{"first":924,"second":1051,"amount":0},{"first":924,"second":1083,"amount":0},{"first":924,"second":1058,"amount":-1},{"first":924,"second":1061,"amount":0},{"first":924,"second":1063,"amount":-1},{"first":924,"second":1095,"amount":-1},{"first":924,"second":196,"amount":0},{"first":924,"second":933,"amount":-1},{"first":924,"second":913,"amount":0},{"first":924,"second":916,"amount":0},{"first":924,"second":923,"amount":0},{"first":924,"second":935,"amount":0},{"first":924,"second":197,"amount":0},{"first":229,"second":121,"amount":0},{"first":229,"second":118,"amount":0},{"first":229,"second":34,"amount":-1},{"first":229,"second":39,"amount":-1},{"first":229,"second":1090,"amount":0},{"first":229,"second":1091,"amount":0},{"first":229,"second":947,"amount":0},{"first":229,"second":957,"amount":0},{"first":197,"second":122,"amount":0},{"first":197,"second":116,"amount":0},{"first":197,"second":121,"amount":-1},{"first":197,"second":117,"amount":0},{"first":197,"second":111,"amount":0},{"first":197,"second":119,"amount":-1},{"first":197,"second":118,"amount":-1},{"first":197,"second":84,"amount":-3},{"first":197,"second":89,"amount":-2},{"first":197,"second":85,"amount":0},{"first":197,"second":79,"amount":0},{"first":197,"second":81,"amount":0},{"first":197,"second":71,"amount":0},{"first":197,"second":87,"amount":-1},{"first":197,"second":67,"amount":0},{"first":197,"second":86,"amount":-2},{"first":197,"second":63,"amount":-1},{"first":197,"second":34,"amount":-2},{"first":197,"second":39,"amount":-2},{"first":197,"second":1044,"amount":0},{"first":197,"second":1051,"amount":0},{"first":197,"second":1083,"amount":0},{"first":197,"second":1054,"amount":0},{"first":197,"second":1086,"amount":0},{"first":197,"second":1057,"amount":0},{"first":197,"second":1058,"amount":-3},{"first":197,"second":1090,"amount":-1},{"first":197,"second":1091,"amount":-1},{"first":197,"second":1063,"amount":-1},{"first":197,"second":1095,"amount":-2},{"first":197,"second":1068,"amount":-1},{"first":197,"second":252,"amount":0},{"first":197,"second":220,"amount":0},{"first":197,"second":246,"amount":0},{"first":197,"second":214,"amount":0},{"first":197,"second":964,"amount":-1},{"first":197,"second":965,"amount":0},{"first":197,"second":959,"amount":0},{"first":197,"second":947,"amount":-1},{"first":197,"second":955,"amount":0},{"first":197,"second":957,"amount":-1},{"first":197,"second":933,"amount":-2},{"first":197,"second":920,"amount":0},{"first":197,"second":927,"amount":0},{"first":197,"second":934,"amount":-1},{"first":197,"second":936,"amount":-1},{"first":197,"second":216,"amount":0}]'),mst={pages:ust,chars:lst,info:dst,common:hst,distanceField:fst,kernings:pst},gst="/WaterSim/assets/Roboto-msdf-CKMe7dvC.png",uv={type:"change"},uy={type:"start"},jI={type:"end"},Ed=new c1,lv=new Qi,xst=Math.cos(70*Z3.DEG2RAD),Mn=new st,vs=2*Math.PI,Xe={NONE:-1,ROTATE:0,DOLLY:1,PAN:2,TOUCH_ROTATE:3,TOUCH_PAN:4,TOUCH_DOLLY_PAN:5,TOUCH_DOLLY_ROTATE:6},xm=1e-6;class yst extends HR{constructor(t,e=null){super(t,e),this.state=Xe.NONE,this.target=new st,this.cursor=new st,this.minDistance=0,this.maxDistance=1/0,this.minZoom=0,this.maxZoom=1/0,this.minTargetRadius=0,this.maxTargetRadius=1/0,this.minPolarAngle=0,this.maxPolarAngle=Math.PI,this.minAzimuthAngle=-1/0,this.maxAzimuthAngle=1/0,this.enableDamping=!1,this.dampingFactor=.05,this.enableZoom=!0,this.zoomSpeed=1,this.enableRotate=!0,this.rotateSpeed=1,this.keyRotateSpeed=1,this.enablePan=!0,this.panSpeed=1,this.screenSpacePanning=!0,this.keyPanSpeed=7,this.zoomToCursor=!1,this.autoRotate=!1,this.autoRotateSpeed=2,this.keys={LEFT:"ArrowLeft",UP:"ArrowUp",RIGHT:"ArrowRight",BOTTOM:"ArrowDown"},this.mouseButtons={LEFT:Ma.ROTATE,MIDDLE:Ma.DOLLY,RIGHT:Ma.PAN},this.touches={ONE:Sa.ROTATE,TWO:Sa.DOLLY_PAN},this.target0=this.target.clone(),this.position0=this.object.position.clone(),this.zoom0=this.object.zoom,this._domElementKeyEvents=null,this._lastPosition=new st,this._lastQuaternion=new Er,this._lastTargetPosition=new st,this._quat=new Er().setFromUnitVectors(t.up,new st(0,1,0)),this._quatInverse=this._quat.clone().invert(),this._spherical=new qy,this._sphericalDelta=new qy,this._scale=1,this._panOffset=new st,this._rotateStart=new xe,this._rotateEnd=new xe,this._rotateDelta=new xe,this._panStart=new xe,this._panEnd=new xe,this._panDelta=new xe,this._dollyStart=new xe,this._dollyEnd=new xe,this._dollyDelta=new xe,this._dollyDirection=new st,this._mouse=new xe,this._performCursorZoom=!1,this._pointers=[],this._pointerPositions={},this._controlActive=!1,this._onPointerMove=wst.bind(this),this._onPointerDown=bst.bind(this),this._onPointerUp=vst.bind(this),this._onContextMenu=Rst.bind(this),this._onMouseWheel=Sst.bind(this),this._onKeyDown=Tst.bind(this),this._onTouchStart=Est.bind(this),this._onTouchMove=Ist.bind(this),this._onMouseDown=_st.bind(this),this._onMouseMove=Cst.bind(this),this._interceptControlDown=Mst.bind(this),this._interceptControlUp=Ast.bind(this),this.domElement!==null&&this.connect(this.domElement),this.update()}connect(t){super.connect(t),this.domElement.addEventListener("pointerdown",this._onPointerDown),this.domElement.addEventListener("pointercancel",this._onPointerUp),this.domElement.addEventListener("contextmenu",this._onContextMenu),this.domElement.addEventListener("wheel",this._onMouseWheel,{passive:!1}),this.domElement.getRootNode().addEventListener("keydown",this._interceptControlDown,{passive:!0,capture:!0}),this.domElement.style.touchAction="none"}disconnect(){this.domElement.removeEventListener("pointerdown",this._onPointerDown),this.domElement.removeEventListener("pointermove",this._onPointerMove),this.domElement.removeEventListener("pointerup",this._onPointerUp),this.domElement.removeEventListener("pointercancel",this._onPointerUp),this.domElement.removeEventListener("wheel",this._onMouseWheel),this.domElement.removeEventListener("contextmenu",this._onContextMenu),this.stopListenToKeyEvents(),this.domElement.getRootNode().removeEventListener("keydown",this._interceptControlDown,{capture:!0}),this.domElement.style.touchAction="auto"}dispose(){this.disconnect()}getPolarAngle(){return this._spherical.phi}getAzimuthalAngle(){return this._spherical.theta}getDistance(){return this.object.position.distanceTo(this.target)}listenToKeyEvents(t){t.addEventListener("keydown",this._onKeyDown),this._domElementKeyEvents=t}stopListenToKeyEvents(){this._domElementKeyEvents!==null&&(this._domElementKeyEvents.removeEventListener("keydown",this._onKeyDown),this._domElementKeyEvents=null)}saveState(){this.target0.copy(this.target),this.position0.copy(this.object.position),this.zoom0=this.object.zoom}reset(){this.target.copy(this.target0),this.object.position.copy(this.position0),this.object.zoom=this.zoom0,this.object.updateProjectionMatrix(),this.dispatchEvent(uv),this.update(),this.state=Xe.NONE}update(t=null){const e=this.object.position;Mn.copy(e).sub(this.target),Mn.applyQuaternion(this._quat),this._spherical.setFromVector3(Mn),this.autoRotate&&this.state===Xe.NONE&&this._rotateLeft(this._getAutoRotationAngle(t)),this.enableDamping?(this._spherical.theta+=this._sphericalDelta.theta*this.dampingFactor,this._spherical.phi+=this._sphericalDelta.phi*this.dampingFactor):(this._spherical.theta+=this._sphericalDelta.theta,this._spherical.phi+=this._sphericalDelta.phi);let s=this.minAzimuthAngle,i=this.maxAzimuthAngle;isFinite(s)&&isFinite(i)&&(s<-Math.PI?s+=vs:s>Math.PI&&(s-=vs),i<-Math.PI?i+=vs:i>Math.PI&&(i-=vs),s<=i?this._spherical.theta=Math.max(s,Math.min(i,this._spherical.theta)):this._spherical.theta=this._spherical.theta>(s+i)/2?Math.max(s,this._spherical.theta):Math.min(i,this._spherical.theta)),this._spherical.phi=Math.max(this.minPolarAngle,Math.min(this.maxPolarAngle,this._spherical.phi)),this._spherical.makeSafe(),this.enableDamping===!0?this.target.addScaledVector(this._panOffset,this.dampingFactor):this.target.add(this._panOffset),this.target.sub(this.cursor),this.target.clampLength(this.minTargetRadius,this.maxTargetRadius),this.target.add(this.cursor);let o=!1;if(this.zoomToCursor&&this._performCursorZoom||this.object.isOrthographicCamera)this._spherical.radius=this._clampDistance(this._spherical.radius);else{const r=this._spherical.radius;this._spherical.radius=this._clampDistance(this._spherical.radius*this._scale),o=r!=this._spherical.radius}if(Mn.setFromSpherical(this._spherical),Mn.applyQuaternion(this._quatInverse),e.copy(this.target).add(Mn),this.object.lookAt(this.target),this.enableDamping===!0?(this._sphericalDelta.theta*=1-this.dampingFactor,this._sphericalDelta.phi*=1-this.dampingFactor,this._panOffset.multiplyScalar(1-this.dampingFactor)):(this._sphericalDelta.set(0,0,0),this._panOffset.set(0,0,0)),this.zoomToCursor&&this._performCursorZoom){let r=null;if(this.object.isPerspectiveCamera){const a=Mn.length();r=this._clampDistance(a*this._scale);const c=a-r;this.object.position.addScaledVector(this._dollyDirection,c),this.object.updateMatrixWorld(),o=!!c}else if(this.object.isOrthographicCamera){const a=new st(this._mouse.x,this._mouse.y,0);a.unproject(this.object);const c=this.object.zoom;this.object.zoom=Math.max(this.minZoom,Math.min(this.maxZoom,this.object.zoom/this._scale)),this.object.updateProjectionMatrix(),o=c!==this.object.zoom;const u=new st(this._mouse.x,this._mouse.y,0);u.unproject(this.object),this.object.position.sub(u).add(a),this.object.updateMatrixWorld(),r=Mn.length()}else console.warn("WARNING: OrbitControls.js encountered an unknown camera type - zoom to cursor disabled."),this.zoomToCursor=!1;r!==null&&(this.screenSpacePanning?this.target.set(0,0,-1).transformDirection(this.object.matrix).multiplyScalar(r).add(this.object.position):(Ed.origin.copy(this.object.position),Ed.direction.set(0,0,-1).transformDirection(this.object.matrix),Math.abs(this.object.up.dot(Ed.direction))<xst?this.object.lookAt(this.target):(lv.setFromNormalAndCoplanarPoint(this.object.up,this.target),Ed.intersectPlane(lv,this.target))))}else if(this.object.isOrthographicCamera){const r=this.object.zoom;this.object.zoom=Math.max(this.minZoom,Math.min(this.maxZoom,this.object.zoom/this._scale)),r!==this.object.zoom&&(this.object.updateProjectionMatrix(),o=!0)}return this._scale=1,this._performCursorZoom=!1,o||this._lastPosition.distanceToSquared(this.object.position)>xm||8*(1-this._lastQuaternion.dot(this.object.quaternion))>xm||this._lastTargetPosition.distanceToSquared(this.target)>xm?(this.dispatchEvent(uv),this._lastPosition.copy(this.object.position),this._lastQuaternion.copy(this.object.quaternion),this._lastTargetPosition.copy(this.target),!0):!1}_getAutoRotationAngle(t){return t!==null?vs/60*this.autoRotateSpeed*t:vs/60/60*this.autoRotateSpeed}_getZoomScale(t){const e=Math.abs(t*.01);return Math.pow(.95,this.zoomSpeed*e)}_rotateLeft(t){this._sphericalDelta.theta-=t}_rotateUp(t){this._sphericalDelta.phi-=t}_panLeft(t,e){Mn.setFromMatrixColumn(e,0),Mn.multiplyScalar(-t),this._panOffset.add(Mn)}_panUp(t,e){this.screenSpacePanning===!0?Mn.setFromMatrixColumn(e,1):(Mn.setFromMatrixColumn(e,0),Mn.crossVectors(this.object.up,Mn)),Mn.multiplyScalar(t),this._panOffset.add(Mn)}_pan(t,e){const s=this.domElement;if(this.object.isPerspectiveCamera){const i=this.object.position;Mn.copy(i).sub(this.target);let o=Mn.length();o*=Math.tan(this.object.fov/2*Math.PI/180),this._panLeft(2*t*o/s.clientHeight,this.object.matrix),this._panUp(2*e*o/s.clientHeight,this.object.matrix)}else this.object.isOrthographicCamera?(this._panLeft(t*(this.object.right-this.object.left)/this.object.zoom/s.clientWidth,this.object.matrix),this._panUp(e*(this.object.top-this.object.bottom)/this.object.zoom/s.clientHeight,this.object.matrix)):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - pan disabled."),this.enablePan=!1)}_dollyOut(t){this.object.isPerspectiveCamera||this.object.isOrthographicCamera?this._scale/=t:(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),this.enableZoom=!1)}_dollyIn(t){this.object.isPerspectiveCamera||this.object.isOrthographicCamera?this._scale*=t:(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),this.enableZoom=!1)}_updateZoomParameters(t,e){if(!this.zoomToCursor)return;this._performCursorZoom=!0;const s=this.domElement.getBoundingClientRect(),i=t-s.left,o=e-s.top,r=s.width,a=s.height;this._mouse.x=i/r*2-1,this._mouse.y=-(o/a)*2+1,this._dollyDirection.set(this._mouse.x,this._mouse.y,1).unproject(this.object).sub(this.object.position).normalize()}_clampDistance(t){return Math.max(this.minDistance,Math.min(this.maxDistance,t))}_handleMouseDownRotate(t){this._rotateStart.set(t.clientX,t.clientY)}_handleMouseDownDolly(t){this._updateZoomParameters(t.clientX,t.clientX),this._dollyStart.set(t.clientX,t.clientY)}_handleMouseDownPan(t){this._panStart.set(t.clientX,t.clientY)}_handleMouseMoveRotate(t){this._rotateEnd.set(t.clientX,t.clientY),this._rotateDelta.subVectors(this._rotateEnd,this._rotateStart).multiplyScalar(this.rotateSpeed);const e=this.domElement;this._rotateLeft(vs*this._rotateDelta.x/e.clientHeight),this._rotateUp(vs*this._rotateDelta.y/e.clientHeight),this._rotateStart.copy(this._rotateEnd),this.update()}_handleMouseMoveDolly(t){this._dollyEnd.set(t.clientX,t.clientY),this._dollyDelta.subVectors(this._dollyEnd,this._dollyStart),this._dollyDelta.y>0?this._dollyOut(this._getZoomScale(this._dollyDelta.y)):this._dollyDelta.y<0&&this._dollyIn(this._getZoomScale(this._dollyDelta.y)),this._dollyStart.copy(this._dollyEnd),this.update()}_handleMouseMovePan(t){this._panEnd.set(t.clientX,t.clientY),this._panDelta.subVectors(this._panEnd,this._panStart).multiplyScalar(this.panSpeed),this._pan(this._panDelta.x,this._panDelta.y),this._panStart.copy(this._panEnd),this.update()}_handleMouseWheel(t){this._updateZoomParameters(t.clientX,t.clientY),t.deltaY<0?this._dollyIn(this._getZoomScale(t.deltaY)):t.deltaY>0&&this._dollyOut(this._getZoomScale(t.deltaY)),this.update()}_handleKeyDown(t){let e=!1;switch(t.code){case this.keys.UP:t.ctrlKey||t.metaKey||t.shiftKey?this.enableRotate&&this._rotateUp(vs*this.keyRotateSpeed/this.domElement.clientHeight):this.enablePan&&this._pan(0,this.keyPanSpeed),e=!0;break;case this.keys.BOTTOM:t.ctrlKey||t.metaKey||t.shiftKey?this.enableRotate&&this._rotateUp(-vs*this.keyRotateSpeed/this.domElement.clientHeight):this.enablePan&&this._pan(0,-this.keyPanSpeed),e=!0;break;case this.keys.LEFT:t.ctrlKey||t.metaKey||t.shiftKey?this.enableRotate&&this._rotateLeft(vs*this.keyRotateSpeed/this.domElement.clientHeight):this.enablePan&&this._pan(this.keyPanSpeed,0),e=!0;break;case this.keys.RIGHT:t.ctrlKey||t.metaKey||t.shiftKey?this.enableRotate&&this._rotateLeft(-vs*this.keyRotateSpeed/this.domElement.clientHeight):this.enablePan&&this._pan(-this.keyPanSpeed,0),e=!0;break}e&&(t.preventDefault(),this.update())}_handleTouchStartRotate(t){if(this._pointers.length===1)this._rotateStart.set(t.pageX,t.pageY);else{const e=this._getSecondPointerPosition(t),s=.5*(t.pageX+e.x),i=.5*(t.pageY+e.y);this._rotateStart.set(s,i)}}_handleTouchStartPan(t){if(this._pointers.length===1)this._panStart.set(t.pageX,t.pageY);else{const e=this._getSecondPointerPosition(t),s=.5*(t.pageX+e.x),i=.5*(t.pageY+e.y);this._panStart.set(s,i)}}_handleTouchStartDolly(t){const e=this._getSecondPointerPosition(t),s=t.pageX-e.x,i=t.pageY-e.y,o=Math.sqrt(s*s+i*i);this._dollyStart.set(0,o)}_handleTouchStartDollyPan(t){this.enableZoom&&this._handleTouchStartDolly(t),this.enablePan&&this._handleTouchStartPan(t)}_handleTouchStartDollyRotate(t){this.enableZoom&&this._handleTouchStartDolly(t),this.enableRotate&&this._handleTouchStartRotate(t)}_handleTouchMoveRotate(t){if(this._pointers.length==1)this._rotateEnd.set(t.pageX,t.pageY);else{const s=this._getSecondPointerPosition(t),i=.5*(t.pageX+s.x),o=.5*(t.pageY+s.y);this._rotateEnd.set(i,o)}this._rotateDelta.subVectors(this._rotateEnd,this._rotateStart).multiplyScalar(this.rotateSpeed);const e=this.domElement;this._rotateLeft(vs*this._rotateDelta.x/e.clientHeight),this._rotateUp(vs*this._rotateDelta.y/e.clientHeight),this._rotateStart.copy(this._rotateEnd)}_handleTouchMovePan(t){if(this._pointers.length===1)this._panEnd.set(t.pageX,t.pageY);else{const e=this._getSecondPointerPosition(t),s=.5*(t.pageX+e.x),i=.5*(t.pageY+e.y);this._panEnd.set(s,i)}this._panDelta.subVectors(this._panEnd,this._panStart).multiplyScalar(this.panSpeed),this._pan(this._panDelta.x,this._panDelta.y),this._panStart.copy(this._panEnd)}_handleTouchMoveDolly(t){const e=this._getSecondPointerPosition(t),s=t.pageX-e.x,i=t.pageY-e.y,o=Math.sqrt(s*s+i*i);this._dollyEnd.set(0,o),this._dollyDelta.set(0,Math.pow(this._dollyEnd.y/this._dollyStart.y,this.zoomSpeed)),this._dollyOut(this._dollyDelta.y),this._dollyStart.copy(this._dollyEnd);const r=(t.pageX+e.x)*.5,a=(t.pageY+e.y)*.5;this._updateZoomParameters(r,a)}_handleTouchMoveDollyPan(t){this.enableZoom&&this._handleTouchMoveDolly(t),this.enablePan&&this._handleTouchMovePan(t)}_handleTouchMoveDollyRotate(t){this.enableZoom&&this._handleTouchMoveDolly(t),this.enableRotate&&this._handleTouchMoveRotate(t)}_addPointer(t){this._pointers.push(t.pointerId)}_removePointer(t){delete this._pointerPositions[t.pointerId];for(let e=0;e<this._pointers.length;e++)if(this._pointers[e]==t.pointerId){this._pointers.splice(e,1);return}}_isTrackingPointer(t){for(let e=0;e<this._pointers.length;e++)if(this._pointers[e]==t.pointerId)return!0;return!1}_trackPointer(t){let e=this._pointerPositions[t.pointerId];e===void 0&&(e=new xe,this._pointerPositions[t.pointerId]=e),e.set(t.pageX,t.pageY)}_getSecondPointerPosition(t){const e=t.pointerId===this._pointers[0]?this._pointers[1]:this._pointers[0];return this._pointerPositions[e]}_customWheelEvent(t){const e=t.deltaMode,s={clientX:t.clientX,clientY:t.clientY,deltaY:t.deltaY};switch(e){case 1:s.deltaY*=16;break;case 2:s.deltaY*=100;break}return t.ctrlKey&&!this._controlActive&&(s.deltaY*=10),s}}function bst(n){this.enabled!==!1&&(this._pointers.length===0&&(this.domElement.setPointerCapture(n.pointerId),this.domElement.addEventListener("pointermove",this._onPointerMove),this.domElement.addEventListener("pointerup",this._onPointerUp)),!this._isTrackingPointer(n)&&(this._addPointer(n),n.pointerType==="touch"?this._onTouchStart(n):this._onMouseDown(n)))}function wst(n){this.enabled!==!1&&(n.pointerType==="touch"?this._onTouchMove(n):this._onMouseMove(n))}function vst(n){switch(this._removePointer(n),this._pointers.length){case 0:this.domElement.releasePointerCapture(n.pointerId),this.domElement.removeEventListener("pointermove",this._onPointerMove),this.domElement.removeEventListener("pointerup",this._onPointerUp),this.dispatchEvent(jI),this.state=Xe.NONE;break;case 1:const t=this._pointers[0],e=this._pointerPositions[t];this._onTouchStart({pointerId:t,pageX:e.x,pageY:e.y});break}}function _st(n){let t;switch(n.button){case 0:t=this.mouseButtons.LEFT;break;case 1:t=this.mouseButtons.MIDDLE;break;case 2:t=this.mouseButtons.RIGHT;break;default:t=-1}switch(t){case Ma.DOLLY:if(this.enableZoom===!1)return;this._handleMouseDownDolly(n),this.state=Xe.DOLLY;break;case Ma.ROTATE:if(n.ctrlKey||n.metaKey||n.shiftKey){if(this.enablePan===!1)return;this._handleMouseDownPan(n),this.state=Xe.PAN}else{if(this.enableRotate===!1)return;this._handleMouseDownRotate(n),this.state=Xe.ROTATE}break;case Ma.PAN:if(n.ctrlKey||n.metaKey||n.shiftKey){if(this.enableRotate===!1)return;this._handleMouseDownRotate(n),this.state=Xe.ROTATE}else{if(this.enablePan===!1)return;this._handleMouseDownPan(n),this.state=Xe.PAN}break;default:this.state=Xe.NONE}this.state!==Xe.NONE&&this.dispatchEvent(uy)}function Cst(n){switch(this.state){case Xe.ROTATE:if(this.enableRotate===!1)return;this._handleMouseMoveRotate(n);break;case Xe.DOLLY:if(this.enableZoom===!1)return;this._handleMouseMoveDolly(n);break;case Xe.PAN:if(this.enablePan===!1)return;this._handleMouseMovePan(n);break}}function Sst(n){this.enabled===!1||this.enableZoom===!1||this.state!==Xe.NONE||(n.preventDefault(),this.dispatchEvent(uy),this._handleMouseWheel(this._customWheelEvent(n)),this.dispatchEvent(jI))}function Tst(n){this.enabled!==!1&&this._handleKeyDown(n)}function Est(n){switch(this._trackPointer(n),this._pointers.length){case 1:switch(this.touches.ONE){case Sa.ROTATE:if(this.enableRotate===!1)return;this._handleTouchStartRotate(n),this.state=Xe.TOUCH_ROTATE;break;case Sa.PAN:if(this.enablePan===!1)return;this._handleTouchStartPan(n),this.state=Xe.TOUCH_PAN;break;default:this.state=Xe.NONE}break;case 2:switch(this.touches.TWO){case Sa.DOLLY_PAN:if(this.enableZoom===!1&&this.enablePan===!1)return;this._handleTouchStartDollyPan(n),this.state=Xe.TOUCH_DOLLY_PAN;break;case Sa.DOLLY_ROTATE:if(this.enableZoom===!1&&this.enableRotate===!1)return;this._handleTouchStartDollyRotate(n),this.state=Xe.TOUCH_DOLLY_ROTATE;break;default:this.state=Xe.NONE}break;default:this.state=Xe.NONE}this.state!==Xe.NONE&&this.dispatchEvent(uy)}function Ist(n){switch(this._trackPointer(n),this.state){case Xe.TOUCH_ROTATE:if(this.enableRotate===!1)return;this._handleTouchMoveRotate(n),this.update();break;case Xe.TOUCH_PAN:if(this.enablePan===!1)return;this._handleTouchMovePan(n),this.update();break;case Xe.TOUCH_DOLLY_PAN:if(this.enableZoom===!1&&this.enablePan===!1)return;this._handleTouchMoveDollyPan(n),this.update();break;case Xe.TOUCH_DOLLY_ROTATE:if(this.enableZoom===!1&&this.enableRotate===!1)return;this._handleTouchMoveDollyRotate(n),this.update();break;default:this.state=Xe.NONE}}function Rst(n){this.enabled!==!1&&n.preventDefault()}function Mst(n){n.key==="Control"&&(this._controlActive=!0,this.domElement.getRootNode().addEventListener("keyup",this._interceptControlUp,{passive:!0,capture:!0}))}function Ast(n){n.key==="Control"&&(this._controlActive=!1,this.domElement.getRootNode().removeEventListener("keyup",this._interceptControlUp,{passive:!0,capture:!0}))}function Ws(n,t,e,s){return tt(()=>{const[i,o]=n.shape,[r,a]=t.shape;if(e+r>i||s+a>o)throw new Error("Patch goes out of bounds of the original tensor");const c=n.slice([0,0],[e,o]),u=n.slice([e,0],[r,o]),l=n.slice([e+r,0],[i-e-r,o]),d=zi(u.unstack().map((h,f)=>{const p=h.slice([0],[s]),x=h.slice([s+a],[o-s-a]);return Xn([p,t.slice([f,0],[1,a]).squeeze([0]),x])}));return Xn([c,d,l],0)})}function Yc(n,t){const e=new Array(n);for(let s=0;s<n;++s)e[s]=new Array(t).fill(0);return e}async function KI(n){const t="../data/WaterSim/"+n+".txt",i=(await(await fetch(t)).text()).trim().split(`
`);let o=9999,r=9999,a=-9999,c=-9999,u=-9999,l=[];for(const g of i){if(g.startsWith("#"))continue;const[m,y,w,b]=g.trim().split(/\s+/),_=parseInt(m,10),T=parseInt(y,10),E=parseInt(w,10);l.push([_,T,E,b]),b==="000000"&&(o=Math.min(o,_),r=Math.min(r,T),a=Math.max(a,_),c=Math.max(c,T),u=Math.max(u,E))}let d=a-o+1+2,h=c-r+1+2;const f=Yc(d,h);for(const g of l){const[m,y,w,b]=g;b=="8f563b"&&(f[m-o+1][y-r+1]=Math.max(f[m-o+1][y-r+1],w-u))}const p=Yc(d,h),x=Yc(d,h);for(const g of l){const[m,y,w,b]=g;(b=="639bff"||b=="fbf236")&&(p[m-o+1][y-r+1]=Math.max(p[m-o+1][y-r+1],w-f[m-o][y-r])),b=="fbf236"&&(x[m-o+1][y-r+1]+=1)}return[f,p,x]}let q0=qs([]),Ke=qs([]),j0=qs([]),We=qs([]),Ge=qs([]),xp=0,re=0,ae=0,Ia=[];const Gc=["channel_17","channel_32","sink"];let Ca=0,K0=await KI(Gc[Ca]);ZI(K0);const Oa=new ER,ta=new RD({antialias:!0});ta.setSize(window.innerWidth,window.innerHeight);document.body.appendChild(ta.domElement);ta.setAnimationLoop(Ost);const sc=new Xs(75,window.innerWidth/window.innerHeight,.1,1e3);sc.position.set(0,20,30);const YI=new yst(sc,ta.domElement);YI.enableDamping=!0;const Nst=new zR(11657727,12155424,5);Oa.add(Nst);window.addEventListener("resize",()=>{sc.aspect=window.innerWidth/window.innerHeight,sc.updateProjectionMatrix(),ta.setSize(window.innerWidth,window.innerHeight)});function ZI(n){q0.dispose(),Ke.dispose(),j0.dispose(),We.dispose(),Ge.dispose(),xp=0;let[t,e,s]=n;Ia=t,re=Ia.length,ae=Ia[0].length,q0=qs(Ia),Ke=qs(e),j0=qs(s),We=qs(Yc(re+1,ae)),Ge=qs(Yc(re,ae+1))}const Id=[];function JI(){for(Id.forEach(a=>{Oa.remove(a)});Id.length>0;)Id.pop();const n=new ic,t=new Gy({color:9393723});let e=new Wy(n,t,re*ae);e.instanceMatrix.setUsage(s0),Oa.add(e);const s=new Ln;let i=0;for(let a=0;a<re;a++)for(let c=0;c<ae;c++){let u=Ia[a][c];s.position.set(a,u/2,c),s.scale.set(1,u,1),s.updateMatrix(),e.setMatrixAt(i,s.matrix),i++}e.instanceMatrix.needsUpdate=!0;const o=new Gy({color:2003199});let r=new Wy(n,o,re*ae);return r.instanceMatrix.setUsage(K3),Oa.add(r),Id.push(e,r),r}let Y0=JI();const Hc=.001,Ra=Ee(1),kst=Ee(.1),Th=5,Dst=Ee(.2),dv=Ee(.1),Eh=.1,QI=z(kst,Th),hv=Ra.mul(Ra).div(QI),fv=(1-(1-Eh)**Th)/Eh;function $st(){tt(()=>{const n=z(QI,z(j0,Dst)),t=yt(Ke,n);Ke.dispose(),Ke=rn(t);const e=yt(Ke,q0),s=z(dn(0,qe(Uc(We.slice([1,0],[re-1,ae])))),Xt(qe(We.slice([2,0],[re-1,ae])),dn(Ke.slice([1,0],[re-1,ae]),Hc))),i=z(dn(0,Uc(We.slice([1,0],[re-1,ae]))),Xt(We.slice([0,0],[re-1,ae]),dn(Ke.slice([0,0],[re-1,ae]),Hc))),o=ti(Do(1,Xt(dn(s,i),Ra)));let r=e.slice([0,0],[re-1,ae]).sub(e.slice([1,0],[re-1,ae])).mul(dv).mul(Ra);const a=yt(z(We.slice([1,0],[re-1,ae]),(1-Eh)**Th),z(z(o,fv),r)),c=Ws(We,a,1,0);We.dispose(),We=rn(c);const u=z(dn(0,qe(Uc(Ge.slice([0,1],[re,ae-1])))),Xt(qe(Ge.slice([0,2],[re,ae-1])),dn(Ke.slice([0,1],[re,ae-1]),Hc))),l=z(dn(0,Uc(Ge.slice([0,1],[re,ae-1]))),Xt(Ge.slice([0,0],[re,ae-1]),dn(Ke.slice([0,0],[re,ae-1]),Hc))),d=ti(Do(1,Xt(dn(u,l),Ra)));let h=e.slice([0,0],[re,ae-1]).sub(e.slice([0,1],[re,ae-1])).mul(dv).mul(Ra);const f=yt(z(Ge.slice([0,1],[re,ae-1]),(1-Eh)**Th),z(z(d,fv),h)),p=Ws(Ge,f,0,1);Ge.dispose(),Ge=rn(p);const x=yt(yt(dn(0,qe(We.slice([0,0],[re,ae]))),dn(0,We.slice([1,0],[re,ae]))),yt(dn(0,qe(Ge.slice([0,0],[re,ae]))),dn(0,Ge.slice([0,1],[re,ae])))),g=_i(x,0).cast("float32"),m=as(x,0).cast("float32");let y=g.add(m.mul(Ke).mul(hv).div(dn(x,.001)));y=Do(y,1);const w=Ka(We.slice([0,0],[re,ae]),0).cast("float32"),b=as(We.slice([1,0],[re,ae]),0).cast("float32"),_=We.slice([0,0],[re,ae]).mul(w).mul(y),T=We.slice([1,0],[re,ae]).mul(b).mul(y);let E=Ws(We,_,0,0);We.dispose(),We=rn(E),E=Ws(We,en([1,ae]),re,0),We.dispose(),We=rn(E),E=Ws(We,We.slice([1,0],[re,ae]).add(T),1,0),We.dispose(),We=rn(E);const I=Ka(Ge.slice([0,0],[re,ae]),0).cast("float32"),S=as(Ge.slice([0,1],[re,ae]),0).cast("float32"),v=Ge.slice([0,0],[re,ae]).mul(I).mul(y),C=Ge.slice([0,1],[re,ae]).mul(S).mul(y);let M=Ws(Ge,v,0,0);Ge.dispose(),Ge=rn(M),M=Ws(Ge,en([re,1]),0,ae),Ge.dispose(),Ge=rn(M),M=Ws(Ge,Ge.slice([0,1],[re,ae]).add(C),0,1),Ge.dispose(),Ge=rn(M);let N=We.slice([0,0],[re,ae]).add(Ge.slice([0,0],[re,ae])).sub(We.slice([1,0],[re,ae])).sub(Ge.slice([0,1],[re,ae]));N=N.div(hv);const D=Ke.add(N);Ke.dispose(),Ke=rn(D);let $=Ws(Ke,en([1,ae]),0,0);Ke.dispose(),Ke=rn($),$=Ws(Ke,en([1,ae]),re-1,0),Ke.dispose(),Ke=rn($),$=Ws(Ke,en([re,1]),0,0),Ke.dispose(),Ke=rn($),$=Ws(Ke,en([re,1]),0,ae-1),Ke.dispose(),Ke=rn($)}),xp++}function Fst(){let n=Ke.arraySync();const t=new Ln;let e=0;for(let s=0;s<re;s++)for(let i=0;i<ae;i++){let o=n[s][i];if(o<Hc)t.scale.set(0,0,0);else{let r=Ia[s][i];t.position.set(s,r+o/2,i),t.scale.set(1,o,1)}t.updateMatrix(),Y0.setMatrixAt(e,t.matrix),e++}Y0.instanceMatrix.needsUpdate=!0}const Zc=[];let qd=!1;const t3=new Ea.Text({content:"step: 0"});function Pst(){for(;Zc.length>0;)Zc.pop();const n=new Ea.Block({justifyContent:"center",contentDirection:"row-reverse",fontFamily:mst,fontTexture:gst,fontSize:1.4,padding:.2,borderRadius:1.1});n.position.set(0,11,0),n.rotation.x=-.55,Oa.add(n);const t={width:10,height:2,justifyContent:"center",offset:.05,margin:.02,borderRadius:.075},e={state:"hovered",attributes:{offset:.035,backgroundColor:new be(10066329),backgroundOpacity:1,fontColor:new be(16777215)}},s={state:"idle",attributes:{offset:.035,backgroundColor:new be(6710886),backgroundOpacity:.3,fontColor:new be(16777215)}},i=new Ea.Block(t),o=new Ea.Block(t),r=new Ea.Text({content:"- "+Gc[Ca]+" +"});i.add(r),o.add(t3);const a={offset:.02,backgroundColor:new be(7829367),fontColor:new be(2236962)};i.setupState({state:"selected",attributes:a,onSet:async()=>{Ca=(Ca+1)%Gc.length,K0=await KI(Gc[Ca]),r.set({content:"- "+Gc[Ca]+" +"}),ZI(K0),Y0=JI(),qd=!1}}),i.setupState(e),i.setupState(s),o.setupState({state:"selected",attributes:a,onSet:()=>{qd=!qd}}),o.setupState(e),o.setupState(s),n.add(i,o),Zc.push(i,o)}Pst();const Z0=new GR,vi=new xe;vi.x=vi.y=null;let Bl=!1;window.addEventListener("pointermove",n=>{vi.x=n.clientX/window.innerWidth*2-1,vi.y=-(n.clientY/window.innerHeight)*2+1});window.addEventListener("pointerdown",()=>{Bl=!0});window.addEventListener("pointerup",()=>{Bl=!1});window.addEventListener("touchstart",n=>{Bl=!0,vi.x=n.touches[0].clientX/window.innerWidth*2-1,vi.y=-(n.touches[0].clientY/window.innerHeight)*2+1});window.addEventListener("touchend",()=>{Bl=!1,vi.x=null,vi.y=null});function pv(){return Zc.reduce((n,t)=>{const e=Z0.intersectObject(t,!0);return e[0]&&(!n||e[0].distance<n.distance)?(e[0].object=t,e[0]):n},null)}function Lst(){let n;ta.xr.isPresenting?(vrControl.setFromController(0,Z0.ray),n=pv(),n&&vrControl.setPointerAt(0,n.point)):vi.x!==null&&vi.y!==null&&(Z0.setFromCamera(vi,sc),n=pv()),n&&n.object.isUI&&(Bl?n.object.setState("selected"):n.object.setState("hovered")),Zc.forEach(t=>{(!n||t!==n.object)&&t.isUI&&t.setState("idle")}),t3.set({content:"step: "+xp})}function Ost(){xp%10==0&&Fst(),qd||$st(),YI.update(),Lst(),Ea.update(),ta.render(Oa,sc)}
